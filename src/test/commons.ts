import { PlayerRole, TournamentProgress, UserRole } from '@common/dto';
import { RootState } from '@common/models';

export const initialState: RootState = {
  tournamentState: {
    tournament: null,
    tournamentsList: [],
    isLoading: false,
  },
  playerState: {
    isLoading: false,
    playersList: [],
    isSaving: false,
  },
  pairState: {
    isLoading: false,
  },
  sessionState: {
    isAuthenticated: false,
    isAdmin: false,
    isLoading: false,
  },
  stage1State: {
    needRefresh: false,
    selectedPairs: [
      {
        id: null,
        tId: 0,
        rowNumber: 0,
        player1: {
          id: null,
          name: '',
          surname: '',
          alias: '',
          label: '',
          role: PlayerRole.GoalKeeper,
          email: '',
          phone: '',
          match_played: 0,
          match_won: 0,
          total_score: 0,
          editable: false,
          rowNumber: 0,
        },
        player2: {
          id: null,
          name: '',
          surname: '',
          alias: '',
          label: '',
          role: PlayerRole.GoalKeeper,
          email: '',
          phone: '',
          match_played: 0,
          match_won: 0,
          total_score: 0,
          editable: false,
          rowNumber: 0,
        },
        alias: '-',
        stage1Name: '',
        placement: 0,
        paid1: false,
        paid2: false,
      },
    ],
    isLoading: false,
    stages: [],
  },
  stage2State: {
    isLoading: false,
  },
};

export const afterLoginStata: RootState = {
  tournamentState: {
    tournament: {
      id: 12,
      name: 'hFarm2',
      date: new Date('2020-09-05T08:53:36.000Z'),
      progress: TournamentProgress.New,
      public: true,
      autoOrder: true,
      label: 'hFarm2 @ New',
      ownerId: 1,
    },
    tournamentsList: [
      {
        id: 12,
        name: 'hFarm2',
        date: new Date('2020-09-05T08:53:36.000Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: true,
        label: 'hFarm2 @ New',
        ownerId: 1,
      },
      {
        id: 10,
        name: '10',
        date: new Date('2020-08-26T13:43:08.795Z'),
        progress: TournamentProgress.Stage2,
        public: true,
        autoOrder: true,
        label: '10 @ Stage2',
        ownerId: null,
      },
      {
        id: 9,
        name: '9',
        date: new Date('2020-08-26T13:43:08.789Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '9 @ New',
        ownerId: null,
      },
      {
        id: 8,
        name: '8',
        date: new Date('2020-08-26T13:43:08.785Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '8 @ New',
        ownerId: null,
      },
      {
        id: 7,
        name: '7',
        date: new Date('2020-08-26T13:43:08.780Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '7 @ New',
        ownerId: null,
      },
      {
        id: 6,
        name: '6',
        date: new Date('2020-08-26T13:43:08.776Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '6 @ New',
        ownerId: null,
      },
      {
        id: 5,
        name: '5',
        date: new Date('2020-08-26T13:43:08.770Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '5 @ New',
        ownerId: null,
      },
      {
        id: 4,
        name: '4',
        date: new Date('2020-08-26T13:43:08.766Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '4 @ New',
        ownerId: null,
      },
      {
        id: 3,
        name: '3',
        date: new Date('2020-08-26T13:43:08.759Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '3 @ New',
        ownerId: null,
      },
      {
        id: 2,
        name: '2',
        date: new Date('2020-08-26T13:43:08.750Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '2 @ New',
        ownerId: null,
      },
      {
        id: 1,
        name: '1',
        date: new Date('2020-08-26T13:43:08.703Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: false,
        label: '1 @ New',
        ownerId: null,
      },
      {
        id: 11,
        name: 'hFarm',
        date: new Date('2020-08-20T08:49:50.000Z'),
        progress: TournamentProgress.New,
        public: true,
        autoOrder: true,
        label: 'hFarm @ New',
        ownerId: 1,
      },
    ],
    isLoading: false,
  },
  playerState: {
    isLoading: false,
    playersList: [],
    isSaving: false,
  },
  pairState: {
    isLoading: false,
  },
  sessionState: {
    user: {
      id: 1,
      username: 'Admin',
      name: 'Admin',
      surname: 'Admin',
      email: 'admin@admin.it',
      phone: '3472545771',
      birthday: new Date('2020-08-26T14:00:27.743Z'),
      label: 'Admin Admin',
      role: UserRole.Admin,
    },
    isAuthenticated: true,
    isAdmin: true,
    isLoading: false,
  },
  stage1State: {
    needRefresh: false,
    selectedPairs: [
      {
        id: null,
        tId: 0,
        rowNumber: 0,
        player1: {
          id: null,
          name: '',
          surname: '',
          alias: '',
          label: '',
          role: PlayerRole.GoalKeeper,
          email: '',
          phone: '',
          match_played: 0,
          match_won: 0,
          total_score: 0,
          editable: false,
          rowNumber: 0,
        },
        player2: {
          id: null,
          name: '',
          surname: '',
          alias: '',
          label: '',
          role: PlayerRole.GoalKeeper,
          email: '',
          phone: '',
          match_played: 0,
          match_won: 0,
          total_score: 0,
          editable: false,
          rowNumber: 0,
        },
        alias: '-',
        stage1Name: '',
        placement: 0,
        paid1: false,
        paid2: false,
      },
    ],
    isLoading: false,
    stages: [],
  },
  stage2State: {
    isLoading: false,
  },
};
