
name: Build/Test/Analyze
on: [push]

jobs:
  #-----------------------------------------
  # Build
  #-----------------------------------------
  build:
    runs-on: ubuntu-latest
    name: Build
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Cache node-modules
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci
      # Build client
      - name: Build client
        run: bash ./cli/build.sh
      # Build server
      - name: Build server
        run: npm run prod:build:server
      # Save build, coverage and analysis for later use
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.node-version }}
          path: |
            build
      - name: Upload coverage and analysis
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.node-version }}
          path: |
            coverage
            analysis
  #-----------------------------------------
  # Test
  #-----------------------------------------
  unit-test:
    runs-on: ubuntu-latest
    needs: build
    name: unit tests
    # For now disable this step
    # if: ${{ 1==2 }}
    steps:
      - uses: actions/checkout@v2
      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      # unit test FE
      - name: Unit Tests Frontend
        run: npm run test:client
      # unit test BE
      - name: Unit Tests Backend
        run: |
          cd server
          npm run test:unit

  e2e-test:
    runs-on: ubuntu-latest
    needs: build
    name: e2e test
    strategy:
      matrix:
        browser: [ 'chrome','firefox' ]
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      - name: where am i ?
        run: |
          pwd
          ls -l
          echo ${{ matrix.browser }}
      # e2e
      - name: e2e
        uses: cypress-io/github-action@v2
        with:
          working-directory: /home/runner/work/calcetto/calcetto
          # Start server and wait for response
          start: npm run prod:heroku:server
          wait-on: 'http://localhost:5001'
          # Test options
          config: baseUrl=http://localhost:5001
          browser: ${{ matrix.browser }}
          parallel: true
          headless: true
          record: true
          group: 'e2e_${{ matrix.browser }}'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: test
      - name: where am i ?
        run: |
          pwd
          ls -l
        # if tests fails save screenshots
      - name: Save screenshots on failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
        # if tests success save videos
      - name: Save videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  #-----------------------------------------
  # Code Quality ( Sonarcloud )
  #-----------------------------------------
  analyze:
    runs-on: ubuntu-latest
    needs: build
    name: Code Quality
    steps:
      - uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build-12.x
      - name: Download Coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage-12.x
      # https://github.com/marketplace/actions/sonarcloud-scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: /home/runner/work/calcetto/calcetto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
