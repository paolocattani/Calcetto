name: Build/Test/Analyze
on:
  push:
    branches:
      - e2e
      - develop
      - auto-pr
  pull_request:
    branches:
      - develop

jobs:
  #-----------------------------------------
  # Build
  #-----------------------------------------
  build:
    runs-on: ubuntu-latest
    name: Build
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Cache node-modules
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci
      # Build client
      - name: Build client
        run: bash ./cli/build.sh
      # Build server
      - name: Build server
        run: npm run prod:build:server
      # Save build for later
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.node-version }}
          path: build
      # Save build for later
      - name: Upload analysis
        uses: actions/upload-artifact@v2
        with:
          name: analysis-${{ matrix.node-version }}
          path: analysis
  #-----------------------------------------
  # Release
  #-----------------------------------------
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Gather info
      id: gather_info
      run: |
        echo ::set-output name=version::${GITHUB_REF#refs/tags/}
        echo ::set-output name=branch::${GITHUB_REF#refs/heads/}
        echo -----------------
        echo ${{ steps.gather_info.outputs.branch }}
        echo ${{ steps.gather_info.outputs.branch }}
        echo -----------------
        echo ${{ github.ref }}
        echo -----------------
    - name: Create Pull Request
      if: startsWith(github.ref, 'refs/tags/v')
      uses: peter-evans/create-pull-request@v3
      with:
        tokentoken: ${{ secrets.GITHUB_TOKEN }}
        title: Release ${{ steps.gather_info.outputs.version }}
        body: Release ${{ steps.gather_info.outputs.version }}
        branch: master
        milestone: v2
        labels: |
          automated pr
  #-----------------------------------------
  # unit test
  #-----------------------------------------
  unit-test:
    runs-on: ubuntu-latest
    needs: build
    name: unit tests
    # For now disable this step, only run e2e
    if: ${{ 1==2 }}
    steps:
      - uses: actions/checkout@v2
      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      # unit test FE
      - name: Unit Tests Frontend
        run: npm run test:client
      # unit test BE
      - name: Unit Tests Backend
        run: |
          cd server
          npm run test:unit

  #-----------------------------------------
  # Code Quality ( Sonarcloud )
  #-----------------------------------------
  analyze:
    runs-on: ubuntu-latest
    needs: build
    name: Code Quality
    steps:
        - uses: actions/checkout@v2
        - name: Download build
          uses: actions/download-artifact@v2
          with:
            name: build-14.x
            path: build
        - name: Download analysis
          uses: actions/download-artifact@v2
          with:
            name: analysis-14.x
            path: analysis
        # https://github.com/marketplace/actions/sonarcloud-scan
        - name: SonarCloud Scan
          uses: sonarsource/sonarcloud-github-action@master
          with:
            projectBaseDir: /home/runner/work/calcetto/calcetto
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
