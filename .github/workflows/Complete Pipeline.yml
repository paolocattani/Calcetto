

on: [push, pull_request]
name: Pipeline ( Build/Test/Analyze )

jobs:
  ### Build
  build:
    runs-on: ubuntu-latest
    name: Build
    strategy:
      matrix:
        node-version: [ 8.x, 10.x, 12.x]
    steps:
      - uses: actions/checkout@v2

      # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Cache node-modules
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependecies
      - name: Install dependencies
        run: npm ci
      # Build client
      - name: Build client
        run: sh ./build.sh
      # Build server
      - name: Build server
        run: npm run prod:build:server

  ### Test
  test:
    runs-on: ubuntu-latest
    name: Tests
    # For now disable this step
    if: ${{ 1==2 }}
    steps:
      - uses: actions/checkout@v2
      # Cache node-modules
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependecies
      - name: Install dependencies
        run: npm ci
      # unit test
      #- name: Unit Tests
      #  run: npm run test
      # e2e
      # - name: End to end tests
      #   run: npm run test

  ### Code Qualitys
  analyze:
    runs-on: ubuntu-latest
    name: Code Quality
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      # Install dependecies
      - name: Install dependencies
        run: npm ci
      # Generate report
      - name: Lint report
        run: npm run lint:report
      # https://github.com/marketplace/actions/sonarcloud-scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      ### Code inspector : Suspended
      # id: code-inspector
      # uses: codeinspectorio/github-action@master
      # with:
      #   repo_token: ${{ secrets.GITHUB_TOKEN }}
      #   code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
      #   code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
      #   min_quality_grade: 'GOOD'
      #   min_quality_score: '80'
      #   max_defects_rate: 0.05
      #   project_name: 'calcetto'
      #   max_timeout_sec: '600'
