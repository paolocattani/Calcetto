{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/Stage2/cell.tsx","components/Pair/select.tsx","components/Stage2/table.tsx","components/Stage2/helper.tsx","components/Stage2/handler.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common.module.css","components/Tournament/badge.tsx","components/Stage2/style.module.css"],"names":["InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","Cell","icon","onClick","name","isWinner","span","rowIndex","colIndex","pair","buttonDisabled","isLast","renderCustomComponent","color","rowSpan","style","cell","borderBottom","join","container","prepend","FormControl","placeholder","value","player1","player2","aria-label","aria-describedby","readOnly","Button","disabled","append","e","PairsSelect","getOptionLabel","styles","options","onChange","defaultValue","useState","selectedOption","setSelectedOption","components","actionMeta","isSearchable","isClearable","Stage2","elements","pairsSelect","rowNumber","onSelectPair","colNumber","getBaseLog","bRows","rows","counter","Array","fill","index","pairsNumber","indexes","NaN","currentMax","ii","growFactor","Math","pow","jj","getIndexes","provided","flex","option","zIndex","menuList","height","id","placement","stage1Name","alias","console","log","row","matchId","cellRowIndex","cellColIndex","parentId","push","undefined","isButtonDisabled","length","getTableBodyRows","hElem","tds","headerCell","width","getTableHeaderElements","table","body","withRouter","currentHistory","useHistory","dispatch","useDispatch","cells","useSelector","Stage2Selector","getCells","getRowsNumber","isLoading","tournament","TournamentSelector","getTournament","pairsList","setPairsList","useEffect","a","Stage2Action","setLoading","fetchPairsStage2","result","pairs","Col","commonStyle","toolsBarContainer","Row","toolsBarRow","variant","event","current1","current2","next","updateCell","request","cell1","cell2","setCells","newPair","prevPair","filter","show","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","module","exports","TournamentBadge","t","useTranslation","toUpperCase","formatDate","date","progress"],"mappings":"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","file":"static/js/10.97b86229.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport style from './style.module.css';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { DoubleRightIcon, BanIcon, TrophyIcon } from '../core/icons';\r\nimport { ICell, PairDTO } from '../../@common/dto';\r\n\r\ninterface NodeElement extends ICell {\r\n  span: number;\r\n  renderCustomComponent?: (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => JSX.Element;\r\n  onClick: (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    rowIndex: number,\r\n    colIndex: number,\r\n    winner: boolean\r\n  ) => void;\r\n  rowIndex: number;\r\n  colIndex: number;\r\n  buttonDisabled: boolean;\r\n  isLast: boolean;\r\n}\r\n\r\nconst Cell: React.FC<NodeElement> = ({\r\n  onClick,\r\n  name,\r\n  isWinner,\r\n  span,\r\n  rowIndex,\r\n  colIndex,\r\n  pair,\r\n  buttonDisabled,\r\n  isLast,\r\n  renderCustomComponent,\r\n}) => {\r\n  let icon: JSX.Element;\r\n  if (isLast) icon = <TrophyIcon size=\"lg\" color=\"gold\" />;\r\n  else icon = isWinner ? <DoubleRightIcon size=\"lg\" color=\"green\" /> : <BanIcon size=\"1x\" color=\"red\" />;\r\n\r\n  return (\r\n    <td rowSpan={span} className={rowIndex % 2 === 0 ? [style.cell, style.borderBottom].join(' ') : style.cell}>\r\n      <InputGroup className={style.container}>\r\n        <InputGroup.Prepend className={style.prepend}>\r\n          <InputGroup.Text>{rowIndex}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        {renderCustomComponent ? (\r\n          renderCustomComponent(rowIndex, colIndex, isLast, pair)\r\n        ) : (\r\n          <FormControl\r\n            placeholder={'Username' + colIndex}\r\n            value={pair ? `${pair.player1?.name} - ${pair.player2?.name}` : name}\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"Username\"\r\n            readOnly={colIndex > 1}\r\n            size=\"lg\"\r\n          />\r\n        )}\r\n        <InputGroup.Append>\r\n          <Button\r\n            disabled={buttonDisabled}\r\n            className={style.append}\r\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => onClick(e, rowIndex, colIndex, !isWinner)}\r\n          >\r\n            {icon}\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import { PairDTO } from 'src/@common/dto';\r\nimport React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta, components } from 'react-select';\r\nimport { SelectComponents } from 'react-select/src/components';\r\n\r\ninterface PairSelectProps {\r\n  // indice riga ( Stage2 )\r\n  rowIndex: number;\r\n  // stili\r\n  styles?: Partial<Styles>;\r\n  // opzioni della lista\r\n  options: PairDTO[];\r\n  // Callback per formattare le opzioni della lista\r\n  getOptionLabel?: (option: PairDTO) => string;\r\n  // Callback onChange\r\n  onChange?: (value: ValueType<PairDTO>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\r\n  components?: Partial<SelectComponents<PairDTO>>;\r\n  defaultValue?: PairDTO;\r\n}\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\n// TODO: Si potrebbe generalizzare questo componente tramite i generics\r\nconst PairsSelect: React.FC<PairSelectProps> = React.forwardRef(\r\n  ({ getOptionLabel, styles, rowIndex, options, onChange, defaultValue }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PairDTO>();\r\n\r\n    const handleChange = (value: ValueType<PairDTO>, actionMeta: ActionMeta<PairDTO>) => {\r\n      setSelectedOption(value as PairDTO);\r\n      if (onChange) onChange(value, rowIndex, actionMeta);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        defaultValue={defaultValue}\r\n        components={components}\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={getOptionLabel}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PairsSelect;\r\n","import React from 'react';\r\nimport style from './style.module.css';\r\nimport { getIndexes, getEmptyCell, onClickCallback, onSelectCallback } from './helper';\r\nimport Cell from './cell';\r\nimport { getBaseLog } from '../../@common/utils/math.utils';\r\nimport PairsSelect from '../Pair/select';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO, ICell } from '../../@common/dto';\r\n// import { valueFormatter } from 'components/Pair/helper';\r\n\r\n// https://www.kodbiro.com/blog/rorgchart-react-module-for-displaying-and-editing-data-in-org-chart/\r\n\r\ninterface Stage2Props {\r\n  pairsSelect: PairDTO[];\r\n  elements: ICell[][];\r\n  rowNumber: number;\r\n  onClick: onClickCallback;\r\n  onSelectPair: onSelectCallback;\r\n}\r\n\r\nconst Stage2: React.FC<Stage2Props> = ({ onClick, elements, pairsSelect, rowNumber = 64, onSelectPair }) => {\r\n  /*\r\n   * Calcolo il numero di colonne in funzione del numero di righe\r\n   * in quanto l'oggetto che ricevo protrebbe essere solo un parziale\r\n   */\r\n  const colNumber = getBaseLog(2, rowNumber) + 1;\r\n  const bRows = getTableBodyRows(elements, rowNumber, colNumber, onClick, pairsSelect, onSelectPair);\r\n  const hElem = getTableHeaderElements(colNumber);\r\n\r\n  return (\r\n    <table className={style.table}>\r\n      <thead>\r\n        <tr>{hElem}</tr>\r\n      </thead>\r\n      <tbody className={style.body}>{bRows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Stage2;\r\n\r\nfunction getTableHeaderElements(colNumber: number): JSX.Element[] {\r\n  const tds: JSX.Element[] = [];\r\n  for (let ii = 1; ii <= colNumber; ii++) {\r\n    tds.push(\r\n      <td\r\n        key={`header ${ii}`}\r\n        className={style.headerCell}\r\n        style={{\r\n          width: `${100 / colNumber}%`,\r\n        }}\r\n      >\r\n        <strong>{`Stage-${ii}`}</strong>\r\n      </td>\r\n    );\r\n  }\r\n  return tds;\r\n}\r\n\r\n// eslint-disable-next-line sonarjs/cognitive-complexity\r\nfunction getTableBodyRows(\r\n  elements: ICell[][],\r\n  rowNumber: number,\r\n  colNumber: number,\r\n  onClick: onClickCallback,\r\n  pairsSelect: PairDTO[],\r\n  onSelectPair: onSelectCallback\r\n): JSX.Element[] {\r\n  // Conterrà tutte le righe della tabella\r\n  const rows: JSX.Element[] = [];\r\n  // Indice di riga progressivo\r\n  const counter = new Array<number>(colNumber).fill(0);\r\n  // Sequenza numero di elementi da aggiungere alla riga\r\n  const index: number[] = getIndexes(rowNumber);\r\n\r\n  const renderCustomComponent = (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => {\r\n    const styles: Partial<Styles> = {\r\n      container: (provided) => ({\r\n        ...provided,\r\n        flex: '1 1 auto',\r\n      }),\r\n      option: (provided) => ({ ...provided, zIndex: 6 }),\r\n      menuList: (provided) => ({\r\n        ...provided,\r\n        flex: '1 1 auto',\r\n        zIndex: 5,\r\n        height: 'auto',\r\n      }),\r\n    };\r\n    const getOptionLabel = (option: PairDTO) =>\r\n      option.id\r\n        ? `${option.placement}${option.stage1Name} : ${\r\n            option.alias ? option.alias : `${option.player1?.name} - ${option.player2?.name} `\r\n          }`\r\n        : '-';\r\n    /* TODO:\r\n    const CustomOption = ({ innerRef, innerProps, data }: OptionProps<PairDTO>) => (\r\n      <div ref={innerRef} {...innerProps}>\r\n        {data.placement}\r\n      </div>\r\n    );\r\n    */\r\n    console.log('Render stage2 select :', rowIndex, colIndex, isLast, pair);\r\n    return (\r\n      <PairsSelect\r\n        //components={{ Option: CustomOption }}\r\n        styles={styles}\r\n        defaultValue={pair}\r\n        options={pairsSelect}\r\n        rowIndex={rowIndex}\r\n        onChange={onSelectPair}\r\n        getOptionLabel={getOptionLabel}\r\n      />\r\n    );\r\n  };\r\n\r\n  for (let ii = 1; ii <= rowNumber; ii++) {\r\n    const row: JSX.Element[] = [];\r\n    for (let jj = 0; jj < index[ii]; jj++) {\r\n      counter[jj] += 1;\r\n      const cell = elements[jj] ? elements[jj][counter[jj] - 1] : getEmptyCell();\r\n      row.push(\r\n        <Cell\r\n          renderCustomComponent={jj === 0 ? renderCustomComponent : undefined}\r\n          key={`cell : ${jj}-${counter[jj] - 1}`}\r\n          span={Math.pow(2, jj)}\r\n          rowIndex={counter[jj]}\r\n          colIndex={jj + 1}\r\n          onClick={onClick}\r\n          buttonDisabled={isButtonDisabled(counter[jj], jj, elements)}\r\n          isLast={elements[jj].length === 1}\r\n          {...cell}\r\n        />\r\n      );\r\n    }\r\n    rows.push(\r\n      <tr key={`row : ${ii}`} className={style.row}>\r\n        {row}\r\n      </tr>\r\n    );\r\n  }\r\n  return rows;\r\n}\r\n\r\n/*\r\n  Il button per impostare la coppia vincente è abilitato solo se entrambe le cell hanno una coppia assegnata\r\n*/\r\nconst isButtonDisabled = (rowIndex: number, colIndex: number, elements: ICell[][]) =>\r\n  (elements[colIndex] && elements[colIndex].length === 1) ||\r\n  (rowIndex % 2 !== 0\r\n    ? !elements[colIndex][rowIndex - 1].pair || (elements[colIndex][rowIndex] && !elements[colIndex][rowIndex].pair)\r\n    : !elements[colIndex][rowIndex - 1].pair ||\r\n      (elements[colIndex][rowIndex - 2] && !elements[colIndex][rowIndex - 2].pair));\r\n","import { getBaseLog } from '../../@common/utils';\r\nimport { ValueType, ActionMeta } from 'react-select';\r\nimport { PairDTO, ICell } from '../../@common/dto';\r\n\r\nexport type onClickCallback = (\r\n  event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n  rowIndex: number,\r\n  colIndex: number,\r\n  isWinner: boolean\r\n) => void;\r\n\r\nexport type onSelectCallback = (value: ValueType<PairDTO>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\r\nexport const getIndexes = (pairsNumber: number): number[] => {\r\n  const N = getBaseLog(2, pairsNumber) + 1; // Numero massimo di elementi td\r\n  /*\r\n   * Array per mappare numero riga a numero di elementi td\r\n   * Inizializzo come primo NaN solo per avere un placeholder all'index 0  e iniziare l'analisi da 1\r\n   */\r\n  let indexes = [NaN, N];\r\n  let currentMax = 1;\r\n  for (let ii = 1; ii <= pairsNumber; ii++) {\r\n    if (!indexes[ii]) {\r\n      indexes[ii] = currentMax;\r\n      let growFactor = Math.pow(2, currentMax);\r\n      for (let jj = 1; ii + growFactor * jj < pairsNumber + 1; jj++) indexes[ii + growFactor * jj] = currentMax;\r\n      currentMax++;\r\n    }\r\n  }\r\n  return indexes;\r\n};\r\n\r\nexport const getEmptyCell = (name?: string): ICell => ({\r\n  name: '',\r\n  isWinner: false,\r\n  matchId: 0,\r\n  cellRowIndex: 0,\r\n  cellColIndex: 0,\r\n  parentId: 0,\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, RouteComponentProps, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Stage2 from './table';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport commonStyle from '../../common.module.css';\r\nimport { Stage2Selector, TournamentSelector } from '../../redux/selectors';\r\nimport { Stage2Action } from '../../redux/actions';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\nimport { LeftArrowIcon } from '../core/icons';\r\nimport TournamentBadge from '../Tournament/badge';\r\nimport { fetchPairsStage2 } from '../../redux/services/stage2.service';\r\nimport { onClickCallback, onSelectCallback } from './helper';\r\nimport { PairDTO, ICell } from '../../@common/dto';\r\n\r\n// import template from './template';\r\n\r\ninterface Stage2HandlerProps extends RouteComponentProps {}\r\n\r\n// eslint-disable-next-line sonarjs/cognitive-complexity\r\nconst Stage2Handler: React.FC<Stage2HandlerProps> = () => {\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const cells = useSelector(Stage2Selector.getCells);\r\n  const rowNumber = useSelector(Stage2Selector.getRowsNumber);\r\n  const isLoading = useSelector(Stage2Selector.isLoading);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  // const pairsListFromStore = useSelector(Stage1Selector.getSelectedPairs);\r\n  const [pairsList, setPairsList] = useState<PairDTO[]>();\r\n\r\n  function goBack() {\r\n    currentHistory.push('/stage1');\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      dispatch(Stage2Action.setLoading(true));\r\n      const result = await fetchPairsStage2(tournament.id!);\r\n      setPairsList(result.pairs);\r\n      dispatch(Stage2Action.setLoading(false));\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tournament.id]);\r\n\r\n  // Callback tasto vittoria/sconfitta coppia : Sposta la coppia alla fase successiva\r\n  const onClick: onClickCallback = (event, rowIndex, colIndex, isWinner) => {\r\n    const elements = [...cells!];\r\n    // Coppia 1 e 2 dell'incontro corrente\r\n    let current1: ICell | null = null;\r\n    let current2: ICell | null = null;\r\n    // Element Incontro successivo\r\n    let next: ICell | null = null;\r\n    if (rowIndex % 2 !== 0) {\r\n      current1 = elements[colIndex - 1][rowIndex - 1];\r\n      current2 = elements[colIndex - 1][rowIndex];\r\n    } else {\r\n      current1 = elements[colIndex - 1][rowIndex - 1];\r\n      current2 = elements[colIndex - 1][rowIndex - 2];\r\n    }\r\n    next = elements[colIndex][current1.matchId - 1];\r\n    console.log(' onClick : ', current1, current2, next);\r\n\r\n    current1.isWinner = isWinner;\r\n    current2.isWinner = !isWinner;\r\n    if (next) next.pair = isWinner ? current1.pair : current2.pair;\r\n    dispatch(Stage2Action.updateCell.request({ cell1: current1, cell2: current2 }));\r\n    dispatch(Stage2Action.setCells(elements));\r\n    if (elements[colIndex].length === 1) {\r\n      dispatch(Stage2Action.updateCell.request({ cell1: next, cell2: null }));\r\n    }\r\n  };\r\n\r\n  // Questa funzione viene richiamata quando viene selezionata una coppia nella prima colonna\r\n  const onSelectPair: onSelectCallback = (value, rowIndex, actionMeta) => {\r\n    if (!pairsList) {\r\n      return;\r\n    }\r\n    const elements = [...cells!];\r\n    const newPair = value as PairDTO;\r\n    const prevPair = elements[0][rowIndex - 1].pair;\r\n    let pairs: PairDTO[] = [...pairsList];\r\n\r\n    // Se ho selezionato una coppia la elimino dalla lista ( questa condizione esclude il placeholder )\r\n    if (newPair && newPair.id) {\r\n      pairs = pairs.filter((e) => e.id !== newPair.id);\r\n    }\r\n    // Se nella celle era gia presente una coppia la ripristino\r\n    if (prevPair && prevPair.id) {\r\n      pairs = [...pairs!, prevPair];\r\n    }\r\n    setPairsList(pairs);\r\n    elements[0][rowIndex - 1].pair = newPair;\r\n    dispatch(Stage2Action.setCells(elements));\r\n    dispatch(Stage2Action.updateCell.request({ cell1: elements[0][rowIndex - 1], cell2: null }));\r\n  };\r\n\r\n  //console.log('render stage2 :', cells, pairsList, rowNumber);\r\n  return cells && pairsList && rowNumber ? (\r\n    <>\r\n      <Col className={commonStyle.toolsBarContainer}>\r\n        <Row className={commonStyle.toolsBarRow}>\r\n          <Col>\r\n            <Button variant=\"secondary\" className=\"float-left\" onClick={goBack}>\r\n              <LeftArrowIcon /> Indietro\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <TournamentBadge />\r\n\r\n      <Stage2\r\n        pairsSelect={pairsList}\r\n        onClick={onClick}\r\n        rowNumber={rowNumber}\r\n        elements={cells}\r\n        onSelectPair={onSelectPair}\r\n      />\r\n    </>\r\n  ) : (\r\n    <LoadingModal show={isLoading} />\r\n  );\r\n};\r\n\r\nexport default withRouter(Stage2Handler);\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from '../../redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate } from '../../@common/utils/date.utils';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  const { t } = useTranslation(['tournament']);\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>{t('tournament:tournament')} </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2Kzbq\",\"cell\":\"style_cell__1Tgmm\",\"borderBottom\":\"style_borderBottom__2eMt1\",\"headerCell\":\"style_headerCell__2Jwbq\",\"container\":\"style_container__3mFJG\",\"row\":\"style_row__3YvC9\",\"prepend\":\"style_prepend__1aYFO\",\"append\":\"style_append__1Z8QN\",\"center\":\"style_center__3xWH5\"};"],"sourceRoot":""}