{"version":3,"sources":["components/core/icons.tsx","components/core/utils.ts","selectors/tournament.selector.ts","components/Pair/helper.ts","components/Player/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx"],"names":["Icon","size","prefix","iconName","color","icon","findIconDefinition","TrashIcon","SaveIcon","RightArrowIcon","ToggleOn","ToggleOff","DoubleRightIcon","BanIcon","getTodayDate","formatDate","Date","translateTournamentProgress","value","TournamentProgress","New","PairsSelection","Stage1","Stage2","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","RegExp","passwordRegExp","emailRegExp","getBaseLog","x","y","Math","log","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","getEmptyRowModel","id","tId","rowNumber","player1","getEmptyPlayer","player2","alias","stage1Name","paid1","paid2","fetchPairs","setterFunction","a","fetch","method","headers","response","json","result","customStyles","option","provided","state","backgroundColor","input","control","height","marginBottom","singleValue","valueContainer","fontSize","fetchData","rows","players","console","nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","selectOptions","Portiere","Attaccante","Master","clearAllFilter","playerColumns","isEditable","dataField","text","editable","headerStyle","column","colIndex","width","headerClasses","autoSelectText","filter","textFilter","placeholder","getFilter","selectFilter","options","editor","type","Type","SELECT","getOptions","_","label","hidden","valueFormatter","selectedOption","surname","name","TableHeader","useSelector","toUpperCase","progress","noData","addRow","optionsLength","diff","Button","variant","onClick","disabled","to","PlayerSelection","React","forwardRef","props","ref","useState","setSelectedOption","styles","row","columnIndex","onUpdate","onSelect","onChange","actionMeta","isSearchable","isClearable","columns","align","editorRenderer","editorProps","rowIndex","split","map","e","CHECKBOX","style","content","withRouter","session","SessionSelector","getSession","currentHistory","useHistory","message","setIsLoading","messageInitialState","setMessage","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","emptyRow","body","JSON","stringify","current","addMultipleRows","ii","deleteRow","forEach","push","sort","e1","e2","localeCompare","find","selectedRow","updateOptions","player","selected","useEffect","selectedElement","newRowsElement","rowElement","handleSelect","isSelected","found","confirmPairs","missingStage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","selectRow","mode","onSelectAll","deleteStage1","setStage1Name","names","newRows","error","availableRows","floor","accumulator","deleteDisabled","deleteTooltipMessage","rightOuter","className","fontWeight","padding","Row","show","Col","md","sm","margin","InputGroup","Prepend","Text","FormControl","aria-label","step","min","max","event","Number","currentTarget","Append","ListGroup","Item","action","OverlayTrigger","placement","key","overlay","Tooltip","pointerEvents","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","striped","hover","leftOuter","isAdmin"],"mappings":"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","file":"static/js/7.c10a946a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"far\" iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"far\" iconName=\"save\" />\r\n);\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} prefix=\"fas\" iconName=\"arrow-alt-circle-right\" />\r\n);\r\n\r\n// Solid\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"ban\" />\r\n);\r\n","import { TournamentProgress } from '../../models/tournament.model';\r\n\r\nexport const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function translateTournamentProgress(value: string) {\r\n  switch (value) {\r\n    case TournamentProgress.New:\r\n      return 'Nuovo';\r\n    case TournamentProgress.PairsSelection:\r\n      return 'Selezione Coppie';\r\n    case TournamentProgress.Stage1:\r\n      return 'Fase 1';\r\n    case TournamentProgress.Stage2:\r\n      return 'Fase 2';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n","import { RootState } from 'models/common.model';\r\nimport { TournamentDTO } from 'models/tournament.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading({ tournamentState: { isLoading } }: RootState): boolean {\r\n    return isLoading;\r\n  },\r\n  // Get selected Tournament\r\n  getTournament({ tournamentState: { tournament } }: RootState): TournamentDTO | null {\r\n    return tournament;\r\n  },\r\n  // Get tournament List\r\n  getTournamentsList({ tournamentState: { tournamentsList } }: RootState): TournamentDTO[] {\r\n    return tournamentsList;\r\n  },\r\n};\r\n","import { getEmptyPlayer } from 'services/player.service';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO } from 'models';\r\n\r\nexport function getEmptyRowModel(): PairDTO {\r\n  return {\r\n    id: null,\r\n    tId: 0,\r\n    rowNumber: 0,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    alias: '',\r\n    stage1Name: '',\r\n    paid1: false,\r\n    paid2: false,\r\n  };\r\n}\r\n\r\nexport const fetchPairs = (setterFunction: React.Dispatch<React.SetStateAction<PairDTO[]>>, tId: number) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption: PairDTO) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.alias && selectedOption.alias !== '') return `${selectedOption.alias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n\r\nexport const fetchData = async (tId: number) => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  console.log('rows : ', rows);\r\n  return { rows, players };\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master',\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  emailFilter('');\r\n  phoneFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = (isEditable) => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: (_) => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = (props) => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { translateTournamentProgress } from '../core/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\n\r\nconst TableHeader: React.FC<{}> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          \"<strong>{tournament?.name.toUpperCase()}</strong>\"\r\n          <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\nconst noData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\nimport { valueFormatter } from './helper';\r\n// FIXME: import makeAnimated from 'react-select/animated';\r\nimport { PlayerDTO } from 'models';\r\n\r\nexport interface IPlayerSelect {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<IPlayerSelect> = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n  const { styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options } = props;\r\n\r\n  const handleChange = (selectedOption: ValueType<PlayerDTO>, actionMeta: ActionMeta) => {\r\n    // selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption as PlayerDTO);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      styles={styles}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => {\r\n          return { value: e, label: e };\r\n        }),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No',\r\n    },\r\n\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No',\r\n    },\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    },\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\nimport { useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast, IToastProps } from '../core/generic/Commons';\r\nimport './style.css';\r\nimport { RightArrowIcon } from '../core/icons';\r\nimport { TournamentProgress } from 'models/tournament.model';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n\r\nconst PairsTable = () => {\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // Navigation\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState: IToastProps = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState<IToastProps>(messageInitialState);\r\n  // Data\r\n  // FIXME:\r\n  const [data, setData] = useState({ rows: [] as any, players: [] as any });\r\n  // FIXME:\r\n  const [selectedRows, setSelectedRows] = useState<any>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament.id]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      // FIXME:\r\n      const emptyRow: any = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso',\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: any[] = [];\r\n      // FIXME:\r\n      selectedRows.forEach((e: any) => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        // FIXME:\r\n        rows: current.rows.filter(\r\n          (row: { id: any }) => !selectedRows.find((selectedRow: any) => selectedRow.id === row.id)\r\n        ),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: { id: any }, selected: { id: any }) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e: { id: any }) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement: { id: any }, rowIndex: any, columnIndex: number) => {\r\n    const newRowsElement = data.rows.map((rowElement: { id: any }) => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row: any = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: { id: any }, isSelected: any) => {\r\n    // FIXME:\r\n    setSelectedRows((selectedRows: any) => {\r\n      const found = selectedRows.find((e: any) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e: any) => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e: { rowNumber: any }) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e: { player1: { id: null }; player2: { id: null } }) => e.player1.id === null || e.player2.id === null)\r\n      .map((e: { rowNumber: any }) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    tournament.progress = TournamentProgress.Stage1;\r\n    try {\r\n      await fetch('/api/v1/tournament/', {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(tournament),\r\n      });\r\n    } catch (error) {\r\n      console.log('errororroror :', error);\r\n    }\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tournament.id}`);\r\n  };\r\n  /*\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n*/\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: any, rows: any[]) => rows.forEach((row: any) => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      //FIXME:\r\n      tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/v1/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(tournament),\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress === 'Stage1' || tournament.progress === 'Stage2') {\r\n      showErrorMessage('Non riassegnare i gironi in quanto le coppie sono gia state confermate per la fase successiva');\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData((current) => ({ rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e: { player1: { id: any }; player2: { id: any } }) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1.id && !e.player2.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || tournament.progress === 'Stage1' || tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (tournament.progress === 'Stage1' || tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const rightOuter = (\r\n    <>\r\n      <Button type=\"button\" onClick={confirmPairs} size=\"lg\" variant=\"outline-warning\" className=\"default-color-white\">\r\n        <span style={{ fontSize: 'larger', fontWeight: 'bolder', padding: '1vw' }}>Prosegui</span>\r\n        <RightArrowIcon size=\"lg\" />\r\n      </Button>\r\n\r\n      <GenericToast message={message.message} type={message.type} />\r\n    </>\r\n  );\r\n\r\n  const leftOuter = (isEditable: boolean | undefined) => (\r\n    <>\r\n      {isEditable ? (\r\n        <Row style={{ margin: '0px' }}>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                type=\"number\"\r\n                step={1}\r\n                min={0}\r\n                max={Math.floor(data.rows.length / 4)}\r\n                value={stage1Number}\r\n                onChange={(event: React.FormEvent<FormControl & HTMLInputElement>) =>\r\n                  setStage1Number(Number(event.currentTarget.value))\r\n                }\r\n                disabled={\r\n                  data.rows.length < 4 ||\r\n                  tournament.progress === TournamentProgress.Stage1 ||\r\n                  tournament.progress === TournamentProgress.Stage2\r\n                }\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiungi coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                type=\"number\"\r\n                step={1}\r\n                min={1}\r\n                max={availableRows}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                onChange={(event: React.FormEvent<FormControl & HTMLInputElement>) =>\r\n                  setNewRowsNumber(Number(event.currentTarget.value))\r\n                }\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row style={{ margin: '5vh 0vh' }}>\r\n        <Col md=\"2\" sm=\"12\">\r\n          <ListGroup>\r\n            {/*\r\n            <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n              Home\r\n            </ListGroup.Item>\r\n            */}\r\n            <ListGroup.Item\r\n              action\r\n              variant=\"success\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isEditable}\r\n            >\r\n              Aggiungi Coppia\r\n            </ListGroup.Item>\r\n\r\n            <OverlayTrigger\r\n              placement=\"right\"\r\n              key=\"right\"\r\n              overlay={<Tooltip id=\"tooltip-pair\">{deleteTooltipMessage}</Tooltip>}\r\n            >\r\n              <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"danger\"\r\n                  style={{ pointerEvents: 'none' }}\r\n                  disabled={deleteDisabled || !isEditable}\r\n                >\r\n                  Elimina Coppia {deleteDisabled}\r\n                </ListGroup.Item>\r\n              </span>\r\n            </OverlayTrigger>\r\n\r\n            <ListGroup.Item action variant=\"danger\" onClick={deleteStage1} disabled={!isEditable}>\r\n              Reset gironi\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md=\"10\" sm=\"12\">\r\n          {data.rows && data.players ? (\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={data.rows}\r\n              columns={columns(onSelect, data.players) as any}\r\n              cellEdit={cellEditProps(isEditable) as any}\r\n              selectRow={selectRow as any}\r\n              noDataIndication={() => (\r\n                <NoData isEditable={isEditable || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n              )}\r\n              caption={<TableHeader />}\r\n              headerClasses=\"default-background default-color-yellow\"\r\n              striped\r\n              hover\r\n            />\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col md=\"10\" sm=\"12\">\r\n        {leftOuter(session.isAdmin)}\r\n      </Col>\r\n      <Col md=\"2\" sm=\"12\">\r\n        {rightOuter}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n"],"sourceRoot":""}