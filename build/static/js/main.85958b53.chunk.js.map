{"version":3,"sources":["redux/services/stage2.service.ts","@common/models/index.ts","redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","@common/utils/date.utils.ts","redux/selectors/tournament.selector.ts","@common/utils/math.utils.ts","@common/dto/player.dto.ts","@common/dto/tournament.dto.ts","@common/dto/user.dto.ts","components/Stage1/helper.ts","redux/actions/auth.action.ts","redux/actions/constants.ts","@common/utils/fetch.utils.ts","redux/actions/player.action.ts","redux/actions/tournament.action.ts","serviceWorker.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/auth.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/services/tournament.service.ts","i18n/i18n.ts","redux/sagas/utils.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/sagas/pair.saga.ts","redux/services/stage1.service.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/services/auth.service.ts","redux/sagas/auth.saga.ts","redux/store.ts","assets/header.jpg","components/core/routing/Routes.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","@common/models/common.models.ts","components/core/icons.tsx","@common/dto/index.ts","redux/services/pair.service.ts","redux/services/player.service.ts","redux/selectors/auth.selector.ts","@common/utils/index.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","components/core/generic/Commons.tsx","@common/models/HttpStatusCode.ts"],"names":["deleteStage2","tId","a","fetch","method","DEFAULT_HEADERS","body","JSON","stringify","response","json","updateCells","cell1","cell2","console","error","fetchPairsStage2","result","pairs","getEmptyPair","fetchStage2","rowsNumber","count","tournamentId","cells","PairAction","createAsyncAction","defaultAsyncParams","purge","createAction","PURGE_STORE_ACTION","actionName","Stage1Action","updateSelectedPairs","reloadFromServer","defaultParam","fetchStage1","updateCellStage1","updatePlacement","Stage2Action","updateCell","delete","setCells","setLoading","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","getBaseLog","x","y","Math","log","RegExp","passwordRegExp","emailRegExp","PlayerRole","TournamentProgress","UserRole","getOpposite","value","parseInt","comparator","obj1","obj2","total","rowNumber","rowsGenerator","pairsList","map","e","ii","row","id","pair","placement","jj","AuthAction","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","name","headers","getWrapper","url","fetchWrapper","deleteWrapper","putWrapper","postWrapper","undefined","group","groupEnd","toast","UnexpectedServerError","PlayerAction","setPlayer","fetchPlayers","savePlayer","updatePlayer","deletePlayers","TournamentAction","setTournament","save","Boolean","window","location","hostname","match","initialTournamentState","TournamentReducer","createReducer","handleAction","request","state","failure","success","payload","initialPlayerState","isSaving","playersList","PlayerReducer","message","player","filter","find","selectedRow","i","initialPairState","PairReducer","initialSessionState","isAuthenticated","isAdmin","SessionReducer","user","role","Admin","initialStage1State","toogleRefresh","selectedPairs","stages","Stage1Reducer","stageName","rows","currentStage","s","newStage","autoOrder","stage1Name","stage1Rows","selected","selectedRows","Map","set","initialStage2State","Stage2Reducer","fetchTournaments","encodeURIComponent","postTournament","updateTournament","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","process","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","execCallBack","entityLifeCycle","GeneratorFunction","constructor","AsyncFunction","callBack","genFunction","asyncFunction","getMessage","t","label","options","action","onSuccess","onFailure","showMessage","call","userMessage","messageText","type","UserMessageType","Success","Warning","Danger","warning","SuccessCodes","includes","code","successRes","put","failureRes","getTournamentsSaga","saveTournamentSaga","updateTournamentSaga","history","push","TournamentSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","updatePlayerSaga","back","PlayersSagas","getPairsSaga","fetchPairs","PairsSagas","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","selectPairs","Stage1Sagas","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","fork","Stage2Sagas","updateUser","updateUserRequest","deleteUser","deleteUserRequest","loginRequest","logoutRequest","registrationRequest","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","status","SessionStatus","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","registrationSaga","updateUserSaga","deleteUserSaga","EventSource","take","i18next","delay","Unauthorized","persistor","STAGE1_UPDATE","SessionSagas","takeLatest","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","playerState","pairState","authState","stage1State","stage2State","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","Cypress","run","lazySwagger","lazy","lazyPlayer","lazyPlayerEdit","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","module","default","RedirectionControl","routes","path","exact","componentToRender","visible","private","index","icon","MaleIcon","FileMedicalIcon","Header","dispatch","useDispatch","currentHistory","useHistory","useTranslation","useSelector","AuthSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","language","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","size","disabled","fontSize","data-cy","username","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","session","render","innerProps","pathname","from","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","fallback","Container","fluid","marginBottom","autoClose","Application","loading","show","Entry","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","forEach","Environment","HTTPStatusCode","InternalServerError","initialState","player1","surname","alias","GoalKeeper","email","phone","match_played","match_won","total_score","editable","player2","paid1","paid2","library","add","faTrashAlt","faSave","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faTrophy","faAngleDoubleRight","faBan","faFileMedicalAlt","faEdit","SOLID","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","EditIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","API_VERSION","listAPI","aliasAPI","player1Id","player2Id","newAPI","findAlias","postPair","updatePair","deletePairs","getEmptyPlayer","addEmpty","players","getUser","PairSelector","getPairsList","PlayerSelector","getPlayersList","getPlayer","Stage1Selector","getSelectedRows","getSelectedPairs","getToogleRefresh","getStages","Stage2Selector","getCells","getRowsNumber","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","useLocation","Continue","SwitchingProtocols","Processing","EarlyHints","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","IMUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","SwitchProxy","TemporaryRedirect","PermanentRedirect","BadRequest","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","URITooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired"],"mappings":"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","file":"static/js/main.85958b53.chunk.js","sourcesContent":["import { FetchStage2Response, FetchStage2Request } from '../../@common/models';\nimport { ICell } from '../../@common/dto';\nimport { DEFAULT_HEADERS } from '../../@common/utils/fetch.utils';\nimport { getEmptyPair } from './pair.service';\n\nexport const deleteStage2 = async (tId: number) => {\n  const response = await fetch('/api/v1/stage2', {\n    method: 'DELETE',\n    ...DEFAULT_HEADERS,\n    body: JSON.stringify({ tId }),\n  });\n  await response.json();\n};\n\nexport const updateCells = async (cell1: ICell, cell2: ICell | null) => {\n  try {\n    const response = await fetch('/api/v1/stage2/cells', {\n      method: 'POST',\n      ...DEFAULT_HEADERS,\n      body: JSON.stringify({ cell1, cell2 }),\n    });\n    await response.json();\n  } catch (e) {\n    console.error('Error stage2 update');\n  }\n};\n\nexport const fetchPairsStage2 = async (tId: number) => {\n  try {\n    const response = await fetch(`/api/v1/stage2/pairs/${tId}`);\n    const result = await response.json();\n    return { pairs: [getEmptyPair('-'), ...result.pairs] };\n  } catch (e) {\n    console.error('Error stage2 fetching pairs');\n  }\n  return { pairs: [] };\n};\n\nexport const fetchStage2 = async ({\n  count: rowsNumber,\n  tournamentId,\n}: FetchStage2Request): Promise<FetchStage2Response> => {\n  try {\n    const response = await fetch('/api/v1/stage2', {\n      method: 'POST',\n      ...DEFAULT_HEADERS,\n      body: JSON.stringify({ tournamentId, rowsNumber }),\n    });\n    const cells = await response.json();\n    return { cells, rowsNumber };\n  } catch (e) {\n    return { cells: [], rowsNumber };\n  }\n};\n","export * from './root.model';\nexport * from './pair.model';\nexport * from './player.model';\nexport * from './tournament.model';\nexport * from './auth.model';\nexport * from './stage1.model';\nexport * from './stage2.model';\nexport * from './common.models';\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {FetchPairsRequest, FetchPairsResponse, PairError} from '../../@common/models';\n\nconst actionName = '[Pair]';\n\nexport const PairAction = {\n  // Fetch Pairs\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\n    FetchPairsRequest,\n    FetchPairsResponse,\n\t\tPairError\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n\tFetchStage1Response,\n\tFetchStage1Request,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n\tSelectPairsRequest,\n\tSelectPairsResponse, Stage1Error,\n} from '../../@common/models';\nimport {defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION, defaultParam} from './constants';\n\nconst actionName = '[Stage1]';\n\nexport const Stage1Action = {\n  // Update Selected Pairs\n  updateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Selected Pairs Stage1'))<\n    SelectPairsRequest,\n    SelectPairsResponse,\n\t\tStage1Error\n  >(),\n  // watcher\n\treloadFromServer: createAction(...defaultParam(actionName, 'Stage1 Watcher'))<{}>(),\n  fetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\n    FetchStage1Request,\n    FetchStage1Response,\n\t\tStage1Error\n  >(),\n  updateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\n    UpdateCellRequest,\n    UpdateCellResponse,\n\t\tStage1Error\n  >(),\n  updatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\n    UpdatePlacementRequest,\n    UpdatePlacementResponse,\n\t\tStage1Error\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n  FetchStage2Response,\n  FetchStage2Request,\n  UpdateStage2CellResponse,\n  UpdateStage2CellRequest,\n  DeleteStage2Request,\n  DeleteStage2Response,\n} from '../../@common/models';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { ICell } from '../../@common/dto';\n\nconst actionName = '[Stage2]';\n\nexport const Stage2Action = {\n  // get selected tournament\n  fetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\n    FetchStage2Request,\n    FetchStage2Response,\n    Error\n  >(),\n  updateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\n    UpdateStage2CellRequest,\n    UpdateStage2CellResponse,\n    Error\n  >(),\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\n    DeleteStage2Request,\n    DeleteStage2Response,\n    Error\n  >(),\n  setCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\n  setLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","export const getTodayDate = () => formatDate(new Date());\n\nexport function formatDate(date: Date) {\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('/');\n}\n\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\nexport const justADate = (initDate?: Date | string) => {\n  let utcMidnightDateObj: Date;\n  // if no date supplied, use Now.\n  if (!initDate) initDate = new Date();\n\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\n  } else {\n    // if init date is not already a date object, feed it to the date constructor.\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\n  }\n\n  return {\n    toISOString: () => utcMidnightDateObj.toISOString(),\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\n    addDays: (days: number) => {\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\n    },\n    toString: () => utcMidnightDateObj.toString(),\n    toLocaleDateString: (\n      locales?: string | string[] | undefined,\n      options?: Intl.DateTimeFormatOptions | undefined\n    ): string => {\n      const option = options || {};\n      option.timeZone = 'UTC';\n      const locale = locales || 'it-IT';\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\n    },\n  };\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const TournamentSelector = {\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\n};\n","export function getRandomIntInclusive(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nexport function getBaseLog(x: number, y: number) {\n  return Math.log(y) / Math.log(x);\n}\n\nexport const phoneRegExp = new RegExp('^d{10}$');\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\nexport const emailRegExp = new RegExp(\n  // eslint-disable-next-line quotes\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n);\n","export interface PlayerDTO {\n  id: number | null;\n  name: string;\n  surname: string;\n  alias: string;\n  label: string;\n  role: PlayerRole;\n  email: string;\n  phone: string;\n  userId?: number;\n  match_played?: number;\n  match_won?: number;\n  total_score?: number;\n  editable: boolean;\n  rowNumber: number;\n}\n\nexport enum PlayerRole {\n  NotAPlayer = 'Non sono un giocatore',\n  GoalKeeper = 'Portiere',\n  Master = 'Master',\n  Striker = 'Attaccante',\n}\n","export interface TournamentDTO {\n  id: number | null;\n  name: string;\n  date: Date;\n  progress: TournamentProgress;\n  public: boolean;\n  autoOrder: boolean;\n  label: string;\n  ownerId: number | null;\n}\n\nexport enum TournamentProgress {\n  New = 'new',\n  PairsSelection = 'pairsSelection',\n  Stage1 = 'stage1',\n  Stage2 = 'stage2',\n}\n","import { PlayerDTO } from '.';\n\nexport interface UserDTO {\n  id: number;\n  username: string;\n  name: string;\n  surname: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  birthday: Date;\n  label: string;\n  player?: PlayerDTO;\n}\nexport enum UserRole {\n  Admin = 'Admin',\n  User = 'User',\n}\n","import { PairDTO, Stage1Row } from '../../@common/dto';\n\n/**\n *\n * @param value il valore di partenza\n * @returns il valore opposto a quello di partenze\n *\n *  3->0 , 2->1 , 1->2 , 0->3\n */\nexport function getOpposite(value: string | null) {\n  /*\n   * Attenzione :\n   *  !0 = true\n   *  !''  = true\n   *  !null   = true\n   *  !undefined  = true\n   */\n  if (value === null) return null;\n  switch (parseInt(value)) {\n    case 3:\n      return 0;\n    case 2:\n      return 1;\n    case 1:\n      return 2;\n    case 0:\n      return 3;\n    default:\n      return null;\n  }\n}\n\n/**\n * @param {*} obj1\n * @param {*} obj2\n */\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\n  // in caso di parità valuto scontro diretto\n  if (obj1.total === obj2.total) {\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n  return obj2.total - obj1.total;\n}\n\n/**\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\n * Inoltre viene passata al BE per salvare i dati sul DB.\n *\n * @param pairsList PairDTO[] Lista di coppie\n *\n */\nexport const rowsGenerator = (pairsList: Array<PairDTO>): Array<Stage1Row> =>\n  pairsList.map((e, ii) => {\n    const row: Stage1Row = {\n      id: `row-${e.tournamentId}-${ii}`,\n      rowNumber: ii + 1,\n      pair: e,\n      total: 0,\n      placement: e.placement || 0,\n    };\n    for (let jj = 1; jj <= pairsList.length; jj++) {\n      row[`col${jj}`] = null;\n    }\n    return row;\n  });\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  CheckAuthenticationRequest,\n  WatchSessionRequest,\n  AuthenticationError,\n  AuthenticationResponse,\n  LoginRequest,\n  RegistrationRequest,\n  LogoutRequest,\n  DeleteUserRequest,\n  UpdateUserRequest,\n} from '../../@common/models/auth.model';\n\nconst actionName = '[Session]';\n\nexport const AuthAction = {\n  // Register new user\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\n    RegistrationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Login\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\n    LoginRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\n    LogoutRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\n    DeleteUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\n    UpdateUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Check if user is already authenticate\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\n    CheckAuthenticationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Session watcher\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\n    WatchSessionRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n\n  // set selected tournament\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { TypeConstant } from 'typesafe-actions';\n\nexport const Request = 'Request';\nexport const Success = 'Success';\nexport const Failure = 'Failure';\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\n\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\n  `${actionName} ${name} ${Request}`,\n  `${actionName} ${name} ${Success}`,\n  `${actionName} ${name} ${Failure}`,\n];\n\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\n\nexport interface PurgeResponse {}\n","//-----------------------------\n// Fetch utils\n//\nimport { GenericReponse, OmitHistory, UnexpectedServerError } from '../models/common.models';\nimport { toast } from 'react-toastify';\n\n//\nexport const DEFAULT_HEADERS: { headers: HeadersInit } = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nexport const getWrapper = <T extends GenericReponse>(url: string) => fetchWrapper<never,T>(url, 'GET');\nexport const deleteWrapper = <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>) => fetchWrapper<B,T>(url, 'DELETE', body);\nexport const putWrapper = <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>) => fetchWrapper<B,T>(url, 'PUT', body);\nexport const postWrapper = <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>) => fetchWrapper<B,T>(url, 'POST', body);\n\nexport const fetchWrapper = async <B, T extends GenericReponse>(\n  url: string,\n  method: string,\n  body?: OmitHistory<B>\n): Promise<T | typeof UnexpectedServerError> => {\n  console.log('fetchWrapper : ', method, url, body);\n  let response = null;\n  try {\n    response = await fetch(url, {\n      method,\n      body: method === 'PUT' || method === 'POST' || method === 'DELETE' ? JSON.stringify(body) : undefined,\n      ...DEFAULT_HEADERS,\n    });\n    return await response.json();\n  } catch (error) {\n    console.group('An error occur : ');\n    console.error('Error', error);\n    console.error('Details : ', response);\n    console.groupEnd();\n    toast.error('Whoooops...Something went wrong...');\n    /*  FIXME:\n      Type 'GenericReponse' is not assignable to type 'T'.\n      'GenericReponse' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'GenericReponse'.\n    */\n    return UnexpectedServerError;\n  }\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  FetchPlayersResponse,\n  FetchPlayersRequest,\n  SavePlayerRequest,\n  SavePlayerResponse,\n  DeletePlayersResponse,\n  DeletePlayersRequest,\n  PlayerError,\n} from '../../@common/models/player.model';\nimport { PlayerDTO } from '../../@common/dto';\n\nconst actionName = '[Player]';\nexport const PlayerAction = {\n  // set selected tournament\n  setPlayer: createAction(...defaultParam(actionName, 'Set Player'))<PlayerDTO>(),\n  // fetch tournaments\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Player'))<\n    FetchPlayersRequest,\n    FetchPlayersResponse,\n    PlayerError\n  >(),\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  updatePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Update Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\n    DeletePlayersRequest,\n    DeletePlayersResponse,\n    PlayerError\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import {\n  FetchTournamentsRequest,\n  SaveTournamentRequest,\n  FetchTournamentsResponse,\n  SaveTournamentResponse,\n  UpdateTournamentRequest,\n  UpdateTournamentResponse,\n  TournamentError,\n} from '../../@common/models/tournament.model';\nimport { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { TournamentDTO } from '../../@common/dto';\n\nconst actionName = '[Tournament]';\n\nexport const TournamentAction = {\n  // fetch tournaments\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\n    FetchTournamentsRequest,\n    FetchTournamentsResponse,\n\t\tTournamentError\n  >(),\n  // set selected tournament\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\n  // save a new tournament\n  save: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\n    SaveTournamentRequest,\n    SaveTournamentResponse,\n    TournamentError\n  >(),\n  // save a new tournament\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\n    UpdateTournamentRequest,\n    UpdateTournamentResponse,\n    TournamentError\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { toast } from 'react-toastify';\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          toast.warn('This web app is being served cache-first by a service worker.');\n          // TODO: show this message to user\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              toast.warn('Content is cached for offline use.');\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      toast.warn('Error during service worker registration.');\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      toast.warn('No internet connection found. App is running in offline mode.');\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer, Action } from 'typesafe-actions';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { TournamentState } from '../../@common/models/tournament.model';\n\nexport const initialTournamentState: TournamentState = {\n  tournament: null,\n  tournamentsList: [],\n  isLoading: false,\n};\n\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\n  // Request\n  .handleAction(\n    [TournamentAction.fetch.request, TournamentAction.save.request, TournamentAction.update.request],\n    (state) => ({\n      ...state,\n      isLoading: true,\n    })\n  )\n  // Failure\n  .handleAction(\n    [TournamentAction.fetch.failure, TournamentAction.save.failure, TournamentAction.update.failure],\n    (state) => ({ ...state, isLoading: false })\n  )\n  // SUCCESS\n  // Fetch Tournament\n  .handleAction(TournamentAction.fetch.success, (state, { payload: { tournamentsList } }) => ({\n    ...state,\n    tournamentsList: tournamentsList || [],\n    isLoading: false,\n  }))\n  // Set selected tournament\n  .handleAction(TournamentAction.setTournament, (state, { payload }) => ({\n    ...state,\n    tournament: payload,\n    isLoading: false,\n  }))\n  // Create/Update a new tournament\n  .handleAction(\n    [TournamentAction.save.success, TournamentAction.update.success],\n    (state, { payload: { tournament } }) => ({\n      ...state,\n      tournament,\n      isLoading: false,\n    })\n  )\n  .handleAction(TournamentAction.purge, () => initialTournamentState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PlayerState } from '../../@common/models/player.model';\nimport { PlayerAction } from '../actions/player.action';\n\nexport const initialPlayerState: PlayerState = {\n  isLoading: false,\n  isSaving: false,\n  playersList: [],\n};\n\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\n  // Request\n  .handleAction([PlayerAction.fetchPlayers.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  .handleAction(\n    [PlayerAction.savePlayer.request, PlayerAction.updatePlayer.request, PlayerAction.deletePlayers.request],\n    (state) => ({\n      ...state,\n      isLoading: true,\n      isSaving: true,\n    })\n  )\n  // Failure\n  .handleAction(\n    [\n      PlayerAction.fetchPlayers.failure,\n      PlayerAction.savePlayer.failure,\n      PlayerAction.updatePlayer.failure,\n      PlayerAction.deletePlayers.failure,\n    ],\n    (state, { payload: { message } }) => ({\n      ...state,\n      isLoading: false,\n    })\n  )\n  // Success\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\n    playersList: [player, ...state.playersList],\n    isLoading: false,\n    isSaving: false,\n\t\tplayer\n  }))\n\t.handleAction([ PlayerAction.updatePlayer.success], (state, { payload: { player } }) => ({\n\t\tplayersList: state.playersList,\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t\tplayer\n\t}))\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { playersList } }) => ({\n    playersList: state.playersList.filter((row) => !playersList.find((selectedRow) => selectedRow.id === row.id)),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { playersList } }) => ({\n    playersList: playersList.map((e, i) => ({ ...e, rowNumber: i + 1 })),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.setPlayer, (state, { payload }) => ({ ...state, player: payload }))\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PairState } from '../../@common/models';\nimport { PairAction } from '../actions';\n\nexport const initialPairState: PairState = {\n  isLoading: false,\n  isSaving: false,\n};\n\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\n  // Request\n  .handleAction([PairAction.fetch.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  // Failure\n  .handleAction([PairAction.fetch.failure], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Fetch Tournament\n  .handleAction(PairAction.fetch.success, (state, { payload: { pairsList } }) => ({\n    pairsList,\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PairAction.purge, () => initialPairState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { AuthState } from '../../@common/models/auth.model';\nimport { AuthAction } from '../actions/auth.action';\nimport { UserRole } from '../../@common/dto';\n\nexport const initialSessionState: AuthState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  isLoading: true,\n};\n\nexport const SessionReducer = createReducer<AuthState, Action>(initialSessionState)\n  // Request\n  .handleAction(\n    [\n      AuthAction.checkAuthentication.request,\n      AuthAction.registration.request,\n      AuthAction.login.request,\n      AuthAction.logout.request,\n      AuthAction.update.request,\n      AuthAction.delete.request,\n    ],\n    (state) => ({ ...state, isLoading: true })\n  )\n  // Failure\n  .handleAction(\n    [AuthAction.checkAuthentication.failure, AuthAction.registration.failure, AuthAction.login.failure],\n    () => ({\n      isLoading: false,\n      user: undefined,\n      isAdmin: false,\n      isAuthenticated: false,\n    })\n  )\n  .handleAction([AuthAction.logout.failure, AuthAction.update.failure, AuthAction.delete.failure], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Success\n  .handleAction(\n    [\n      AuthAction.checkAuthentication.success,\n      AuthAction.registration.success,\n      AuthAction.login.success,\n      AuthAction.logout.success,\n      AuthAction.update.success,\n      AuthAction.delete.success,\n      AuthAction.updateSession,\n    ],\n    (state, { payload: { user } }) => ({\n      user,\n      isAuthenticated: !!user,\n      isAdmin: user ? user.role === UserRole.Admin : false,\n      isLoading: false,\n    })\n  )\n  .handleAction(AuthAction.purge, () => initialSessionState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { Stage1State } from '../../@common/models';\nimport { Stage1Action } from '../actions';\nimport { Stage1Row } from '../../@common/dto';\nimport { getEmptyPair } from '../services/pair.service';\n\nexport const initialStage1State: Stage1State = {\n  toogleRefresh: false,\n  selectedPairs: [getEmptyPair('-')],\n  isLoading: false,\n  stages: [],\n};\n\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\n  // SSE\n  .handleAction([Stage1Action.reloadFromServer], (state) => ({ ...state, toogleRefresh: !state.toogleRefresh }))\n  //\n  .handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  .handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Aggiornamento valore cella/posizionamento\n  .handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Reperimento dati\n  .handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\n    const currentStage = state.stages.filter((s) => s.stageName === stageName);\n    const newStage =\n      currentStage && currentStage.length > 0\n        ? { ...currentStage[0], rows }\n        : { pairsList, stageName, rows, autoOrder: false, isLoading: false };\n    return {\n      ...state,\n      stages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\n      isLoading: false,\n    };\n  })\n  // Aggiornamento coppie selezionate dati vari gironi\n  .handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stage1Name, stage1Rows } }) => {\n    const selected = state.selectedRows ? state.selectedRows : new Map<string, Stage1Row[]>();\n    selected.set(stage1Name, stage1Rows);\n\n    const selectedPairs = state.selectedPairs\n      ? [\n          // Filtro selectedPairs\n          //  e.id === null : mantengo il placeholder\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stage1Name),\n          ...stage1Rows.map((e) => e.pair),\n        ]\n      : [...stage1Rows.map((e) => e.pair)];\n\n    return {\n      ...state,\n      selectedRows: selected,\n      selectedPairs,\n      isLoading: false,\n    };\n  })\n  .handleAction(Stage1Action.purge, () => initialStage1State);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { Stage2State } from '../../@common/models';\nimport { Stage2Action } from '../actions';\n\nexport const initialStage2State: Stage2State = {\n  isLoading: false,\n};\n\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\n  // Request\n  .handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  // Failure\n  .handleAction([Stage2Action.fetchStage2.failure], (state, { payload: { message } }) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Success\n  .handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, rowsNumber } }) => ({\n    cells,\n    rowsNumber,\n    isLoading: false,\n  }))\n  .handleAction([Stage2Action.delete.success], () => ({\n    cells: undefined,\n    rowsNumber: 0,\n    isLoading: false,\n  }))\n  .handleAction([Stage2Action.setCells], (state, { payload }) => ({\n    ...state,\n    cells: payload,\n  }))\n  .handleAction([Stage2Action.setLoading], (state, { payload }) => ({\n    ...state,\n    isLoading: payload,\n  }))\n  .handleAction(Stage2Action.purge, () => initialStage2State);\n","import {\n  DeleteTournamentRequest,\n  DeleteTournamentResponse,\n  FetchTournamentsRequest,\n  FetchTournamentsResponse,\n  SaveTournamentRequest,\n  SaveTournamentResponse,\n  UpdateTournamentRequest,\n  UpdateTournamentResponse,\n} from '../../@common/models/tournament.model';\nimport { postWrapper, putWrapper, getWrapper, deleteWrapper } from '../../@common/utils/fetch.utils';\nimport {DeleteUserRequest, OmitHistory} from '../../@common/models';\n\nexport const fetchTournaments = (request: OmitHistory<FetchTournamentsRequest>): Promise<FetchTournamentsResponse> =>\n  getWrapper<FetchTournamentsResponse>(\n    request?.tId ? `/api/v2/tournament/${encodeURIComponent(request.tId)}` : '/api/v2/tournament/list'\n  );\n\nexport const postTournament = (request: OmitHistory<SaveTournamentRequest>) =>\n  postWrapper<SaveTournamentRequest, SaveTournamentResponse>('/api/v2/tournament/new', request);\n\nexport const updateTournament = (request: UpdateTournamentRequest) =>\n  putWrapper<UpdateTournamentRequest, UpdateTournamentResponse>('/api/v2/tournament/update', request);\n\nexport const deleteTournament = (request: DeleteTournamentRequest) =>\n  deleteWrapper<DeleteTournamentRequest, DeleteTournamentResponse>('/api/v2/tournament/delete', request);\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpBackend from 'i18next-http-backend';\n\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\ni18n\n\t.use(HttpBackend)\n\t.use(LanguageDetector)\n\t.use(initReactI18next) // passes i18n down to react-i18next\n\t.init({\n\t\tdebug: process.env.NODE_ENV !== 'production',\n\t\t//## Langs\n\t\t// Language to use (overrides language detection)\n\t\t// lng: 'it-IT',\n\t\t// Array of allowed languages\n\t\tsupportedLngs: ['it-IT', 'en-US'],\n\t\t// Language to use if translations in user language are not available.\n\t\tfallbackLng: 'en-US',\n\n\t\t//## Namespaces\n\t\t// String or array of namespaces to load\n\t\tns: ['common', 'auth', 'tournament', 'pair'],\n\t\t// Default namespace used if not passed to translation function\n\t\tdefaultNS: 'common',\n\t\t// String or array of namespaces to lookup key if not found in given namespace.\n\t\tfallbackNS: ['common'],\n\n\t\t//## Load options\n\t\t// Array of languages to preload.\n\t\tpreload: ['it-IT'],\n\t\t/**\n\t\t * Language codes to lookup, given set language is\n\t\t * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\n\t\t * 'currentOnly' --> 'en-US',\n\t\t * 'languageOnly' --> 'en'\n\t\t */\n\t\tload: 'currentOnly',\n\t\tinterpolation: {\n\t\t\t// react already safes from xss\n\t\t\tescapeValue: false,\n\t\t},\n\t\tbackend: {\n\t\t\tloadPath: '/locales/{{lng}}/{{ns}}.json',\n\t\t},\n\t});\n\nexport default i18n;\n\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'en-US' : 'it-IT');\n","import {\n\tGenericReponse, OmitHistory,\n\tUnexpectedServerError,\n\tUserMessage,\n\tUserMessageType,\n} from '../../@common/models/common.models';\nimport { SuccessCodes} from '../../@common/models/HttpStatusCode';\nimport { put, call, StrictEffect } from 'redux-saga/effects';\nimport { PayloadActionCreator } from 'typesafe-actions';\nimport { toast } from 'react-toastify';\nimport i18n from '../../i18n/i18n';\n\ninterface IActionCallback<T> {\n\t( response:T ) : void | Promise<void> | Generator<StrictEffect,void, void>;\n}\n\nconst GeneratorFunction = (function* () { }).constructor;\nconst AsyncFunction = (async function () { }).constructor;\nconst NormalFunction = (function () { }).constructor;\n\nfunction* execCallBack<TRes>(callBack:IActionCallback<TRes>,response:TRes) {\n\tif (callBack instanceof GeneratorFunction) {\n\t\tconst genFunction: typeof GeneratorFunction = callBack;\n\t\tyield* genFunction(response);\n\t} else if (callBack instanceof AsyncFunction)  {\n\t\tconst asyncFunction: typeof AsyncFunction = callBack;\n\t\tyield asyncFunction(response);\n\t} else {\n\t\tconst normalFunction: typeof NormalFunction = callBack;\n\t\tnormalFunction(response);\n\t}\n}\n\ninterface ActionType<TReq, TRes extends GenericReponse,TErr> {\n\trequest: PayloadActionCreator<string, TReq>,\n\tsuccess: PayloadActionCreator<string, TRes>,\n\tfailure: PayloadActionCreator<string, TErr | typeof UnexpectedServerError>\n}\n\nexport const getMessage = (message: UserMessage) => i18n.t(message.label, message.options);\nexport function* entityLifeCycle<TReq, TRes extends GenericReponse,TErr extends GenericReponse>(\n\taction: ActionType<TReq, TRes, TErr>,\n\tmethod: (p: OmitHistory<TReq>) => TRes | Promise<TRes | typeof UnexpectedServerError>,\n\tpayload: OmitHistory<TReq>,\n\tonSuccess?: IActionCallback<TRes>,\n\tonFailure?: IActionCallback<TErr>,\n\tshowMessage:boolean = true,\n): Generator<StrictEffect, void, any> {\n\ttry {\n\t\t// Call method with payload\n\t\tconst response: TRes | TErr = yield call(method, payload);\n\t\tconst { userMessage: message } = response;\n\n\t\tif (showMessage && message) {\n\t\t\tconst messageText = getMessage(message);\n\t\t\tswitch (message.type) {\n\t\t\t\tcase UserMessageType.Success:\n\t\t\t\t\ttoast.success(messageText);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserMessageType.Warning:\n\t\t\t\t\ttoast.warning(messageText);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserMessageType.Danger:\n\t\t\t\t\ttoast.error(messageText);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If success\n\t\tif (SuccessCodes.includes(response.code)) {\n\t\t\tconst successRes = response as TRes;\n\t\t\t// Show success toast\n\t\t\t// Dispatch success action\n\t\t\tyield put(action.success(successRes));\n\t\t\t// Callback\n\t\t\tif (onSuccess) {\n\t\t\t\tyield* execCallBack(onSuccess,successRes);\n\t\t\t}\n\t\t} else {\n\t\t\tconst failureRes = response as TErr;\n\t\t\t// Dispatch failure action\n\t\t\tyield put(action.failure(failureRes));\n\t\t\t// Callback\n\t\t\tif (onFailure) {\n\t\t\t\tyield* execCallBack(onFailure,failureRes);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tyield put(action.failure(UnexpectedServerError));\n\t}\n}\n","import { put, StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { fetchTournaments, postTournament, updateTournament } from '../services/tournament.service';\nimport {\n\tSaveTournamentResponse,\n\tFetchTournamentsResponse,\n\tUpdateTournamentResponse,\n\tFetchTournamentsRequest,\n\tUpdateTournamentRequest,\n\tSaveTournamentRequest,\n\tTournamentError,\n} from '../../@common/models/tournament.model';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { entityLifeCycle } from './utils';\n\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\nfunction* getTournamentsSaga({\n\tpayload,\n}: ReturnType<typeof TournamentAction.fetch.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<FetchTournamentsRequest, FetchTournamentsResponse, TournamentError>(\n\t\tTournamentAction.fetch,\n\t\tfetchTournaments,\n\t\tpayload\n\t);\n}\n\nfunction* saveTournamentSaga({\n\tpayload,\n}: ReturnType<typeof TournamentAction.save.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* (response: SaveTournamentResponse) {\n\t\tconsole.log(\"saveTournamentSaga :\", response);\n\t\t// Reload tournament List\n\t\tyield put(TournamentAction.setTournament(response.tournament));\n\t\tyield put(TournamentAction.fetch.request({}));\n\t\t// Send user to pair page\n\t\tpayload.history.push('/tournament');\n\t};\n\tyield* entityLifeCycle<SaveTournamentRequest, SaveTournamentResponse, TournamentError>(\n\t\tTournamentAction.save,\n\t\tpostTournament,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* updateTournamentSaga({\n\tpayload,\n}: ReturnType<typeof TournamentAction.update.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<UpdateTournamentRequest, UpdateTournamentResponse, TournamentError>(\n\t\tTournamentAction.update,\n\t\tupdateTournament,\n\t\tpayload\n\t);\n}\n\nexport const TournamentSagas = [\n\ttakeEvery(TournamentAction.fetch.request, getTournamentsSaga),\n\ttakeEvery(TournamentAction.save.request, saveTournamentSaga),\n\ttakeEvery(TournamentAction.update.request, updateTournamentSaga),\n];\n","import {\n\tDeletePlayersRequest,\n\tDeletePlayersResponse,\n\tFetchPlayersRequest,\n\tFetchPlayersResponse, PlayerError,\n\tSavePlayerRequest,\n\tSavePlayerResponse,\n} from '../../@common/models';\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { PlayerAction } from '../actions/player.action';\nimport { fetchPlayers, deletePlayers, savePlayer, updatePlayer } from '../services/player.service';\nimport { entityLifeCycle } from './utils';\n\nconst back = (payload: DeletePlayersRequest | SavePlayerRequest) => payload.history?.push('/player');\n\nfunction* getPlayersSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.fetchPlayers.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchPlayersRequest, FetchPlayersResponse, PlayerError>(PlayerAction.fetchPlayers, fetchPlayers, payload);\n}\n\nfunction* deletePlayersSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.deletePlayers.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<DeletePlayersRequest, DeletePlayersResponse, PlayerError>(\n    PlayerAction.deletePlayers,\n    deletePlayers,\n    payload,\n    () => back(payload)\n  );\n}\n\nfunction* savePlayerSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.savePlayer.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(PlayerAction.savePlayer, savePlayer, payload, () =>\n    back(payload)\n  );\n}\n\nfunction* updatePlayerSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.updatePlayer.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(PlayerAction.updatePlayer, updatePlayer, payload,() =>\n    back(payload)\n  );\n}\n\nexport const PlayersSagas = [\n  takeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\n  takeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\n  takeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\n  takeEvery(PlayerAction.updatePlayer.request, updatePlayerSaga),\n];\n","import { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { PairAction } from '../actions';\nimport { fetchPairs } from '../services/pair.service';\nimport {FetchPairsResponse, FetchPairsRequest, PairError} from '../../@common/models';\nimport { entityLifeCycle } from './utils';\n\nfunction* getPairsSaga({ payload }: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchPairsRequest, FetchPairsResponse,PairError>(PairAction.fetch, fetchPairs, payload);\n}\n\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\n","import {\n  FetchStage1Request,\n  FetchStage1Response,\n  UpdateCellRequest,\n  UpdateCellResponse,\n  UpdatePlacementRequest,\n  UpdatePlacementResponse,\n} from '../../@common/models';\nimport { rowsGenerator } from '../../components/Stage1/helper';\nimport { postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchStage1 = async ({ pairsList, stageName }: FetchStage1Request) =>\n  postWrapper<FetchStage1Request, FetchStage1Response>('/api/v1/stage1', {\n    // FIXME:\n    rows: rowsGenerator(pairsList),\n    stageName,\n    pairsList,\n  });\n\nexport const updatePlacement = async (request: UpdatePlacementRequest): Promise<UpdatePlacementResponse> =>\n  putWrapper<UpdatePlacementRequest, UpdatePlacementResponse>('/api/v1/stage1/update/placement', request);\n\nexport const updateCellStage1 = async (request: UpdateCellRequest): Promise<UpdateCellResponse> =>\n  putWrapper<UpdateCellRequest, UpdateCellResponse>('/api/v1/stage1/update/cell', request);\n","import { Stage1Action } from '../actions';\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { fetchStage1, updateCellStage1, updatePlacement } from '../services/stage1.service';\nimport {\n\tFetchStage1Request,\n\tFetchStage1Response,\n\tSelectPairsRequest,\n\tSelectPairsResponse, Stage1Error,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n} from '../../@common/models';\nimport { entityLifeCycle } from './utils';\nimport { selectPairs } from '../services/pair.service';\n\nfunction* fetchSaga({ payload }: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchStage1Request, FetchStage1Response,Stage1Error>(Stage1Action.fetchStage1, fetchStage1, payload);\n}\n\nfunction* updateCellSaga({payload,}: ReturnType<typeof Stage1Action.updateCellStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdateCellRequest, UpdateCellResponse,Stage1Error>( Stage1Action.updateCellStage1, updateCellStage1,payload );\n}\n\nfunction* updatePlacementSaga({ payload }: ReturnType<typeof Stage1Action.updatePlacement.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdatePlacementRequest, UpdatePlacementResponse,Stage1Error>(Stage1Action.updatePlacement, updatePlacement, payload );\n}\n\nfunction* updateSelectedPairsSaga({ payload }: ReturnType<typeof Stage1Action.updateSelectedPairs.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SelectPairsRequest, SelectPairsResponse,Stage1Error>(Stage1Action.updateSelectedPairs, selectPairs, payload );\n}\n\nexport const Stage1Sagas = [\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\n];\n","import { put, call, StrictEffect, takeEvery, select, fork } from 'redux-saga/effects';\nimport { Stage2Action, TournamentAction } from '../actions';\nimport { fetchStage2, updateCells, deleteStage2 } from '../services/stage2.service';\nimport { FetchStage2Response, DeleteStage2Response } from '../../@common/models';\nimport { TournamentSelector } from '../selectors';\nimport { toast } from 'react-toastify';\nimport { TournamentProgress } from '../../@common/dto';\n\nfunction* deleteStage2Saga(action: ReturnType<typeof Stage2Action.delete.request>): Generator<StrictEffect, void, any> {\n  try {\n    const response: DeleteStage2Response = yield call(deleteStage2, action.payload.tId);\n    yield put(Stage2Action.delete.success(response));\n    const tournament = yield select(TournamentSelector.getTournament);\n    tournament.progress = TournamentProgress.Stage1;\n    toast.success('Fase 2 eiminata...');\n    yield put(TournamentAction.update.request({ tournament }));\n  } catch (err) {\n    yield put(Stage2Action.delete.failure(err));\n    toast.error('Error while deleting Stage2');\n  }\n}\n\nfunction* fetchStage2Saga(\n  action: ReturnType<typeof Stage2Action.fetchStage2.request>\n): Generator<StrictEffect, void, any> {\n  try {\n    const response: FetchStage2Response = yield call(fetchStage2, action.payload);\n    yield put(Stage2Action.fetchStage2.success(response));\n  } catch (err) {\n    yield put(Stage2Action.fetchStage2.failure(err));\n    toast.error('Error while fetching Stage2');\n  }\n}\n\nfunction* updateCellsSaga({\n  payload: { cell1, cell2 },\n}: ReturnType<typeof Stage2Action.updateCell.request>): Generator<StrictEffect, void, any> {\n  try {\n    yield fork(updateCells, cell1, cell2);\n    yield put(Stage2Action.updateCell.success({}));\n  } catch (err) {\n    yield put(Stage2Action.updateCell.failure(err));\n    toast.error('Error while updating Stage2');\n  }\n}\n\nexport const Stage2Sagas = [\n  takeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\n  takeEvery(Stage2Action.updateCell.request, updateCellsSaga),\n  takeEvery(Stage2Action.delete.request, deleteStage2Saga),\n];\n","import {\n\tAuthenticationResponse,\n\tLoginRequest,\n\tRegistrationRequest,\n\tUpdateUserRequest,\n\tDeleteUserRequest,\n\tLogoutRequest, SessionStatus, Message\n} from '../../@common/models';\nimport { OmitHistory } from '../../@common/models/common.models';\nimport {putWrapper, deleteWrapper, postWrapper, getWrapper} from '../../@common/utils';\nimport {buffers, END, eventChannel} from 'redux-saga';\n\n// Update\nexport const updateUser = (updateUserRequest: OmitHistory<UpdateUserRequest>) =>\n\tputWrapper<UpdateUserRequest, AuthenticationResponse>('/api/v2/auth/update', updateUserRequest);\n// Delete\nexport const deleteUser = (deleteUserRequest: OmitHistory<DeleteUserRequest>) =>\n\tdeleteWrapper<DeleteUserRequest, AuthenticationResponse>('/api/v2/auth/delete', deleteUserRequest);\n// Login\nexport const login = (loginRequest: OmitHistory<LoginRequest>) =>\n\tpostWrapper<LoginRequest, AuthenticationResponse>('/api/v2/auth/login', loginRequest);\n// Login\nexport const logout = (logoutRequest:OmitHistory<LogoutRequest>) => getWrapper<AuthenticationResponse>('/api/v2/auth/logout');\n// Registration\nexport const registration = ( registrationRequest: OmitHistory<RegistrationRequest>) => postWrapper<RegistrationRequest, AuthenticationResponse>('/api/v2/auth/register', registrationRequest);\nexport const checkAuthentication = () => getWrapper<AuthenticationResponse>('/api/v2/auth/check');\n\n\nexport const createSessionChannel = (channel: EventSource) =>\n\teventChannel<Message>((emitter) => {\n\t\t// Listen for open channel\n\t\tconst openListener = (event: Event) => console.log('Connected...');\n\t\t// Listen for new message\n\t\tconst messageListener = (messageEvent: MessageEvent) => {\n\t\t\tif (messageEvent) {\n\t\t\t\tconst message = JSON.parse(messageEvent.data) as Message;\n\t\t\t\temitter(message);\n\t\t\t\t// Close connection on session expires\n\t\t\t\tif (message.status === SessionStatus.SESSION_EXPIRED) {\n\t\t\t\t\tcloseConnection();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// Listen for error\n\t\tconst errorListener = (event: Event) => {\n\t\t\tconsole.error('An Error Occur: ', event);\n\t\t\temitter(END);\n\t\t\tcloseConnection();\n\t\t};\n\n\t\t// Add listener\n\t\tchannel.addEventListener('open', openListener);\n\t\tchannel.addEventListener('message', messageListener);\n\t\tchannel.addEventListener('error', errorListener);\n\t\t// Cleanup function\n\t\tconst closeConnection = () => {\n\t\t\t// Remove listener\n\t\t\tchannel.removeEventListener('open', openListener);\n\t\t\tchannel.removeEventListener('message', messageListener);\n\t\t\tchannel.removeEventListener('error', errorListener);\n\t\t\tchannel.close();\n\t\t};\n\t\treturn closeConnection;\n\t}, buffers.expanding());\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, delay } from 'redux-saga/effects';\nimport { AuthAction } from '../actions/auth.action';\nimport {\n\tAuthenticationError,\n\tAuthenticationResponse,\n\tCheckAuthenticationRequest,\n\tDeleteUserRequest,\n\tLoginRequest,\n\tLogoutRequest,\n\tRegistrationRequest,\n\tRegistrationResponse,\n\tUnauthorized,\n\tUpdateUserRequest,\n} from '../../@common/models';\nimport {\n\tcheckAuthentication,\n\tcreateSessionChannel,\n\tlogin,\n\tregistration,\n\tupdateUser,\n\tdeleteUser,\n\tlogout,\n} from '../services/auth.service';\nimport { toast } from 'react-toastify';\nimport { Action } from 'typesafe-actions';\nimport { persistor } from '../store';\nimport { Stage1Action, TournamentAction } from '../actions';\nimport { Message, SessionStatus } from '../../@common/models/common.models';\nimport { entityLifeCycle } from './utils';\nimport i18next from 'src/i18n/i18n';\n\nfunction* checkAuthenticationSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t};\n\tyield* entityLifeCycle<CheckAuthenticationRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.checkAuthentication,\n\t\tcheckAuthentication,\n\t\t{},\n\t\tonSuccess\n\t);\n}\n\n/*\nFIXME:\nhttps://github.com/redux-saga/redux-saga/issues/868\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\n*/\n\nfunction* watchSessionSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.sessionControl.request>): Generator<StrictEffect, void, any> {\n\ttry {\n\t\tconst eventChannel = new EventSource('/sse/v1/session');\n\t\tconst channel = yield call(createSessionChannel, eventChannel);\n\t\twhile (true) {\n\t\t\tconst message: Message = yield take(channel);\n\t\t\tif (message.status === SessionStatus.SESSION_EXPIRED) {\n\t\t\t\ttoast.error(i18next.t('auth:expired_alert'));\n\t\t\t\tyield delay(3000);\n\t\t\t\tyield put(AuthAction.logout.success(Unauthorized));\n\t\t\t\thistory.push('/login');\n\t\t\t\tpersistor.purge();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (message.status === SessionStatus.STAGE1_UPDATE) {\n\t\t\t\tyield put(Stage1Action.reloadFromServer({}));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.log('watchSessionSaga.err : ', err);\n\t}\n}\n\n// Logout\nfunction* logoutSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.logout.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = () => {\n\t\thistory.push('/');\n\t\tpersistor.purge();\n\t};\n\tyield* entityLifeCycle<LogoutRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.logout,\n\t\tlogout,\n\t\t{},\n\t\tonSuccess\n\t);\n}\n\n// Login\nfunction* loginSaga({\n\tpayload: { history, ...loginRequest },\n}: ReturnType<typeof AuthAction.login.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\tyield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<LoginRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.login,\n\t\tlogin,\n\t\tloginRequest,\n\t\tonSuccess\n\t);\n}\n\n// Registration\nfunction* registrationSaga({\n\tpayload: { history, ...registrationRequest },\n}: ReturnType<typeof AuthAction.registration.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\tyield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<RegistrationRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.registration,\n\t\tregistration,\n\t\tregistrationRequest,\n\t\tonSuccess\n\t);\n}\n\n// Update user\nfunction* updateUserSaga({\n\tpayload: { history, ...updateUserRequest },\n}: ReturnType<typeof AuthAction.update.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<UpdateUserRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.update,\n\t\tupdateUser,\n\t\tupdateUserRequest,\n\t\t() => history.push('/')\n\t);\n}\n\n// Delete user\nfunction* deleteUserSaga({\n\tpayload: { history, ...deleteUserRequest },\n}: ReturnType<typeof AuthAction.delete.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.logout.request({ history }));\n\t};\n\tyield* entityLifeCycle<DeleteUserRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.delete,\n\t\tdeleteUser,\n\t\tdeleteUserRequest,\n\t\tonSuccess\n\t);\n}\n\nfunction logger(action: Action<any>) {\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconsole.log('Action : ', action);\n\t}\n}\n\nexport const SessionSagas = [\n\ttakeEvery(AuthAction.logout.request, logoutSaga),\n\ttakeEvery(AuthAction.login.request, loginSaga),\n\ttakeEvery(AuthAction.update.request, updateUserSaga),\n\ttakeEvery(AuthAction.delete.request, deleteUserSaga),\n\ttakeEvery(AuthAction.registration.request, registrationSaga),\n\ttakeEvery(AuthAction.checkAuthentication.request, checkAuthenticationSaga),\n\ttakeLatest(AuthAction.sessionControl.request, watchSessionSaga),\n\ttakeEvery('*', logger),\n];\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localForage from 'localforage';\nimport { RootState } from '../@common/models';\nimport {\n  TournamentReducer,\n  PlayerReducer,\n  PairReducer,\n  SessionReducer,\n  Stage1Reducer,\n  Stage2Reducer,\n  initialTournamentState,\n  initialPairState,\n  initialPlayerState,\n  initialStage1State,\n  initialStage2State,\n  initialSessionState,\n} from './reducers';\nimport { TournamentSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas } from './sagas';\nimport { initialState } from '../@common/models/common.models';\n\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\n\n// https://github.com/rt2zz/redux-persist\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\n// custom compose for the redux devtool extension\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n      traceLimit: 25,\n    })) ||\n  compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const rootReducers: ReducersMapObject<RootState> = {\n  tournamentState: TournamentReducer,\n  playerState: PlayerReducer,\n  pairState: PairReducer,\n  authState: SessionReducer,\n  stage1State: Stage1Reducer,\n  stage2State: Stage2Reducer,\n};\n\nexport const initialStoreState: RootState = {\n  tournamentState: initialTournamentState,\n  pairState: initialPairState,\n  playerState: initialPlayerState,\n  stage1State: initialStage1State,\n  stage2State: initialStage2State,\n  authState: initialSessionState,\n};\n\n// Meet the Store\nexport const store = createStore(\n  persistReducer(\n    {\n      key: 'app',\n      storage: localForage,\n    },\n    combineReducers(rootReducers)\n  ),\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nexport const storeWithState = (preloaded: RootState = initialState) =>\n  createStore(\n    persistReducer(\n      {\n        key: 'app',\n        storage: localForage,\n      },\n\n      combineReducers(rootReducers)\n    ),\n    preloaded,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n\nexport const persistor = persistStore(store);\n\n// expose store when run in Cypress\n// https://www.cypress.io/blog/2018/11/14/testing-redux-store/\n// FIXME:\nif ((<any> window).Cypress) {\n\t(<any> window).store = store;\n}\n\n// Exec all sagas\nfunction* rootSagas() {\n  yield all([...TournamentSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas, ...Stage2Sagas, ...Stage1Sagas]);\n}\n\nsagaMiddleware.run(rootSagas);\n\n\n","export default __webpack_public_path__ + \"static/media/header.dc972d44.jpg\";","import React, { lazy } from 'react';\nimport { MaleIcon, FileMedicalIcon } from '../icons';\n\nconst lazySwagger = lazy(() => import('../../Swagger/Swagger'));\nconst lazyPlayer = lazy(() => import('../../Player/table'));\nconst lazyPlayerEdit = lazy(() => import('../../Player/edit'));\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\nconst lazyPairs = lazy(() => import('../../Pair/table'));\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\nconst lazyRedirectionControl = lazy(() =>\n  import('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\n);\n\nexport interface routeType {\n  path: string;\n  label: string;\n  exact: boolean;\n  componentToRender: React.LazyExoticComponent<React.ComponentType<any>>;\n  icon?: React.ComponentType;\n  visible: boolean;\n  index: number;\n  private: boolean;\n}\n\n// Mappatura route\nexport const routes: routeType[] = [\n  {\n    path: '/login',\n    label: 'route.login',\n    exact: true,\n    componentToRender: lazyLogin,\n    visible: false,\n    private: false,\n    index: 0,\n  },\n  {\n    path: '/',\n    label: 'route.home',\n    exact: true,\n    componentToRender: lazyTournament,\n    visible: false,\n    private: true,\n    index: 10,\n  },\n  {\n    path: '/tournament',\n    label: 'route.tournament',\n    exact: true,\n    componentToRender: lazyPairs,\n    visible: false,\n    private: true,\n    index: 20,\n  },\n  {\n    path: '/stage1',\n    label: 'route.stage1',\n    exact: true,\n    componentToRender: lazyStage1,\n    visible: false,\n    private: true,\n    index: 30,\n  },\n  {\n    path: '/player',\n    label: 'route.player',\n    exact: true,\n    componentToRender: lazyPlayer,\n    icon: MaleIcon,\n    visible: true,\n    private: true,\n    index: 40,\n  },\n  {\n    path: '/player/edit',\n    label: 'route.player',\n    exact: true,\n    componentToRender: lazyPlayerEdit,\n    visible: false,\n    private: true,\n    index: 41,\n  },\n  {\n    path: '/user',\n    label: 'route.user',\n    exact: true,\n    componentToRender: lazyUser,\n    visible: false,\n    private: true,\n    index: 50,\n  },\n  {\n    path: '/stage2',\n    label: 'route.stage2',\n    exact: true,\n    componentToRender: lazyStage2,\n    visible: false,\n    private: true,\n    index: 60,\n  },\n  {\n    path: '/swagger',\n    label: 'route.swagger',\n    exact: true,\n    componentToRender: lazySwagger,\n    icon: FileMedicalIcon,\n    visible: true,\n    private: true,\n    index: 70,\n  },\n  // TODO: creare pagina per route not found\n  {\n    path: '*',\n    label: 'route.notFound',\n    exact: false,\n    componentToRender: lazyRedirectionControl,\n    visible: false,\n    private: true,\n    index: 1000,\n  },\n];\nexport default routes;\n\nexport function getLabelByPathname(pathName: string): string {\n  const element = routes.find((e) => e.path === pathName);\n  return element ? element.label : `route ${pathName} not found!`;\n}\n\nexport function getRouteByPathname(pathName: string): routeType | undefined {\n  return routes.find((e) => e.path === pathName);\n}\n","import React, { CSSProperties } from 'react';\nimport backgroundImage from '../../assets/header.jpg';\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport routes from '../core/routing/Routes';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\nimport { AuthAction } from '../../redux/actions';\nimport i18n, { getOtherLang } from '../../i18n/i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst applicationName = 'Calcetto C.S.M';\n\n// App header with navbar\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentHistory = useHistory();\n  const { t } = useTranslation(['common']);\n\n  const { user, isAuthenticated, isAdmin } = useSelector(AuthSelector.getSession);\n\n  const logout = () => dispatch(AuthAction.logout.request({ history: currentHistory }));\n\n  // const yellow = '#ffc107';\n  const jumboStyle: CSSProperties = {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    padding: '60px 0px 10px 0px',\n    minHeight: '28vh',\n  };\n\n  const titleStyle: CSSProperties = {\n    color: 'white',\n  };\n\n  const otherLang = getOtherLang();\n\n  return (\n    <header>\n      <Jumbotron style={jumboStyle}>\n        <h1 style={{ margin: '5vh' }}>\n          <strong style={titleStyle}>{applicationName}</strong>\n        </h1>\n        {isAuthenticated ? (\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand as={Link} to=\"/\">\n              <span>\n                <HomeIcon /> {t('route.home')}\n              </span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                {routes.map((route) =>\n                  !route.visible || (route.path === '/swagger' && !isAdmin) ? null : (\n                    <Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\n                      <span>\n                        {route.icon ? <route.icon /> : null} {t(route.label)}\n                      </span>\n                    </Nav.Link>\n                  )\n                )}\n              </Nav>\n              {user ? (\n                <>\n                  <Dropdown alignRight as={ButtonGroup}>\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }} data-cy=\"header-username\">\n                        {user.username} <UserIcon />\n                      </strong>\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" data-cy=\"header-dropdown\" />\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        as={Link}\n                        to={'/user'}\n                        eventKey=\"1\"\n                      >\n                        <span>{t('route.user')}</span>\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        onClick={() => i18n.changeLanguage(otherLang)}\n                        as=\"button\"\n                        eventKey=\"2\"\n                      >\n                        <span>\n                          <LanguageIcon /> {t(`common:lang.${otherLang}`)}\n                        </span>\n                      </Dropdown.Item>\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        as=\"button\"\n                        onClick={logout}\n                        eventKey=\"3\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cy=\"header-user-logout\"\n                      >\n                        <span>\n                          <LogoutIcon /> <strong>{t('logout')} </strong>\n                        </span>\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </>\n              ) : null}\n            </Navbar.Collapse>\n          </Navbar>\n        ) : null}\n      </Jumbotron>\n    </header>\n  );\n};\n\nexport default Header;\n","// https://github.com/openscript/react-example-authentication-redirection\n\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { routeType, getLabelByPathname } from './Routes';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, connect } from 'react-redux';\nimport { AuthSelector } from '../../../redux/selectors/auth.selector';\nimport { TournamentSelector } from '../../../redux/selectors';\n\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\nexport const ProtectedRoute: React.FC<routeType> = (props) => {\n  const isAuthenticated = useSelector(AuthSelector.isAuthenticated);\n  const session = useSelector(AuthSelector.getSession);\n  const tournament = useSelector(TournamentSelector.getTournament);\n  return (\n    <Route\n      {...props}\n      render={(innerProps) => {\n        const { location } = innerProps;\n        console.log('ProtectedRoute : ', session, tournament, location);\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\n        if (isAuthenticated && location.pathname === '/login') {\n          console.log('ProtectedRoute => redirect to Home');\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\n        }\n\n        // Se non è una rotta protetta\n        if (!props.private) {\n          console.log('ProtectedRoute => public route : ', { ...props });\n          return <props.componentToRender {...props} />;\n        }\n\n        // Se è una rotta privata e non sono autenticato devo andare alla login\n        if (!isAuthenticated) {\n          console.log('ProtectedRoute => redirect to Login : ', { ...session });\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\n        }\n        /**\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\n         */\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\n        return <props.componentToRender {...props} />;\n      }}\n    />\n  );\n};\nexport default connect(ProtectedRoute);\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      const errorDetails =\n        process.env.NODE_ENV === 'development' ? (\n          <details className=\"preserve-space\">\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : undefined;\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { CSSProperties } from 'react';\nimport { Badge } from 'react-bootstrap';\n\ninterface AppBadgeProps {}\nconst AppBadge: React.FC<AppBadgeProps> = () => {\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\n\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: '0.1em',\n    right: '0.1em',\n  };\n  return (\n    <h4 style={style}>\n      <Badge variant=\"info\">\n        <span>v.</span>\n        <strong>{appVersion}</strong>\n        <span>\n          <i>\n            <small> @ {commitHash}</small>\n          </i>\n        </span>\n      </Badge>\n    </h4>\n  );\n};\n\nexport default AppBadge;\n","import React, { Suspense, useEffect } from 'react';\n// Components\nimport Header from '../Header/Header';\nimport { LoadingModal } from '../core/generic/Commons';\n// Routing\nimport { Switch, useHistory } from 'react-router';\nimport routes from '../core/routing/Routes';\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\nimport ErrorBoundary from '../core/errorBoundary';\n// Style\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthAction } from '../../redux/actions';\nimport { loadIcons } from '../core/icons';\n// Toasts\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './toast.css';\nimport AppBadge from './badge';\nimport { AuthSelector } from '../../redux/selectors';\n// i18n\nimport '../../i18n/i18n';\n\nloadIcons();\nconst App: React.FC = (_) => {\n  const dispatch = useDispatch();\n  const currentHistory = useHistory();\n  const isLoading = useSelector(AuthSelector.isLoading);\n\n  // Check if user is already logged\n  useEffect(() => {\n    dispatch(AuthAction.checkAuthentication.request({ history: currentHistory }));\n  }, [currentHistory, dispatch]);\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        {/* Loading translations */}\n        <Suspense fallback={<LoadingModal />}>\n          <Header />\n        </Suspense>\n        <Container fluid style={{ marginBottom: '20vh' }}>\n          {/*<RedirectionControl />*/}\n          <ToastContainer autoClose={3000} data-cy=\"toast-container\"/>\n          {isLoading ? (\n            // Loading store\n            <LoadingModal />\n          ) : (\n            // Loading lazy components\n            <Suspense fallback={<LoadingModal />}>\n              <Switch>\n                {routes.map((route) => (\n                  <ProtectedRoute {...route} key={route.index} />\n                ))}\n              </Switch>\n            </Suspense>\n          )}\n          <AppBadge />\n        </Container>\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../../redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { LoadingModal } from '../core/generic/Commons';\n\nconst Application: React.FC = () => (\n  <Provider store={store}>\n    <PersistGate loading={<LoadingModal show={true} />} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n);\nconst Entry: React.FC = () =>\n  process.env.NODE_ENV !== 'production' ? (\n    <StrictMode>\n      <Application />\n    </StrictMode>\n  ) : (\n    <Application />\n  );\n\nexport default Entry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'typeface-roboto';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport it from 'date-fns/locale/it';\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\n\nimport Entry from './components/App/Entry';\n\nsetDefaultLocale('it');\nregisterLocale('it', it);\n\nReactDOM.render(<Entry />, document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\nserviceWorker.unregister();\n\n// Redefine console so it does not in production env\nif (process.env.NODE_ENV === 'production') {\n  if (!window.console) (window as any).console = {};\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\n}\n","import { PlayerRole, UserDTO } from '../dto';\nimport { AuthenticationResponse, RootState } from '.';\nimport { HTTPStatusCode } from './HttpStatusCode';\nimport { TOptions } from 'i18next';\n\nexport enum SessionStatus {\n\t// Sessione scaduta, reindirizza l'utente alla login\n\tSESSION_EXPIRED = 'session_expired',\n\t// Necessario aggiornamento dati su Stage1\n\tSTAGE1_UPDATE = 'stage1_update',\n}\n\nexport interface Message {\n\tstatus: SessionStatus;\n\tmessage?: string;\n}\n\nexport type I18nLabel = {\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n};\n\nexport enum Environment {\n\tdevelopment = 'development',\n\ttest = 'test',\n\tproduction = 'production',\n}\n\nexport interface GenericReponse {\n\tcode: HTTPStatusCode;\n\tmessage: string;\n\tuserMessage: UserMessage;\n}\n\nexport enum UserMessageType {\n\tSuccess = 'success',\n\tWarning = 'warning',\n\tDanger = 'danger',\n}\n\nexport interface UserMessage {\n\ttype: UserMessageType;\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n}\n\nexport type OmitHistory<T> = Omit<T, 'history'>;\n// FIXME:\nexport type OmitGeneric<T extends GenericReponse> = Omit<T, 'code' | 'message' | 'userMessage'>;\n// FIXME: UNUSED\nexport type PickGeneric<T extends GenericReponse> = Pick<T, 'code' | 'message' | 'userMessage'>;\n\nexport const UnexpectedServerError: GenericReponse = {\n\tcode: HTTPStatusCode.InternalServerError,\n\tmessage: 'Unexpected Server Error',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'common:server.unexpected',\n\t},\n};\n\nexport const Unauthorized: AuthenticationResponse = {\n\tuser: undefined,\n\tcode: HTTPStatusCode.Unauthorized,\n\tmessage: 'Unauthorized!',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'auth:expired',\n\t},\n};\n\nexport const initialState: RootState = {\n\ttournamentState: {\n\t\ttournament: null,\n\t\ttournamentsList: [],\n\t\tisLoading: false,\n\t},\n\tplayerState: {\n\t\tisLoading: false,\n\t\tplayersList: [],\n\t\tisSaving: false,\n\t},\n\tpairState: {\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t},\n\tauthState: {\n\t\tisAuthenticated: false,\n\t\tisAdmin: false,\n\t\tisLoading: false,\n\t},\n\tstage1State: {\n\t\ttoogleRefresh: false,\n\t\tselectedPairs: [\n\t\t\t{\n\t\t\t\tid: null,\n\t\t\t\ttournamentId: 0,\n\t\t\t\trowNumber: 0,\n\t\t\t\tplayer1: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\tplayer2: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\talias: '-',\n\t\t\t\tstage1Name: '',\n\t\t\t\tplacement: 0,\n\t\t\t\tpaid1: false,\n\t\t\t\tpaid2: false,\n\t\t\t},\n\t\t],\n\t\tisLoading: false,\n\t\tstages: [],\n\t},\n\tstage2State: {\n\t\tisLoading: false,\n\t},\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\n// FontAwesome 5\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faSignOutAlt,\n  faUser,\n  faMale,\n  faLanguage,\n  faHome,\n  faBroom,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faTimes,\n  faToggleOff,\n  faToggleOn,\n  faPlus,\n  faTrophy,\n  faAngleDoubleRight,\n  faBan,\n  faFileMedicalAlt,\n  faEdit,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\n\nexport const loadIcons = () => {\n  library.add(\n    // Regular\n    faTrashAlt,\n    faSave,\n    // Solid\n    faSignOutAlt,\n    faUser,\n    faMale,\n    faLanguage,\n    faHome,\n    faBroom,\n    faArrowAltCircleRight,\n    faArrowAltCircleLeft,\n    faTimes,\n    faToggleOff,\n    faToggleOn,\n    faPlus,\n    faTrophy,\n    faAngleDoubleRight,\n    faBan,\n    faFileMedicalAlt,\n    faEdit\n  );\n};\n\ninterface IconProps {\n  color?: string;\n  size?: SizeProp;\n}\n\ninterface AbstractIconProps extends IconProps {\n  prefix: IconPrefix;\n  iconName: IconName;\n}\n\nconst SOLID = 'fas';\nconst REGULAR = 'far';\n\n// Wrapper per icone FontAwesome\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\n);\n\n// Regular\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\n);\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\n);\n\n// Solid\nexport const EditIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"edit\" />\n);\nexport const FileMedicalIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"file-medical-alt\" />\n);\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\n);\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\n);\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\n);\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\n);\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\n);\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\n);\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\n);\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\n);\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\n);\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\n);\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\n);\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\n);\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\n);\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\n);\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\n);\n","export * from './pair.dto';\nexport * from './player.dto';\nexport * from './stage1.dto';\nexport * from './stage2.dto';\nexport * from './tournament.dto';\nexport * from './user.dto';\n","import { PairDTO } from '../../@common/dto';\nimport {\n  FetchPairsRequest,\n  FetchPairsResponse,\n  SavePairResponse,\n  SavePairRequest,\n  DeletePairsRequest,\n  DeletePairsResponse,\n  FindAliasRequest,\n  FindAliasResponse,\n  SelectPairsResponse,\n  SelectPairsRequest,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\nimport { getEmptyPlayer } from './player.service';\n\nconst API_VERSION = '/api/v2/pair';\nconst listAPI = (tId: number) => `${API_VERSION}/list?tId=${encodeURIComponent(tId)}`;\nconst aliasAPI = (player1Id: number, player2Id: number) =>\n  `${API_VERSION}/alias?player1Id=${encodeURIComponent(player1Id)}&player2Id=${encodeURIComponent(player2Id)}`;\nconst selectAPI = () => `${API_VERSION}/selected`;\nconst newAPI = () => `${API_VERSION}/new`;\nconst deleteAPI = () => `${API_VERSION}/delete`;\n\nexport const fetchPairs = async ({ tId }: FetchPairsRequest) => getWrapper<FetchPairsResponse>(listAPI(tId));\nexport const findAlias = async ({ player1Id, player2Id }: FindAliasRequest) => getWrapper<FindAliasResponse>(aliasAPI(player1Id, player2Id));\nexport const selectPairs = async (request: SelectPairsRequest) => putWrapper<SelectPairsRequest, SelectPairsResponse>(selectAPI(), request);\nexport const postPair = async (request: SavePairRequest) => postWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\n\n// FIXME: create update\nexport const updatePair = async (request: SavePairRequest) => postWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\nexport const deletePairs = async (request: DeletePairsRequest) => deleteWrapper<DeletePairsRequest, DeletePairsResponse>(deleteAPI(), request);\n\nexport const getEmptyPair = (label?: string): PairDTO => ({\n  id: null,\n  tournamentId: 0,\n  rowNumber: 0,\n  player1: getEmptyPlayer(),\n  player2: getEmptyPlayer(),\n  alias: label || '',\n  stage1Name: '',\n  placement: 0,\n  paid1: false,\n  paid2: false,\n});\n","import { PlayerDTO, PlayerRole } from '../../@common/dto';\nimport {\n  FetchPlayersRequest,\n  FetchPlayersResponse,\n  DeletePlayersRequest,\n  DeletePlayersResponse,\n  SavePlayerResponse,\n  SavePlayerRequest,\n} from '../../@common/models';\nimport { UnexpectedServerError } from '../../@common/models/common.models';\nimport { DEFAULT_HEADERS, deleteWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\n  try {\n    const response = await fetch(tId ? `/api/v2/player/list/${encodeURIComponent(tId)}` : '/api/v2/player/list', {\n      method: 'GET',\n      ...DEFAULT_HEADERS,\n    });\n    const result: FetchPlayersResponse = await response.json();\n    return {\n      ...result,\n      playersList: addEmpty ? [...result.playersList, getEmptyPlayer('Nessun Giocatore')] : result.playersList,\n    };\n  } catch (e) {\n    return { ...UnexpectedServerError, playersList: [] };\n  }\n};\n\nexport const deletePlayers = async ({ players }: DeletePlayersRequest) =>\n  deleteWrapper<DeletePlayersRequest, DeletePlayersResponse>('/api/v2/player/delete', { players });\n\nexport const savePlayer = async ({ player }: SavePlayerRequest) =>\n  postWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/new', { player });\n\nexport const updatePlayer = async ({ player }: SavePlayerRequest) =>\n  putWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/update', { player });\n\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\n  id: null,\n  name: '',\n  surname: '',\n  alias: '',\n  label: label || '',\n  role: PlayerRole.GoalKeeper,\n  email: '',\n  phone: '',\n  match_played: 0,\n  match_won: 0,\n  total_score: 0,\n  editable: false,\n  rowNumber: 0,\n});\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const AuthSelector = {\n  isLoading: ({ authState: { isLoading } }: RootState) => isLoading,\n  isAdmin: ({ authState: { isAdmin } }: RootState) => isAdmin,\n  isAuthenticated: ({ authState: { isAuthenticated } }: RootState) => isAuthenticated,\n  getUser: ({ authState: { user } }: RootState) => user,\n  getSession: ({ authState }: RootState) => authState,\n};\n","export * from './math.utils';\nexport * from './fetch.utils';\nexport * from './date.utils';\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PairSelector = {\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\n  getPairsList: ({ pairState: { pairsList } }: RootState) => pairsList,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PlayerSelector = {\n  // Default states\n  isLoading: ({ playerState: { isLoading } }: RootState) => isLoading,\n  isSaving: ({ playerState: { isSaving } }: RootState) => isSaving,\n  // Player\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\n  getPlayer: ({ playerState: { player } }: RootState) => player,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const Stage1Selector = {\n  isLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\n  getSelectedRows: ({ stage1State: { selectedRows } }: RootState) => selectedRows || null,\n  getSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\n  getToogleRefresh: ({ stage1State: { toogleRefresh } }: RootState) => toogleRefresh,\n  // Utilizzare una closure nel compoanente per accedere allo specifico stage\n  getStages: ({ stage1State: { stages } }: RootState) => stages,\n};\n","import { RootState } from '../../@common/models';\n\n\n// Get state from store\nexport const Stage2Selector = {\n  isLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\n  getCells: ({ stage2State: { cells } }: RootState) => cells,\n  getRowsNumber: ({ stage2State: { rowsNumber } }: RootState) => rowsNumber,\n};\n","import React, { CSSProperties } from 'react';\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport './style.css';\n\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\nconst fancyModalFooter = (\n  <>\n    <Spinner animation=\"border\" variant=\"light\" />\n    <Spinner animation=\"border\" variant=\"primary\" />\n    <Spinner animation=\"border\" variant=\"secondary\" />\n    <Spinner animation=\"border\" variant=\"success\" />\n    <Spinner animation=\"border\" variant=\"danger\" />\n    <Spinner animation=\"border\" variant=\"warning\" />\n    <Spinner animation=\"border\" variant=\"info\" />\n    <Spinner animation=\"border\" variant=\"dark\" />\n  </>\n);\n// Loading Modal\ninterface LoadingModalPropsType {\n  show?: boolean;\n  title?: string;\n  message?: string;\n  onHide?: () => void;\n}\n\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\n  title = 'Caricamento....',\n  message = 'Caricamento....',\n  show = true,\n  onHide = () => (show = false),\n}) => (\n  <Modal data-cy=\"loader\" show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\n      {message}\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\nexport interface YesNoModalProps {\n  title: string;\n  show: boolean;\n  message: string;\n  onHide?: () => void;\n  onClick: () => void;\n}\n\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\n  title,\n  message,\n  show,\n  onHide = () => (show = false),\n  onClick,\n}) => (\n  <Modal\n    className=\"YesNoModal\"\n    show={show}\n    onHide={onHide}\n    centered\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\n  >\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body style={modalStyle}>\n      <Container fluid>\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\n          <Col>\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\n              Annulla\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\n              Conferma\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\n// Toasts\nexport interface IToastProps {\n  message: string;\n  type?: toastType;\n}\n\nexport type toastType = 'success' | 'warning' | 'danger';\n\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\n  message && message !== '' ? (\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\n      <Toast.Header closeButton={false}>\n        <strong>Operazione completata !</strong>\n      </Toast.Header>\n      <Toast.Body>\n        <Alert variant={type}>{message}</Alert>\n      </Toast.Body>\n    </Toast>\n  ) : null;\n\n// TODO: Componente fallback se route non trovata\nexport function RedirectionControl(props: any): JSX.Element {\n  const location = useLocation();\n  return (\n    <div>\n      <h1>\n        Current Ruote : <code>{location.pathname}</code>\n      </h1>\n    </div>\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\nexport enum HTTPStatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  Processing = 102,\n  EarlyHints = 103,\n\n  /**\n   * All `1xx` status codes.\n   */\n  InformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\n\n  OK = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  MultiStatus = 207,\n  AlreadyReported = 208,\n  IMUsed = 226,\n\n  /**\n   * All `2xx` status codes.\n   */\n  Success = OK |\n    Created |\n    Accepted |\n    NonAuthoritativeInformation |\n    NoContent |\n    ResetContent |\n    PartialContent |\n    MultiStatus |\n    AlreadyReported |\n    IMUsed,\n\n  MultipleChoices = 300,\n  MovedPermanently = 301,\n  Found = 302,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  SwitchProxy = 306,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n\n  /**\n   * All `3xx` status codes.\n   */\n  Redirection = MultipleChoices |\n    MovedPermanently |\n    Found |\n    SeeOther |\n    NotModified |\n    UseProxy |\n    SwitchProxy |\n    TemporaryRedirect |\n    PermanentRedirect,\n\n  BadRequest = 400,\n  /**\n   * The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\n   */\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  /**\n   * The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\n   * This status is similar to 401, but in this case, re-authenticating will make no difference.\n   * The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.\n   */\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  PayloadTooLarge = 413,\n  URITooLong = 414,\n  UnsupportedMediaType = 415,\n  RangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  ImATeapot = 418,\n  MisdirectedRequest = 421,\n  UnprocessableEntity = 422,\n  Locked = 423,\n  FailedDependency = 424,\n  UpgradeRequired = 426,\n  PreconditionRequired = 428,\n  TooManyRequests = 429,\n  RequestHeaderFieldsTooLarge = 431,\n  UnavailableForLegalReasons = 451,\n\n  /**\n   * All `4xx` error codes.\n   */\n  ClientErrors = BadRequest |\n    Unauthorized |\n    PaymentRequired |\n    Forbidden |\n    NotFound |\n    MethodNotAllowed |\n    NotAcceptable |\n    ProxyAuthenticationRequired |\n    RequestTimeout |\n    Conflict |\n    Gone |\n    LengthRequired |\n    PreconditionFailed |\n    PayloadTooLarge |\n    URITooLong |\n    UnsupportedMediaType |\n    RangeNotSatisfiable |\n    ExpectationFailed |\n    ImATeapot |\n    MisdirectedRequest |\n    UnprocessableEntity |\n    Locked |\n    FailedDependency |\n    UpgradeRequired |\n    PreconditionRequired |\n    TooManyRequests |\n    RequestHeaderFieldsTooLarge |\n    UnavailableForLegalReasons,\n\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HTTPVersionNotSupported = 505,\n  VariantAlsoNegotiates = 506,\n  InsufficientStorage = 507,\n  LoopDetected = 508,\n  NotExtended = 510,\n  NetworkAuthenticationRequired = 511,\n\n  /**\n   * All `5xx` error codes.\n   */\n  ServerErrors = InternalServerError |\n    NotImplemented |\n    BadGateway |\n    ServiceUnavailable |\n    GatewayTimeout |\n    HTTPVersionNotSupported |\n    VariantAlsoNegotiates |\n    InsufficientStorage |\n    LoopDetected |\n    NotExtended |\n    NetworkAuthenticationRequired,\n}\n\nexport const InformationCodes = [\n  HTTPStatusCode.Continue,\n  HTTPStatusCode.SwitchingProtocols,\n  HTTPStatusCode.Processing,\n  HTTPStatusCode.EarlyHints,\n];\nexport const SuccessCodes = [\n  HTTPStatusCode.OK,\n  HTTPStatusCode.Created,\n  HTTPStatusCode.Accepted,\n  HTTPStatusCode.NonAuthoritativeInformation,\n  HTTPStatusCode.NoContent,\n  HTTPStatusCode.ResetContent,\n  HTTPStatusCode.PartialContent,\n  HTTPStatusCode.MultiStatus,\n  HTTPStatusCode.AlreadyReported,\n  HTTPStatusCode.IMUsed,\n];\n\nexport const RedirectCodes = [\n  HTTPStatusCode.MultipleChoices,\n  HTTPStatusCode.MovedPermanently,\n  HTTPStatusCode.Found,\n  HTTPStatusCode.SeeOther,\n  HTTPStatusCode.NotModified,\n  HTTPStatusCode.UseProxy,\n  HTTPStatusCode.SwitchProxy,\n  HTTPStatusCode.TemporaryRedirect,\n  HTTPStatusCode.PermanentRedirect,\n];\n\nexport const ClientErrorsCodes = [\n  HTTPStatusCode.BadRequest,\n  HTTPStatusCode.Unauthorized,\n  HTTPStatusCode.PaymentRequired,\n  HTTPStatusCode.Forbidden,\n  HTTPStatusCode.NotFound,\n  HTTPStatusCode.MethodNotAllowed,\n  HTTPStatusCode.NotAcceptable,\n  HTTPStatusCode.ProxyAuthenticationRequired,\n  HTTPStatusCode.RequestTimeout,\n  HTTPStatusCode.Conflict,\n  HTTPStatusCode.Gone,\n  HTTPStatusCode.LengthRequired,\n  HTTPStatusCode.PreconditionFailed,\n  HTTPStatusCode.PayloadTooLarge,\n  HTTPStatusCode.URITooLong,\n  HTTPStatusCode.UnsupportedMediaType,\n  HTTPStatusCode.RangeNotSatisfiable,\n  HTTPStatusCode.ExpectationFailed,\n  HTTPStatusCode.ImATeapot,\n  HTTPStatusCode.MisdirectedRequest,\n  HTTPStatusCode.UnprocessableEntity,\n  HTTPStatusCode.Locked,\n  HTTPStatusCode.FailedDependency,\n  HTTPStatusCode.UpgradeRequired,\n  HTTPStatusCode.PreconditionRequired,\n  HTTPStatusCode.TooManyRequests,\n  HTTPStatusCode.RequestHeaderFieldsTooLarge,\n  HTTPStatusCode.UnavailableForLegalReasons,\n];\n\nexport const ServerErrorsCodes = [\n  HTTPStatusCode.InternalServerError,\n  HTTPStatusCode.NotImplemented,\n  HTTPStatusCode.BadGateway,\n  HTTPStatusCode.ServiceUnavailable,\n  HTTPStatusCode.GatewayTimeout,\n  HTTPStatusCode.HTTPVersionNotSupported,\n  HTTPStatusCode.VariantAlsoNegotiates,\n  HTTPStatusCode.InsufficientStorage,\n  HTTPStatusCode.LoopDetected,\n  HTTPStatusCode.NotExtended,\n  HTTPStatusCode.NetworkAuthenticationRequired,\n];\n"],"sourceRoot":""}