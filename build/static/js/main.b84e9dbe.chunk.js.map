{"version":3,"sources":["@common/utils/date.utils.ts","redux/services/pair.service.ts","redux/services/stage1.service.ts","redux/services/stage2.service.ts","redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","redux/selectors/tournament.selector.ts","@common/utils/math.utils.ts","@common/dto/player.dto.ts","@common/dto/tournament.dto.ts","@common/dto/user.dto.ts","@common/models/pair.model.ts","components/Stage1/helper.ts","redux/actions/constants.ts","redux/actions/auth.action.ts","@common/utils/fetch.utils.ts","redux/actions/tournament.action.ts","@common/models/common.models.ts","serviceWorker.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/auth.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/services/tournament.service.ts","i18n/i18n.ts","redux/sagas/utils.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/sagas/pair.saga.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/services/auth.service.ts","redux/sagas/auth.saga.ts","redux/store.ts","assets/header.jpg","components/core/routing/Routes.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","redux/actions/player.action.ts","components/core/icons.tsx","@common/models/index.ts","@common/dto/index.ts","@common/utils/index.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","redux/selectors/auth.selector.ts","components/core/generic/Commons.tsx","@common/models/HttpStatusCode.ts","@common/models/player.model.ts","redux/services/player.service.ts"],"names":["formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","API_VERSION","listAPI","tId","encodeURIComponent","aliasAPI","player1Id","player2Id","newAPI","fetchPairs","a","getWrapper","findAlias","selectPairs","request","putWrapper","postPair","postWrapper","updatePair","deletePairs","deleteWrapper","fetchStage1","pairsList","stageName","rows","rowsGenerator","updatePlacement","updateCellStage1","deleteStage2","updateCells","fetchPairsStage2","tournamentId","afterFetch","response","pairs","getEmptyPair","fetchStage2","actionName","PairAction","fetch","createAsyncAction","defaultAsyncParams","reset","createAction","defaultParam","purge","PURGE_STORE_ACTION","Stage1Action","updateSelectedPairs","reloadFromServer","resetPairs","Stage2Action","updateCell","delete","setCells","setLoading","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","getBaseLog","x","y","Math","log","RegExp","passwordRegExp","emailRegExp","PlayerRole","TournamentProgress","UserRole","label","id","rowNumber","player1","getEmptyPlayer","player2","alias","stage1Name","placement","paid1","paid2","getOpposite","value","parseInt","comparator","obj1","obj2","total","map","e","ii","row","pair","jj","name","AuthAction","unsubscribe","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","default_headers","url","afterResponse","fetchWrapper","undefined","body","method","console","JSON","stringify","headers","json","result","group","error","groupEnd","toast","UnexpectedServerError","TournamentAction","reload","setTournament","save","SessionStatus","Environment","UserMessageType","code","HTTPStatusCode","InternalServerError","message","userMessage","type","Danger","Unauthorized","user","initialState","playerState","playersList","isSaving","pairState","authState","isAuthenticated","isAdmin","stage1State","toogleRefresh","selectedPairs","surname","role","GoalKeeper","email","phone","match_played","match_won","total_score","editable","stages","stage2State","Boolean","window","location","hostname","match","initialTournamentState","TournamentReducer","createReducer","handleAction","state","failure","success","payload","includes","initialPlayerState","PlayerReducer","PlayerAction","fetchPlayers","savePlayer","updatePlayer","deletePlayers","player","filter","find","selectedRow","i","setPlayer","initialPairState","PairReducer","initialSessionState","SessionReducer","Admin","emptyPair","initialStage1State","Stage1Reducer","currentStage","s","newStage","autoOrder","stage1Rows","selected","selectedRows","size","Map","set","initialStage2State","Stage2Reducer","cells","count","reloadTournament","fetchTournaments","postTournament","updateTournament","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","process","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","execCallBack","entityLifeCycle","GeneratorFunction","constructor","AsyncFunction","callBack","genFunction","asyncFunction","getMessage","t","options","getToast","alert","Success","Warning","warn","action","onSuccess","onFailure","showMessage","call","messageText","SuccessCodes","successRes","put","failureRes","fetchTournamentsSaga","reloadTournamentSaga","saveTournamentSaga","updateTournamentSaga","onSuccessRedirect","redirect","history","push","path","TournamentSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","updatePlayerSaga","back","PlayersSagas","getPairsSaga","PairsSagas","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","Stage1Sagas","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","Stage2Sagas","updateUser","updateUserRequest","deleteUser","deleteUserRequest","loginRequest","logoutRequest","registrationRequest","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","status","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","registrationSaga","unsubscribeSaga","updateUserSaga","deleteUserSaga","i18next","EventSource","take","TOURNAMENT_NEW","TOURNAMENT_UPDATE","STAGE1_UPDATE","STAGE1_DELETE","STAGE2_UPDATE","STAGE2_DELETE","delay","persistor","SessionSagas","takeLatest","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","Cypress","run","lazySwagger","lazy","lazyPlayer","lazyPlayerEdit","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","module","default","RedirectionControl","routes","exact","componentToRender","visible","private","index","icon","MaleIcon","FileMedicalIcon","Header","dispatch","useDispatch","currentHistory","useHistory","useTranslation","useSelector","AuthSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","language","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","disabled","fontSize","data-cy","username","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","render","innerProps","pathname","from","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","fallback","Container","fluid","marginBottom","autoClose","Application","loading","show","Entry","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","forEach","library","add","faTrashAlt","faSave","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faTrophy","faAngleDoubleRight","faBan","faFileMedicalAlt","faEdit","SOLID","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","EditIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","PairSelector","getPairsList","PlayerSelector","getPlayersList","getPlayer","Stage1Selector","getSelectedRows","get","getSelectedPairs","getToogleRefresh","Stage2Selector","getCells","getCount","getUser","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","useLocation","Continue","SwitchingProtocols","Processing","EarlyHints","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","IMUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","SwitchProxy","TemporaryRedirect","PermanentRedirect","BadRequest","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","URITooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","addEmpty"],"mappings":"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","file":"static/js/main.b84e9dbe.chunk.js","sourcesContent":["export const getTodayDate = () => formatDate(new Date());\n\nexport function formatDate(date: Date) {\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('/');\n}\n\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\nexport const justADate = (initDate?: Date | string) => {\n  let utcMidnightDateObj: Date;\n  // if no date supplied, use Now.\n  if (!initDate) initDate = new Date();\n\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\n  } else {\n    // if init date is not already a date object, feed it to the date constructor.\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\n  }\n\n  return {\n    toISOString: () => utcMidnightDateObj.toISOString(),\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\n    addDays: (days: number) => {\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\n    },\n    toString: () => utcMidnightDateObj.toString(),\n    toLocaleDateString: (\n      locales?: string | string[] | undefined,\n      options?: Intl.DateTimeFormatOptions | undefined\n    ): string => {\n      const option = options || {};\n      option.timeZone = 'UTC';\n      const locale = locales || 'it-IT';\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\n    },\n  };\n};\n","import {\n\tFetchPairsRequest,\n\tFetchPairsResponse,\n\tSavePairResponse,\n\tSavePairRequest,\n\tDeletePairsRequest,\n\tDeletePairsResponse,\n\tFindAliasRequest,\n\tFindAliasResponse,\n\tSelectPairsResponse,\n\tSelectPairsRequest,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nconst API_VERSION = '/api/v2/pair';\nconst listAPI = (tId: number) => `${API_VERSION}/list?tId=${encodeURIComponent(tId)}`;\nconst aliasAPI = (player1Id: number, player2Id: number) =>\n\t`${API_VERSION}/alias?player1Id=${encodeURIComponent(player1Id)}&player2Id=${encodeURIComponent(player2Id)}`;\nconst selectAPI = () => `${API_VERSION}/selected`;\nconst newAPI = () => `${API_VERSION}/new`;\nconst deleteAPI = () => `${API_VERSION}/delete`;\n\nexport const fetchPairs = async ({ tId }: FetchPairsRequest) => getWrapper<FetchPairsResponse>(listAPI(tId));\nexport const findAlias = async ({ player1Id, player2Id }: FindAliasRequest) =>\n\tgetWrapper<FindAliasResponse>(aliasAPI(player1Id, player2Id));\nexport const selectPairs = async (request: SelectPairsRequest) =>\n\tputWrapper<SelectPairsRequest, SelectPairsResponse>(selectAPI(), request);\nexport const postPair = async (request: SavePairRequest) =>\n\tpostWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\n\n// FIXME: create update\nexport const updatePair = async (request: SavePairRequest) =>\n\tpostWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\nexport const deletePairs = async (request: DeletePairsRequest) =>\n\tdeleteWrapper<DeletePairsRequest, DeletePairsResponse>(deleteAPI(), request);\n","import {\n  FetchStage1Request,\n  FetchStage1Response,\n  UpdateCellRequest,\n  UpdateCellResponse,\n  UpdatePlacementRequest,\n  UpdatePlacementResponse,\n} from '../../@common/models';\nimport { rowsGenerator } from '../../components/Stage1/helper';\nimport { postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchStage1 = async ({ pairsList, stageName }: FetchStage1Request) =>\n  postWrapper<FetchStage1Request, FetchStage1Response>('/api/v1/stage1', {\n    // FIXME:\n    rows: rowsGenerator(pairsList),\n    stageName,\n    pairsList,\n  });\n\nexport const updatePlacement = async (request: UpdatePlacementRequest): Promise<UpdatePlacementResponse> =>\n  putWrapper<UpdatePlacementRequest, UpdatePlacementResponse>('/api/v1/stage1/update/placement', request);\n\nexport const updateCellStage1 = async (request: UpdateCellRequest): Promise<UpdateCellResponse> =>\n  putWrapper<UpdateCellRequest, UpdateCellResponse>('/api/v1/stage1/update/cell', request);\n","import {\n\tFetchStage2Response,\n\tFetchStage2Request,\n\tDeleteStage2Request,\n\tDeleteStage2Response,\n\tUpdateStage2CellRequest,\n\tUpdateStage2CellResponse,\n\tFetchStage2PairsResponse,\n\tFetchStage2PairsRequest,\n\tgetEmptyPair,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper } from '../../@common/utils/fetch.utils';\n\nexport const deleteStage2 = async (request: DeleteStage2Request) =>\n\tdeleteWrapper<DeleteStage2Request, DeleteStage2Response>('/api/v2/stage2', request);\n\nexport const updateCells = async (request: UpdateStage2CellRequest) =>\n\tpostWrapper<UpdateStage2CellRequest, UpdateStage2CellResponse>('/api/v2/stage2/cells', request);\n\nexport const fetchPairsStage2 = async ({ tournamentId }: FetchStage2PairsRequest) => {\n\tconst afterFetch = (response: FetchStage2PairsResponse) => ({\n\t\t...response,\n\t\tpairs: [getEmptyPair('-',tournamentId), ...response.pairs],\n\t});\n\treturn getWrapper<FetchStage2PairsResponse>(`/api/v2/stage2/pairs/${tournamentId}`, afterFetch);\n};\n\nexport const fetchStage2 = async (request: FetchStage2Request) =>\n\tpostWrapper<FetchStage2Request, FetchStage2Response>('/api/v2/stage2', request);\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {FetchPairsRequest, FetchPairsResponse, PairError} from '../../@common/models';\n\nconst actionName = '[Pair]';\n\nexport const PairAction = {\n  // Fetch Pairs\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\n    FetchPairsRequest,\n    FetchPairsResponse,\n\t\tPairError\n  >(),\n  reset: createAction(...defaultParam(actionName, 'Pair Reset'))<{}>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n\tFetchStage1Response,\n\tFetchStage1Request,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n\tSelectPairsRequest,\n\tSelectPairsResponse, Stage1Error,\n} from '../../@common/models';\nimport {defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION, defaultParam} from './constants';\n\nconst actionName = '[Stage1]';\n\nexport const Stage1Action = {\n  // Update Selected Pairs\n  updateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Selected Pairs Stage1'))<\n    SelectPairsRequest,\n    SelectPairsResponse,\n\t\tStage1Error\n  >(),\n  // watcher\n  fetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\n    FetchStage1Request,\n    FetchStage1Response,\n\t\tStage1Error\n  >(),\n  updateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\n    UpdateCellRequest,\n    UpdateCellResponse,\n\t\tStage1Error\n  >(),\n  updatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\n    UpdatePlacementRequest,\n    UpdatePlacementResponse,\n\t\tStage1Error\n    >(),\n  reloadFromServer: createAction(...defaultParam(actionName, 'Stage1 Watcher'))<{}>(),\n  resetPairs: createAction(...defaultParam(actionName, 'Stage1 Reset Pairs'))<{}>(),\n  reset: createAction(...defaultParam(actionName, 'Stage1 Reset'))<{}>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n\tFetchStage2Response,\n\tFetchStage2Request,\n\tUpdateStage2CellResponse,\n\tUpdateStage2CellRequest,\n\tDeleteStage2Request,\n\tDeleteStage2Response,\n\tStage2Error,\n} from '../../@common/models';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { ICell } from '../../@common/dto';\n\nconst actionName = '[Stage2]';\n\nexport const Stage2Action = {\n\t// get selected tournament\n\tfetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\n\t\tFetchStage2Request,\n\t\tFetchStage2Response,\n\t\tStage2Error\n\t>(),\n\tupdateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\n\t\tUpdateStage2CellRequest,\n\t\tUpdateStage2CellResponse,\n\t\tStage2Error\n\t>(),\n\tdelete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\n\t\tDeleteStage2Request,\n\t\tDeleteStage2Response,\n\t\tStage2Error\n\t>(),\n\tsetCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\n\tsetLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\n\treset: createAction(...defaultParam(actionName, 'Stage2 Reset'))<{}>(),\n\tpurge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const TournamentSelector = {\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\n};\n","export function getRandomIntInclusive(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nexport function getBaseLog(x: number, y: number) {\n  return Math.log(y) / Math.log(x);\n}\n\nexport const phoneRegExp = new RegExp('^d{10}$');\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\nexport const emailRegExp = new RegExp(\n  // eslint-disable-next-line quotes\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n);\n","export interface PlayerDTO {\n  id: number | null;\n  name: string;\n  surname: string;\n  alias: string;\n  label: string;\n  role: PlayerRole;\n  email: string;\n  phone: string;\n  userId?: number;\n  match_played?: number;\n  match_won?: number;\n  total_score?: number;\n  editable: boolean;\n  rowNumber: number;\n}\n\nexport enum PlayerRole {\n  NotAPlayer = 'Non sono un giocatore',\n  GoalKeeper = 'Portiere',\n  Master = 'Master',\n  Striker = 'Attaccante',\n}\n","export interface TournamentDTO {\n  id: number;\n  name: string;\n  date: Date;\n  progress: TournamentProgress;\n  public: boolean;\n  autoOrder: boolean;\n  label: string;\n  ownerId: number;\n}\n\nexport enum TournamentProgress {\n  New = 'new',\n  PairsSelection = 'pairsSelection',\n  Stage1 = 'stage1',\n  Stage2 = 'stage2',\n}\n","import { PlayerDTO } from '.';\n\nexport interface UserDTO {\n  id: number;\n  username: string;\n  name: string;\n  surname: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  birthday: Date;\n  label: string;\n  player?: PlayerDTO;\n}\nexport enum UserRole {\n  Admin = 'Admin',\n  User = 'User',\n}\n","import * as H from 'history';\nimport { PairDTO, Stage1Row } from '../dto';\nimport { GenericReponse } from './common.models';\nimport { getEmptyPlayer } from './player.model';\n\nexport interface PairState {\n\t// Pairs selected for stage1\n\tpairsList?: Array<PairDTO>;\n\t// Loading\n\tisLoading: boolean;\n\tisSaving: boolean;\n}\n\n// Requests\nexport interface FindAliasRequest {\n\tplayer1Id: number;\n\tplayer2Id: number;\n}\nexport interface FetchPairsRequest {\n\ttId: number;\n\thistory?: H.History<unknown>;\n}\nexport interface DeletePairsRequest {\n\tpairsList: Array<PairDTO>;\n}\nexport interface SavePairRequest {\n\tpair: PairDTO;\n}\nexport interface SelectPairsRequest {\n\tstage1Name: string;\n\tstage1Rows: Array<Stage1Row>;\n}\n// Response\nexport interface FindAliasResponse extends GenericReponse {\n\talias: string;\n}\nexport interface FetchPairsResponse extends GenericReponse {\n\tpairsList: Array<PairDTO>;\n}\nexport interface DeletePairsResponse extends GenericReponse {\n\tpairsList: Array<PairDTO>;\n}\nexport interface SavePairResponse extends GenericReponse {\n\tpair: PairDTO;\n}\nexport interface SelectPairsResponse extends GenericReponse {\n\tstage1Name: string;\n\tstage1Rows: Array<Stage1Row>;\n}\n\nexport interface PairError extends GenericReponse {}\n\nexport const getEmptyPair = (label?: string, tournamentId = 0): PairDTO => ({\n\tid: null,\n\ttournamentId,\n\trowNumber: 0,\n\tplayer1: getEmptyPlayer(),\n\tplayer2: getEmptyPlayer(),\n\talias: label || '',\n\tstage1Name: '',\n\tplacement: 0,\n\tpaid1: false,\n\tpaid2: false,\n});\n","import { PairDTO, Stage1Row } from '../../@common/dto';\n\n/**\n *\n * @param value il valore di partenza\n * @returns il valore opposto a quello di partenze\n *\n *  3->0 , 2->1 , 1->2 , 0->3\n */\nexport function getOpposite(value: string | null) {\n  /*\n   * Attenzione :\n   *  !0 = true\n   *  !''  = true\n   *  !null   = true\n   *  !undefined  = true\n   */\n  if (value === null) return null;\n  switch (parseInt(value)) {\n    case 3:\n      return 0;\n    case 2:\n      return 1;\n    case 1:\n      return 2;\n    case 0:\n      return 3;\n    default:\n      return null;\n  }\n}\n\n/**\n * @param {*} obj1\n * @param {*} obj2\n */\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\n  // in caso di parità valuto scontro diretto\n  if (obj1.total === obj2.total) {\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n  return obj2.total - obj1.total;\n}\n\n/**\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\n * Inoltre viene passata al BE per salvare i dati sul DB.\n *\n * @param pairsList PairDTO[] Lista di coppie\n *\n */\nexport const rowsGenerator = (pairsList: Array<PairDTO>): Array<Stage1Row> =>\n  pairsList.map((e, ii) => {\n    const row: Stage1Row = {\n      id: `row-${e.tournamentId}-${ii}`,\n      rowNumber: ii + 1,\n      pair: e,\n      total: 0,\n      placement: e.placement || 0,\n    };\n    for (let jj = 1; jj <= pairsList.length; jj++) {\n      row[`col${jj}`] = null;\n    }\n    return row;\n  });\n","import { TypeConstant } from 'typesafe-actions';\n\nexport const Request = 'Request';\nexport const Success = 'Success';\nexport const Failure = 'Failure';\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\n\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\n  `${actionName} ${name} ${Request}`,\n  `${actionName} ${name} ${Success}`,\n  `${actionName} ${name} ${Failure}`,\n];\n\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\n\nexport interface PurgeResponse {}\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  CheckAuthenticationRequest,\n  WatchSessionRequest,\n  AuthenticationError,\n  AuthenticationResponse,\n  LoginRequest,\n  RegistrationRequest,\n  LogoutRequest,\n  DeleteUserRequest,\n  UpdateUserRequest,\n  UnsubscribeResponse,\n  UnsubscribeRequest,\n} from '../../@common/models/auth.model';\n\nconst actionName = '[Session]';\n\nexport const AuthAction = {\n  unsubscribe: createAsyncAction(...defaultAsyncParams(actionName, 'Unsubscribe User'))<\n    UnsubscribeRequest,\n    UnsubscribeResponse,\n    AuthenticationError\n  >(),\n  // Register new user\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\n    RegistrationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Login\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\n    LoginRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\n    LogoutRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\n    DeleteUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\n    UpdateUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Check if user is already authenticate\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\n    CheckAuthenticationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Session watcher\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\n    WatchSessionRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n\n  // set selected tournament\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","//-----------------------------\n// Fetch utils\n//\nimport { GenericReponse, OmitHistory, UnexpectedServerError } from '../models/common.models';\nimport { toast } from 'react-toastify';\n\n//\nexport const default_headers: HeadersInit = {\n\t'Content-Type': 'application/json',\n\t// credentials: 'same-origin',\n};\n\ninterface IFetchCallback<T> {\n\t(response: T): T | Promise<T>;\n}\n\n// Get\nexport const getWrapper = <T extends GenericReponse>(url: string, afterResponse?: IFetchCallback<T>) =>\n\tfetchWrapper<never, T>(url, 'GET', undefined, afterResponse);\n// Delete\nexport const deleteWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'DELETE', body, afterResponse);\n\n// Put\nexport const putWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'PUT', body, afterResponse);\n\n// Post\nexport const postWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'POST', body, afterResponse);\n\n// wrapper\nexport const fetchWrapper = async <B, T extends GenericReponse>(\n\turl: string,\n\tmethod: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n): Promise<T | GenericReponse> => {\n\tconsole.log('fetchWrapper : ', method, url, body);\n\tlet response = null;\n\ttry {\n\t\tresponse = await fetch(url, {\n\t\t\tmethod,\n\t\t\tbody: method === 'PUT' || method === 'POST' || method === 'DELETE' ? JSON.stringify(body) : undefined,\n\t\t\theaders: default_headers,\n\t\t});\n\t\tconst result: T = await response.json();\n\t\treturn afterResponse ? afterResponse(result) : result;\n\t} catch (error) {\n\t\tconsole.group('An error occur : ');\n\t\tconsole.error('Error', error);\n\t\tconsole.error('Details : ', response);\n\t\tconsole.groupEnd();\n\t\ttoast.error('Whoooops...Something went wrong...');\n\t\t/*  FIXME:\n      Type 'GenericReponse' is not assignable to type 'T'.\n      'GenericReponse' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'GenericReponse'.\n    */\n\t\treturn UnexpectedServerError;\n\t}\n};\n","import {\n  FetchTournamentsRequest,\n  SaveTournamentRequest,\n  FetchTournamentsResponse,\n  SaveTournamentResponse,\n  UpdateTournamentRequest,\n  UpdateTournamentResponse,\n  TournamentError,\n  ReloadTournamentRequest,\n  ReloadTournamentResponse,\n} from '../../@common/models/tournament.model';\nimport { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { TournamentDTO } from '../../@common/dto';\n\nconst actionName = '[Tournament]';\n\nexport const TournamentAction = {\n  // fetch tournaments\n  reload: createAsyncAction(...defaultAsyncParams(actionName, 'Reload Tournament'))<\n    ReloadTournamentRequest,\n    ReloadTournamentResponse,\n\t\tTournamentError\n  >(),\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\n    FetchTournamentsRequest,\n    FetchTournamentsResponse,\n\t\tTournamentError\n  >(),\n  // set selected tournament\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\n  // save a new tournament\n  save: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\n    SaveTournamentRequest,\n    SaveTournamentResponse,\n    TournamentError\n  >(),\n  // save a new tournament\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\n    UpdateTournamentRequest,\n    UpdateTournamentResponse,\n    TournamentError\n    >(),\n  reset: createAction(...defaultParam(actionName, 'Tournament Reset'))<{}>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { PlayerRole } from '../dto';\nimport { AuthenticationResponse, RootState } from '.';\nimport { HTTPStatusCode } from './HttpStatusCode';\nimport { TOptions } from 'i18next';\n\nexport enum SessionStatus {\n\t//\n\tHEARTBEAT = 'heartbeat',\n\t// Sessione scaduta, reindirizza l'utente alla login\n\tSESSION_EXPIRED = 'session_expired',\n\t// Aggiornamento torneo\n\tTOURNAMENT_NEW = 'tournament_new',\n\tTOURNAMENT_UPDATE = 'tournament_update',\n\tTOURNAMENT_DELETE = 'tournament_delete',\n\t// Aggiornamento dati su Stage1\n\tSTAGE1_UPDATE = 'stage1_update',\n\tSTAGE1_DELETE = 'stage1_delete',\n\t// Aggiornamento dati su Stage2\n\tSTAGE2_UPDATE = 'stage2_update',\n\tSTAGE2_DELETE = 'stage2_delete',\n}\n\nexport interface Message {\n\tstatus: SessionStatus;\n\tdata?: {\n\t\ttournamentId?: number;\n\t\tname?: string;\n\t\tdate?: Date;\n\t};\n\tlabel?: string;\n}\n\nexport type I18nLabel = {\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n};\n\nexport enum Environment {\n\tdevelopment = 'development',\n\ttest = 'test',\n\tproduction = 'production',\n}\n\nexport interface GenericReponse {\n\tcode: HTTPStatusCode;\n\tmessage: string;\n\tuserMessage: UserMessage;\n}\n\nexport enum UserMessageType {\n\tSuccess = 'success',\n\tWarning = 'warning',\n\tDanger = 'danger',\n}\n\nexport interface UserMessage {\n\ttype: UserMessageType;\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n}\n\nexport type OmitHistory<T> = Omit<T, 'history'>;\n// FIXME:\nexport type OmitGeneric<T extends GenericReponse> = Omit<T, 'code' | 'message' | 'userMessage'>;\n// FIXME: UNUSED\nexport type PickGeneric<T extends GenericReponse> = Pick<T, 'code' | 'message' | 'userMessage'>;\n\nexport const UnexpectedServerError: GenericReponse = {\n\tcode: HTTPStatusCode.InternalServerError,\n\tmessage: 'Unexpected Server Error',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'common:server.unexpected',\n\t},\n};\n\nexport const Unauthorized: AuthenticationResponse = {\n\tuser: undefined,\n\tcode: HTTPStatusCode.Unauthorized,\n\tmessage: 'Unauthorized!',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'auth:expired',\n\t},\n};\n\nexport const initialState: RootState = {\n\ttournamentState: {\n\t\ttournament: null,\n\t\ttournamentsList: [],\n\t\tisLoading: false,\n\t},\n\tplayerState: {\n\t\tisLoading: false,\n\t\tplayersList: [],\n\t\tisSaving: false,\n\t},\n\tpairState: {\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t},\n\tauthState: {\n\t\tisAuthenticated: false,\n\t\tisAdmin: false,\n\t\tisLoading: false,\n\t},\n\tstage1State: {\n\t\ttoogleRefresh: false,\n\t\tselectedPairs: [\n\t\t\t{\n\t\t\t\tid: null,\n\t\t\t\ttournamentId: 0,\n\t\t\t\trowNumber: 0,\n\t\t\t\tplayer1: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\tplayer2: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\talias: '-',\n\t\t\t\tstage1Name: '',\n\t\t\t\tplacement: 0,\n\t\t\t\tpaid1: false,\n\t\t\t\tpaid2: false,\n\t\t\t},\n\t\t],\n\t\tisLoading: false,\n\t\tstages: [],\n\t},\n\tstage2State: {\n\t\tisLoading: false,\n\t},\n};\n","import { toast } from 'react-toastify';\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          toast.warn('This web app is being served cache-first by a service worker.');\n          // TODO: show this message to user\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              toast.warn('Content is cached for offline use.');\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      toast.warn('Error during service worker registration.');\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      toast.warn('No internet connection found. App is running in offline mode.');\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer, Action } from 'typesafe-actions';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { TournamentState } from '../../@common/models/tournament.model';\n\nexport const initialTournamentState: TournamentState = {\n\ttournament: null,\n\ttournamentsList: [],\n\tisLoading: false,\n};\n\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\n\t// Request\n\t.handleAction(\n\t\t[\n\t\t\tTournamentAction.fetch.request,\n\t\t\tTournamentAction.save.request,\n\t\t\tTournamentAction.update.request,\n\t\t\tTournamentAction.reload.request,\n\t\t],\n\t\t(state) => ({\n\t\t\t...state,\n\t\t\tisLoading: true,\n\t\t})\n\t)\n\t// Failure\n\t.handleAction(\n\t\t[\n\t\t\tTournamentAction.fetch.failure,\n\t\t\tTournamentAction.save.failure,\n\t\t\tTournamentAction.update.failure,\n\t\t\tTournamentAction.reload.failure,\n\t\t],\n\t\t(state) => ({ ...state, isLoading: false })\n\t)\n\t// SUCCESS\n\t// Fetch Tournament\n\t.handleAction(TournamentAction.fetch.success, (state, { payload: { tournamentsList } }) => {\n\t\treturn {\n\t\t\ttournament:\n\t\t\t\tstate.tournament && tournamentsList && !tournamentsList.includes(state.tournament)\n\t\t\t\t\t? tournamentsList[0]\n\t\t\t\t\t: state.tournament,\n\t\t\ttournamentsList: tournamentsList || [],\n\t\t\tisLoading: false,\n\t\t};\n\t})\n\t// Set selected tournament\n\t.handleAction(TournamentAction.setTournament, (state, { payload }) => ({\n\t\t...state,\n\t\ttournament: payload,\n\t\tisLoading: false,\n\t}))\n\t// Create/Update a new tournament\n\t.handleAction(\n\t\t[TournamentAction.save.success, TournamentAction.update.success, TournamentAction.reload.success],\n\t\t(state, { payload: { tournament } }) => ({\n\t\t\t...state,\n\t\t\ttournament,\n\t\t\tisLoading: false,\n\t\t})\n\t)\n\t.handleAction(TournamentAction.reset, () => initialTournamentState)\n\t.handleAction(TournamentAction.purge, () => initialTournamentState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PlayerState } from '../../@common/models/player.model';\nimport { PlayerAction } from '../actions/player.action';\n\nexport const initialPlayerState: PlayerState = {\n  isLoading: false,\n  isSaving: false,\n  playersList: [],\n};\n\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\n  // Request\n  .handleAction([PlayerAction.fetchPlayers.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  .handleAction(\n    [PlayerAction.savePlayer.request, PlayerAction.updatePlayer.request, PlayerAction.deletePlayers.request],\n    (state) => ({\n      ...state,\n      isLoading: true,\n      isSaving: true,\n    })\n  )\n  // Failure\n  .handleAction(\n    [\n      PlayerAction.fetchPlayers.failure,\n      PlayerAction.savePlayer.failure,\n      PlayerAction.updatePlayer.failure,\n      PlayerAction.deletePlayers.failure,\n    ],\n    (state, { payload: { message } }) => ({\n      ...state,\n      isLoading: false,\n    })\n  )\n  // Success\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\n    playersList: [player, ...state.playersList],\n    isLoading: false,\n    isSaving: false,\n\t\tplayer\n  }))\n\t.handleAction([ PlayerAction.updatePlayer.success], (state, { payload: { player } }) => ({\n\t\tplayersList: state.playersList,\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t\tplayer\n\t}))\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { playersList } }) => ({\n    playersList: state.playersList.filter((row) => !playersList.find((selectedRow) => selectedRow.id === row.id)),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { playersList } }) => ({\n    playersList: playersList.map((e, i) => ({ ...e, rowNumber: i + 1 })),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.setPlayer, (state, { payload }) => ({ ...state, player: payload }))\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PairState } from '../../@common/models';\nimport { PairAction } from '../actions';\n\nexport const initialPairState: PairState = {\n\tisLoading: false,\n\tisSaving: false,\n};\n\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\n\t// Request\n\t.handleAction([PairAction.fetch.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t// Failure\n\t.handleAction([PairAction.fetch.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Fetch Tournament\n\t.handleAction(PairAction.fetch.success, (state, { payload: { pairsList } }) => ({\n\t\tpairsList,\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t}))\n\t.handleAction(PairAction.reset, () => initialPairState)\n\t.handleAction(PairAction.purge, () => initialPairState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { AuthState } from '../../@common/models/auth.model';\nimport { AuthAction } from '../actions/auth.action';\nimport { UserRole } from '../../@common/dto';\n\nexport const initialSessionState: AuthState = {\n\tisAuthenticated: false,\n\tisAdmin: false,\n\tisLoading: false,\n};\n\nexport const SessionReducer = createReducer<AuthState, Action>(initialSessionState)\n\t// Just unsubscribe user from tournament\n\t.handleAction(AuthAction.unsubscribe.request, (state) => state)\n\t.handleAction(AuthAction.unsubscribe.failure, (state) => state)\n\t.handleAction(AuthAction.unsubscribe.success, (state) => state)\n\t// Request\n\t.handleAction(\n\t\t[\n\t\t\tAuthAction.checkAuthentication.request,\n\t\t\tAuthAction.registration.request,\n\t\t\tAuthAction.login.request,\n\t\t\tAuthAction.logout.request,\n\t\t\tAuthAction.update.request,\n\t\t\tAuthAction.delete.request,\n\t\t],\n\t\t(state) => ({ ...state, isLoading: true })\n\t)\n\t// Failure\n\t.handleAction(\n\t\t[AuthAction.checkAuthentication.failure, AuthAction.registration.failure, AuthAction.login.failure],\n\t\t() => ({\n\t\t\tisLoading: false,\n\t\t\tuser: undefined,\n\t\t\tisAdmin: false,\n\t\t\tisAuthenticated: false,\n\t\t})\n\t)\n\t.handleAction([AuthAction.logout.failure, AuthAction.update.failure, AuthAction.delete.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Success\n\t.handleAction(\n\t\t[\n\t\t\tAuthAction.checkAuthentication.success,\n\t\t\tAuthAction.registration.success,\n\t\t\tAuthAction.login.success,\n\t\t\tAuthAction.logout.success,\n\t\t\tAuthAction.update.success,\n\t\t\tAuthAction.delete.success,\n\t\t\tAuthAction.updateSession,\n\t\t],\n\t\t(state, { payload: { user } }) => ({\n\t\t\tuser,\n\t\t\tisAuthenticated: !!user,\n\t\t\tisAdmin: user ? user.role === UserRole.Admin : false,\n\t\t\tisLoading: false,\n\t\t})\n\t)\n\t.handleAction(AuthAction.purge, () => initialSessionState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { getEmptyPair, Stage1State } from '../../@common/models';\nimport { Stage1Action } from '../actions';\nimport { Stage1Row } from '../../@common/dto';\n\nconst emptyPair = getEmptyPair('-');\nexport const initialStage1State: Stage1State = {\n  toogleRefresh: false,\n  selectedPairs: [emptyPair],\n  isLoading: false,\n  stages: [],\n};\n\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\n  // SSE\n  .handleAction([Stage1Action.reloadFromServer], (state) => ({ ...state, toogleRefresh: !state.toogleRefresh }))\n  .handleAction([Stage1Action.resetPairs], (state) => ({ ...state, selectedPairs: [emptyPair] }))\n  //\n  .handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  .handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Aggiornamento valore cella/posizionamento\n  .handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\n    ...state,\n    isLoading: false,\n  }))\n  // Reperimento dati\n  .handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\n    const currentStage = state.stages.filter((s) => s.stageName === stageName);\n    const newStage =\n      currentStage && currentStage.length > 0\n        ? { ...currentStage[0], rows }\n        : { pairsList, stageName, rows, autoOrder: false, isLoading: false };\n    return {\n      ...state,\n      stages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\n      isLoading: false,\n    };\n  })\n  // Aggiornamento coppie selezionate dati vari gironi\n  .handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stage1Name, stage1Rows } }) => {\n    const selected = state.selectedRows && state.selectedRows.size > 0 ? state.selectedRows : new Map<string, Stage1Row[]>();\n    selected.set(stage1Name, stage1Rows);\n\n    const selectedPairs = state.selectedPairs\n      ? [\n          // Filtro selectedPairs\n          //  e.id === null : mantengo il placeholder\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stage1Name),\n          ...stage1Rows.map((e) => e.pair),\n        ]\n      : [...stage1Rows.map((e) => e.pair)];\n\n    return {\n      ...state,\n      selectedRows: selected,\n      selectedPairs,\n      isLoading: false,\n    };\n  })\n  .handleAction(Stage1Action.reset, () => initialStage1State)\n  .handleAction(Stage1Action.purge, () => initialStage1State);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { Stage2State } from '../../@common/models';\nimport { Stage2Action } from '../actions';\n\nexport const initialStage2State: Stage2State = {\n\tisLoading: false,\n};\n\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\n\t// Request\n\t.handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t// Failure\n\t.handleAction([Stage2Action.fetchStage2.failure], state => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Success\n\t.handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, count } }) => ({\n\t\t...state,\n\t\tcells,\n\t\tcount,\n\t\tisLoading: false,\n\t}))\n\t.handleAction([Stage2Action.delete.success], (state) => ({\n\t\t...state,\n\t\tcells: undefined,\n\t\tcount: 0,\n\t\tisLoading: false,\n\t}))\n\t.handleAction([Stage2Action.setCells], (state, { payload }) => ({\n\t\t...state,\n\t\tcells: payload,\n\t}))\n\t.handleAction([Stage2Action.setLoading], (state, { payload }) => ({\n\t\t...state,\n\t\tisLoading: payload,\n\t}))\n\t.handleAction(Stage2Action.reset, () => initialStage2State)\n\t.handleAction(Stage2Action.purge, () => initialStage2State);\n","import {\n\tDeleteTournamentRequest,\n\tDeleteTournamentResponse,\n\tFetchTournamentsRequest,\n\tFetchTournamentsResponse,\n\tReloadTournamentRequest,\n\tReloadTournamentResponse,\n\tSaveTournamentRequest,\n\tSaveTournamentResponse,\n\tUpdateTournamentRequest,\n\tUpdateTournamentResponse,\n} from '../../@common/models/tournament.model';\nimport { postWrapper, putWrapper, getWrapper, deleteWrapper } from '../../@common/utils/fetch.utils';\nimport { OmitHistory } from '../../@common/models';\n\nexport const reloadTournament = (request: ReloadTournamentRequest) =>\n\tgetWrapper<ReloadTournamentResponse>(`/api/v2/tournament/${encodeURIComponent(request.tId)}`);\n\nexport const fetchTournaments = (request: OmitHistory<FetchTournamentsRequest>) =>\n\tgetWrapper<FetchTournamentsResponse>('/api/v2/tournament/list');\n\nexport const postTournament = (request: OmitHistory<SaveTournamentRequest>) =>\n\tpostWrapper<SaveTournamentRequest, SaveTournamentResponse>('/api/v2/tournament/new', request);\n\nexport const updateTournament = (request: UpdateTournamentRequest) =>\n\tputWrapper<UpdateTournamentRequest, UpdateTournamentResponse>('/api/v2/tournament/update', request);\n\nexport const deleteTournament = (request: DeleteTournamentRequest) =>\n\tdeleteWrapper<DeleteTournamentRequest, DeleteTournamentResponse>('/api/v2/tournament/delete', request);\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpBackend from 'i18next-http-backend';\n\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\ni18n\n\t.use(HttpBackend)\n\t.use(LanguageDetector)\n\t.use(initReactI18next) // passes i18n down to react-i18next\n\t.init({\n\t\tdebug: process.env.NODE_ENV !== 'production',\n\t\t//## Langs\n\t\t// Language to use (overrides language detection)\n\t\t// lng: 'it-IT',\n\t\t// Array of allowed languages\n\t\tsupportedLngs: ['it-IT', 'en-US'],\n\t\t// Language to use if translations in user language are not available.\n\t\tfallbackLng: 'en-US',\n\n\t\t//## Namespaces\n\t\t// String or array of namespaces to load\n\t\tns: ['common', 'auth', 'tournament', 'pair','stage1','stage2'],\n\t\t// Default namespace used if not passed to translation function\n\t\tdefaultNS: 'common',\n\t\t// String or array of namespaces to lookup key if not found in given namespace.\n\t\tfallbackNS: ['common'],\n\n\t\t//## Load options\n\t\t// Array of languages to preload.\n\t\tpreload: ['it-IT'],\n\t\t/**\n\t\t * Language codes to lookup, given set language is\n\t\t * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\n\t\t * 'currentOnly' --> 'en-US',\n\t\t * 'languageOnly' --> 'en'\n\t\t */\n\t\tload: 'currentOnly',\n\t\tinterpolation: {\n\t\t\t// react already safes from xss\n\t\t\tescapeValue: false,\n\t\t},\n\t\tbackend: {\n\t\t\tloadPath: '/locales/{{lng}}/{{ns}}.json',\n\t\t},\n\t});\n\nexport default i18n;\n\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'en-US' : 'it-IT');\n","import {\n\tGenericReponse,\n\tOmitHistory,\n\tUnexpectedServerError,\n\tUserMessage,\n\tUserMessageType,\n} from '../../@common/models/common.models';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { put, call, StrictEffect } from 'redux-saga/effects';\nimport { PayloadActionCreator } from 'typesafe-actions';\nimport { toast } from 'react-toastify';\nimport i18n from '../../i18n/i18n';\n\ninterface IActionCallback<T> {\n\t(response: T): void | Promise<void> | Generator<StrictEffect, void, void>;\n}\n\nconst GeneratorFunction = function* () {/* this is a template */}.constructor;\nconst AsyncFunction = async function () {/* this is a template */}.constructor;\nconst NormalFunction = function () {/* this is a template */}.constructor;\n\nfunction* execCallBack<TRes>(callBack: IActionCallback<TRes>, response: TRes) {\n\tif (callBack instanceof GeneratorFunction) {\n\t\tconst genFunction: typeof GeneratorFunction = callBack;\n\t\tyield* genFunction(response);\n\t} else if (callBack instanceof AsyncFunction) {\n\t\tconst asyncFunction: typeof AsyncFunction = callBack;\n\t\tyield asyncFunction(response);\n\t} else {\n\t\tconst normalFunction: typeof NormalFunction = callBack;\n\t\tnormalFunction(response);\n\t}\n}\n\ninterface ActionType<TReq, TRes extends GenericReponse, TErr> {\n\trequest: PayloadActionCreator<string, TReq>;\n\tsuccess: PayloadActionCreator<string, TRes>;\n\tfailure: PayloadActionCreator<string, TErr | typeof UnexpectedServerError>;\n}\n\nexport const getMessage = (message: UserMessage) => i18n.t(message.label, message.options);\nexport const getToast = (type: UserMessageType) => {\n\tlet alert = null;\n\tswitch (type) {\n\t\tcase UserMessageType.Success:\n\t\t\talert = toast.success;\n\t\t\tbreak;\n\t\tcase UserMessageType.Warning:\n\t\t\talert = toast.warn;\n\t\t\tbreak;\n\t\tcase UserMessageType.Danger:\n\t\t\talert = toast.error;\n\t\t\tbreak;\n\t}\n\treturn alert;\n};\nexport function* entityLifeCycle<TReq, TRes extends GenericReponse, TErr extends GenericReponse>(\n\taction: ActionType<TReq, TRes, TErr>,\n\tmethod: (p: OmitHistory<TReq>) => TRes | Promise<TRes | typeof UnexpectedServerError>,\n\tpayload: OmitHistory<TReq>,\n\tonSuccess?: IActionCallback<TRes>,\n\tonFailure?: IActionCallback<TErr>,\n\tshowMessage: boolean = true\n): Generator<StrictEffect, void, any> {\n\ttry {\n\t\t// Call method with payload\n\t\tconst response: TRes | TErr = yield call(method, payload);\n\t\tconst { userMessage: message } = response;\n\n\t\tif (showMessage && message && message.label) {\n\t\t\tconst messageText = getMessage(message);\n\t\t\tgetToast(message.type)(messageText);\n\t\t}\n\n\t\t// If success\n\t\tif (SuccessCodes.includes(response.code)) {\n\t\t\tconst successRes = response as TRes;\n\t\t\t// Show success toast\n\t\t\t// Dispatch success action\n\t\t\tyield put(action.success(successRes));\n\t\t\t// Callback\n\t\t\tif (onSuccess) {\n\t\t\t\tyield* execCallBack<TRes>(onSuccess, successRes);\n\t\t\t}\n\t\t} else {\n\t\t\tconst failureRes = response as TErr;\n\t\t\t// Dispatch failure action\n\t\t\tyield put(action.failure(failureRes));\n\t\t\t// Callback\n\t\t\tif (onFailure) {\n\t\t\t\tyield* execCallBack<TErr>(onFailure, failureRes);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('entityLifeCycle.error : ', err);\n\t\tyield put(action.failure(UnexpectedServerError));\n\t}\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { fetchTournaments, postTournament, reloadTournament, updateTournament } from '../services/tournament.service';\nimport {\n\tSaveTournamentResponse,\n\tFetchTournamentsResponse,\n\tUpdateTournamentResponse,\n\tFetchTournamentsRequest,\n\tUpdateTournamentRequest,\n\tSaveTournamentRequest,\n\tTournamentError,\n\tReloadTournamentRequest,\n\tReloadTournamentResponse,\n\tRedirect,\n} from '../../@common/models/tournament.model';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { entityLifeCycle } from './utils';\n\n// FIXME: unused\nconst onSuccessRedirect = async (redirect?: Redirect) => {\n\tif (redirect) {\n\t\tredirect.history.push(redirect.path);\n\t}\n};\n\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\nfunction* fetchTournamentsSaga({ payload }: ReturnType<typeof TournamentAction.fetch.request>) {\n\tyield* entityLifeCycle<FetchTournamentsRequest, FetchTournamentsResponse, TournamentError>(\n\t\tTournamentAction.fetch,\n\t\tfetchTournaments,\n\t\tpayload,\n\t\t() => onSuccessRedirect(payload.redirect)\n\t);\n}\n\nfunction* reloadTournamentSaga({ payload }: ReturnType<typeof TournamentAction.reload.request>) {\n\tyield* entityLifeCycle<ReloadTournamentRequest, ReloadTournamentResponse, TournamentError>(\n\t\tTournamentAction.reload,\n\t\treloadTournament,\n\t\tpayload,\n\t\t() => onSuccessRedirect(payload.redirect),\n\t\tundefined,\n\t\tfalse\n\t);\n}\n\nfunction* saveTournamentSaga({ payload }: ReturnType<typeof TournamentAction.save.request>) {\n\tconst onSuccess = function* (response: SaveTournamentResponse) {\n\t\t// Reload tournament List\n\t\tyield put(TournamentAction.fetch.request({}));\n\t\t// Send user to pair page\n\t\tpayload.history.push('/tournament');\n\t};\n\tyield* entityLifeCycle<SaveTournamentRequest, SaveTournamentResponse, TournamentError>(\n\t\tTournamentAction.save,\n\t\tpostTournament,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* updateTournamentSaga({ payload }: ReturnType<typeof TournamentAction.update.request>) {\n\tyield* entityLifeCycle<UpdateTournamentRequest, UpdateTournamentResponse, TournamentError>(\n\t\tTournamentAction.update,\n\t\tupdateTournament,\n\t\tpayload\n\t);\n}\n\nexport const TournamentSagas = [\n\ttakeEvery(TournamentAction.reload.request, reloadTournamentSaga),\n\ttakeEvery(TournamentAction.fetch.request, fetchTournamentsSaga),\n\ttakeEvery(TournamentAction.save.request, saveTournamentSaga),\n\ttakeEvery(TournamentAction.update.request, updateTournamentSaga),\n];\n","import {\n\tDeletePlayersRequest,\n\tDeletePlayersResponse,\n\tFetchPlayersRequest,\n\tFetchPlayersResponse, PlayerError,\n\tSavePlayerRequest,\n\tSavePlayerResponse,\n} from '../../@common/models';\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { PlayerAction } from '../actions/player.action';\nimport { fetchPlayers, deletePlayers, savePlayer, updatePlayer } from '../services/player.service';\nimport { entityLifeCycle } from './utils';\n\nconst back = (payload: DeletePlayersRequest | SavePlayerRequest) => payload.history?.push('/player');\n\nfunction* getPlayersSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.fetchPlayers.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchPlayersRequest, FetchPlayersResponse, PlayerError>(PlayerAction.fetchPlayers, fetchPlayers, payload);\n}\n\nfunction* deletePlayersSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.deletePlayers.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<DeletePlayersRequest, DeletePlayersResponse, PlayerError>(\n    PlayerAction.deletePlayers,\n    deletePlayers,\n    payload,\n    () => back(payload)\n  );\n}\n\nfunction* savePlayerSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.savePlayer.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(PlayerAction.savePlayer, savePlayer, payload, () =>\n    back(payload)\n  );\n}\n\nfunction* updatePlayerSaga({\n  payload,\n}: ReturnType<typeof PlayerAction.updatePlayer.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(PlayerAction.updatePlayer, updatePlayer, payload,() =>\n    back(payload)\n  );\n}\n\nexport const PlayersSagas = [\n  takeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\n  takeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\n  takeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\n  takeEvery(PlayerAction.updatePlayer.request, updatePlayerSaga),\n];\n","import { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { PairAction } from '../actions';\nimport { fetchPairs } from '../services/pair.service';\nimport { FetchPairsResponse, FetchPairsRequest, PairError } from '../../@common/models';\nimport { entityLifeCycle } from './utils';\n\nfunction* getPairsSaga({ payload }: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<FetchPairsRequest, FetchPairsResponse, PairError>(\n\t\tPairAction.fetch,\n\t\tfetchPairs,\n\t\tpayload,\n\t\t() => {\n      if (payload.history) {\n        payload.history.push('/stage1');\n      }\n    }\n\t);\n}\n\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\n","import { Stage1Action } from '../actions';\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { fetchStage1, updateCellStage1, updatePlacement } from '../services/stage1.service';\nimport {\n\tFetchStage1Request,\n\tFetchStage1Response,\n\tSelectPairsRequest,\n\tSelectPairsResponse, Stage1Error,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n} from '../../@common/models';\nimport { entityLifeCycle } from './utils';\nimport { selectPairs } from '../services/pair.service';\n\nfunction* fetchSaga({ payload }: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchStage1Request, FetchStage1Response,Stage1Error>(Stage1Action.fetchStage1, fetchStage1, payload);\n}\n\nfunction* updateCellSaga({payload,}: ReturnType<typeof Stage1Action.updateCellStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdateCellRequest, UpdateCellResponse,Stage1Error>( Stage1Action.updateCellStage1, updateCellStage1,payload );\n}\n\nfunction* updatePlacementSaga({ payload }: ReturnType<typeof Stage1Action.updatePlacement.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdatePlacementRequest, UpdatePlacementResponse,Stage1Error>(Stage1Action.updatePlacement, updatePlacement, payload, undefined,undefined,false );\n}\n\nfunction* updateSelectedPairsSaga({ payload }: ReturnType<typeof Stage1Action.updateSelectedPairs.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SelectPairsRequest, SelectPairsResponse,Stage1Error>(Stage1Action.updateSelectedPairs, selectPairs, payload );\n}\n\nexport const Stage1Sagas = [\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\n];\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { Stage2Action, TournamentAction } from '../actions';\nimport { fetchStage2, updateCells, deleteStage2 } from '../services/stage2.service';\nimport {\n\tFetchStage2Response,\n\tDeleteStage2Response,\n\tDeleteStage2Request,\n\tStage2Error,\n\tFetchStage2Request,\n\tUpdateStage2CellRequest,\n\tUpdateStage2CellResponse,\n} from '../../@common/models';\nimport { TournamentSelector } from '../selectors';\nimport { TournamentProgress } from '../../@common/dto';\nimport { entityLifeCycle } from './utils';\n\nfunction* deleteStage2Saga({ payload }: ReturnType<typeof Stage2Action.delete.request>) {\n\tconst onSuccess = function* () {\n\t\tconst tournament = yield select(TournamentSelector.getTournament);\n\t\ttournament.progress = TournamentProgress.Stage1;\n\t\tyield put(TournamentAction.update.request({ tournament }));\n\t};\n\tyield* entityLifeCycle<DeleteStage2Request, DeleteStage2Response, Stage2Error>(\n\t\tStage2Action.delete,\n\t\tdeleteStage2,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* fetchStage2Saga({ payload }: ReturnType<typeof Stage2Action.fetchStage2.request>) {\n\tyield* entityLifeCycle<FetchStage2Request, FetchStage2Response, Stage2Error>(\n\t\tStage2Action.fetchStage2,\n\t\tfetchStage2,\n\t\tpayload\n\t);\n}\n\nfunction* updateCellsSaga({ payload }: ReturnType<typeof Stage2Action.updateCell.request>) {\n\tyield* entityLifeCycle<UpdateStage2CellRequest, UpdateStage2CellResponse, Stage2Error>(\n\t\tStage2Action.updateCell,\n\t\tupdateCells,\n\t\tpayload\n\t);\n}\n\nexport const Stage2Sagas = [\n\ttakeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\n\ttakeEvery(Stage2Action.updateCell.request, updateCellsSaga),\n\ttakeEvery(Stage2Action.delete.request, deleteStage2Saga),\n];\n","import {\n\tAuthenticationResponse,\n\tLoginRequest,\n\tRegistrationRequest,\n\tUpdateUserRequest,\n\tDeleteUserRequest,\n\tLogoutRequest, SessionStatus, Message, UnsubscribeRequest, UnsubscribeResponse\n} from '../../@common/models';\nimport { OmitHistory } from '../../@common/models/common.models';\nimport {putWrapper, deleteWrapper, postWrapper, getWrapper} from '../../@common/utils';\nimport {buffers, END, eventChannel} from 'redux-saga';\n\n// Update\nexport const updateUser = (updateUserRequest: OmitHistory<UpdateUserRequest>) =>\n\tputWrapper<UpdateUserRequest, AuthenticationResponse>('/api/v2/auth/update', updateUserRequest);\n// Delete\nexport const deleteUser = (deleteUserRequest: OmitHistory<DeleteUserRequest>) =>\n\tdeleteWrapper<DeleteUserRequest, AuthenticationResponse>('/api/v2/auth/delete', deleteUserRequest);\n// Login\nexport const login = (loginRequest: OmitHistory<LoginRequest>) =>\n\tpostWrapper<LoginRequest, AuthenticationResponse>('/api/v2/auth/login', loginRequest);\n// Login\nexport const logout = (logoutRequest:OmitHistory<LogoutRequest>) => getWrapper<AuthenticationResponse>('/api/v2/auth/logout');\n// Registration\nexport const registration = ( registrationRequest: OmitHistory<RegistrationRequest>) => postWrapper<RegistrationRequest, AuthenticationResponse>('/api/v2/auth/register', registrationRequest);\nexport const checkAuthentication = () => getWrapper<AuthenticationResponse>('/api/v2/auth/check');\nexport const unsubscribe = () => putWrapper<UnsubscribeRequest, UnsubscribeResponse>('/api/v2/auth/unsubscribe');\n\nexport const createSessionChannel = (channel: EventSource) =>\n\teventChannel<Message>((emitter) => {\n\t\t// Listen for open channel\n\t\tconst openListener = (event: Event) => console.log('Connected...');\n\t\t// Listen for new message\n\t\tconst messageListener = (messageEvent: MessageEvent) => {\n\t\t\tif (messageEvent) {\n\t\t\t\tconst message = JSON.parse(messageEvent.data) as Message;\n\t\t\t\temitter(message);\n\t\t\t\t// Close connection on session expires\n\t\t\t\tif (message.status === SessionStatus.SESSION_EXPIRED) {\n\t\t\t\t\tcloseConnection();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// Listen for error\n\t\tconst errorListener = (event: Event) => {\n\t\t\tconsole.error('An Error Occur: ', event);\n\t\t\temitter(END);\n\t\t\tcloseConnection();\n\t\t};\n\n\t\t// Add listener\n\t\tchannel.addEventListener('open', openListener);\n\t\tchannel.addEventListener('message', messageListener);\n\t\tchannel.addEventListener('error', errorListener);\n\t\t// Cleanup function\n\t\tconst closeConnection = () => {\n\t\t\t// Remove listener\n\t\t\tchannel.removeEventListener('open', openListener);\n\t\t\tchannel.removeEventListener('message', messageListener);\n\t\t\tchannel.removeEventListener('error', errorListener);\n\t\t\tchannel.close();\n\t\t};\n\t\treturn closeConnection;\n\t}, buffers.expanding());\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, delay, select } from 'redux-saga/effects';\nimport { AuthAction } from '../actions/auth.action';\nimport {\n\tAuthenticationError,\n\tAuthenticationResponse,\n\tCheckAuthenticationRequest,\n\tDeleteUserRequest,\n\tLoginRequest,\n\tLogoutRequest,\n\tRegistrationRequest,\n\tRegistrationResponse,\n\tUnauthorized,\n\tUnsubscribeRequest,\n\tUnsubscribeResponse,\n\tUpdateUserRequest,\n} from '../../@common/models';\nimport {\n\tcheckAuthentication,\n\tcreateSessionChannel,\n\tlogin,\n\tregistration,\n\tupdateUser,\n\tdeleteUser,\n\tlogout,\n\tunsubscribe,\n} from '../services/auth.service';\nimport { toast } from 'react-toastify';\nimport { Action } from 'typesafe-actions';\nimport { persistor } from '../store';\nimport { Stage1Action, Stage2Action, TournamentAction } from '../actions';\nimport { Message, SessionStatus, UserMessageType } from '../../@common/models/common.models';\nimport { entityLifeCycle, getToast } from './utils';\nimport i18next from '../../i18n/i18n';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { TournamentSelector } from '../selectors';\n\nfunction* checkAuthenticationSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\t//yield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<CheckAuthenticationRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.checkAuthentication,\n\t\tcheckAuthentication,\n\t\t{},\n\t\tonSuccess,\n\t\tundefined,\n\t\tfalse\n\t);\n}\n\n/*\nFIXME:\nhttps://github.com/redux-saga/redux-saga/issues/868\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\n*/\nconst showMessage = (message: Message, type: UserMessageType) => {\n\tif (message.label) {\n\t\tgetToast(type)(\n\t\t\ti18next.t(\n\t\t\t\tmessage.label,\n\t\t\t\tmessage.data?.name && message.data?.date\n\t\t\t\t\t? { tournament: `${message.data.name}@${formatDate(message.data.date)}` }\n\t\t\t\t\t: undefined\n\t\t\t)\n\t\t);\n\t}\n};\n\nfunction* watchSessionSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.sessionControl.request>): Generator<StrictEffect, void, any> {\n\ttry {\n\t\tconst eventChannel = new EventSource('/sse/v1/session');\n\t\tconst channel = yield call(createSessionChannel, eventChannel);\n\t\twhile (true) {\n\t\t\tconst message: Message = yield take(channel);\n\t\t\tconst tournament = yield select(TournamentSelector.getTournament);\n\t\t\t// https://fkhadra.github.io/react-toastify/render-what-you-want/\n\t\t\tswitch (message.status) {\n\t\t\t\t// Session\n\t\t\t\tcase SessionStatus.SESSION_EXPIRED:\n\t\t\t\t\tshowMessage(message, UserMessageType.Danger);\n\t\t\t\t\tyield delay(3000);\n\t\t\t\t\tyield put(AuthAction.logout.success(Unauthorized));\n\t\t\t\t\thistory.push('/login');\n\t\t\t\t\tpersistor.purge();\n\t\t\t\t\tbreak;\n\t\t\t\t// Tournament\n\t\t\t\tcase SessionStatus.TOURNAMENT_NEW:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.TOURNAMENT_UPDATE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(TournamentAction.reload.request({ tId: tournament.id }));\n\t\t\t\t\tbreak;\n\t\t\t\t/*\n\t\t\t\t\tcase SessionStatus.TOURNAMENT_DELETE:\n\t\t\t\t\t\ttoast.warn(i18next.t(message.label!));\n\t\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\tbreak;\n\t\t\t\t*/\n\t\t\t\t// Stage 1\n\t\t\t\tcase SessionStatus.STAGE1_UPDATE:\n\t\t\t\t\tif (message.label) {\n\t\t\t\t\t\ttoast.success(i18next.t(message.label));\n\t\t\t\t\t}\n\t\t\t\t\tyield put(Stage1Action.reloadFromServer({}));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.STAGE1_DELETE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Warning);\n\t\t\t\t\t// Reload tournament list\n\t\t\t\t\thistory.push('/');\n\t\t\t\t\tyield put(TournamentAction.reset({}));\n\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\tyield put(Stage1Action.reset({}));\n\t\t\t\t\tbreak;\n\t\t\t\t// Stage 2\n\t\t\t\tcase SessionStatus.STAGE2_UPDATE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(Stage2Action.fetchStage2.request({ tournamentId: message.data!.tournamentId! }));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.STAGE2_DELETE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Warning);\n\t\t\t\t\tyield delay(5000);\n\t\t\t\t\t// Reload only this tournament\n\t\t\t\t\tyield put(Stage2Action.reset({}));\n\t\t\t\t\tyield put(TournamentAction.reload.request({ tId: tournament.id }));\n\t\t\t\t\thistory.push('/stage1');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.log('watchSessionSaga.err : ', err);\n\t}\n}\n\n// Logout\nfunction* logoutSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.logout.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = async () => {\n\t\tawait persistor.purge();\n\t\thistory.push('/');\n\t};\n\tyield* entityLifeCycle<LogoutRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.logout,\n\t\tlogout,\n\t\t{},\n\t\tonSuccess\n\t);\n}\n\n// Login\nfunction* loginSaga({\n\tpayload: { history, ...loginRequest },\n}: ReturnType<typeof AuthAction.login.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\t// yield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<LoginRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.login,\n\t\tlogin,\n\t\tloginRequest,\n\t\tonSuccess\n\t);\n}\n\n// Registration\nfunction* registrationSaga({\n\tpayload: { history, ...registrationRequest },\n}: ReturnType<typeof AuthAction.registration.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\tyield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<RegistrationRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.registration,\n\t\tregistration,\n\t\tregistrationRequest,\n\t\tonSuccess\n\t);\n}\n\nfunction* unsubscribeSaga(payload: ReturnType<typeof AuthAction.unsubscribe.request>) {\n\tyield* entityLifeCycle<UnsubscribeRequest, UnsubscribeResponse, AuthenticationError>(\n\t\tAuthAction.unsubscribe,\n\t\tunsubscribe,\n\t\t{}\n\t);\n}\n\n// Update user\nfunction* updateUserSaga({\n\tpayload: { history, ...updateUserRequest },\n}: ReturnType<typeof AuthAction.update.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<UpdateUserRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.update,\n\t\tupdateUser,\n\t\tupdateUserRequest,\n\t\t() => history.push('/')\n\t);\n}\n\n// Delete user\nfunction* deleteUserSaga({\n\tpayload: { history, ...deleteUserRequest },\n}: ReturnType<typeof AuthAction.delete.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.logout.request({ history }));\n\t};\n\tyield* entityLifeCycle<DeleteUserRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.delete,\n\t\tdeleteUser,\n\t\tdeleteUserRequest,\n\t\tonSuccess\n\t);\n}\n\nfunction logger(action: Action<any>) {\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconsole.log('Action : ', action);\n\t}\n}\n\nexport const SessionSagas = [\n\ttakeEvery(AuthAction.unsubscribe.request, unsubscribeSaga),\n\ttakeEvery(AuthAction.logout.request, logoutSaga),\n\ttakeEvery(AuthAction.login.request, loginSaga),\n\ttakeEvery(AuthAction.update.request, updateUserSaga),\n\ttakeEvery(AuthAction.delete.request, deleteUserSaga),\n\ttakeEvery(AuthAction.registration.request, registrationSaga),\n\ttakeEvery(AuthAction.checkAuthentication.request, checkAuthenticationSaga),\n\ttakeLatest(AuthAction.sessionControl.request, watchSessionSaga),\n\ttakeEvery('*', logger),\n];\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localForage from 'localforage';\nimport { RootState } from '../@common/models';\nimport {\n  TournamentReducer,\n  PlayerReducer,\n  PairReducer,\n  SessionReducer,\n  Stage1Reducer,\n  Stage2Reducer,\n  initialTournamentState,\n  initialPairState,\n  initialPlayerState,\n  initialStage1State,\n  initialStage2State,\n  initialSessionState,\n} from './reducers';\nimport { TournamentSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas } from './sagas';\nimport { initialState } from '../@common/models/common.models';\n\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\n\n// https://github.com/rt2zz/redux-persist\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\n// custom compose for the redux devtool extension\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n      traceLimit: 25,\n    })) ||\n  compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const rootReducers: ReducersMapObject<RootState> = {\n  tournamentState: TournamentReducer,\n  playerState: PlayerReducer,\n  pairState: PairReducer,\n  authState: SessionReducer,\n  stage1State: Stage1Reducer,\n  stage2State: Stage2Reducer,\n};\n\nexport const initialStoreState: RootState = {\n  tournamentState: initialTournamentState,\n  pairState: initialPairState,\n  playerState: initialPlayerState,\n  stage1State: initialStage1State,\n  stage2State: initialStage2State,\n  authState: initialSessionState,\n};\n\n// Meet the Store\nexport const store = createStore(\n  persistReducer(\n    {\n      key: 'app',\n      storage: localForage,\n    },\n    combineReducers(rootReducers)\n  ),\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nexport const storeWithState = (preloaded: RootState = initialState) =>\n  createStore(\n    persistReducer(\n      {\n        key: 'app',\n        storage: localForage,\n      },\n\n      combineReducers(rootReducers)\n    ),\n    preloaded,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n\nexport const persistor = persistStore(store);\n\n// expose store when run in Cypress\n// https://www.cypress.io/blog/2018/11/14/testing-redux-store/\n// FIXME:\nif ((<any> window).Cypress) {\n\t(<any> window).store = store;\n}\n\n// Exec all sagas\nfunction* rootSagas() {\n  yield all([...TournamentSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas, ...Stage2Sagas, ...Stage1Sagas]);\n}\n\nsagaMiddleware.run(rootSagas);\n\n\n","export default __webpack_public_path__ + \"static/media/header.dc972d44.jpg\";","import React, { lazy } from 'react';\nimport { MaleIcon, FileMedicalIcon } from '../icons';\n\nconst lazySwagger = lazy(() => import('../../Swagger/Swagger'));\nconst lazyPlayer = lazy(() => import('../../Player/table'));\nconst lazyPlayerEdit = lazy(() => import('../../Player/edit'));\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\nconst lazyPairs = lazy(() => import('../../Pair/table'));\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\nconst lazyRedirectionControl = lazy(() =>\n\timport('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\n);\n\nexport interface ProtectedRouteProps {\n\tpath: string;\n\tlabel: string;\n\texact: boolean;\n\tcomponentToRender: React.LazyExoticComponent<React.ComponentType<any>>;\n\ticon?: React.ComponentType;\n\tvisible: boolean;\n\tindex: number;\n\tprivate: boolean;\n}\n\n// Mappatura route\nexport const routes: ProtectedRouteProps[] = [\n\t{\n\t\tpath: '/login',\n\t\tlabel: 'route.login',\n\t\texact: true,\n\t\tcomponentToRender: lazyLogin,\n\t\tvisible: false,\n\t\tprivate: false,\n\t\tindex: 0,\n\t},\n\t{\n\t\tpath: '/',\n\t\tlabel: 'route.home',\n\t\texact: true,\n\t\tcomponentToRender: lazyTournament,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 10,\n\t},\n\t{\n\t\tpath: '/tournament',\n\t\tlabel: 'route.tournament',\n\t\texact: true,\n\t\tcomponentToRender: lazyPairs,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 20,\n\t},\n\t{\n\t\tpath: '/stage1',\n\t\tlabel: 'route.stage1',\n\t\texact: true,\n\t\tcomponentToRender: lazyStage1,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 30,\n\t},\n\t{\n\t\tpath: '/player',\n\t\tlabel: 'route.player',\n\t\texact: true,\n\t\tcomponentToRender: lazyPlayer,\n\t\ticon: MaleIcon,\n\t\tvisible: true,\n\t\tprivate: true,\n\t\tindex: 40,\n\t},\n\t{\n\t\tpath: '/player/edit',\n\t\tlabel: 'route.player',\n\t\texact: true,\n\t\tcomponentToRender: lazyPlayerEdit,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 41,\n\t},\n\t{\n\t\tpath: '/user',\n\t\tlabel: 'route.user',\n\t\texact: true,\n\t\tcomponentToRender: lazyUser,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 50,\n\t},\n\t{\n\t\tpath: '/stage2',\n\t\tlabel: 'route.stage2',\n\t\texact: true,\n\t\tcomponentToRender: lazyStage2,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 60,\n\t},\n\t{\n\t\tpath: '/swagger',\n\t\tlabel: 'route.swagger',\n\t\texact: true,\n\t\tcomponentToRender: lazySwagger,\n\t\ticon: FileMedicalIcon,\n\t\tvisible: true,\n\t\tprivate: true,\n\t\tindex: 70,\n\t},\n\t// TODO: creare pagina per route not found\n\t{\n\t\tpath: '*',\n\t\tlabel: 'route.notFound',\n\t\texact: false,\n\t\tcomponentToRender: lazyRedirectionControl,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 1000,\n\t},\n];\nexport default routes;\n\nexport function getLabelByPathname(pathName: string): string {\n\tconst element = routes.find((e) => e.path === pathName);\n\treturn element ? element.label : `route ${pathName} not found!`;\n}\n\nexport function getRouteByPathname(pathName: string): ProtectedRouteProps | undefined {\n\treturn routes.find((e) => e.path === pathName);\n}\n","import React, { CSSProperties } from 'react';\nimport backgroundImage from '../../assets/header.jpg';\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport routes from '../core/routing/Routes';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\nimport { AuthAction } from '../../redux/actions';\nimport i18n, { getOtherLang } from '../../i18n/i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst applicationName = 'Calcetto C.S.M';\n\n// App header with navbar\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentHistory = useHistory();\n  const { t } = useTranslation(['common']);\n\n  const { user, isAuthenticated, isAdmin } = useSelector(AuthSelector.getSession);\n\n  const logout = () => dispatch(AuthAction.logout.request({ history: currentHistory }));\n\n  // const yellow = '#ffc107';\n  const jumboStyle: CSSProperties = {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    padding: '60px 0px 10px 0px',\n    minHeight: '28vh',\n  };\n\n  const titleStyle: CSSProperties = {\n    color: 'white',\n  };\n\n  const otherLang = getOtherLang();\n\n  return (\n    <header>\n      <Jumbotron style={jumboStyle}>\n        <h1 style={{ margin: '5vh' }}>\n          <strong style={titleStyle}>{applicationName}</strong>\n        </h1>\n        {isAuthenticated ? (\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand as={Link} to=\"/\">\n              <span>\n                <HomeIcon /> {t('route.home')}\n              </span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                {routes.map((route) =>\n                  !route.visible || (route.path === '/swagger' && !isAdmin) ? null : (\n                    <Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\n                      <span>\n                        {route.icon ? <route.icon /> : null} {t(route.label)}\n                      </span>\n                    </Nav.Link>\n                  )\n                )}\n              </Nav>\n              {user ? (\n                <>\n                  <Dropdown alignRight as={ButtonGroup}>\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }} data-cy=\"header-username\">\n                        {user.username} <UserIcon />\n                      </strong>\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" data-cy=\"header-dropdown\" />\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        as={Link}\n                        to={'/user'}\n                        eventKey=\"1\"\n                      >\n                        <span>{t('route.user')}</span>\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        onClick={() => i18n.changeLanguage(otherLang)}\n                        as=\"button\"\n                        eventKey=\"2\"\n                      >\n                        <span>\n                          <LanguageIcon /> {t(`common:lang.${otherLang}`)}\n                        </span>\n                      </Dropdown.Item>\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\n                      <Dropdown.Item\n                        className=\"default-color-white default-hover-green\"\n                        as=\"button\"\n                        onClick={logout}\n                        eventKey=\"3\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cy=\"header-user-logout\"\n                      >\n                        <span>\n                          <LogoutIcon /> <strong>{t('logout')} </strong>\n                        </span>\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </>\n              ) : null}\n            </Navbar.Collapse>\n          </Navbar>\n        ) : null}\n      </Jumbotron>\n    </header>\n  );\n};\n\nexport default Header;\n","// https://github.com/openscript/react-example-authentication-redirection\n\nimport * as React from 'react';\nimport { Route, RouteComponentProps,StaticContext} from 'react-router';\nimport { ProtectedRouteProps, getLabelByPathname } from './Routes';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, connect, useDispatch } from 'react-redux';\nimport { AuthSelector } from '../../../redux/selectors/auth.selector';\nimport { TournamentAction } from '../../../redux/actions';\n\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(AuthSelector.isAuthenticated);\n\n  // FIXME: RouteComponentProps<any, StaticContext, any>\n  return (\n    <Route\n      {...props}\n      render={(innerProps:RouteComponentProps<any, StaticContext, any>) => {\n        const { location } = innerProps;\n        console.log('ProtectedRoute : ', location);\n\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\n        if (isAuthenticated && location.pathname === '/login') {\n          console.log('ProtectedRoute => redirect to Home');\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\n        }\n\n        // Se non è una rotta protetta\n        if (!props.private) {\n          console.log('ProtectedRoute => public route : ', { ...props });\n          return <props.componentToRender {...props} />;\n        }\n\n        // Se è una rotta privata e non sono autenticato devo andare alla login\n        if (!isAuthenticated) {\n          console.log('ProtectedRoute => redirect to Login ');\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\n        }\n        /**\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\n         *\n         * Se sto andando alla home ricarico i tornei.\n         */\n        if (location.pathname === '/') {\n          console.log('ProtectedRoute : ', location.state);\n          dispatch(TournamentAction.fetch.request({}));\n        }\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\n        return <props.componentToRender {...props} />;\n      }}\n    />\n  );\n};\nexport default connect(ProtectedRoute);\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      const errorDetails =\n        process.env.NODE_ENV === 'development' ? (\n          <details className=\"preserve-space\">\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : undefined;\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { CSSProperties } from 'react';\nimport { Badge } from 'react-bootstrap';\n\ninterface AppBadgeProps {}\nconst AppBadge: React.FC<AppBadgeProps> = () => {\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\n\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: '0.1em',\n    right: '0.1em',\n  };\n  return (\n    <h4 style={style}>\n      <Badge variant=\"info\">\n        <span>v.</span>\n        <strong>{appVersion}</strong>\n        <span>\n          <i>\n            <small> @ {commitHash}</small>\n          </i>\n        </span>\n      </Badge>\n    </h4>\n  );\n};\n\nexport default AppBadge;\n","import React, { Suspense, useEffect } from 'react';\n// Components\nimport Header from '../Header/Header';\nimport { LoadingModal } from '../core/generic/Commons';\n// Routing\nimport { Switch, useHistory } from 'react-router';\nimport routes from '../core/routing/Routes';\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\nimport ErrorBoundary from '../core/errorBoundary';\n// Style\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthAction } from '../../redux/actions';\nimport { loadIcons } from '../core/icons';\n// Toasts\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './toast.css';\nimport AppBadge from './badge';\nimport { AuthSelector } from '../../redux/selectors';\n// i18n\nimport '../../i18n/i18n';\n\nloadIcons();\nconst App: React.FC = (_) => {\n  const dispatch = useDispatch();\n  const currentHistory = useHistory();\n  const isLoading = useSelector(AuthSelector.isLoading);\n\n  // Check if user is already logged\n  useEffect(() => {\n    dispatch(AuthAction.checkAuthentication.request({ history: currentHistory }));\n  }, [currentHistory, dispatch]);\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        {/* Loading translations */}\n        <Suspense fallback={<LoadingModal />}>\n          <Header />\n        </Suspense>\n        <Container fluid style={{ marginBottom: '20vh' }}>\n          {/*<RedirectionControl />*/}\n          <ToastContainer autoClose={3000} data-cy=\"toast-container\"/>\n          {isLoading ? (\n            // Loading store\n            <LoadingModal />\n          ) : (\n            // Loading lazy components\n            <Suspense fallback={<LoadingModal />}>\n              <Switch>\n                {routes.map((route) => (\n                  <ProtectedRoute {...route} key={route.index} />\n                ))}\n              </Switch>\n            </Suspense>\n          )}\n          <AppBadge />\n        </Container>\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../../redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { LoadingModal } from '../core/generic/Commons';\n\nconst Application: React.FC = () => (\n  <Provider store={store}>\n    <PersistGate loading={<LoadingModal show={true} />} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n);\nconst Entry: React.FC = () =>\n  process.env.NODE_ENV !== 'production' ? (\n    <StrictMode>\n      <Application />\n    </StrictMode>\n  ) : (\n    <Application />\n  );\n\nexport default Entry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'typeface-roboto';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport it from 'date-fns/locale/it';\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\n\nimport Entry from './components/App/Entry';\n\nsetDefaultLocale('it');\nregisterLocale('it', it);\n\nReactDOM.render(<Entry />, document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\nserviceWorker.unregister();\n\n// Redefine console so it does not in production env\nif (process.env.NODE_ENV === 'production') {\n  if (!window.console) (window as any).console = {};\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\n}\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  FetchPlayersResponse,\n  FetchPlayersRequest,\n  SavePlayerRequest,\n  SavePlayerResponse,\n  DeletePlayersResponse,\n  DeletePlayersRequest,\n  PlayerError,\n} from '../../@common/models/player.model';\nimport { PlayerDTO } from '../../@common/dto';\n\nconst actionName = '[Player]';\nexport const PlayerAction = {\n  // set selected tournament\n  setPlayer: createAction(...defaultParam(actionName, 'Set Player'))<PlayerDTO>(),\n  // fetch tournaments\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Player'))<\n    FetchPlayersRequest,\n    FetchPlayersResponse,\n    PlayerError\n  >(),\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  updatePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Update Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\n    DeletePlayersRequest,\n    DeletePlayersResponse,\n    PlayerError\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\n// FontAwesome 5\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faSignOutAlt,\n  faUser,\n  faMale,\n  faLanguage,\n  faHome,\n  faBroom,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faTimes,\n  faToggleOff,\n  faToggleOn,\n  faPlus,\n  faTrophy,\n  faAngleDoubleRight,\n  faBan,\n  faFileMedicalAlt,\n  faEdit,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\n\nexport const loadIcons = () => {\n  library.add(\n    // Regular\n    faTrashAlt,\n    faSave,\n    // Solid\n    faSignOutAlt,\n    faUser,\n    faMale,\n    faLanguage,\n    faHome,\n    faBroom,\n    faArrowAltCircleRight,\n    faArrowAltCircleLeft,\n    faTimes,\n    faToggleOff,\n    faToggleOn,\n    faPlus,\n    faTrophy,\n    faAngleDoubleRight,\n    faBan,\n    faFileMedicalAlt,\n    faEdit\n  );\n};\n\ninterface IconProps {\n  color?: string;\n  size?: SizeProp;\n}\n\ninterface AbstractIconProps extends IconProps {\n  prefix: IconPrefix;\n  iconName: IconName;\n}\n\nconst SOLID = 'fas';\nconst REGULAR = 'far';\n\n// Wrapper per icone FontAwesome\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\n);\n\n// Regular\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\n);\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\n);\n\n// Solid\nexport const EditIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"edit\" />\n);\nexport const FileMedicalIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"file-medical-alt\" />\n);\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\n);\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\n);\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\n);\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\n);\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\n);\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\n);\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\n);\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\n);\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\n);\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\n);\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\n);\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\n);\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\n);\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\n);\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\n);\n","export * from './root.model';\nexport * from './pair.model';\nexport * from './player.model';\nexport * from './tournament.model';\nexport * from './auth.model';\nexport * from './stage1.model';\nexport * from './stage2.model';\nexport * from './common.models';\n","export * from './pair.dto';\nexport * from './player.dto';\nexport * from './stage1.dto';\nexport * from './stage2.dto';\nexport * from './tournament.dto';\nexport * from './user.dto';\n","export * from './math.utils';\nexport * from './fetch.utils';\nexport * from './date.utils';\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PairSelector = {\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\n  getPairsList: ({ pairState: { pairsList } }: RootState) => pairsList,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PlayerSelector = {\n  // Default states\n  isLoading: ({ playerState: { isLoading } }: RootState) => isLoading,\n  isSaving: ({ playerState: { isSaving } }: RootState) => isSaving,\n  // Player\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\n  getPlayer: ({ playerState: { player } }: RootState) => player,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const Stage1Selector = {\n\tisLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\n\tgetSelectedRows: (stageName:string,{ stage1State: { selectedRows } }: RootState) => selectedRows && selectedRows.size > 0 ? selectedRows.get(stageName) : null,\n\tgetSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\n\tgetToogleRefresh: ({ stage1State: { toogleRefresh } }: RootState) => toogleRefresh,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const Stage2Selector = {\n\tisLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\n\tgetCells: ({ stage2State: { cells } }: RootState) => cells,\n\tgetCount: ({ stage2State: { count } }: RootState) => count,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const AuthSelector = {\n  isLoading: ({ authState: { isLoading } }: RootState) => isLoading,\n  isAdmin: ({ authState: { isAdmin } }: RootState) => isAdmin,\n  isAuthenticated: ({ authState: { isAuthenticated } }: RootState) => isAuthenticated,\n  getUser: ({ authState: { user } }: RootState) => user,\n  getSession: ({ authState }: RootState) => authState,\n};\n","import React, { CSSProperties } from 'react';\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport './style.css';\n\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\nconst fancyModalFooter = (\n  <>\n    <Spinner animation=\"border\" variant=\"light\" />\n    <Spinner animation=\"border\" variant=\"primary\" />\n    <Spinner animation=\"border\" variant=\"secondary\" />\n    <Spinner animation=\"border\" variant=\"success\" />\n    <Spinner animation=\"border\" variant=\"danger\" />\n    <Spinner animation=\"border\" variant=\"warning\" />\n    <Spinner animation=\"border\" variant=\"info\" />\n    <Spinner animation=\"border\" variant=\"dark\" />\n  </>\n);\n// Loading Modal\ninterface LoadingModalPropsType {\n  show?: boolean;\n  title?: string;\n  message?: string;\n  onHide?: () => void;\n}\n\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\n  title = 'Caricamento....',\n  message = 'Caricamento....',\n  show = true,\n  onHide = () => (show = false),\n}) => (\n  <Modal data-cy=\"loader\" show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\n      {message}\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\nexport interface YesNoModalProps {\n  title: string;\n  show: boolean;\n  message: string;\n  onHide?: () => void;\n  onClick: () => void;\n}\n\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\n  title,\n  message,\n  show,\n  onHide = () => (show = false),\n  onClick,\n}) => (\n  <Modal\n    className=\"YesNoModal\"\n    show={show}\n    onHide={onHide}\n    centered\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\n  >\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body style={modalStyle}>\n      <Container fluid>\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\n          <Col>\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\n              Annulla\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\n              Conferma\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\n// Toasts\nexport interface IToastProps {\n  message: string;\n  type?: toastType;\n}\n\nexport type toastType = 'success' | 'warning' | 'danger';\n\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\n  message && message !== '' ? (\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\n      <Toast.Header closeButton={false}>\n        <strong>Operazione completata !</strong>\n      </Toast.Header>\n      <Toast.Body>\n        <Alert variant={type}>{message}</Alert>\n      </Toast.Body>\n    </Toast>\n  ) : null;\n\n// TODO: Componente fallback se route non trovata\nexport function RedirectionControl(props: any): JSX.Element {\n  const location = useLocation();\n  return (\n    <div>\n      <h1>\n        Current Ruote : <code>{location.pathname}</code>\n      </h1>\n    </div>\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\nexport enum HTTPStatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  Processing = 102,\n  EarlyHints = 103,\n\n  /**\n   * All `1xx` status codes.\n   */\n  InformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\n\n  OK = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  MultiStatus = 207,\n  AlreadyReported = 208,\n  IMUsed = 226,\n\n  /**\n   * All `2xx` status codes.\n   */\n  Success = OK |\n    Created |\n    Accepted |\n    NonAuthoritativeInformation |\n    NoContent |\n    ResetContent |\n    PartialContent |\n    MultiStatus |\n    AlreadyReported |\n    IMUsed,\n\n  MultipleChoices = 300,\n  MovedPermanently = 301,\n  Found = 302,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  SwitchProxy = 306,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n\n  /**\n   * All `3xx` status codes.\n   */\n  Redirection = MultipleChoices |\n    MovedPermanently |\n    Found |\n    SeeOther |\n    NotModified |\n    UseProxy |\n    SwitchProxy |\n    TemporaryRedirect |\n    PermanentRedirect,\n\n  BadRequest = 400,\n  /**\n   * The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\n   */\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  /**\n   * The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\n   * This status is similar to 401, but in this case, re-authenticating will make no difference.\n   * The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.\n   */\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  PayloadTooLarge = 413,\n  URITooLong = 414,\n  UnsupportedMediaType = 415,\n  RangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  ImATeapot = 418,\n  MisdirectedRequest = 421,\n  UnprocessableEntity = 422,\n  Locked = 423,\n  FailedDependency = 424,\n  UpgradeRequired = 426,\n  PreconditionRequired = 428,\n  TooManyRequests = 429,\n  RequestHeaderFieldsTooLarge = 431,\n  UnavailableForLegalReasons = 451,\n\n  /**\n   * All `4xx` error codes.\n   */\n  ClientErrors = BadRequest |\n    Unauthorized |\n    PaymentRequired |\n    Forbidden |\n    NotFound |\n    MethodNotAllowed |\n    NotAcceptable |\n    ProxyAuthenticationRequired |\n    RequestTimeout |\n    Conflict |\n    Gone |\n    LengthRequired |\n    PreconditionFailed |\n    PayloadTooLarge |\n    URITooLong |\n    UnsupportedMediaType |\n    RangeNotSatisfiable |\n    ExpectationFailed |\n    ImATeapot |\n    MisdirectedRequest |\n    UnprocessableEntity |\n    Locked |\n    FailedDependency |\n    UpgradeRequired |\n    PreconditionRequired |\n    TooManyRequests |\n    RequestHeaderFieldsTooLarge |\n    UnavailableForLegalReasons,\n\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HTTPVersionNotSupported = 505,\n  VariantAlsoNegotiates = 506,\n  InsufficientStorage = 507,\n  LoopDetected = 508,\n  NotExtended = 510,\n  NetworkAuthenticationRequired = 511,\n\n  /**\n   * All `5xx` error codes.\n   */\n  ServerErrors = InternalServerError |\n    NotImplemented |\n    BadGateway |\n    ServiceUnavailable |\n    GatewayTimeout |\n    HTTPVersionNotSupported |\n    VariantAlsoNegotiates |\n    InsufficientStorage |\n    LoopDetected |\n    NotExtended |\n    NetworkAuthenticationRequired,\n}\n\nexport const InformationCodes = [\n  HTTPStatusCode.Continue,\n  HTTPStatusCode.SwitchingProtocols,\n  HTTPStatusCode.Processing,\n  HTTPStatusCode.EarlyHints,\n];\nexport const SuccessCodes = [\n  HTTPStatusCode.OK,\n  HTTPStatusCode.Created,\n  HTTPStatusCode.Accepted,\n  HTTPStatusCode.NonAuthoritativeInformation,\n  HTTPStatusCode.NoContent,\n  HTTPStatusCode.ResetContent,\n  HTTPStatusCode.PartialContent,\n  HTTPStatusCode.MultiStatus,\n  HTTPStatusCode.AlreadyReported,\n  HTTPStatusCode.IMUsed,\n];\n\nexport const RedirectCodes = [\n  HTTPStatusCode.MultipleChoices,\n  HTTPStatusCode.MovedPermanently,\n  HTTPStatusCode.Found,\n  HTTPStatusCode.SeeOther,\n  HTTPStatusCode.NotModified,\n  HTTPStatusCode.UseProxy,\n  HTTPStatusCode.SwitchProxy,\n  HTTPStatusCode.TemporaryRedirect,\n  HTTPStatusCode.PermanentRedirect,\n];\n\nexport const ClientErrorsCodes = [\n  HTTPStatusCode.BadRequest,\n  HTTPStatusCode.Unauthorized,\n  HTTPStatusCode.PaymentRequired,\n  HTTPStatusCode.Forbidden,\n  HTTPStatusCode.NotFound,\n  HTTPStatusCode.MethodNotAllowed,\n  HTTPStatusCode.NotAcceptable,\n  HTTPStatusCode.ProxyAuthenticationRequired,\n  HTTPStatusCode.RequestTimeout,\n  HTTPStatusCode.Conflict,\n  HTTPStatusCode.Gone,\n  HTTPStatusCode.LengthRequired,\n  HTTPStatusCode.PreconditionFailed,\n  HTTPStatusCode.PayloadTooLarge,\n  HTTPStatusCode.URITooLong,\n  HTTPStatusCode.UnsupportedMediaType,\n  HTTPStatusCode.RangeNotSatisfiable,\n  HTTPStatusCode.ExpectationFailed,\n  HTTPStatusCode.ImATeapot,\n  HTTPStatusCode.MisdirectedRequest,\n  HTTPStatusCode.UnprocessableEntity,\n  HTTPStatusCode.Locked,\n  HTTPStatusCode.FailedDependency,\n  HTTPStatusCode.UpgradeRequired,\n  HTTPStatusCode.PreconditionRequired,\n  HTTPStatusCode.TooManyRequests,\n  HTTPStatusCode.RequestHeaderFieldsTooLarge,\n  HTTPStatusCode.UnavailableForLegalReasons,\n];\n\nexport const ServerErrorsCodes = [\n  HTTPStatusCode.InternalServerError,\n  HTTPStatusCode.NotImplemented,\n  HTTPStatusCode.BadGateway,\n  HTTPStatusCode.ServiceUnavailable,\n  HTTPStatusCode.GatewayTimeout,\n  HTTPStatusCode.HTTPVersionNotSupported,\n  HTTPStatusCode.VariantAlsoNegotiates,\n  HTTPStatusCode.InsufficientStorage,\n  HTTPStatusCode.LoopDetected,\n  HTTPStatusCode.NotExtended,\n  HTTPStatusCode.NetworkAuthenticationRequired,\n];\n","import * as H from 'history';\nimport { PlayerDTO, PlayerRole } from '../dto';\nimport { GenericReponse } from './common.models';\n//\nexport interface PlayerState {\n  player?: PlayerDTO;\n  playersList: Array<PlayerDTO>;\n  isLoading: boolean;\n  isSaving: boolean;\n}\n\n// Requests\nexport interface FetchPlayersRequest {\n  tId?: number;\n  addEmpty?: boolean;\n}\nexport interface SavePlayerRequest {\n  history?: H.History<unknown>;\n  player: PlayerDTO;\n}\nexport interface DeletePlayersRequest {\n  history?: H.History<unknown>;\n  players: Array<PlayerDTO>;\n}\n// Responses\nexport interface FetchPlayersResponse extends GenericReponse {\n  playersList: Array<PlayerDTO>;\n}\nexport interface SavePlayerResponse extends GenericReponse {\n  player: PlayerDTO;\n}\nexport interface DeletePlayersResponse extends GenericReponse {\n  playersList: Array<PlayerDTO>;\n}\n\nexport interface PlayerError extends GenericReponse {}\n\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\n  id: null,\n  name: '',\n  surname: '',\n  alias: '',\n  label: label || '',\n  role: PlayerRole.GoalKeeper,\n  email: '',\n  phone: '',\n  match_played: 0,\n  match_won: 0,\n  total_score: 0,\n  editable: false,\n  rowNumber: 0,\n});\n","import {\n\tFetchPlayersRequest,\n\tFetchPlayersResponse,\n\tDeletePlayersRequest,\n\tDeletePlayersResponse,\n\tSavePlayerResponse,\n\tSavePlayerRequest,\n\tgetEmptyPlayer,\n} from '../../@common/models';\nimport { UnexpectedServerError } from '../../@common/models/common.models';\nimport { default_headers, deleteWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\n\ttry {\n\t\tconst response = await fetch(tId ? `/api/v2/player/list/${encodeURIComponent(tId)}` : '/api/v2/player/list', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: default_headers,\n\t\t});\n\t\tconst result: FetchPlayersResponse = await response.json();\n\t\treturn {\n\t\t\t...result,\n\t\t\tplayersList: addEmpty ? [...result.playersList, getEmptyPlayer('Nessun Giocatore')] : result.playersList,\n\t\t};\n\t} catch (e) {\n\t\treturn { ...UnexpectedServerError, playersList: [] };\n\t}\n};\n\nexport const deletePlayers = async (request: DeletePlayersRequest) =>\n\tdeleteWrapper<DeletePlayersRequest, DeletePlayersResponse>('/api/v2/player/delete', request);\n\nexport const savePlayer = async (request: SavePlayerRequest) =>\n\tpostWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/new', request);\n\nexport const updatePlayer = async (request: SavePlayerRequest) =>\n\tputWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/update', request);\n"],"sourceRoot":""}