{"version":3,"sources":["selectors/tournament.selector.ts","components/Pair/helper.ts","components/Stage1/header.tsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/Stage1/wrapper.tsx"],"names":["TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","getEmptyRowModel","id","tId","rowNumber","player1","getEmptyPlayer","player2","alias","stage1Name","paid1","paid2","fetchPairs","setterFunction","a","fetch","method","headers","response","json","result","customStyles","option","provided","state","backgroundColor","color","input","control","height","marginBottom","singleValue","valueContainer","fontSize","fetchData","rows","players","console","log","tableHeader","title","saved","divStyle","undefined","style","newColumn","index","dataField","text","toString","headerStyle","column","colIndex","width","headerAlign","editable","content","row","rowIndex","columnIndex","align","cell","parseInt","editor","type","Type","SELECT","options","value","label","columns","pairsList","baseColumns","ii","length","push","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","useState","selectedRows","setSelectedRows","session","useSelector","SessionSelector","getSession","handleOnSelect","isSelected","found","find","e","filter","selectRow","mode","onSelect","onSelectAll","forEach","bootstrap4","keyField","data","cellEdit","isAdmin","cellEditFactory","blurToSave","beforeSaveCell","oldValue","newValue","startsWith","getOpposite","afterSaveCell","acc","key","sort","e1","e2","noDataIndication","wrapperClasses","headerClasses","caption","striped","hover","Stage1Handler","props","setIsLoading","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","body","JSON","stringify","ok","setTimeout","useEffect","stageName","withRouter","setPairsList","currentHistory","useHistory","tables","stage","stageList","localeCompare","element","ListGroup","Item","className","variant","renderTables","Button","onClick"],"mappings":"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","file":"static/js/12.19146d8a.chunk.js","sourcesContent":["import { RootState } from 'models/common.model';\r\nimport { TournamentDTO } from 'models/tournament.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading({ tournamentState: { isLoading } }: RootState): boolean {\r\n    return isLoading;\r\n  },\r\n  // Get selected Tournament\r\n  getTournament({ tournamentState: { tournament } }: RootState): TournamentDTO | null {\r\n    return tournament;\r\n  },\r\n  // Get tournament List\r\n  getTournamentsList({ tournamentState: { tournamentsList } }: RootState): TournamentDTO[] {\r\n    return tournamentsList;\r\n  },\r\n};\r\n","import { getEmptyPlayer } from 'services/player.service';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO } from 'models';\r\n\r\nexport function getEmptyRowModel(): PairDTO {\r\n  return {\r\n    id: null,\r\n    tId: 0,\r\n    rowNumber: 0,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    alias: '',\r\n    stage1Name: '',\r\n    paid1: false,\r\n    paid2: false,\r\n  };\r\n}\r\n\r\nexport const fetchPairs = (setterFunction: React.Dispatch<React.SetStateAction<PairDTO[]>>, tId: number) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption: PairDTO) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.alias && selectedOption.alias !== '') return `${selectedOption.alias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n\r\nexport const fetchData = async (tId: number) => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  console.log('rows : ', rows);\r\n  return { rows, players };\r\n};\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import { Type } from 'react-bootstrap-table2-editor';\r\n\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    //type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#343a40' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' },\r\n      ],\r\n    },\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  return rows;\r\n}\r\n\r\nexport const columns = (pairsList) => {\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#343a40', color: '#ffc107' };\r\n      },\r\n    },\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (parseInt(value)) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\n//\r\nimport { useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  const cellEditProps = (editable) =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        }\r\n      },\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          updateCellValue(oldValue, newValue, row, column);\r\n\r\n          // Ricalcolo totali riga\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col') && row[key]) acc += parseInt(row[key]);\r\n          rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n          //... e riga opposta\r\n          acc = 0;\r\n          for (let key in rows[parseInt(column.text) - 1])\r\n            if (key.startsWith('col') && rows[parseInt(column.text) - 1][key])\r\n              acc += parseInt(rows[parseInt(column.text) - 1][key]);\r\n          rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n        }\r\n        // Aggiorno posizione relativa\r\n        [...rows]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n      },\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    console.log('handleOnSelect : ', row);\r\n\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find((e) => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e) => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach((row) => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      bootstrap4\r\n      keyField=\"id\"\r\n      data={rows}\r\n      columns={columns}\r\n      selectRow={selectRow}\r\n      cellEdit={cellEditProps(session.isAdmin)}\r\n      noDataIndication=\"Nessun dato reperito\"\r\n      wrapperClasses=\"player-table\"\r\n      headerClasses=\"default-background default-color-yellow\"\r\n      caption={<TableHeader title={tableName} saved={saved} />}\r\n      striped\r\n      hover\r\n    />\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id,\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1),\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName }),\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\nimport { fetchPairs } from 'components/Pair/helper';\r\nimport { PairDTO } from 'models';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\n//https://medium.com/@renatognunes/react-hooks-passing-child-component-state-up-with-useref-de88401c2654\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  const [pairsList, setPairsList] = useState<PairDTO[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n\r\n  function goBack() {\r\n    currentHistory.push('/tournament');\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tournament.id!), [tournament.id]);\r\n\r\n  const tables = renderTables(pairsList);\r\n  return (\r\n    <>\r\n      <ListGroup.Item className={'inherit-background'} key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n        {/*\r\n          <Button variant=\"success\" onClick={goToStage2}>\r\n            Prosegui\r\n        </Button>\r\n        */}\r\n      </ListGroup.Item>\r\n      {tables}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Wrapper);\r\n\r\nfunction renderTables(pairsList: PairDTO[]): JSX.Element {\r\n  let stageName = '';\r\n  let stage: PairDTO[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n  // sort pairs by stage1Name\r\n  pairsList\r\n    .sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name))\r\n    // FIXME: use .reduce\r\n    .forEach((element, index) => {\r\n      // A rottura di stage1Name\r\n      if (stageName === '') stageName = element.stage1Name;\r\n      if (stageName !== element.stage1Name) {\r\n        stageList.push(\r\n          <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n            <Stage1Handler pairsList={stage} />\r\n          </ListGroup.Item>\r\n        );\r\n        stageName = element.stage1Name;\r\n        stage = [];\r\n      }\r\n      stage.push(element);\r\n    });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n"],"sourceRoot":""}