{"version":3,"sources":["components/assets/header.jpg","components/core/utils.ts","components/core/SessionContext.tsx","components/core/Commons.tsx","components/Tournament/helper.tsx","components/Player/helper.js","components/Tournament/type.ts","components/Tournament/new.tsx","components/Tournament/Tournament.jsx","components/Player/header.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/core/generic/InputHook.ts","components/Auth/Register.tsx","components/Auth/Login.tsx","components/core/Routes.ts","components/Auth/Wrapper.tsx","components/core/RedirectionControls.tsx","components/Auth/Delete.tsx","components/Header/Header.tsx","components/core/ProtectedRoute.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","RegExp","passwordRegExp","emailRegExp","initialSession","isAuthenticated","SessionContext","createContext","useSessionContext","useContext","SessionContextProvider","children","useState","sessionState","setSessionState","defaultSessionContext","useEffect","a","fetch","response","json","user","ok","console","error","log","Provider","value","isEditable","sessionContext","role","LoadingModal","message","show","onHide","Modal","size","centered","Header","closeButton","Title","Body","Footer","Spinner","animation","variant","GenericToast","type","Toast","className","key","Alert","getEmptyTournament","name","progress","id","ownerId","public","label","nameFilter","surnameFilter","aliasFilter","roleFilter","IndicatorSeparator","innerProps","style","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","cardStyle","margin","borderColor","borderWidth","TournamentProgress","NewTournament","date","setDate","visible","Form","Row","Col","md","Group","controlId","Label","Control","placeholder","as","highlightDates","locale","selected","dateFormat","onChange","newValue","custom","event","FTournament","selectedOption","setSelectedOption","tournamentList","setTournamentList","messageInitialState","setMessage","currentHistory","useHistory","setterFunction","setterFunction2","method","headers","result","found","find","e","tmp","sort","handleChange","handleCreate","newT","prevList","handleSubmit","preventDefault","body","JSON","stringify","push","status","setTimeout","Card","onSubmit","Consumer","session","components","options","isSearchable","isClearable","onCreateOption","createOptionPosition","Button","disabled","selectOptions","Portiere","Attaccante","Master","clearAllFilter","playerColumns","dataField","text","editable","headerStyle","column","colIndex","headerClasses","autoSelectText","filter","textFilter","getFilter","selectFilter","editor","Type","SELECT","getOptions","_","hidden","valueFormatter","alias","surname","getEmptyPlayer","email","phone","match_played","match_won","total_score","tableHeader","Player","props","handleOnSelect","row","isSelected","setState","state","selectedRows","cellEditProps","editabile","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","rows","isLoading","bind","deleteRow","addRow","this","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","ListGroup","horizontal","onClick","wrapperClasses","keyField","data","columns","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","getEmptyRowModel","rowNumber","tId","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","players","tournament","fetchPairs","createAlias","TableHeader","noData","optionsLength","diff","to","PairsTable","useParams","setIsLoading","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","showSuccessMessage","index","emptyRow","length","current","addMultipleRows","ii","e1","e2","localeCompare","updateOptions","player","selectedElement","newRowsElement","rowElement","handleSelect","confirmPairs","missingStage1Name","missingPairs","invalidStage","pairsInStage","reduce","allNames","stageName","MIN_PAIR_PER_STAGE","goBack","deleteStage1","setStage1Name","names","newRows","availableRows","Math","floor","accumulator","deleteDisabled","deleteTooltipMessage","span","Item","action","OverlayTrigger","placement","overlay","Tooltip","pointerEvents","display","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","title","saved","divStyle","color","undefined","PairsSelection","pairsList","setPairsList","newColumn","toString","headerAlign","cell","parseInt","baseColumns","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","Wrapper","stage","stageList","element","renderTables","Model","innerElementStyle","flexDirection","alignItems","innerParentStyle","justifyContent","alignContent","thisList","pow","useInput","initialValue","setValue","reset","playerRoles","Register","setErrorMessage","updateSessionContext","username","bindUsername","resetUsername","bindName","resetName","bindSurname","resetSurname","bindEmail","resetEmail","cEmail","bindCEmail","resetCEmail","password","bindPassword","resetPassword","cPassword","bindCPassword","resetCPassword","bindPhone","resetPhone","birthday","setBirthday","resetBirthday","playerRole","setPlayerRole","resetPlayerRole","showError","evt","test","model","required","val","styles","selectStyles","control","height","input","option","isDisabled","isFocused","singleValue","clearIndicator","indicatorSeparator","Login","routes","path","exact","ComponentToRender","register","setRegister","errorMessage","RigthArrowDefinition","findIconDefinition","prefix","iconName","buttonString","Icon","icon","modalStyle","textAlign","Container","private","Tournament","Pairs","Stage1Wrapper","PlayerTable","Stage2","location","useLocation","pathname","Delete","sm","plaintext","readOnly","defaultValue","fluid","showModalDelete","setShowModalDelete","logout","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","nameStyle","fontSize","Jumbotron","Navbar","collapseOnSelect","expand","bg","Brand","Link","Toggle","aria-controls","Collapse","Nav","route","ProtectedRoute","render","from","pathName","getLabelByPathname","library","add","fas","far","App","Boolean","window","hostname","match","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b914e5d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { createContext, useContext, useState, useEffect } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean | null;\r\n  username?: string | null;\r\n  name?: string | null;\r\n  surname?: string | null;\r\n  email?: string | null;\r\n  role?: string | null;\r\n}\r\n\r\n// https://stackoverflow.com/questions/59422159/redirecting-a-user-to-the-page-they-requested-after-successful-authentication-wi\r\n// https://github.com/openscript/react-example-authentication-redirection\r\n\r\n// https://www.freecodecamp.org/news/react-context-in-5-minutes/\r\nexport const initialSession: Session = { isAuthenticated: false };\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = ({ children }) => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch('/api/v1/auth/');\r\n        const user = await response.json();\r\n        if (user && response.ok) setSessionState({ isAuthenticated: true, ...user });\r\n        else setSessionState(initialSession);\r\n      } catch (error) {\r\n        console.error('SessionContext.error :', error);\r\n        setSessionState(initialSession);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  console.log('sessionContext.session: ', sessionState);\r\n\r\n  return (\r\n    <SessionContext.Provider value={defaultSessionContext}>{sessionState ? children : null}</SessionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const isEditable = (sessionContext: Session): boolean =>\r\n  !sessionContext || !sessionContext.isAuthenticated || !sessionContext.role\r\n    ? false\r\n    : sessionContext.isAuthenticated && sessionContext.role === 'Admin';\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\n// Loading Modal\r\ntype loadingModalPropsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\nexport const LoadingModal: React.FC<loadingModalPropsType> = ({\r\n  message,\r\n  show,\r\n  onHide = () => (show = false)\r\n}: loadingModalPropsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\ntype toastPropsType = {\r\n  message: string;\r\n  type?: 'success' | 'warning' | 'danger';\r\n};\r\n\r\nexport const GenericToast: React.FC<toastPropsType> = ({ message, type }: toastPropsType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import React from 'react';\r\nimport { getTodayDate } from '../core/utils';\r\nimport { TournamentModel, TournamentProgressType, selectOptions } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = result.find(e => e.name === getTodayDate());\r\n    let tmp = found ? [found, ...result] : result;\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n\r\nexport function getEmptyTournament(name: string, progress: TournamentProgressType) {\r\n  return {\r\n    id: null,\r\n    name: name || '',\r\n    ownerId: null,\r\n    progress: progress || 'New',\r\n    public: true,\r\n    label: name || ''\r\n  };\r\n}\r\n\r\n// select helper\r\nexport function customFilter(option: selectOptions, searchText: string): boolean {\r\n  console.log('customFilter : ', option, typeof option.data);\r\n  return option.data.name ? option.data.name.toLowerCase().includes(searchText.toLowerCase()) : false;\r\n}\r\n\r\n// -------------------------------------------------\r\n// https://react-select.com/components#components\r\n// Indicator Separator\r\n\r\nexport const IndicatorSeparator = ({ innerProps }: any) => <span style={indicatorSeparatorStyle} {...innerProps} />;\r\nexport const indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\nexport const cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto',\r\n  backgroundColor: 'inherit',\r\n  borderColor: '#ffc107',\r\n  borderWidth: '3px'\r\n};\r\n/*\r\nconst formatNewLabel = inputString => (\r\n  <strong>\r\n    {inputString}\r\n    <small style={{ color: '#ccc' }}>@ New</small>\r\n  </strong>\r\n);\r\n\r\nconst formatOptionLabel = ({ name, progress, innerProps }) => (\r\n  <strong>\r\n    {name}\r\n    <small style={{ color: '#ccc' }}>@{progress}</small>\r\n  </strong>\r\n);\r\n\r\n*/\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = isEditable => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport type TournamentModel = {\r\n  id: number | null;\r\n  name: string;\r\n  ownerId: number;\r\n  progress: TournamentProgressType;\r\n  public: boolean;\r\n  pairs?: PairModel[];\r\n};\r\n\r\nexport type selectOptions = {\r\n  label: string;\r\n  value: string;\r\n  data: TournamentModel;\r\n};\r\n\r\nexport const TournamentProgress = { New: 'new', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n","import React, { useState, FormEvent } from 'react';\r\nimport { Form, InputGroup, Col, Button, Row, FormControl } from 'react-bootstrap';\r\n\r\n// Date picker\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst NewTournament = () => {\r\n  const [date, setDate] = useState<Date>(new Date());\r\n  const [visible, setVisible] = useState<FormEvent<any>>();\r\n\r\n  const onChangeVisible = (event: any) => {\r\n    console.log(event);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <Col md={7}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Nome</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Nome Torneo\" />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group>\r\n            <Form.Label>Data</Form.Label>\r\n            <Form.Control\r\n              as={() => (\r\n                <DatePicker\r\n                  highlightDates={[new Date()]}\r\n                  locale=\"it\"\r\n                  selected={date}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  onChange={newValue => setDate(newValue ? newValue : new Date())}\r\n                />\r\n              )}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n\r\n        <Col md={2}>\r\n          <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n            <Form.Label>Visibilità : {visible}</Form.Label>\r\n            <Form.Control as=\"select\" custom onChange={onChangeVisible}>\r\n              <option>Pubblico</option>\r\n              <option>Privato</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTournament;\r\n","import React, { useState, useEffect } from 'react';\r\n// React-Select\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\n// Bootstrap\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\n// Core\r\nimport { getTodayDate } from '../core/utils';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\nimport { GenericToast } from '../core/Commons';\r\n// Helper\r\nimport { fetchTournaments, getEmptyTournament, cardStyle, IndicatorSeparator } from './helper';\r\n// Types\r\nimport { TournamentProgress } from './type';\r\nimport NewTournament from './new';\r\n\r\nconst FTournament = () => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    let newT = getEmptyTournament(selectedOption);\r\n    setSelectedOption(newT);\r\n    setTournamentList(prevList => [...prevList, newT]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(getEmptyTournament(selectedOption.name, TournamentProgress.PairsSelection))\r\n    });\r\n    const result = await response.json();\r\n    if (response.ok) currentHistory.push(`/tournament/${result.id}`);\r\n    else {\r\n      if (response.status === 401) setMessage({ message: 'Non sei autorizzato', type: 'danger' });\r\n      else if (result.message) setMessage({ message: result.message, type: 'danger' });\r\n      else setMessage({ message: 'Errore interno. Riprovare piu tardi...', type: 'danger' });\r\n\r\n      setTimeout(() => setMessage(messageInitialState), 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <GenericToast message={message.message} type={message.type} />\r\n\r\n        <Card style={cardStyle}>\r\n          <Card.Header as=\"h2\">Torneo</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Scegli un torneo</Card.Title>\r\n            <NewTournament />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            {/* <NewTournament /> */\r\n            true ? (\r\n              <Form onSubmit={handleSubmit}>\r\n                <SessionContext.Consumer>\r\n                  {([session]) =>\r\n                    isEditable(session) ? (\r\n                      <CreatableSelect\r\n                        // TODO:\r\n                        //filterOption={customFilter}\r\n                        // getOptionValue={option => `${option.label}`}\r\n                        //formatCreateLabel={formatNewLabel}\r\n                        //formatOptionLabel={formatOptionLabel}\r\n                        //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n                        //\r\n                        components={{ IndicatorSeparator }}\r\n                        value={selectedOption}\r\n                        options={tournamentList}\r\n                        placeholder=\"Crea/Cerca un torneo\"\r\n                        isSearchable\r\n                        isClearable\r\n                        onChange={handleChange}\r\n                        onCreateOption={handleCreate}\r\n                        createOptionPosition={'first'}\r\n                      />\r\n                    ) : (\r\n                      <Select\r\n                        components={{ IndicatorSeparator }}\r\n                        value={selectedOption}\r\n                        options={tournamentList}\r\n                        placeholder=\"Cerca un torneo\"\r\n                        isSearchable\r\n                        isClearable\r\n                        onChange={handleChange}\r\n                      />\r\n                    )\r\n                  }\r\n                </SessionContext.Consumer>\r\n                <br></br>\r\n                <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n                  Continua\r\n                </Button>\r\n              </Form>\r\n            ) : null}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default FTournament;\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        fetch('/api/v1/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = editabile =>\r\n    cellEditFactory({\r\n      mode: editabile ? 'click' : 'none',\r\n      blurToSave: true,\r\n      autoSelectText: true,\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        (async () => {\r\n          // TODO: gestire try-catch\r\n          const response = await fetch('/api/v1/player', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row)\r\n          });\r\n          await response.json();\r\n        })();\r\n      }\r\n    });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    // console.log('Render player : ', { ...this.props });\r\n\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {([session]) => (\r\n          <>\r\n            <LoadingModal show={isLoading} message={'Caricamento'} />\r\n            <Row>\r\n              <Col>\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    {isEditable(session) ? (\r\n                      <Button variant=\"success\" onClick={addRow}>\r\n                        Aggiungi giocatore\r\n                      </Button>\r\n                    ) : null}\r\n                    {isEditable(session) ? (\r\n                      <Button variant=\"danger\" onClick={deleteRow}>\r\n                        Calcella giocatore\r\n                      </Button>\r\n                    ) : null}\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns(isEditable(session))}\r\n                    cellEdit={this.cellEditProps(isEditable(session))}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = editable =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n          <small> - {tournament?.progress}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast } from '../core/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\nconst PairsTable = () => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  console.log('render pairs table : ', tId);\r\n\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      await response.json();\r\n\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = _ => {\r\n    if (!tId) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data.tournament)\r\n    });\r\n\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament)\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  // console.log('render table : ', data);\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {([session]) => (\r\n        <Row>\r\n          <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n          <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n            <Row>\r\n              <ListGroup>\r\n                <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                  Prosegui\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                  Home\r\n                </ListGroup.Item>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"success\"\r\n                  onClick={() => addRow()}\r\n                  disabled={availableRows <= 0 || !isEditable(session)}\r\n                >\r\n                  Aggiungi Coppia\r\n                </ListGroup.Item>\r\n\r\n                <OverlayTrigger placement=\"right\" key=\"right\" overlay={<Tooltip>{deleteTooltipMessage}</Tooltip>}>\r\n                  <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                    <ListGroup.Item\r\n                      action\r\n                      variant=\"danger\"\r\n                      style={{ pointerEvents: 'none' }}\r\n                      disabled={deleteDisabled || !isEditable(session)}\r\n                    >\r\n                      Elimina Coppia {deleteDisabled}\r\n                    </ListGroup.Item>\r\n                  </span>\r\n                </OverlayTrigger>\r\n\r\n                <ListGroup.Item action variant=\"danger\" onClick={deleteStage1} disabled={!isEditable(session)}>\r\n                  Reset gironi\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }}>\r\n            <Row style={{ display: isEditable(session) ? 'flex' : 'none' }}>\r\n              <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder={\r\n                    data.rows.length < 4\r\n                      ? 'Inserisci almeno 4 coppie'\r\n                      : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                  }\r\n                  aria-label=\"Numero di gironi\"\r\n                  disabled={data.rows.length < 4}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={setStage1Name}\r\n                    disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  disabled={availableRows <= 0}\r\n                  placeholder={\r\n                    availableRows <= 0\r\n                      ? 'Numero massimo di coppie gia creato sulla base del numero di giocatori disponibili'\r\n                      : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                  }\r\n                  aria-label=\"Numero di coppie\"\r\n                  value={newRowsNumber || ''}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={e => setNewRowsNumber(availableRows)}\r\n                    disabled={newRowsNumber > availableRows}\r\n                  >\r\n                    Max\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={addMultipleRows}\r\n                    disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Row>\r\n            <Row>\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players)}\r\n                cellEdit={cellEditProps(isEditable(session))}\r\n                selectRow={selectRow}\r\n                noDataIndication={<NoData addRow={() => addRow()} optionsLength={data.players.length} />}\r\n                caption={<TableHeader tournament={data.tournament} />}\r\n                wrapperClasses=\"player-table\"\r\n                headerClasses=\"player-table-header\"\r\n                striped\r\n                hover\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }} md={2}>\r\n            <GenericToast message={message.message} type={message.type} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = editable =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n          // Aggiorno posizione relativa\r\n          [...rows]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n        }\r\n      },\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          updateCellValue(oldValue, newValue, row, column);\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n          rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n          acc = 0;\r\n          for (let key in rows[parseInt(column.text) - 1])\r\n            if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n          rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {([session]) => (\r\n        <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={rows}\r\n          columns={columns}\r\n          selectRow={selectRow}\r\n          cellEdit={cellEditProps(isEditable(session))}\r\n          noDataIndication=\"Nessun dato reperito\"\r\n          wrapperClasses=\"player-table\"\r\n          headerClasses=\"player-table-header\"\r\n          caption={<TableHeader title={tableName} saved={saved} />}\r\n          striped\r\n          hover\r\n        />\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item className={'inherit-background'} key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import { useState } from 'react';\r\n\r\n// FIXME:\r\n// https://rangle.io/blog/simplifying-controlled-inputs-with-hooks/\r\nexport const useInput = (initialValue: any) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(''),\r\n    bind: {\r\n      value,\r\n      onChange: (event: any) => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};\r\n","import { useInput } from '../core/generic/InputHook';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport React, { SetStateAction } from 'react';\r\nimport { useSessionContext } from '../core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport Select, { StylesConfig } from 'react-select';\r\nimport './style.css';\r\nimport { emailRegExp, passwordRegExp } from '../core/utils';\r\n\r\ntype PropsType = {\r\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst playerRoles = [\r\n  { value: 'No', label: 'Non sono un giocatore' },\r\n  { value: 'Portiere', label: 'Portiere' },\r\n  { value: 'Attaccante', label: 'Attaccante' },\r\n  { value: 'Master', label: 'Master' }\r\n];\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\nconst Register: React.FC<PropsType> = ({ setErrorMessage }): JSX.Element => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const { value: username, bind: bindUsername, reset: resetUsername } = useInput('');\r\n  const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n  const { value: surname, bind: bindSurname, reset: resetSurname } = useInput('');\r\n  const { value: email, bind: bindEmail, reset: resetEmail } = useInput('');\r\n  const { value: cEmail, bind: bindCEmail, reset: resetCEmail } = useInput('');\r\n  const { value: password, bind: bindPassword, reset: resetPassword } = useInput('');\r\n  const { value: cPassword, bind: bindCPassword, reset: resetCPassword } = useInput('');\r\n  const { value: phone, bind: bindPhone, reset: resetPhone } = useInput('');\r\n  const { value: birthday, setValue: setBirthday, /*bind: bindBirthday, */ reset: resetBirthday } = useInput('');\r\n  const { value: playerRole, setValue: setPlayerRole, /*bind: bindPlayerRole, */ reset: resetPlayerRole } = useInput({\r\n    value: 'No',\r\n    label: 'Non sono un giocatore'\r\n  });\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const reset = () => {\r\n    resetUsername();\r\n    resetName();\r\n    resetSurname();\r\n    resetEmail();\r\n    resetCEmail();\r\n    resetPassword();\r\n    resetCPassword();\r\n    resetPhone();\r\n    resetBirthday();\r\n    resetPlayerRole();\r\n  };\r\n\r\n  const isValid = () => {\r\n    if (!username) {\r\n      showError('Scegli uno username');\r\n      return false;\r\n    }\r\n    if (!name) {\r\n      showError('Inserire il nome');\r\n      return false;\r\n    }\r\n    if (!surname) {\r\n      showError('Inserire il cognome');\r\n      return false;\r\n    }\r\n    if (!email) {\r\n      showError('Inserire una email');\r\n      return false;\r\n    }\r\n    if (!emailRegExp.test(email)) {\r\n      showError('Inserire una email valida');\r\n      return false;\r\n    }\r\n\r\n    if (!cEmail) {\r\n      showError('Inserire la conferma email');\r\n      return false;\r\n    }\r\n    if (!emailRegExp.test(cEmail)) {\r\n      showError('Inserire una email valida');\r\n      return false;\r\n    }\r\n    if (email !== cEmail) {\r\n      showError('Le email non corrispondono');\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      showError('Inserire una password');\r\n      return false;\r\n    }\r\n    if (!passwordRegExp.test(password)) {\r\n      showError('La password non rispetta i criteri');\r\n      return false;\r\n    }\r\n    if (!cPassword) {\r\n      showError('Inserire la conferma password');\r\n      return false;\r\n    }\r\n    if (!passwordRegExp.test(cPassword)) {\r\n      showError('La password non rispetta i criteri');\r\n      return false;\r\n    }\r\n    if (password !== cPassword) {\r\n      showError('Le password non corrispondono');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (evt: React.SyntheticEvent) => {\r\n    evt.preventDefault();\r\n    if (!isValid()) return;\r\n    const model = {\r\n      username,\r\n      name,\r\n      surname,\r\n      email,\r\n      cEmail,\r\n      password,\r\n      cPassword,\r\n      phone,\r\n      birthday,\r\n      playerRole\r\n    };\r\n    try {\r\n      const response = await fetch('/api/v1/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(model),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        currentHistory.push('/');\r\n      } else {\r\n        switch (response.status) {\r\n          case 401:\r\n            showError('Utente o Password errata');\r\n            break;\r\n          case 403:\r\n            showError('Utente o Password gia registrati');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {/* Username - Name - Surname */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"username\" {...bindUsername} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nome</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Nome\" {...bindName} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"surname\">\r\n            <Form.Label>Cognome</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Cognome\" {...bindSurname} />\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n      {/* Email - Conferma Email */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Email\" {...bindEmail} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"cemail\">\r\n            <Form.Label>Conferma Email</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Conferma Email\" {...bindCEmail} />\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n      {/* Password - Conferma Password */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"cpassword\">\r\n            <Form.Label>Conferma Password</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Conferma Password\" {...bindCPassword} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={6} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <ul>\r\n            <strong>La password deve rispettare i sequenti criteri :</strong>\r\n            <li key={'pass-1'}>Almeno 1 carattere minuscolo</li>\r\n            <li key={'pass-2'}>Almeno 1 carattere maiuscolo</li>\r\n            <li key={'pass-3'}>Almeno 1 carattere numerico</li>\r\n            <li key={'pass-5'}>Tra 8 e 16 caratteri</li>\r\n          </ul>\r\n        </Col>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Col md={3}>\r\n          <Form.Group controlId=\"phone\">\r\n            <Form.Label>Telefono</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Telefono\" {...bindPhone} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group controlId=\"birthday\">\r\n            <Form.Label>Data di nascita</Form.Label>\r\n            <DatePicker\r\n              className=\"datepicker\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              required\r\n              selected={birthday}\r\n              onChange={val => setBirthday(val)}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Form.Group>\r\n            <Form.Label>Ruolo</Form.Label>\r\n            <Select\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              value={playerRole}\r\n              onChange={newValue => setPlayerRole(newValue)}\r\n              options={playerRoles}\r\n              styles={selectStyles}\r\n            />\r\n            <Form.Text className=\"text-muted color-green\">Sei un giocatore? Assegna qui il tuo ruolo.</Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n\r\n      <Button variant=\"outline-success\" type=\"submit\" size=\"lg\">\r\n        Registrati\r\n      </Button>\r\n\r\n      <Button variant=\"outline-danger\" className=\"float-right\" onClick={reset} type=\"submit\" size=\"lg\">\r\n        Reset\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst selectStyles: StylesConfig = {\r\n  control: styles => ({ ...styles, height: '38px' }),\r\n  input: styles => ({ ...styles, height: '38px' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({ ...styles, color: 'black' }),\r\n  placeholder: styles => ({ ...styles, height: '38px' }),\r\n  singleValue: (styles, { data }: any) => ({ ...styles, height: '38px' }),\r\n  clearIndicator: styles => ({ ...styles, height: '38px' }),\r\n  indicatorSeparator: styles => ({ ...styles })\r\n};\r\n","import { useInput } from '../core/generic/InputHook';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { SetStateAction } from 'react';\r\nimport { useSessionContext } from '../core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\nconst Login: React.FC<PropsType> = ({ setErrorMessage }): JSX.Element => {\r\n  const currentHistory = useHistory();\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n\r\n  const { value: username, bind: bindUsername /*reset: resetUsername*/ } = useInput('');\r\n  const { value: password, bind: bindPassword /*reset: resetPassword*/ } = useInput('');\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (evt: React.SyntheticEvent) => {\r\n    evt.preventDefault();\r\n    if (!username || username === '') {\r\n      showError('Inserire username o password');\r\n      return;\r\n    }\r\n    if (!password || password === '') {\r\n      showError('Inserire la password');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/api/v1/auth/authenticate', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ username, password }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) showError('Utente o Password errata');\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"username\">\r\n        <Form.Label>Username o Email</Form.Label>\r\n        <Form.Control required type=\"text\" placeholder=\"username o email\" {...bindUsername} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control required type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n      </Form.Group>\r\n      <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Tournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { RedirectionControl } from './RedirectionControls';\r\nimport Login from '../Auth/Wrapper';\r\n// import { OrganizationChartDemo } from '../Stage2/table';\r\n\r\nexport interface routeType {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  ComponentToRender: React.ComponentType;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n}\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/login', label: 'Login', exact: true, ComponentToRender: Login, visible: false, private: false, index: 0 },\r\n  { path: '/', label: 'Home', exact: true, ComponentToRender: Tournament, visible: false, private: true, index: 10 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    ComponentToRender: Pairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 20\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    ComponentToRender: Stage1Wrapper,\r\n    visible: false,\r\n    private: true,\r\n    index: 30\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    ComponentToRender: PlayerTable,\r\n    visible: true,\r\n    private: true,\r\n    index: 40\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    ComponentToRender: Stage2,\r\n    //ComponentToRender: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    private: true,\r\n    index: 50\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'Not Found',\r\n    exact: false,\r\n    ComponentToRender: RedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000\r\n  }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, CSSProperties } from 'react';\r\nimport { Button, Container, Alert, Card } from 'react-bootstrap';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition, findIconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst AuthWrapper: React.FC = (): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const RigthArrowDefinition: IconDefinition = findIconDefinition({\r\n    prefix: 'far',\r\n    iconName: 'arrow-alt-circle-right'\r\n  });\r\n\r\n  const title = register ? 'Registrati' : 'Login';\r\n  const body = register ? <Register setErrorMessage={setErrorMessage} /> : <Login setErrorMessage={setErrorMessage} />;\r\n  const buttonString = register ? 'Login' : 'Registrati';\r\n  const Icon = <FontAwesomeIcon icon={RigthArrowDefinition} />;\r\n  const modalStyle: CSSProperties = {\r\n    textAlign: 'left',\r\n    width: register ? '50vw' : '40vw',\r\n    height: 'auto',\r\n    margin: 'auto',\r\n    backgroundColor: '#343A40',\r\n    color: 'white'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={modalStyle}>\r\n        <Card.Header as=\"h2\">{title}</Card.Header>\r\n        <Card.Body>\r\n          <Container>\r\n            {errorMessage ? (\r\n              <Alert key={'auth-alert'} variant={'danger'}>\r\n                {errorMessage}\r\n              </Alert>\r\n            ) : null}\r\n            {body}\r\n          </Container>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"outline-warning\" onClick={() => setRegister(!register)}>\r\n            <div>\r\n              {Icon} <strong>{buttonString}</strong>\r\n            </div>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import { useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, SetStateAction } from 'react';\r\nimport { useSessionContext } from 'components/core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Container, Alert, Form, Col, Row, Button } from 'react-bootstrap';\r\nimport { useInput } from '../core/generic/InputHook';\r\n\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\nconst Delete = ({ show, onHide }: authType): JSX.Element => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { value: password, bind: bindPassword } = useInput('');\r\n\r\n  const currentHistory = useHistory();\r\n\r\n  const { email, username } = sessionContext;\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (evt: React.SyntheticEvent) => {\r\n    try {\r\n      const response = await fetch('/api/v1/auth/', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, username, password })\r\n      });\r\n      const result = await response.json();\r\n      console.log('onSubmitLogin : ', response, result);\r\n      if (response.ok && result) {\r\n        updateSessionContext({ ...sessionContext, name: '', surname: '', email: '', role: '', isAuthenticated: false });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) showError('Utente o Password errata');\r\n        else showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  const error = errorMessage ? (\r\n    <Alert key={'auth-alert'} variant={'danger'}>\r\n      {errorMessage}{' '}\r\n    </Alert>\r\n  ) : null;\r\n\r\n  const body =\r\n    !email || !username ? (\r\n      <p>\r\n        <strong>Eliminazione non possibile</strong>{' '}\r\n      </p>\r\n    ) : (\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row} controlId=\"email\">\r\n          <Form.Label column sm=\"2\">\r\n            Email\r\n          </Form.Label>\r\n          <Col sm=\"10\">\r\n            <Form.Control plaintext readOnly defaultValue={email} />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"username\">\r\n          <Form.Label column sm=\"2\">\r\n            Username\r\n          </Form.Label>\r\n          <Col sm=\"10\">\r\n            <Form.Control plaintext readOnly defaultValue={username} />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"password\">\r\n          <Form.Label column sm=\"2\">\r\n            Password\r\n          </Form.Label>\r\n          <Col sm=\"10\">\r\n            <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button size=\"lg\" variant=\"outline-danger\" type=\"submit\">\r\n          Conferma\r\n        </Button>\r\n      </Form>\r\n    );\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Elimina Utente</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          {error}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport backgroundImage from '../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button } from 'react-bootstrap';\r\nimport routes from '../core/Routes';\r\nimport { useSessionContext } from '../core/SessionContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Delete from '../Auth/Delete';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\nexport const Header: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const [showModalDelete, setShowModalDelete] = useState(false);\r\n\r\n  const logout = async () => {\r\n    const response = await fetch('/api/v1/auth/logout');\r\n    if (response.ok)\r\n      updateSessionContext({\r\n        ...sessionContext,\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        role: '',\r\n        isAuthenticated: false\r\n      });\r\n    // TODO: gestire messaggi utente\r\n  };\r\n\r\n  const yellow = '##ffc107';\r\n  const jumboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px',\r\n    minHeight: '28vh'\r\n  };\r\n\r\n  const titleStyle: CSSProperties = {\r\n    color: 'white'\r\n  };\r\n\r\n  const nameStyle: CSSProperties = {\r\n    color: yellow,\r\n    fontSize: '4vh',\r\n    padding: '0vw 2vw'\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumboStyle}>\r\n        <h1 style={{ margin: '5vh' }}>\r\n          <strong style={titleStyle}>{applicationName}</strong>\r\n        </h1>\r\n        {sessionContext.isAuthenticated ? (\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {routes.map(route =>\r\n                  route.visible ? (\r\n                    route.private && !sessionContext.isAuthenticated ? null : (\r\n                      <Nav.Link as={Link} key={route.index} to={route.path}>\r\n                        {route.label}\r\n                      </Nav.Link>\r\n                    )\r\n                  ) : null\r\n                )}\r\n              </Nav>\r\n              {sessionContext.name ? (\r\n                <>\r\n                  <Navbar.Text style={nameStyle}>\r\n                    <strong style={{ color: '#64bd9c' }}>{sessionContext.name}</strong>\r\n                  </Navbar.Text>\r\n                  <>\r\n                    <Button variant=\"outline-warning\" onClick={logout}>\r\n                      Log out\r\n                    </Button>\r\n\r\n                    <Button variant=\"outline-danger\" onClick={() => setShowModalDelete(true)}>\r\n                      Elimina Utente\r\n                    </Button>\r\n                  </>\r\n                </>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        ) : null}\r\n      </Jumbotron>\r\n      <Delete show={showModalDelete} onHide={() => setShowModalDelete(false)} />\r\n    </header>\r\n  );\r\n};\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { routeType, getLabelByPathname } from './Routes';\r\nimport { SessionContext } from './SessionContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const ProtectedRoute: React.FC<routeType> = props => (\r\n  <SessionContext.Consumer>\r\n    {([session]) => {\r\n      return (\r\n        <Route\r\n          {...props}\r\n          render={innerProps => {\r\n            const { location } = innerProps;\r\n            // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\r\n            if (session.isAuthenticated && location.pathname === '/login') {\r\n              console.log('ProtectedRoute => redirect to Home');\r\n              return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\r\n            }\r\n\r\n            // Se non è una rotta protetta\r\n            if (!props.private) {\r\n              console.log('ProtectedRoute => public route : ', { ...props });\r\n              return <props.ComponentToRender {...props} />;\r\n            }\r\n\r\n            // Se è una rotta privata e non sono autenticato devo andare alla login\r\n            if (!session.isAuthenticated) {\r\n              console.log('ProtectedRoute => redirect to Login : ', { ...session });\r\n              return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\r\n            }\r\n            /**\r\n             * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\r\n             * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\r\n             */\r\n            console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\r\n            return <props.ComponentToRender {...props} />;\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  </SessionContext.Consumer>\r\n);\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\n// Components\r\nimport { Header } from './Header/Header';\r\n// Routing\r\nimport { Switch } from 'react-router';\r\nimport routes from '../components/core/Routes';\r\nimport { ProtectedRoute } from '../components/core/ProtectedRoute';\r\n// Style\r\nimport './style/App.css';\r\nimport { Container } from 'react-bootstrap';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas, far);\r\n\r\nconst App: React.FC = _ => (\r\n  <div className=\"App\">\r\n    <Header />\r\n    <Container fluid>\r\n      {/*<RedirectionControl />*/}\r\n      <Switch>\r\n        {routes.map(route => (\r\n          <ProtectedRoute {...route} key={route.index} />\r\n        ))}\r\n      </Switch>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = _ => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = _ => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\nimport it from 'date-fns/locale/it';\r\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\r\n\r\nsetDefaultLocale('it');\r\nregisterLocale('it', it);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <SessionContextProvider>\r\n      <App />\r\n    </SessionContextProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}