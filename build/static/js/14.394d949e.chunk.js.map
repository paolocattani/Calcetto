{"version":3,"sources":["components/Player/helper.js","components/core/generic/TableHeader.tsx","components/Player/table.tsx","common.module.css"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","filterFactory","filterTableFactory","playerColumns","isAdmin","labels","addEdit","dataField","text","editable","headerStyle","column","colIndex","width","name","autoSelectText","filter","textFilter","placeholder","getFilter","surname","alias","role","selectFilter","options","PlayerRole","GoalKeeper","goalKeeper","Striker","striker","Master","master","editor","type","Type","SELECT","getOptions","value","label","email","hidden","phone","isDummyField","formatter","cell","row","Button","variant","onClick","Header","title","saved","divStyle","color","undefined","t","useTranslation","style","withRouter","dispatch","useDispatch","currentHistory","useHistory","isLoading","useSelector","PlayerSelector","AuthSelector","playersList","getPlayersList","isSaving","useState","selectedRows","setSelectedRows","useEffect","PlayerAction","fetchPlayers","request","handleOnSelect","isSelected","rows","found","find","e","id","selectRow","mode","nonSelectable","map","onSelect","onSelectAll","forEach","backgroundColor","hideSelectAll","hideSelectColumn","selectColumnStyle","checked","disabled","rowIndex","rowKey","player","console","log","setPlayer","push","deleteRow","deletePlayers","players","goBack","fieldLabels","edit","show","message","Col","Row","className","commonStyle","toolsBarContainer","toolsBar","getEmptyPlayer","clearAllFilter","length","bootstrap4","keyField","data","columns","caption","TableHeader","headerClasses","noDataIndication","striped","hover","module","exports"],"mappings":"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","file":"static/js/14.394d949e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport filterTableFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { PlayerRole } from '@common/dto';\r\nimport { EditIcon } from '../core/icons';\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter(isAdmin) {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  if (isAdmin) {\r\n    emailFilter('');\r\n    phoneFilter('');\r\n  }\r\n}\r\n\r\nexport const filterFactory = filterTableFactory();\r\n\r\n// Columns default\r\nconst playerColumns = (isAdmin, labels, addEdit) => [\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: labels.name,\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: labels.surname,\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: labels.alias,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: labels.role,\r\n    headerStyle: (column, colIndex) => ({ width: `${isAdmin ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      options: {\r\n        [PlayerRole.GoalKeeper]: labels.goalKeeper,\r\n        [PlayerRole.Striker]: labels.striker,\r\n        [PlayerRole.Master]: labels.master,\r\n      },\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: () => {\r\n        return [\r\n          { value: PlayerRole.GoalKeeper, label: labels.goalKeeper },\r\n          { value: PlayerRole.Striker, label: labels.striker },\r\n          { value: PlayerRole.Master, label: labels.master },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: labels.email,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: labels.phone,\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  // https://github.com/react-bootstrap-table/react-bootstrap-table2/blob/master/docs/columns.md#isDummyField\r\n  {\r\n    dataField: 'actions',\r\n    isDummyField: true,\r\n    text: 'Azioni',\r\n    hidden: !isAdmin,\r\n    formatter: (cell, row) => (\r\n      <Button variant=\"success\" onClick={() => addEdit(row)}>\r\n        <EditIcon />\r\n      </Button>\r\n    ),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface HeaderProps {\r\n  title: React.Component | string;\r\n  saved: boolean;\r\n}\r\nconst Header: React.FC<HeaderProps> = ({ title, saved }) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined,\r\n  };\r\n  const { t } = useTranslation(['common']);\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>{typeof title === 'string' ? t(title) : title}</b>\r\n      {saved ? <small> {`- ${t('common:saving')}...`} </small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BootstrapTable, { ColumnDescription, SelectRowProps } from 'react-bootstrap-table-next';\r\n// style\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n//\r\nimport columns, { clearAllFilter, filterFactory } from './helper';\r\nimport TableHeader from '../core/generic/TableHeader';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\n\r\nimport { PlayerAction } from 'redux/actions';\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\nimport { PlayerSelector, AuthSelector } from 'redux/selectors';\r\nimport { TrashIcon, PlusIcon, BroomIcon, HomeIcon } from '../core/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PlayerDTO } from '@common/dto';\r\n\r\ninterface PlayerProps {}\r\nconst PlayerTable: React.FC<PlayerProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const { t } = useTranslation(['common', 'player']);\r\n  // From Store\r\n  const isLoading = useSelector(PlayerSelector.isLoading);\r\n  const isAdmin = useSelector(AuthSelector.isAdmin);\r\n  const playersList = useSelector(PlayerSelector.getPlayersList);\r\n  const isSaving = useSelector(PlayerSelector.isSaving);\r\n  // Component State\r\n  const [selectedRows, setSelectedRows] = useState<PlayerDTO[]>([]);\r\n\r\n  // Effetcs\r\n  useEffect(() => {\r\n    dispatch(PlayerAction.fetchPlayers.request({}));\r\n  }, [dispatch]);\r\n\r\n  const toolsBar = () => (\r\n    <Col className={commonStyle.toolsBarContainer}>\r\n      <div className={commonStyle.toolsBar}>\r\n        <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n          <HomeIcon />\r\n          <span> {t('common:route.home')}</span>\r\n        </Button>\r\n        {isAdmin ? (\r\n          <Button variant=\"success\" onClick={() => addEdit(getEmptyPlayer())}>\r\n            <PlusIcon />\r\n            <span>{t('player:add')}</span>\r\n          </Button>\r\n        ) : null}\r\n        <Button variant=\"dark\" onClick={() => clearAllFilter(isAdmin)}>\r\n          <BroomIcon />\r\n          <span> {t('player:filter')}</span>\r\n        </Button>\r\n        {isAdmin ? (\r\n          <Button variant=\"danger\" className=\"float-right\" onClick={deleteRow} disabled={selectedRows.length === 0}>\r\n            <TrashIcon /> {selectedRows.length > 1 ? t('player:delete.multi') : t('player:delete.one')}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </Col>\r\n  );\r\n\r\n  const handleOnSelect = (row: PlayerDTO, isSelected: boolean) => {\r\n    setSelectedRows((rows) => {\r\n      const found = !!rows.find((e) => e.id === row.id);\r\n      if (isSelected) {\r\n        return found ? rows : [row, ...rows];\r\n      } else {\r\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const selectRow: SelectRowProps<PlayerDTO> = {\r\n    mode: 'checkbox',\r\n    nonSelectable: playersList.filter((e) => e.id && !e.editable).map((e) => e.id!),\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach((row) => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectAll: !playersList.find((e) => e.editable),\r\n    hideSelectColumn: !playersList.find((e) => e.editable) || !isAdmin,\r\n    selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n      playersList[rowIndex].editable ? {} : { backgroundColor: '#dc3545' },\r\n  };\r\n\r\n  const addEdit = (player: PlayerDTO) => {\r\n    console.log('addEdit : ', player);\r\n    dispatch(PlayerAction.setPlayer(player));\r\n    currentHistory.push('/player/edit');\r\n  };\r\n\r\n  const deleteRow = () => {\r\n    if (!selectedRows) return;\r\n    dispatch(PlayerAction.deletePlayers.request({ players: selectedRows }));\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const fieldLabels = {\r\n    name: t('player:field.name'),\r\n    surname: t('player:field.surname'),\r\n    alias: t('player:field.alias'),\r\n    role: t('player:field.role'),\r\n    email: t('player:field.email'),\r\n    phone: t('player:field.phone'),\r\n    filter: t('player:field.filter'),\r\n    goalKeeper: t('player:role.goalKeeper'),\r\n    striker: t('player:role.striker'),\r\n    master: t('player:role.master'),\r\n    edit: t('common:edit'),\r\n  };\r\n  return (\r\n    <>\r\n      <LoadingModal show={isLoading} message={t('common:loading')} />\r\n      <Col>\r\n        <Row>{toolsBar()}</Row>\r\n        <Row>\r\n          <Col>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={playersList}\r\n              columns={columns(isAdmin, fieldLabels, addEdit) as ColumnDescription<PlayerDTO, PlayerDTO>[]}\r\n              selectRow={selectRow}\r\n              caption={<TableHeader title={'common:route.player'} saved={isSaving} />}\r\n              filter={filterFactory}\r\n              headerClasses=\"default-background default-color-yellow\"\r\n              noDataIndication={() => <p>{t('player:data')}</p>}\r\n              striped\r\n              hover\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};"],"sourceRoot":""}