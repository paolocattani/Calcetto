{"version":3,"sources":["components/core/SessionContext.tsx","components/core/ProtectedRoute.tsx","components/Login/Login.tsx","components/core/utils.ts","components/Tournament/Tournament.jsx","components/Player/helper.js","components/Tournament/helper.ts","components/Player/header.tsx","components/core/Commons.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/core/Routes.ts","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/DELETE/Todo.tsx","components/Navbar/Navbar.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["initialSession","SessionContext","createContext","useSessionContext","useContext","ProtectedRoute","props","currentLocation","useLocation","redirectPath","redirectPathOnAuthentication","console","log","isAuthenticated","setRedirectPathOnAuthentication","pathname","authenticationPath","component","to","render","undefined","Login","sessionContext","updateSessionContext","currentHistory","useHistory","onClick","push","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","nameFilter","surnameFilter","aliasFilter","roleFilter","IndicatorsContainer","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","IndicatorSeparator","innerProps","style","cardStyle","margin","FTournament","useState","selectedOption","setSelectedOption","tournamentList","setTournamentList","useEffect","setterFunction","setterFunction2","a","fetch","method","headers","response","json","result","found","tmp","map","e","name","id","value","label","unshift","sort","handleSubmit","event","preventDefault","model","ownerId","progress","public","body","JSON","stringify","res","message","Card","Body","Title","Form","onSubmit","components","options","placeholder","isSearchable","isClearable","onChange","onCreateOption","prevList","Button","type","size","variant","disabled","clearAllFilter","dataField","text","editable","headerClasses","autoSelectText","filter","textFilter","getFilter","selectFilter","Portiere","Attaccante","Master","editor","Type","SELECT","getOptions","_","hidden","valueFormatter","alias","surname","tableHeader","LoadingModal","show","onHide","Modal","centered","Header","closeButton","Footer","Spinner","animation","SuccessToast","Toast","className","key","Alert","WarningToast","ErrorToast","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","find","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","column","rows","isLoading","bind","deleteRow","addRow","this","emptyRow","role","match_played","match_won","total_score","selectedRow","selectRow","nonSelectable","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","Row","Col","keyField","data","columns","exportCSV","ListGroup","horizontal","wrapperClasses","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","fetchData","tId","players","tournament","fetchPairs","pairAlias","rowNumber","player1","player2","createAlias","TableHeader","noData","optionsLength","diff","PairsTable","setIsLoading","successMessage","setSuccessMessage","allertMessage","setAllertMessage","errorMessage","setErrorMessage","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","useParams","showErrorMessage","setTimeout","showSuccessMessage","stage1Name","paid1","paid2","length","current","ii","e1","e2","localeCompare","updateOptions","player","selected","handleSelect","names","newRows","index","availableRows","Math","floor","reduce","accumulator","md","span","Item","action","missingStage1Name","missingPairs","invalidStage","pairsInStage","allNames","stageName","MIN_PAIR_PER_STAGE","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","selectedElement","newRowsElement","rowElement","title","saved","divStyle","color","PairsSelection","pairsList","setPairsList","baseColumns","cell","colIndex","headerAlign","toString","parseInt","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","ok","routes","path","exact","visible","Pairs","stage","stageList","element","renderTables","PlayerTable","innerElementStyle","flexDirection","alignItems","innerParentStyle","display","justifyContent","alignContent","thisList","pow","location","FNavbar","bg","route","App","defaultProtectedRouteProps","Container","fluid","Boolean","window","hostname","match","ReactDOM","defaultSessionContext","Provider","children","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8553b33f.chunk.js","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean;\r\n  redirectPathOnAuthentication?: string;\r\n}\r\n\r\nexport const initialSession: Session = {};\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = props => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  return <SessionContext.Provider value={defaultSessionContext}>{props.children}</SessionContext.Provider>;\r\n};\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router';\r\n\r\nexport interface ProtectedRouteProps extends RouteProps {\r\n  isAuthenticated: boolean;\r\n  authenticationPath: string;\r\n  redirectPathOnAuthentication: string;\r\n  setRedirectPathOnAuthentication: (path: string) => void;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = props => {\r\n  const currentLocation = useLocation();\r\n  // console.log('Current Location ', currentLocation);\r\n  let redirectPath = props.redirectPathOnAuthentication;\r\n\r\n  // FIXME:\r\n  console.log('ProtectedRoute....');\r\n  if (process.env.NODE_ENV === 'development') return <Route {...props} />;\r\n\r\n  if (!props.isAuthenticated) {\r\n    // console.log('Not Authenticated');\r\n    props.setRedirectPathOnAuthentication(currentLocation.pathname);\r\n    redirectPath = props.authenticationPath;\r\n  }\r\n\r\n  if (redirectPath !== currentLocation.pathname && !props.isAuthenticated) {\r\n    // console.log('Redirecting to : ' + redirectPath);\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n    return <Route {...props} component={renderComponent} render={undefined} />;\r\n  } else {\r\n    // console.log('Render component', props);\r\n    return <Route {...props} />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { useSessionContext } from '../core/SessionContext';\r\nimport { useHistory } from 'react-router';\r\n\r\n// TODO:\r\nexport const Login: React.FC = () => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const handleClick = () => {\r\n    updateSessionContext({ ...sessionContext, isAuthenticated: true });\r\n    currentHistory.push('/');\r\n  };\r\n\r\n  return <button onClick={handleClick}>Login</button>;\r\n};\r\n","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { components } from 'react-select';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { getTodayDate } from '../core/utils';\r\nimport { fetchTournaments } from './helper';\r\n//export default const FTournament: React.FC = () => {\r\nconst FTournament = () => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    setSelectedOption({ value: selectedOption, label: selectedOption });\r\n    setTournamentList(prevList => [...prevList, { value: selectedOption, label: selectedOption }]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const model = {\r\n      name: selectedOption.value,\r\n      ownerId: 1,\r\n      progress: 'WIP',\r\n      public: true\r\n    };\r\n    const response = await fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model)\r\n    });\r\n    const res = await response.json();\r\n    if (res.message) console.log(res.message);\r\n    currentHistory.push(`/tournament/${res.id}`);\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Body>\r\n        <Card.Title>Scegli un torneo</Card.Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <CreatableSelect\r\n            components={{ IndicatorSeparator, IndicatorsContainer }}\r\n            value={selectedOption}\r\n            options={tournamentList}\r\n            placeholder=\"Scrivi qualcosa\"\r\n            isSearchable={true}\r\n            isClearable\r\n            onChange={handleChange}\r\n            onCreateOption={handleCreate}\r\n          />\r\n          <br></br>\r\n          <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n            Continua\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// TODO:\r\n// https://react-select.com/components#components\r\nconst IndicatorsContainer = props => {\r\n  return (\r\n    <div>\r\n      {/* eslint-disable-next-line */}\r\n      <components.IndicatorsContainer {...props} />\r\n    </div>\r\n  );\r\n};\r\nconst indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => {\r\n  return <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n};\r\n\r\nconst cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto'\r\n};\r\n\r\nexport default FTournament;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns de\r\nexport default [\r\n  { dataField: 'id', text: 'ID', editable: false },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/player/list/${tId}` : '/api/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [\r\n      ...result,\r\n      {\r\n        id: null,\r\n        name: '',\r\n        surname: '',\r\n        alias: '',\r\n        label: 'Nessun Giocatore',\r\n        role: '',\r\n        match_played: 0,\r\n        match_won: 0,\r\n        total_score: 0,\r\n        editable: false\r\n      }\r\n    ];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import { getTodayDate } from '../core/utils';\r\nimport { TournamentModel } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = false;\r\n    let tmp = result.map(e => {\r\n      if (e.name === getTodayDate()) found = true;\r\n      return { id: e.id, value: e.name, label: e.name };\r\n    });\r\n    if (!found) tmp.unshift({ id: null, value: getTodayDate(), label: getTodayDate() });\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\ntype propsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\ntype toastType = {\r\n  message: string;\r\n};\r\nexport const LoadingModal: React.FC<propsType> = ({ message, show, onHide = () => (show = false) }: propsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport const SuccessToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'success-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'success'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const WarningToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'warning-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'warning'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const ErrorToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'error-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'danger'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter, ExportCSVButton } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const emptyRow = {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          role: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: true\r\n        };\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(emptyRow)\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      (async () => {\r\n        // TODO: gestire try-catch\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <LoadingModal show={isLoading} message={'Caricamento'} />\r\n        <Row>\r\n          <Col>\r\n            <ToolkitProvider keyField=\"id\" data={rows} columns={columns} exportCSV>\r\n              {props => (\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    <Button variant=\"success\" onClick={addRow}>\r\n                      Aggiungi giocatore\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={deleteRow}>\r\n                      Calcella giocatore\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n\r\n                  {/* FIXME:\r\n                  <ExportCSVButton {...props.csvProps} />\r\n                  */}\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns}\r\n                    cellEdit={this.cellEditProps}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              )}\r\n            </ToolkitProvider>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    // onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    )\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    )\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia' },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = cellEditFactory({\r\n  mode: 'click',\r\n  blurToSave: true,\r\n  afterSaveCell: (oldValue, newValue, row, column) => {\r\n    // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n    if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n    (async () => {\r\n      const response = await fetch('/api/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(row)\r\n      });\r\n      await response.json();\r\n    })();\r\n  }\r\n});\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: { id: null, alias: '', name: '', surname: '' },\r\n    player2: { id: null, alias: '', name: '', surname: '' },\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/player/list/${tId}` : '/api/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [\r\n    ...result,\r\n    {\r\n      id: null,\r\n      name: '',\r\n      surname: '',\r\n      alias: '',\r\n      label: 'Nessun Giocatore',\r\n      role: '',\r\n      match_played: 0,\r\n      match_won: 0,\r\n      total_score: 0,\r\n      editable: false\r\n    }\r\n  ];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer() {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: '',\r\n    role: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel, fetchPairs, getEmptyPlayer } from './helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, SuccessToast, WarningToast, ErrorToast } from '../core/Commons';\r\nimport './style.css';\r\n\r\nconst PairsTable = _ => {\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [allertMessage, setAllertMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  const { tId } = useParams();\r\n  let currentHistory = useHistory();\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setSuccessMessage(message);\r\n    setTimeout(() => setSuccessMessage(''), 5000);\r\n  }\r\n\r\n  async function addRow() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    for (let ii = 0; ii < newRowsNumber; ii++) await addRow();\r\n    setNewRowsNumber(0);\r\n    // fetchPairs(setRows, tId);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const emptyRow = getEmptyRowModel();\r\n      const response = await fetch('/api/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = () => {\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      setErrorMessage('Numero di coppie insufficente');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    if (!tId) {\r\n      setErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n        currentHistory.push('/');\r\n      }, 5000);\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      setErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      setErrorMessage('Specificare il numero di gironi da assegnare');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        const response = await fetch('/api/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  console.log('render table : ', data);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n        <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n          <Row>\r\n            <ListGroup>\r\n              <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                Prosegui\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                Home\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"success\" onClick={addRow} disabled={availableRows <= 0}>\r\n                Aggiungi Coppia\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"danger\" onClick={deleteRow} disabled={!(selectedRows.length > 0)}>\r\n                Elimina Coppia\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"danger\" onClick={deleteStage1}>\r\n                Reset gironi\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }}>\r\n          <Row>\r\n            <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                disabled={data.rows.length < 4}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={e => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n          <Row>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={data.rows}\r\n              columns={columns(onSelect, data.players)}\r\n              cellEdit={cellEditProps}\r\n              selectRow={selectRow}\r\n              noDataIndication={<NoData addRow={addRow} optionsLength={data.players.length} />}\r\n              caption={<TableHeader tournament={data.tournament} />}\r\n              wrapperClasses=\"player-table\"\r\n              headerClasses=\"player-table-header\"\r\n              striped\r\n              hover\r\n            />\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }} md={2}>\r\n          <SuccessToast message={successMessage} />\r\n          <WarningToast message={allertMessage} />\r\n          <ErrorToast message={errorMessage} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nexport const newColumn = (index, onChange) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    beforeSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno cella opposta\r\n        rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        // Aggiorno posizione relativa\r\n        [...rows]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n      }\r\n    },\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno dati sul Db\r\n        updateCellValue(oldValue, newValue, row, column);\r\n        let acc = 0;\r\n        for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n        rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n        acc = 0;\r\n        for (let key in rows[parseInt(column.text) - 1])\r\n          if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n        rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        bootstrap4\r\n        keyField=\"id\"\r\n        data={rows}\r\n        columns={columns}\r\n        selectRow={selectRow}\r\n        cellEdit={cellEditProps}\r\n        noDataIndication=\"Nessun dato reperito\"\r\n        wrapperClasses=\"player-table\"\r\n        headerClasses=\"player-table-header\"\r\n        caption={<TableHeader title={tableName} saved={saved} />}\r\n        striped\r\n        hover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import FTournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { OrganizationChartDemo } from '../Stage2/table';\r\n\r\n// TODO:\r\nimport * as Todo from '../DELETE/Todo';\r\n\r\ntype routeType = {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  component: any;\r\n  visible: boolean;\r\n  index: number;\r\n};\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/', label: 'Home', exact: true, component: FTournament, visible: true, index: 0 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    component: Pairs,\r\n    visible: false,\r\n    index: 10\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    component: Stage1Wrapper,\r\n    visible: false,\r\n    index: 20\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    component: PlayerTable,\r\n    visible: true,\r\n    index: 30\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    component: Stage2,\r\n    //component: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    index: 40\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  { path: '*', label: 'Not Found', exact: false, component: Todo.RedirectionControl, visible: false, index: 1000 }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair, wapperPropsType } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC<wapperPropsType> = (props: wapperPropsType): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// 404 Page\r\nexport function NoMatch(): JSX.Element {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Home(props: any): JSX.Element {\r\n  return (\r\n    <div>\r\n      <h1> HOME PAGE </h1>\r\n      <h2>Welcome </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function About(): JSX.Element {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n","// Style\r\nimport './Navbar.css';\r\n// React\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\n// import { useSessionContext } from '../core/SessionContext';\r\nimport routes from '../core/Routes';\r\n\r\nexport const FNavbar: React.FC = () => {\r\n  // const [sessionContext, updateSessionContext] = useSessionContext();\r\n  return (\r\n    <Navbar bg=\"ligth\" variant=\"light\" className=\"navbar-container\">\r\n      {/*\r\n          <Navbar.Brand href=\"#home\">\r\n        <img src={logo} alt=\"Calcetto C.S.M.\" />\r\n      </Navbar.Brand>\r\n      */}\r\n      {/* sessionContext.isAuthenticated */ true ? (\r\n        <ul className=\"navbar-list\">\r\n          {routes.map(route =>\r\n            route.visible ? (\r\n              <li key={`li-${route.index}`} className=\"navbar-list-item\">\r\n                <Link key={`link-${route.index}`} to={route.path}>\r\n                  {route.label}\r\n                </Link>\r\n              </li>\r\n            ) : null\r\n          )}\r\n        </ul>\r\n      ) : null}\r\n    </Navbar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport { useSessionContext } from '../components/core/SessionContext';\r\nimport { ProtectedRoute, ProtectedRouteProps } from '../components/core/ProtectedRoute';\r\nimport './style/App.css';\r\nimport { Login } from './Login/Login';\r\n// import { useHistory } from 'react-router-dom';\r\nimport routes from '../components/core/Routes';\r\nimport { FNavbar } from './Navbar/Navbar';\r\nimport { Container } from 'react-bootstrap';\r\nimport headerImage from './assets/header-background.jpeg';\r\nconst applicationName = 'Calcetto C.S.M';\r\n\r\nconst App: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n\r\n  const setRedirectPathOnAuthentication = (path: string) => {\r\n    updateSessionContext({ ...sessionContext, redirectPathOnAuthentication: path });\r\n  };\r\n\r\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\r\n    isAuthenticated: !!sessionContext.isAuthenticated,\r\n    authenticationPath: '/login',\r\n    redirectPathOnAuthentication: sessionContext.redirectPathOnAuthentication || '',\r\n    setRedirectPathOnAuthentication\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/** Header */}\r\n      <header className=\"app-header\">\r\n        <p>{applicationName}</p>\r\n        <FNavbar />\r\n      </header>\r\n\r\n      <br></br>\r\n      <Container fluid>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          {/* Carica dinamicamente le route a partire dall'oggetto routes ( vedi sopra ) */\r\n          routes.map(route => (\r\n            <ProtectedRoute {...route} {...defaultProtectedRouteProps} key={route.index} />\r\n          ))}\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <SessionContextProvider>\r\n      <App />\r\n    </SessionContextProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}