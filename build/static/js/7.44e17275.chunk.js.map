{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/helper.ts","components/Pair/editor.js","components/Pair/table.tsx","common.module.css","@common/constants/label.ts","components/Tournament/badge.tsx"],"names":["noop","ToggleButton","React","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","bsPrefix","size","_ref$as","useBootstrapPrefix","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","NoData","addRow","optionsLength","isEditable","t","useTranslation","players","diff","variant","onClick","current","min","to","PlayerSelection","styles","row","columnIndex","onSelect","onUpdate","options","selectedOption","setSelectedOption","option","actionMeta","id","getOptionLabel","alias","getOptionValue","toString","placeholder","isSearchable","isClearable","customStyles","provided","state","backgroundColor","color","input","control","height","marginBottom","singleValue","valueContainer","fontSize","ALIGN_CENTER","playerSelection","editorProps","rowIndex","checkBoxProps","align","headerStyle","column","colIndex","width","editor","Type","CHECKBOX","formatter","cell","formatExtraData","ButtonGroup","toggle","columns","labels","dataField","text","editable","hidden","player1","editorRenderer","player2","stage1","SELECT","toUpperCase","split","map","label","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","dispatch","useDispatch","isAdmin","useSelector","AuthSelector","tournament","TournamentSelector","getTournament","LABEL_COMMON_LOADING","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyPair","tournamentId","postPair","pair","result","rowNumber","length","p","i","ii","forEach","push","deletePairs","pairsList","filter","find","selectedRow","sort","e1","e2","localeCompare","updateOptions","player","selected","useEffect","fetchPairs","tId","fetchPlayers","addEmpty","playersList","selectedElement","Promise","all","rowElement","getEmptyPlayer","findAlias","player1Id","player2Id","code","HTTPStatusCode","OK","updatePair","newRowsElement","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","progress","TournamentProgress","Stage1","TournamentAction","update","request","PairAction","fetch","selectRow","mode","isSelected","found","onSelectAll","style","hideSelectColumn","PairsSelection","processDeleteStage1","method","headers","body","JSON","stringify","response","json","names","newRows","prevData","availableRows","Math","floor","accumulator","deleteDisabled","assignMatches","FormControl","max","step","event","Number","currentTarget","Stage2","addPairs","toolsBar","commonStyle","toolsBarContainer","Row","Col","onHide","paid1","paid2","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","headerClasses","striped","hover","module","exports","LABEL_AUTH_PASSWORD","LABEL_TOURNAMENT_SELECT","TournamentBadge","formatDate","date"],"mappings":"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","file":"static/js/7.44e17275.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\n// Componente da mostrare se non sono presenti coppie\r\nconst NoData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const { t } = useTranslation(['common', 'pair']);\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p>{`${t('pair:missing.1')}...`}</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        {t('pair:add.one')}\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>{t('pair:missing.2', { current: players, min: MIN_PLAYERS })}</p>\r\n      <p>{`${diff === 1 ? t('pair:missing.3') : t('pair:missing.4', { diff })}...`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">{t('common:root.player')}</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import { PlayerDTO } from '@common/dto';\r\nimport React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (option: ValueType<PlayerDTO>, actionMeta: ActionMeta<PlayerDTO>) => {\r\n      setSelectedOption(option as PlayerDTO);\r\n      onSelect(option, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={(option) => option.alias}\r\n        getOptionValue={(option) => option.id?.toString(10)!}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import { Styles } from 'react-select';\r\nimport { PairDTO } from '@common/dto';\r\n\r\nexport const valueFormatter = (selectedOption: PairDTO) =>\r\n  selectedOption.alias ? `${selectedOption.alias}` : createAlias(selectedOption);\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2 } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  // value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nimport { ToggleButton, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst ALIGN_CENTER = 'center';\r\nconst YES = 'Si';\r\nconst NO = 'No';\r\n\r\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\r\n  <PlayerSelect\r\n    {...editorProps}\r\n    id={columnIndex}\r\n    row={row}\r\n    rowIndex={rowIndex}\r\n    columnIndex={columnIndex}\r\n    value={value}\r\n    onSelect={onSelect}\r\n    options={options}\r\n    styles={customStyles}\r\n  />\r\n);\r\n\r\nconst checkBoxProps = {\r\n  align: () => ALIGN_CENTER,\r\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n  editor: {\r\n    type: Type.CHECKBOX,\r\n    value: `${YES}:${NO}`,\r\n  },\r\n  formatter: (cell, row, rowIndex, formatExtraData) => (\r\n    <ButtonGroup toggle className=\"mb-2\">\r\n      <ToggleButton variant={!!cell ? 'success' : 'danger'} checked={cell} value=\"1\" type=\"checkbox\">\r\n        {!!cell ? 'Pagato' : 'Non Pagato'}\r\n      </ToggleButton>\r\n    </ButtonGroup>\r\n  ),\r\n  //style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\r\n};\r\n\r\nexport const columns = (onSelect, options, labels) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: labels.player1,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: labels.player2,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: labels.alias, headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: labels.stage1,\r\n    align: () => ALIGN_CENTER,\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => ({ value: e, label: e })),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    ...checkBoxProps,\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    ...checkBoxProps,\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n// Components\r\nimport NoData from './noData';\r\n// Core / Helper / Editor\r\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\r\nimport { FormEventType } from '../core/types';\r\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\r\nimport { cellEditProps, columns } from './editor';\r\n// Style\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n// Service\r\nimport { fetchPlayers, getEmptyPlayer } from 'redux/services/player.service';\r\n// Selector\r\nimport { AuthSelector } from 'redux/selectors/auth.selector';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n// Action\r\nimport { TournamentAction, PairAction } from '../../redux/actions';\r\nimport TournamentBadge from '../Tournament/badge';\r\nimport { useTranslation } from 'react-i18next';\r\n// Models\r\nimport { PairDTO, PlayerDTO, TournamentProgress } from '@common/dto';\r\nimport {\r\n  deletePairs,\r\n  fetchPairs,\r\n  findAlias,\r\n  getEmptyPair,\r\n  postPair,\r\n  updatePair,\r\n} from 'redux/services/pair.service';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { LABEL_COMMON_LOADING } from '@common/constants/label';\r\n\r\nconst hideAskUser = {\r\n  message: '',\r\n  onClick: () => console.log(''),\r\n  show: false,\r\n  title: '',\r\n};\r\ninterface PairTableProps {}\r\n// eslint-disable-next-line sonarjs/cognitive-complexity\r\nconst PairsTable: React.FC<PairTableProps> = () => {\r\n  // Navigation\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation(['common', 'pair']);\r\n\r\n  const isAdmin = useSelector(AuthSelector.isAdmin);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: t(LABEL_COMMON_LOADING) });\r\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\r\n\r\n  // Data\r\n  const [data, setData] = useState<{ rows: PairDTO[]; players: PlayerDTO[] }>({ rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    if (!tournament) return;\r\n    (async () => {\r\n      const { pairsList } = await fetchPairs({ tId: tournament.id! });\r\n      const { playersList } = await fetchPlayers({ addEmpty: true, tId: tournament.id! });\r\n      setData({ rows: pairsList, players: playersList });\r\n    })();\r\n  }, [tournament]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.error(message, { autoClose: 10000 });\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.success(message);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\r\n      const emptyRow:PairDTO = getEmptyPair();\r\n      emptyRow.tournamentId = tournament.id || 0;\r\n      const result = await postPair({ pair: emptyRow });\r\n      emptyRow.id = result.pair.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows].map((p, i) => ({...p,rowNumber:i+1})),\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage(t('pair:success.add'));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.19'));\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\r\n      // Devo ripristinare i giocatori eliminati\r\n      const players: Array<PlayerDTO> = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n\r\n      await deletePairs({ pairsList: selectedRows });\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: players\r\n          ? [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n          : current.players,\r\n      }));\r\n\r\n      showSuccessMessage(t(`pair:success.${selectedRows.length > 1 ? 'deleteMulti' : 'deleteOne'}`));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.18'));\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO | undefined, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = async (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = await Promise.all(\r\n      data.rows.map<Promise<PairDTO>>(async (rowElement) => {\r\n        if (rowElement.id === rowIndex) {\r\n          let row = rowElement;\r\n          if (columnIndex === 1) {\r\n            if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n              // Devo salvare l'elemnto che sto per sostituire\r\n              row.player1 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n              updateOptions(row.player1, selectedElement);\r\n              row.player1 = selectedElement;\r\n            }\r\n          } else {\r\n            if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n              row.player2 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              updateOptions(row.player2, selectedElement);\r\n              row.player2 = selectedElement;\r\n            }\r\n          }\r\n          //\r\n          if (!row.alias && row.player1 && row.player1.id && row.player2 && row.player2.id) {\r\n            const result = await findAlias({ player1Id: row.player1.id, player2Id: row.player2.id });\r\n            row.alias = result.code === HTTPStatusCode.OK && result.alias ? result.alias : '';\r\n          }\r\n          // update Db. Non aspetto la risposta...\r\n          updatePair({ pair: row });\r\n          return row;\r\n        } else return rowElement;\r\n      })\r\n    );\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((rows) => {\r\n      const found = rows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? rows : [row, ...rows];\r\n      } else {\r\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage(`${t('pair:error.16')}...`);\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage(t('pair:error.15'));\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingStage1Name.length === 1 ? '13' : '14'}`, { missingStage1Name }));\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingPairs.length === 1 ? '11' : '12'}`, { missingPairs }));\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        t(`pair:error.${invalidStage.length === 1 ? '9' : '10'}`, { invalidStage, min: MIN_PAIR_PER_STAGE + 1 })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n      tournament.progress = TournamentProgress.Stage1;\r\n      dispatch(TournamentAction.update.request({ tournament }));\r\n    }\r\n    // Go to Stage1\r\n    dispatch(PairAction.fetch.request({ tId: tournament.id! }));\r\n    currentHistory.push('/stage1');\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow: SelectRowProps<PairDTO> = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: !isAdmin || tournament.progress > TournamentProgress.PairsSelection,\r\n  };\r\n\r\n  const processDeleteStage1 = async () => {\r\n    try {\r\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      if (isAdmin) {\r\n        dispatch(\r\n          TournamentAction.update.request({\r\n            tournament: { ...tournament, progress: TournamentProgress.PairsSelection },\r\n          })\r\n        );\r\n      }\r\n      showSuccessMessage(t('pair:success.delete'));\r\n      setAskUser(hideAskUser);\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.8'));\r\n    }\r\n  };\r\n\r\n  function deleteStage1() {\r\n    if (tournament.progress > TournamentProgress.Stage1) {\r\n      showErrorMessage(t('pair:error.7'));\r\n      return;\r\n    }\r\n    // Chiedo conferma all'utente\r\n    setAskUser({\r\n      message: `${t('pair:stage1.resetConfirm')} ?`,\r\n      onClick: () => processDeleteStage1(),\r\n      onHide: () => setAskUser(hideAskUser),\r\n      show: true,\r\n      title: t('pair:stage1.reset'),\r\n    });\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage(t('pair:error.6'));\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress > TournamentProgress.PairsSelection) {\r\n      showErrorMessage(t('pair:error.5'));\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let current = 0;\r\n    let newRows: PairDTO[] = data.rows.map(row => {\r\n      if (current === stage1Number) current = 0;\r\n      row.stage1Name = names[current];\r\n      current++;\r\n      postPair({ pair: row });\r\n      return row;\r\n    });\r\n    //const mapper = data.rows.map(p => ({ id: p.id, stage1Name: p.stage1Name }));\r\n    showSuccessMessage(t('pair:success.stage1Name'));\r\n    setData((prevData) => ({ rows: newRows, players: prevData.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled = selectedRows.length <= 0 || tournament.progress > TournamentProgress.PairsSelection;\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const assignMatches = (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:stage1.set')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder={\r\n          data.rows.length < 4 ? t('pair:error.3') : t('pair:error.4', { max: Math.floor(data.rows.length / 4) })\r\n        }\r\n        type=\"number\"\r\n        step={1}\r\n        min={0}\r\n        max={Math.floor(data.rows.length / 4)}\r\n        value={stage1Number !== 0 ? stage1Number : undefined}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\r\n        disabled={\r\n          data.rows.length < 4 ||\r\n          tournament.progress === TournamentProgress.Stage1 ||\r\n          tournament.progress === TournamentProgress.Stage2\r\n        }\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={setStage1Name}\r\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n        >\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const addPairs =  (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:add.multi')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        disabled={availableRows <= 0}\r\n        type=\"number\"\r\n        step={1}\r\n        min={1}\r\n        max={availableRows}\r\n        placeholder={availableRows <= 0 ? t('pair:error.1') : t('pair:error.2', { max: availableRows })}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\r\n        value={newRowsNumber || ''}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n          disabled={newRowsNumber > availableRows}\r\n        >\r\n          {t('common:max')}\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n\r\n  const toolsBar =  (\r\n    <div className={commonStyle.toolsBarContainer}>\r\n      <Row className={commonStyle.toolsBar}>\r\n        <Col>\r\n          <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n            <HomeIcon /> {t('common:route.home')}\r\n          </Button>\r\n        </Col>\r\n\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"align-middle\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isAdmin}\r\n            >\r\n              <PlusIcon /> {t('pair:add.one')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteRow} disabled={deleteDisabled || !isAdmin}>\r\n              <TrashIcon /> {selectedRows.length === 1 ? t('pair:delete.one') : t('pair:delete.multi')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress !== TournamentProgress.Stage1 ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!isAdmin}>\r\n              {t('stage1:reset')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            className=\"default-color-white float-right align-middle\"\r\n            onClick={confirmPairs}\r\n            disabled={!isAdmin}\r\n          >\r\n            <b>{t('common:continue')} </b> <RightArrowIcon />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isAdmin && tournament.progress <= TournamentProgress.PairsSelection ? (\r\n        <>\r\n          {assignMatches}\r\n          {addPairs}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  const labels = {\r\n    player1: t('pair:field.player1'),\r\n    player2: t('pair:field.player2'),\r\n    alias: t('pair:field.alias'),\r\n    stage1: t('pair:field.stage1'),\r\n    paid1: t('pair:field.paid1'),\r\n    paid2: t('pair:field.paid2'),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col>\r\n        {toolsBar}\r\n        <Row>\r\n          <Col>\r\n            {data.rows && data.players ? (\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players, labels) as ColumnDescription<PairDTO, PairDTO>[]}\r\n                cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage1)}\r\n                selectRow={selectRow}\r\n                noDataIndication={() => (\r\n                  <NoData isEditable={isAdmin || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n                )}\r\n                caption={<TournamentBadge />}\r\n                headerClasses=\"default-background default-color-yellow\"\r\n                striped\r\n                hover\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","// Auth\r\nexport const LABEL_AUTH_PASSWORD = 'auth:password.password';\r\n\r\n// Common\r\nexport const LABEL_COMMON_LOADING = 'common:loading';\r\n\r\n// Tournament\r\nexport const LABEL_TOURNAMENT_SELECT = 'tournament:select';\r\n","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate } from '../../@common/utils/date.utils';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  const { t } = useTranslation(['tournament']);\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>{t('tournament:tournament')} </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n"],"sourceRoot":""}