{"version":3,"sources":["redux/services/stage2.service.ts","redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","@common/utils/date.utils.ts","@common/utils/math.utils.ts","redux/selectors/tournament.selector.ts","@common/dto/player.dto.ts","@common/dto/tournament.dto.ts","@common/dto/user.dto.ts","components/Stage1/helper.ts","redux/actions/auth.action.ts","redux/actions/constants.ts","@common/utils/fetch.utils.ts","redux/actions/player.action.ts","serviceWorker.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/auth.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/services/tournament.service.ts","redux/sagas/utils.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/sagas/pair.saga.ts","redux/services/auth.service.ts","redux/services/stage1.service.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/sagas/auth.saga.ts","redux/store.ts","assets/header.jpg","components/core/routing/Routes.ts","i18n/i18n.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","redux/actions/tournament.action.ts","@common/models/common.models.ts","@common/models/HttpStatusCode.ts","components/core/icons.tsx","@common/dto/index.ts","redux/services/pair.service.ts","redux/services/player.service.ts","redux/selectors/auth.selector.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","components/core/generic/Commons.tsx"],"names":["deleteStage2","tId","a","fetch","method","DEFAULT_HEADERS","body","JSON","stringify","response","json","updateCells","cell1","cell2","console","error","fetchPairsStage2","result","pairs","getEmptyPair","fetchStage2","rowsNumber","count","tournamentId","cells","PairAction","createAsyncAction","defaultAsyncParams","purge","createAction","PURGE_STORE_ACTION","actionName","Stage1Action","updateSelectedPairs","stage1Watcher","fetchStage1","updateCellStage1","updatePlacement","Stage2Action","updateCell","delete","setCells","defaultParam","setLoading","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","getBaseLog","x","y","Math","log","RegExp","passwordRegExp","emailRegExp","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","PlayerRole","TournamentProgress","UserRole","getOpposite","value","parseInt","comparator","obj1","obj2","total","rowNumber","rowsGenerator","pairsList","map","e","ii","row","id","pair","placement","jj","AuthAction","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","name","headers","getWrapper","url","fetchWrapper","deleteWrapper","putWrapper","postWrapper","undefined","group","groupEnd","startsWith","toast","UnexpectedServerError","PlayerAction","setPlayer","fetchPlayers","savePlayer","updatePlayer","deletePlayers","Boolean","window","location","hostname","match","initialTournamentState","TournamentReducer","createReducer","handleAction","TournamentAction","request","save","state","failure","success","payload","setTournament","initialPlayerState","isSaving","playersList","PlayerReducer","message","player","filter","find","selectedRow","i","initialPairState","PairReducer","initialSessionState","isAuthenticated","isAdmin","SessionReducer","user","role","Admin","initialStage1State","needRefresh","selectedPairs","stages","Stage1Reducer","stageName","rows","currentStage","s","newStage","autoOrder","stage1Name","stage1Rows","selected","selectedRows","Map","set","initialStage2State","Stage2Reducer","fetchTournaments","encodeURIComponent","postTournament","updateTournament","entityLifeCycle","action","onSuccess","onFailure","call","userMessage","UserMessageType","Success","Warning","Danger","warning","code","HTTPStatusCode","put","getTournamentsSaga","saveTournamentSaga","updateTournamentSaga","history","push","TournamentSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","updatePlayerSaga","back","PlayersSagas","getPairsSaga","fetchPairs","SessionStatus","PairsSagas","updateUser","updateUserRequest","deleteUser","deleteUserRequest","loginRequest","registrationRequest","CheckAuthentication","status","Unauthorized","type","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","createStage1Channel","NEED_REFRESH","watchStage1Saga","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","EventSource","take","selectPairs","Stage1Sagas","takeLatest","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","fork","Stage2Sagas","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","registrationSaga","updateUserSaga","deleteUserSaga","delay","persistor","logoutReponse","loginReponse","registrationReponse","errors","forEach","updateReponse","deleteReponse","SessionSagas","process","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","playerState","pairState","authState","stage1State","stage2State","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","run","lazySwagger","lazy","lazyPlayer","lazyPlayerEdit","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","module","default","RedirectionControl","routes","path","label","exact","componentToRender","visible","private","index","icon","MaleIcon","FileMedicalIcon","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","Header","dispatch","useDispatch","currentHistory","useHistory","t","useTranslation","useSelector","AuthSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","language","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","size","disabled","fontSize","username","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","session","render","innerProps","pathname","from","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","fallback","Container","fluid","marginBottom","autoClose","Application","loading","show","Entry","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","Environment","InternalServerError","initialState","player1","surname","alias","GoalKeeper","email","phone","match_played","match_won","total_score","editable","player2","paid1","paid2","Continue","SwitchingProtocols","Processing","EarlyHints","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","IMUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","SwitchProxy","TemporaryRedirect","PermanentRedirect","BadRequest","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","URITooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","library","add","faTrashAlt","faSave","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faTrophy","faAngleDoubleRight","faBan","faFileMedicalAlt","faEdit","SOLID","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","EditIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","API_VERSION","listAPI","aliasAPI","player1Id","player2Id","newAPI","findAlias","postPair","updatePair","deletePairs","getEmptyPlayer","addEmpty","players","getUser","PairSelector","getPairsList","PlayerSelector","getPlayersList","getPlayer","Stage1Selector","getSelectedRows","getSelectedPairs","getNeedRefresh","getStages","Stage2Selector","getCells","getRowsNumber","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","useLocation"],"mappings":"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","file":"static/js/main.0ae3fbaf.chunk.js","sourcesContent":["import { FetchStage2Response, FetchStage2Request } from '@common/models';\r\nimport { ICell } from '../../@common/dto';\r\nimport { DEFAULT_HEADERS } from '../../@common/utils/fetch.utils';\r\nimport { getEmptyPair } from './pair.service';\r\n\r\nexport const deleteStage2 = async (tId: number) => {\r\n  const response = await fetch('/api/v1/stage2', {\r\n    method: 'DELETE',\r\n    ...DEFAULT_HEADERS,\r\n    body: JSON.stringify({ tId }),\r\n  });\r\n  await response.json();\r\n};\r\n\r\nexport const updateCells = async (cell1: ICell, cell2: ICell | null) => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2/cells', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ cell1, cell2 }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    console.error('Error stage2 update');\r\n  }\r\n};\r\n\r\nexport const fetchPairsStage2 = async (tId: number) => {\r\n  try {\r\n    const response = await fetch(`/api/v1/stage2/pairs/${tId}`);\r\n    const result = await response.json();\r\n    return { pairs: [getEmptyPair('-'), ...result.pairs] };\r\n  } catch (e) {\r\n    console.error('Error stage2 fetching pairs');\r\n  }\r\n  return { pairs: [] };\r\n};\r\n\r\nexport const fetchStage2 = async ({\r\n  count: rowsNumber,\r\n  tournamentId,\r\n}: FetchStage2Request): Promise<FetchStage2Response> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ tournamentId, rowsNumber }),\r\n    });\r\n    const cells = await response.json();\r\n    return { cells, rowsNumber };\r\n  } catch (e) {\r\n    return { cells: [], rowsNumber };\r\n  }\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { FetchPairsRequest, FetchPairsResponse } from '@common/models';\r\n\r\nconst actionName = '[Pair]';\r\n\r\nexport const PairAction = {\r\n  // Fetch Pairs\r\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\r\n    FetchPairsRequest,\r\n    FetchPairsResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  WatchStage1Request,\r\n  WatchStage1Response,\r\n  FetchStage1Response,\r\n  FetchStage1Request,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdatePlacementResponse,\r\n  SelectPairsRequest,\r\n  SelectPairsResponse,\r\n} from '@common/models';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\n\r\nconst actionName = '[Stage1]';\r\n\r\nexport const Stage1Action = {\r\n  // Update Selected Pairs\r\n  updateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Selected Pairs Stage1'))<\r\n    SelectPairsRequest,\r\n    SelectPairsResponse,\r\n    Error\r\n  >(),\r\n\r\n  // watcher\r\n  stage1Watcher: createAsyncAction(...defaultAsyncParams(actionName, 'Stage1 Watcher'))<\r\n    WatchStage1Request,\r\n    WatchStage1Response,\r\n    Error\r\n  >(),\r\n  fetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\r\n    FetchStage1Request,\r\n    FetchStage1Response,\r\n    Error\r\n  >(),\r\n  updateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\r\n    UpdateCellRequest,\r\n    UpdateCellResponse,\r\n    Error\r\n  >(),\r\n  updatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\r\n    UpdatePlacementRequest,\r\n    UpdatePlacementResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  FetchStage2Response,\r\n  FetchStage2Request,\r\n  UpdateStage2CellResponse,\r\n  UpdateStage2CellRequest,\r\n  DeleteStage2Request,\r\n  DeleteStage2Response,\r\n} from '@common/models';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { ICell } from '@common/dto';\r\n\r\nconst actionName = '[Stage2]';\r\n\r\nexport const Stage2Action = {\r\n  // get selected tournament\r\n  fetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\r\n    FetchStage2Request,\r\n    FetchStage2Response,\r\n    Error\r\n  >(),\r\n  updateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\r\n    UpdateStage2CellRequest,\r\n    UpdateStage2CellResponse,\r\n    Error\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\r\n    DeleteStage2Request,\r\n    DeleteStage2Response,\r\n    Error\r\n  >(),\r\n  setCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\r\n  setLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","export const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\r\nexport const justADate = (initDate?: Date | string) => {\r\n  let utcMidnightDateObj: Date;\r\n  // if no date supplied, use Now.\r\n  if (!initDate) initDate = new Date();\r\n\r\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\r\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\r\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\r\n  } else {\r\n    // if init date is not already a date object, feed it to the date constructor.\r\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\r\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\r\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\r\n  }\r\n\r\n  return {\r\n    toISOString: () => utcMidnightDateObj.toISOString(),\r\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\r\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\r\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\r\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\r\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\r\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\r\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\r\n    addDays: (days: number) => {\r\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\r\n    },\r\n    toString: () => utcMidnightDateObj.toString(),\r\n    toLocaleDateString: (\r\n      locales?: string | string[] | undefined,\r\n      options?: Intl.DateTimeFormatOptions | undefined\r\n    ): string => {\r\n      const option = options || {};\r\n      option.timeZone = 'UTC';\r\n      const locale = locales || 'it-IT';\r\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\r\n    },\r\n  };\r\n};\r\n","export function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { RootState } from '@common/models/root.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\r\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\r\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\r\n};\r\n","export interface PlayerDTO {\r\n  id: number | null;\r\n  name: string;\r\n  surname: string;\r\n  alias: string;\r\n  label: string;\r\n  role: PlayerRole;\r\n  email: string;\r\n  phone: string;\r\n  userId?: number;\r\n  match_played?: number;\r\n  match_won?: number;\r\n  total_score?: number;\r\n  editable: boolean;\r\n  rowNumber: number;\r\n}\r\n\r\nexport enum PlayerRole {\r\n  NotAPlayer = 'Non sono un giocatore',\r\n  GoalKeeper = 'Portiere',\r\n  Master = 'Master',\r\n  Striker = 'Attaccante',\r\n}\r\n","export interface TournamentDTO {\r\n  id: number | null;\r\n  name: string;\r\n  date: Date;\r\n  progress: TournamentProgress;\r\n  public: boolean;\r\n  autoOrder: boolean;\r\n  label: string;\r\n  ownerId: number | null;\r\n}\r\n\r\nexport enum TournamentProgress {\r\n  New = 'new',\r\n  PairsSelection = 'pairsSelection',\r\n  Stage1 = 'stage1',\r\n  Stage2 = 'stage2',\r\n}\r\n","import { PlayerDTO } from '.';\r\n\r\nexport interface UserDTO {\r\n  id: number;\r\n  username: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  phone: string;\r\n  role: UserRole;\r\n  birthday: Date;\r\n  label: string;\r\n  player?: PlayerDTO;\r\n}\r\nexport enum UserRole {\r\n  Admin = 'Admin',\r\n  User = 'User',\r\n}\r\n","import { PairDTO, Stage1Row } from '@common/dto';\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value: string | null) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (parseInt(value)) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n\r\n/**\r\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\r\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\r\n * Inoltre viene passata al BE per salvare i dati sul DB.\r\n *\r\n * @param pairsList PairDTO[] Lista di coppie\r\n *\r\n */\r\nexport const rowsGenerator = (pairsList: Array<PairDTO>): Array<Stage1Row> =>\r\n  pairsList.map((e, ii) => {\r\n    const row: Stage1Row = {\r\n      id: `row-${e.tournamentId}-${ii}`,\r\n      rowNumber: ii + 1,\r\n      pair: e,\r\n      total: 0,\r\n      placement: e.placement || 0,\r\n    };\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      row[`col${jj}`] = null;\r\n    }\r\n    return row;\r\n  });\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  CheckAuthenticationRequest,\r\n  WatchSessionRequest,\r\n  AuthenticationError,\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  RegistrationRequest,\r\n  LogoutRequest,\r\n  DeleteUserRequest,\r\n  UpdateUserRequest,\r\n} from '@common/models/auth.model';\r\n\r\nconst actionName = '[Session]';\r\n\r\nexport const AuthAction = {\r\n  // Register new user\r\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\r\n    RegistrationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Login\r\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\r\n    LoginRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\r\n    LogoutRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\r\n    DeleteUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\r\n    UpdateUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Check if user is already authenticate\r\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\r\n    CheckAuthenticationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Session watcher\r\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\r\n    WatchSessionRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n\r\n  // set selected tournament\r\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { TypeConstant } from 'typesafe-actions';\r\n\r\nexport const Request = 'Request';\r\nexport const Success = 'Success';\r\nexport const Failure = 'Failure';\r\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\r\n\r\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\r\n  `${actionName} ${name} ${Request}`,\r\n  `${actionName} ${name} ${Success}`,\r\n  `${actionName} ${name} ${Failure}`,\r\n];\r\n\r\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\r\n\r\nexport interface PurgeResponse {}\r\n","//-----------------------------\r\n// Fetch utils\r\n//\r\nimport { GenericReponse, OmitHistory, UnexpectedServerError } from '../models/common.models';\r\nimport { toast } from 'react-toastify';\r\n\r\n//\r\nexport const DEFAULT_HEADERS: { headers: HeadersInit } = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nexport const getWrapper = async <T extends GenericReponse>(url: string): Promise<T> => await fetchWrapper(url, 'GET');\r\nexport const deleteWrapper = async <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>): Promise<T> =>\r\n  await fetchWrapper(url, 'DELETE', body);\r\nexport const putWrapper = async <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>): Promise<T> =>\r\n  await fetchWrapper(url, 'PUT', body);\r\nexport const postWrapper = async <B, T extends GenericReponse>(url: string, body?: OmitHistory<B>): Promise<T> =>\r\n  await fetchWrapper(url, 'POST', body);\r\n\r\nexport const fetchWrapper = async <B, T extends GenericReponse>(\r\n  url: string,\r\n  method: string,\r\n  body?: OmitHistory<B>\r\n): Promise<T> => {\r\n  console.log('fetchWrapper : ', method, url, body);\r\n  let response = null;\r\n  try {\r\n    response = await fetch(url, {\r\n      method,\r\n      body: method === 'PUT' || method === 'POST' || method === 'DELETE' ? JSON.stringify(body) : undefined,\r\n      ...DEFAULT_HEADERS,\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.group('An error occur : ');\r\n    console.error('Error', error);\r\n    console.error('Details : ', response);\r\n    console.groupEnd();\r\n    // If performing fetch from FE, show errror.\r\n    if (!url.startsWith('http')) {\r\n      toast.error('Whoooops...Something went wrong...');\r\n    }\r\n    /*  FIXME:\r\n      Type 'GenericReponse' is not assignable to type 'T'.\r\n      'GenericReponse' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'GenericReponse'.\r\n    */\r\n    return UnexpectedServerError as any;\r\n  }\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  FetchPlayersResponse,\r\n  FetchPlayersRequest,\r\n  SavePlayerRequest,\r\n  SavePlayerResponse,\r\n  DeletePlayersResponse,\r\n  DeletePlayersRequest,\r\n  PlayerError,\r\n} from '@common/models/player.model';\r\nimport { PlayerDTO } from '@common/dto';\r\n\r\nconst actionName = '[Player]';\r\nexport const PlayerAction = {\r\n  // set selected tournament\r\n  setPlayer: createAction(...defaultParam(actionName, 'Set Player'))<PlayerDTO>(),\r\n  // fetch tournaments\r\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Palyers'))<\r\n    FetchPlayersRequest,\r\n    FetchPlayersResponse,\r\n    PlayerError\r\n  >(),\r\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\r\n    SavePlayerRequest,\r\n    SavePlayerResponse,\r\n    PlayerError\r\n  >(),\r\n  updatePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Update Player'))<\r\n    SavePlayerRequest,\r\n    SavePlayerResponse,\r\n    PlayerError\r\n  >(),\r\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\r\n    DeletePlayersRequest,\r\n    DeletePlayersResponse,\r\n    PlayerError\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { toast } from 'react-toastify';\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          toast.warn('This web app is being served cache-first by a service worker.');\r\n          // TODO: show this message to user\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    // eslint-disable-next-line sonarjs/cognitive-complexity\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              toast.warn('Content is cached for offline use.');\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      toast.warn('Error during service worker registration.');\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      toast.warn('No internet connection found. App is running in offline mode.');\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { TournamentAction } from '../actions/tournament.action';\r\nimport { TournamentState } from '../../@common/models/tournament.model';\r\n\r\nexport const initialTournamentState: TournamentState = {\r\n  tournament: null,\r\n  tournamentsList: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\r\n  // Request\r\n  .handleAction(\r\n    [TournamentAction.fetch.request, TournamentAction.save.request, TournamentAction.update.request],\r\n    (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [TournamentAction.fetch.failure, TournamentAction.save.failure, TournamentAction.update.failure],\r\n    (state) => ({ ...state, isLoading: false })\r\n  )\r\n  // SUCCESS\r\n  // Fetch Tournament\r\n  .handleAction(TournamentAction.fetch.success, (state, { payload: { tournamentsList } }) => ({\r\n    tournament: tournamentsList && tournamentsList.length > 0 ? tournamentsList[0] : null,\r\n    tournamentsList: tournamentsList || [],\r\n    isLoading: false,\r\n  }))\r\n  // Set selected tournament\r\n  .handleAction(TournamentAction.setTournament, (state, { payload }) => ({\r\n    ...state,\r\n    tournament: payload,\r\n    isLoading: false,\r\n  }))\r\n  // Create/Update a new tournament\r\n  .handleAction(\r\n    [TournamentAction.save.success, TournamentAction.update.success],\r\n    (state, { payload: { tournament } }) => ({\r\n      ...state,\r\n      tournament,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(TournamentAction.purge, () => initialTournamentState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PlayerState } from '@common/models/player.model';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\n\r\nexport const initialPlayerState: PlayerState = {\r\n  isLoading: false,\r\n  isSaving: false,\r\n  playersList: [],\r\n};\r\n\r\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\r\n  // Request\r\n  .handleAction([PlayerAction.fetchPlayers.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  .handleAction(\r\n    [PlayerAction.savePlayer.request, PlayerAction.updatePlayer.request, PlayerAction.deletePlayers.request],\r\n    (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n      isSaving: true,\r\n    })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [\r\n      PlayerAction.fetchPlayers.failure,\r\n      PlayerAction.savePlayer.failure,\r\n      PlayerAction.updatePlayer.failure,\r\n      PlayerAction.deletePlayers.failure,\r\n    ],\r\n    (state, { payload: { message } }) => ({\r\n      ...state,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  // Success\r\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\r\n    playersList: [player, ...state.playersList],\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { playersList } }) => ({\r\n    playersList: state.playersList.filter((row) => !playersList.find((selectedRow) => selectedRow.id === row.id)),\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { playersList } }) => ({\r\n    playersList: playersList.map((e, i) => ({ ...e, rowNumber: i + 1 })),\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction(PlayerAction.setPlayer, (state, { payload }) => ({ ...state, player: payload }))\r\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PairState } from '@common/models';\r\nimport { PairAction } from 'redux/actions';\r\n\r\nexport const initialPairState: PairState = {\r\n  isLoading: false,\r\n  isSaving: false,\r\n};\r\n\r\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\r\n  // Request\r\n  .handleAction([PairAction.fetch.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  // Failure\r\n  .handleAction([PairAction.fetch.failure], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PairAction.fetch.success, (state, { payload: { pairsList } }) => ({\r\n    pairsList,\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction(PairAction.purge, () => initialPairState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { AuthState } from '@common/models/auth.model';\r\nimport { AuthAction } from 'redux/actions/auth.action';\r\nimport { UserRole } from '@common/dto';\r\n\r\nexport const initialSessionState: AuthState = {\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  isLoading: true,\r\n};\r\n\r\nexport const SessionReducer = createReducer<AuthState, Action>(initialSessionState)\r\n  // Request\r\n  .handleAction(\r\n    [\r\n      AuthAction.checkAuthentication.request,\r\n      AuthAction.registration.request,\r\n      AuthAction.login.request,\r\n      AuthAction.logout.request,\r\n      AuthAction.update.request,\r\n      AuthAction.delete.request,\r\n    ],\r\n    (state) => ({ ...state, isLoading: true })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [AuthAction.checkAuthentication.failure, AuthAction.registration.failure, AuthAction.login.failure],\r\n    () => ({\r\n      isLoading: false,\r\n      user: undefined,\r\n      isAdmin: false,\r\n      isAuthenticated: false,\r\n    })\r\n  )\r\n  .handleAction([AuthAction.logout.failure, AuthAction.update.failure, AuthAction.delete.failure], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Success\r\n  .handleAction(\r\n    [\r\n      AuthAction.checkAuthentication.success,\r\n      AuthAction.registration.success,\r\n      AuthAction.login.success,\r\n      AuthAction.logout.success,\r\n      AuthAction.update.success,\r\n      AuthAction.delete.success,\r\n      AuthAction.updateSession,\r\n    ],\r\n    (state, { payload: { user } }) => ({\r\n      user,\r\n      isAuthenticated: !!user,\r\n      isAdmin: user ? user.role === UserRole.Admin : false,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(AuthAction.purge, () => initialSessionState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage1State } from '@common/models';\r\nimport { Stage1Action } from 'redux/actions';\r\nimport { Stage1Row } from '@common/dto';\r\nimport { getEmptyPair } from 'redux/services/pair.service';\r\n\r\nexport const initialStage1State: Stage1State = {\r\n  needRefresh: false,\r\n  selectedPairs: [getEmptyPair('-')],\r\n  isLoading: false,\r\n  stages: [],\r\n};\r\n\r\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\r\n  // Gestione Watcher\r\n  // All'avvio del watcher reimposto needRefresh\r\n  .handleAction([Stage1Action.stage1Watcher.request], (state) => ({ ...state, needRefresh: false }))\r\n  .handleAction([Stage1Action.stage1Watcher.failure], (state) => ({ ...state }))\r\n  .handleAction([Stage1Action.stage1Watcher.success], (state) => ({ ...state, needRefresh: true }))\r\n  //\r\n  .handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  .handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Aggiornamento valore cella/posizionamento\r\n  .handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Reperimento dati\r\n  .handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\r\n    const currentStage = state.stages.filter((s) => s.stageName === stageName);\r\n    const newStage =\r\n      currentStage && currentStage.length > 0\r\n        ? { ...currentStage[0], rows }\r\n        : { pairsList, stageName, rows, autoOrder: false, isLoading: false };\r\n    return {\r\n      ...state,\r\n      stages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\r\n      isLoading: false,\r\n    };\r\n  })\r\n  // Aggiornamento coppie selezionate dati vari gironi\r\n  .handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stage1Name, stage1Rows } }) => {\r\n    const selected = state.selectedRows ? state.selectedRows : new Map<string, Stage1Row[]>();\r\n    selected.set(stage1Name, stage1Rows);\r\n\r\n    const selectedPairs = state.selectedPairs\r\n      ? [\r\n          // Filtro selectedPairs\r\n          //  e.id === null : mantengo il placeholder\r\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\r\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stage1Name),\r\n          ...stage1Rows.map((e) => e.pair),\r\n        ]\r\n      : [...stage1Rows.map((e) => e.pair)];\r\n\r\n    return {\r\n      ...state,\r\n      selectedRows: selected,\r\n      selectedPairs,\r\n      isLoading: false,\r\n    };\r\n  })\r\n  .handleAction(Stage1Action.purge, () => initialStage1State);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage2State } from '@common/models';\r\nimport { Stage2Action } from 'redux/actions';\r\n\r\nexport const initialStage2State: Stage2State = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\r\n  // Request\r\n  .handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  // Failure\r\n  .handleAction([Stage2Action.fetchStage2.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Success\r\n  .handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, rowsNumber } }) => ({\r\n    cells,\r\n    rowsNumber,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.delete.success], () => ({\r\n    cells: undefined,\r\n    rowsNumber: 0,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.setCells], (state, { payload }) => ({\r\n    ...state,\r\n    cells: payload,\r\n  }))\r\n  .handleAction([Stage2Action.setLoading], (state, { payload }) => ({\r\n    ...state,\r\n    isLoading: payload,\r\n  }))\r\n  .handleAction(Stage2Action.purge, () => initialStage2State);\r\n","import {\r\n  DeleteTournamentRequest,\r\n  DeleteTournamentResponse,\r\n  FetchTournamentsRequest,\r\n  FetchTournamentsResponse,\r\n  SaveTournamentRequest,\r\n  SaveTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n} from '../../@common/models/tournament.model';\r\nimport { postWrapper, putWrapper, getWrapper, deleteWrapper } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchTournaments = async (request: FetchTournamentsRequest): Promise<FetchTournamentsResponse> =>\r\n  getWrapper<FetchTournamentsResponse>(\r\n    request?.tId ? `/api/v2/tournament/${encodeURIComponent(request.tId)}` : '/api/v2/tournament/list'\r\n  );\r\n\r\nexport const postTournament = async (request: SaveTournamentRequest): Promise<SaveTournamentResponse> =>\r\n  postWrapper<SaveTournamentRequest, SaveTournamentResponse>('/api/v2/tournament/new', request);\r\n\r\nexport const updateTournament = async (request: UpdateTournamentRequest): Promise<UpdateTournamentResponse> =>\r\n  putWrapper<UpdateTournamentRequest, UpdateTournamentResponse>('/api/v2/tournament/update', request);\r\n\r\nexport const deleteTournament = async (request: DeleteTournamentRequest): Promise<DeleteTournamentResponse> =>\r\n  deleteWrapper<DeleteTournamentRequest, DeleteTournamentResponse>('/api/v2/tournament/delete', request);\r\n","import { GenericReponse, UnexpectedServerError, UserMessageType } from '@common/models/common.models';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { toast } from 'react-toastify';\r\nimport { put, call } from 'redux-saga/effects';\r\n\r\n// FIXME: remove this any type\r\nexport function* entityLifeCycle<Req, Res extends GenericReponse>(\r\n  action: any,\r\n  method: (p: Req) => Res | Promise<Res>,\r\n  payload: Req,\r\n  onSuccess?: (response: Res) => void,\r\n  onFailure?: (response: Res) => void\r\n): ReturnType<typeof action.request> {\r\n  try {\r\n    // Call method with payload\r\n    const response: Res = yield call(method, payload);\r\n    if (response.userMessage) {\r\n      switch (response.userMessage.message) {\r\n        case UserMessageType.Success:\r\n          toast.success(response.userMessage.message);\r\n          break;\r\n        case UserMessageType.Warning:\r\n          toast.warning(response.userMessage.message);\r\n          break;\r\n        case UserMessageType.Danger:\r\n          toast.error(response.userMessage.message);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // If success\r\n    // FIXME: include all 2XX\r\n    if (response.code === HTTPStatusCode.Success) {\r\n      // Show success toast\r\n      // Dispatch success action\r\n      yield put(action.success(response));\r\n      // Callback\r\n      if (onSuccess) {\r\n        onSuccess(response);\r\n      }\r\n    } else {\r\n      // Dispatch failure action\r\n      yield put(action.failure(response));\r\n      // Callback\r\n      if (onFailure) {\r\n        onFailure(response);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    yield put(action.failure(UnexpectedServerError));\r\n  }\r\n}\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { fetchTournaments, postTournament, updateTournament } from 'redux/services/tournament.service';\r\nimport {\r\n  SaveTournamentResponse,\r\n  FetchTournamentsResponse,\r\n  UpdateTournamentResponse,\r\n  FetchTournamentsRequest,\r\n  UpdateTournamentRequest,\r\n} from '@common/models/tournament.model';\r\nimport { TournamentAction } from 'redux/actions/tournament.action';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { toast } from 'react-toastify';\r\nimport { UnexpectedServerError } from '../../@common/models/common.models';\r\nimport { entityLifeCycle } from './utils';\r\n\r\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\r\nfunction* getTournamentsSaga({\r\n  payload,\r\n}: ReturnType<typeof TournamentAction.fetch.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<FetchTournamentsRequest, FetchTournamentsResponse>(\r\n    TournamentAction.fetch,\r\n    fetchTournaments,\r\n    payload\r\n  );\r\n}\r\n\r\nfunction* saveTournamentSaga(\r\n  action: ReturnType<typeof TournamentAction.save.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: SaveTournamentResponse = yield call(postTournament, action.payload);\r\n    if (response.code === HTTPStatusCode.Success) {\r\n      yield put(TournamentAction.save.success(response));\r\n      action.payload.history.push('/tournament');\r\n      toast.success(response.userMessage.message);\r\n    } else {\r\n      toast.error(response.userMessage.message);\r\n      yield put(TournamentAction.save.failure(response));\r\n    }\r\n  } catch (err) {\r\n    yield put(TournamentAction.save.failure(UnexpectedServerError));\r\n  }\r\n}\r\n\r\nfunction* updateTournamentSaga({\r\n  payload,\r\n}: ReturnType<typeof TournamentAction.update.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<UpdateTournamentRequest, UpdateTournamentResponse>(\r\n    TournamentAction.update,\r\n    updateTournament,\r\n    payload\r\n  );\r\n}\r\n\r\nexport const TournamentSagas = [\r\n  takeEvery(TournamentAction.fetch.request, getTournamentsSaga),\r\n  takeEvery(TournamentAction.save.request, saveTournamentSaga),\r\n  takeEvery(TournamentAction.update.request, updateTournamentSaga),\r\n];\r\n","import {\r\n  DeletePlayersRequest,\r\n  DeletePlayersResponse,\r\n  FetchPlayersRequest,\r\n  FetchPlayersResponse,\r\n  SavePlayerRequest,\r\n  SavePlayerResponse,\r\n} from '@common/models';\r\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\nimport { fetchPlayers, deletePlayers, savePlayer, updatePlayer } from 'redux/services/player.service';\r\nimport { entityLifeCycle } from './utils';\r\n\r\nconst back = (payload: DeletePlayersRequest | SavePlayerRequest) => payload.history?.push('/player');\r\n\r\nfunction* getPlayersSaga({\r\n  payload,\r\n}: ReturnType<typeof PlayerAction.fetchPlayers.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<FetchPlayersRequest, FetchPlayersResponse>(PlayerAction.fetchPlayers, fetchPlayers, payload);\r\n}\r\n\r\nfunction* deletePlayersSaga({\r\n  payload,\r\n}: ReturnType<typeof PlayerAction.deletePlayers.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<DeletePlayersRequest, DeletePlayersResponse>(\r\n    PlayerAction.deletePlayers,\r\n    deletePlayers,\r\n    payload,\r\n    () => back(payload)\r\n  );\r\n}\r\n\r\nfunction* savePlayerSaga({\r\n  payload,\r\n}: ReturnType<typeof PlayerAction.savePlayer.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<SavePlayerRequest, SavePlayerResponse>(PlayerAction.savePlayer, savePlayer, payload, () =>\r\n    back(payload)\r\n  );\r\n}\r\n\r\nfunction* updatePlayerSaga({\r\n  payload,\r\n}: ReturnType<typeof PlayerAction.updatePlayer.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<SavePlayerRequest, SavePlayerResponse>(PlayerAction.updatePlayer, updatePlayer, payload, () =>\r\n    back(payload)\r\n  );\r\n}\r\n\r\nexport const PlayersSagas = [\r\n  takeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\r\n  takeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\r\n  takeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\r\n  takeEvery(PlayerAction.updatePlayer.request, updatePlayerSaga),\r\n];\r\n","import { StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PairAction } from 'redux/actions';\r\nimport { fetchPairs } from 'redux/services/pair.service';\r\nimport { FetchPairsResponse, FetchPairsRequest } from '@common/models';\r\nimport { entityLifeCycle } from './utils';\r\n\r\nfunction* getPairsSaga({ payload }: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<FetchPairsRequest, FetchPairsResponse>(PairAction.fetch, fetchPairs, payload);\r\n}\r\n\r\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\r\n","import {\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  RegistrationRequest,\r\n  RegistrationResponse,\r\n  UpdateUserRequest,\r\n  DeleteUserRequest,\r\n} from '../../@common/models';\r\nimport { eventChannel, buffers, END } from 'redux-saga';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { OmitHistory, UnexpectedServerError, UserMessageType } from '@common/models/common.models';\r\nimport { putWrapper, deleteWrapper, postWrapper, getWrapper } from '@common/utils';\r\n\r\nexport enum SessionStatus {\r\n  // Sessione scaduta, reindirizza l'utente alla login\r\n  SESSION_EXPIRED = 'session_expired',\r\n  // Necessario aggiornamento dati su Stage1\r\n  NEED_REFRESH = 'need_refresh',\r\n}\r\n\r\nexport interface Message {\r\n  status: SessionStatus;\r\n  message?: string;\r\n}\r\n\r\n// Update\r\nexport const updateUser = async (updateUserRequest: OmitHistory<UpdateUserRequest>): Promise<AuthenticationResponse> =>\r\n  putWrapper<UpdateUserRequest, AuthenticationResponse>('/api/v2/auth/update', updateUserRequest);\r\n\r\n// Delete\r\nexport const deleteUser = async (deleteUserRequest: OmitHistory<DeleteUserRequest>): Promise<AuthenticationResponse> =>\r\n  deleteWrapper<DeleteUserRequest, AuthenticationResponse>('/api/v2/auth/delete', deleteUserRequest);\r\n\r\n// Login\r\nexport const login = async (loginRequest: OmitHistory<LoginRequest>): Promise<AuthenticationResponse> =>\r\n  postWrapper<LoginRequest, AuthenticationResponse>('/api/v2/auth/login', loginRequest);\r\n\r\n// Login\r\nexport const logout = async (): Promise<AuthenticationResponse> =>\r\n  getWrapper<AuthenticationResponse>('/api/v2/auth/logout');\r\n\r\n// Registration\r\nexport const registration = async (\r\n  registrationRequest: OmitHistory<RegistrationRequest>\r\n): Promise<RegistrationResponse> =>\r\n  postWrapper<RegistrationRequest, AuthenticationResponse>('/api/v2/auth/register', registrationRequest);\r\n\r\nexport const CheckAuthentication = async (): Promise<AuthenticationResponse> => {\r\n  let response;\r\n  try {\r\n    response = await fetch('/api/v2/auth/check');\r\n    return await response.json();\r\n  } catch (error) {\r\n    if (response?.status === HTTPStatusCode.Unauthorized) {\r\n      return {\r\n        user: undefined,\r\n        code: HTTPStatusCode.Success,\r\n        message: '',\r\n        userMessage: { type: UserMessageType.Success, message: '' },\r\n      };\r\n    }\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Session Control\r\nexport const createSessionChannel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Connected...');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.SESSION_EXPIRED) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { eventChannel, END, buffers } from 'redux-saga';\r\nimport { SessionStatus, Message } from './auth.service';\r\nimport {\r\n  FetchStage1Request,\r\n  FetchStage1Response,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdatePlacementResponse,\r\n} from '../../@common/models';\r\nimport { rowsGenerator } from '../../components/Stage1/helper';\r\nimport { postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchStage1 = async ({ pairsList, stageName }: FetchStage1Request): Promise<FetchStage1Response> =>\r\n  postWrapper<FetchStage1Request, FetchStage1Response>('/api/v1/stage1', {\r\n    // FIXME:\r\n    rows: rowsGenerator(pairsList),\r\n    stageName,\r\n    pairsList,\r\n  });\r\n\r\nexport const updatePlacement = async (request: UpdatePlacementRequest): Promise<UpdatePlacementResponse> =>\r\n  putWrapper<UpdatePlacementRequest, UpdatePlacementResponse>('/api/v1/stage1/update/placement', request);\r\n\r\nexport const updateCellStage1 = async (request: UpdateCellRequest): Promise<UpdateCellResponse> =>\r\n  putWrapper<UpdateCellRequest, UpdateCellResponse>('/api/v1/stage1/update/cell', request);\r\n\r\nexport const createStage1Channel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Stage1 Channel is now open.');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.NEED_REFRESH) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { Stage1Action } from 'redux/actions';\r\nimport { takeLatest, StrictEffect, call, take, takeEvery } from 'redux-saga/effects';\r\nimport { createStage1Channel, fetchStage1, updateCellStage1, updatePlacement } from 'redux/services/stage1.service';\r\nimport {\r\n  FetchStage1Request,\r\n  FetchStage1Response,\r\n  SelectPairsRequest,\r\n  SelectPairsResponse,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdatePlacementResponse,\r\n} from '@common/models';\r\nimport { entityLifeCycle } from './utils';\r\nimport { selectPairs } from 'redux/services/pair.service';\r\n\r\n// TODO:\r\nfunction* watchStage1Saga(\r\n  action: ReturnType<typeof Stage1Action.stage1Watcher.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('watchStage1Saga : start');\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createStage1Channel, eventChannel);\r\n    while (true) {\r\n      const message = yield take(channel);\r\n      console.log('watchStage1Saga.message : ', message);\r\n    }\r\n  } catch (err) {\r\n    console.log('watchStage1Saga.err : ', err);\r\n  }\r\n}\r\n\r\nfunction* fetchSaga({\r\n  payload,\r\n}: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<FetchStage1Request, FetchStage1Response>(Stage1Action.fetchStage1, fetchStage1, payload);\r\n}\r\n\r\nfunction* updateCellSaga({\r\n  payload,\r\n}: ReturnType<typeof Stage1Action.updateCellStage1.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<UpdateCellRequest, UpdateCellResponse>(\r\n    Stage1Action.updateCellStage1,\r\n    updateCellStage1,\r\n    payload\r\n  );\r\n}\r\n\r\nfunction* updatePlacementSaga({\r\n  payload,\r\n}: ReturnType<typeof Stage1Action.updatePlacement.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<UpdatePlacementRequest, UpdatePlacementResponse>(\r\n    Stage1Action.updateCellStage1,\r\n    updatePlacement,\r\n    payload\r\n  );\r\n}\r\n\r\nfunction* updateSelectedPairsSaga({\r\n  payload,\r\n}: ReturnType<typeof Stage1Action.updateSelectedPairs.request>): Generator<StrictEffect, void, any> {\r\n  yield entityLifeCycle<SelectPairsRequest, SelectPairsResponse>(\r\n    Stage1Action.updateSelectedPairs,\r\n    selectPairs,\r\n    payload\r\n  );\r\n}\r\n\r\nexport const Stage1Sagas = [\r\n  takeLatest(Stage1Action.stage1Watcher.request, watchStage1Saga),\r\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\r\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\r\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\r\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, select, fork } from 'redux-saga/effects';\r\nimport { Stage2Action, TournamentAction } from 'redux/actions';\r\nimport { fetchStage2, updateCells, deleteStage2 } from 'redux/services/stage2.service';\r\nimport { FetchStage2Response, DeleteStage2Response } from '@common/models';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { toast } from 'react-toastify';\r\nimport { TournamentProgress } from '@common/dto';\r\n\r\nfunction* deleteStage2Saga(action: ReturnType<typeof Stage2Action.delete.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: DeleteStage2Response = yield call(deleteStage2, action.payload.tId);\r\n    yield put(Stage2Action.delete.success(response));\r\n    const tournament = yield select(TournamentSelector.getTournament);\r\n    tournament.progress = TournamentProgress.Stage1;\r\n    toast.success('Fase 2 eiminata...');\r\n    yield put(TournamentAction.update.request({ tournament }));\r\n  } catch (err) {\r\n    yield put(Stage2Action.delete.failure(err));\r\n    toast.error('Error while deleting Stage2');\r\n  }\r\n}\r\n\r\nfunction* fetchStage2Saga(\r\n  action: ReturnType<typeof Stage2Action.fetchStage2.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchStage2Response = yield call(fetchStage2, action.payload);\r\n    yield put(Stage2Action.fetchStage2.success(response));\r\n  } catch (err) {\r\n    yield put(Stage2Action.fetchStage2.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateCellsSaga({\r\n  payload: { cell1, cell2 },\r\n}: ReturnType<typeof Stage2Action.updateCell.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateCells, cell1, cell2);\r\n    yield put(Stage2Action.updateCell.success({}));\r\n  } catch (err) {\r\n    yield put(Stage2Action.updateCell.failure(err));\r\n    toast.error('Error while updating Stage2');\r\n  }\r\n}\r\n\r\nexport const Stage2Sagas = [\r\n  takeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\r\n  takeEvery(Stage2Action.updateCell.request, updateCellsSaga),\r\n  takeEvery(Stage2Action.delete.request, deleteStage2Saga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, delay } from 'redux-saga/effects';\r\nimport { AuthAction } from 'redux/actions/auth.action';\r\nimport { AuthenticationResponse, RegistrationResponse } from '@common/models';\r\nimport {\r\n  CheckAuthentication,\r\n  createSessionChannel,\r\n  Message,\r\n  login,\r\n  registration,\r\n  updateUser,\r\n  deleteUser,\r\n  logout,\r\n  SessionStatus,\r\n} from 'redux/services/auth.service';\r\nimport { toast } from 'react-toastify';\r\nimport { Action } from 'typesafe-actions';\r\nimport { persistor } from 'redux/store';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { TournamentAction } from 'redux/actions';\r\nimport { UserMessageType } from '@common/models/common.models';\r\n\r\nfunction* checkAuthenticationSaga({\r\n  payload: { history },\r\n}: ReturnType<typeof AuthAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: AuthenticationResponse = yield call(CheckAuthentication);\r\n    if (response.code === HTTPStatusCode.Success) {\r\n      yield put(AuthAction.checkAuthentication.success(response));\r\n      yield put(AuthAction.sessionControl.request({ history }));\r\n    } else {\r\n      yield put(AuthAction.checkAuthentication.failure(response));\r\n    }\r\n  } catch (err) {\r\n    yield put(AuthAction.checkAuthentication.failure(err));\r\n  }\r\n}\r\n\r\n/*\r\nFIXME:\r\nhttps://github.com/redux-saga/redux-saga/issues/868\r\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\r\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\r\n*/\r\n\r\nfunction* watchSessionSaga({\r\n  payload: { history },\r\n}: ReturnType<typeof AuthAction.sessionControl.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createSessionChannel, eventChannel);\r\n    while (true) {\r\n      const message: Message = yield take(channel);\r\n      if (message && message.status === SessionStatus.SESSION_EXPIRED) {\r\n        toast.error('La tua sessione è scaduta. Stai per essere reindirizzato alla login...');\r\n        yield delay(3000);\r\n        yield put(\r\n          AuthAction.logout.success({\r\n            user: undefined,\r\n            code: HTTPStatusCode.Unauthorized,\r\n            message: 'Unauthorized!',\r\n            userMessage: { message: 'Sessione scaduta...', type: UserMessageType.Danger },\r\n          })\r\n        );\r\n        history.push('/login');\r\n        persistor.purge();\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log('watchSessionSaga.err : ', err);\r\n  }\r\n}\r\n\r\n// Logout\r\nfunction* logoutSaga({\r\n  payload: { history },\r\n}: ReturnType<typeof AuthAction.logout.request>): Generator<StrictEffect, void, any> {\r\n  const logoutReponse: AuthenticationResponse = yield call(logout);\r\n  if (logoutReponse.code === HTTPStatusCode.Success) {\r\n    yield put(AuthAction.logout.success(logoutReponse));\r\n    history.push('/');\r\n    toast.success(logoutReponse.userMessage.message);\r\n  } else {\r\n    toast.error(logoutReponse.userMessage.message);\r\n    yield put(AuthAction.logout.failure(logoutReponse));\r\n  }\r\n  persistor.purge();\r\n  yield put(\r\n    AuthAction.logout.success({\r\n      code: HTTPStatusCode.Success,\r\n      message: 'Logout complete',\r\n      userMessage: {\r\n        type: UserMessageType.Success,\r\n        message: 'Logout ',\r\n      },\r\n    })\r\n  );\r\n}\r\n\r\n// Login\r\nfunction* loginSaga({\r\n  payload: { history, ...loginRequest },\r\n}: ReturnType<typeof AuthAction.login.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const loginReponse: AuthenticationResponse = yield call(login, loginRequest);\r\n  if (loginReponse.code === HTTPStatusCode.Success) {\r\n    yield put(AuthAction.login.success(loginReponse));\r\n    // Session control\r\n    yield put(AuthAction.sessionControl.request({ history }));\r\n    // Fetch tournament\r\n    yield put(TournamentAction.fetch.request({}));\r\n    // history.push('/');\r\n    toast.success(loginReponse.userMessage.message);\r\n  } else {\r\n    toast.error(loginReponse.userMessage.message);\r\n    yield put(AuthAction.login.failure(loginReponse));\r\n  }\r\n}\r\n\r\n// Registration\r\nfunction* registrationSaga({\r\n  payload: { history, ...registrationRequest },\r\n}: ReturnType<typeof AuthAction.registration.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Registration\r\n  const registrationReponse: RegistrationResponse = yield call(registration, registrationRequest);\r\n  if (registrationReponse.code === HTTPStatusCode.Success) {\r\n    yield put(AuthAction.registration.success(registrationReponse));\r\n    // Session control\r\n    yield put(AuthAction.sessionControl.request({ history }));\r\n    // Fetch tournament\r\n    yield put(TournamentAction.fetch.request({}));\r\n    history.push('/');\r\n    toast.success(registrationReponse.userMessage.message);\r\n  } else {\r\n    if (registrationReponse.errors) {\r\n      registrationReponse.errors.forEach((e) => toast.error(e));\r\n    }\r\n    yield put(AuthAction.registration.failure(registrationReponse));\r\n  }\r\n}\r\n\r\n// Update user\r\nfunction* updateUserSaga({\r\n  payload: { history, ...updateUserRequest },\r\n}: ReturnType<typeof AuthAction.update.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const updateReponse: AuthenticationResponse = yield call(updateUser, updateUserRequest);\r\n  if (updateReponse.code === HTTPStatusCode.Success) {\r\n    yield put(AuthAction.update.success(updateReponse));\r\n    history.push('/');\r\n    toast.success(updateReponse.userMessage.message);\r\n  } else {\r\n    toast.error(updateReponse.userMessage.message);\r\n    yield put(AuthAction.update.failure(updateReponse));\r\n  }\r\n}\r\n\r\n// Delete user\r\nfunction* deleteUserSaga({\r\n  payload: { history, ...deleteUserRequest },\r\n}: ReturnType<typeof AuthAction.delete.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const deleteReponse: AuthenticationResponse = yield call(deleteUser, deleteUserRequest);\r\n  if (deleteReponse.code === HTTPStatusCode.Success) {\r\n    yield put(AuthAction.delete.success(deleteReponse));\r\n    yield put(AuthAction.logout.request({ history }));\r\n    toast.success(deleteReponse.userMessage.message);\r\n  } else {\r\n    toast.error(deleteReponse.userMessage.message);\r\n    yield put(AuthAction.delete.failure(deleteReponse));\r\n  }\r\n}\r\n\r\nfunction logger(action: Action<any>) {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('Action : ', action);\r\n  }\r\n}\r\n\r\nexport const SessionSagas = [\r\n  takeEvery(AuthAction.logout.request, logoutSaga),\r\n  takeEvery(AuthAction.login.request, loginSaga),\r\n  takeEvery(AuthAction.update.request, updateUserSaga),\r\n  takeEvery(AuthAction.delete.request, deleteUserSaga),\r\n  takeEvery(AuthAction.registration.request, registrationSaga),\r\n  takeEvery(AuthAction.checkAuthentication.request, checkAuthenticationSaga),\r\n  takeLatest(AuthAction.sessionControl.request, watchSessionSaga),\r\n  takeEvery('*', logger),\r\n];\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport localForage from 'localforage';\r\nimport { RootState } from '@common/models';\r\nimport {\r\n  TournamentReducer,\r\n  PlayerReducer,\r\n  PairReducer,\r\n  SessionReducer,\r\n  Stage1Reducer,\r\n  Stage2Reducer,\r\n  initialTournamentState,\r\n  initialPairState,\r\n  initialPlayerState,\r\n  initialStage1State,\r\n  initialStage2State,\r\n  initialSessionState,\r\n} from 'redux/reducers';\r\nimport { TournamentSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas } from 'redux/sagas';\r\nimport { initialState } from '@common/models/common.models';\r\n\r\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\r\n\r\n// https://github.com/rt2zz/redux-persist\r\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\r\n// custom compose for the redux devtool extension\r\nconst composeEnhancers =\r\n  (process.env.NODE_ENV !== 'production' &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25,\r\n    })) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const rootReducers: ReducersMapObject<RootState> = {\r\n  tournamentState: TournamentReducer,\r\n  playerState: PlayerReducer,\r\n  pairState: PairReducer,\r\n  authState: SessionReducer,\r\n  stage1State: Stage1Reducer,\r\n  stage2State: Stage2Reducer,\r\n};\r\n\r\nexport const initialStoreState: RootState = {\r\n  tournamentState: initialTournamentState,\r\n  pairState: initialPairState,\r\n  playerState: initialPlayerState,\r\n  stage1State: initialStage1State,\r\n  stage2State: initialStage2State,\r\n  authState: initialSessionState,\r\n};\r\n\r\n// Meet the Store\r\nexport const store = createStore(\r\n  persistReducer(\r\n    {\r\n      key: 'app',\r\n      storage: localForage,\r\n    },\r\n    combineReducers(rootReducers)\r\n  ),\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nexport const storeWithState = (preloaded: RootState = initialState) =>\r\n  createStore(\r\n    persistReducer(\r\n      {\r\n        key: 'app',\r\n        storage: localForage,\r\n      },\r\n\r\n      combineReducers(rootReducers)\r\n    ),\r\n    preloaded,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Exec all sagas\r\nfunction* rootSagas() {\r\n  yield all([...TournamentSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas, ...Stage2Sagas, ...Stage1Sagas]);\r\n}\r\n\r\nsagaMiddleware.run(rootSagas);\r\n","export default __webpack_public_path__ + \"static/media/header.dc972d44.jpg\";","import React, { lazy } from 'react';\r\nimport { MaleIcon, FileMedicalIcon } from '../icons';\r\n\r\nconst lazySwagger = lazy(() => import('../../Swagger/Swagger'));\r\nconst lazyPlayer = lazy(() => import('../../Player/table'));\r\nconst lazyPlayerEdit = lazy(() => import('../../Player/edit'));\r\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\r\nconst lazyPairs = lazy(() => import('../../Pair/table'));\r\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\r\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\r\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\r\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\r\nconst lazyRedirectionControl = lazy(() =>\r\n  import('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\r\n);\r\n\r\nexport interface routeType {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  componentToRender: React.LazyExoticComponent<React.ComponentType<any>>;\r\n  icon?: React.ComponentType;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n}\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  {\r\n    path: '/login',\r\n    label: 'route.login',\r\n    exact: true,\r\n    componentToRender: lazyLogin,\r\n    visible: false,\r\n    private: false,\r\n    index: 0,\r\n  },\r\n  {\r\n    path: '/',\r\n    label: 'route.home',\r\n    exact: true,\r\n    componentToRender: lazyTournament,\r\n    visible: false,\r\n    private: true,\r\n    index: 10,\r\n  },\r\n  {\r\n    path: '/tournament',\r\n    label: 'route.tournament',\r\n    exact: true,\r\n    componentToRender: lazyPairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 20,\r\n  },\r\n  {\r\n    path: '/stage1',\r\n    label: 'route.stage1',\r\n    exact: true,\r\n    componentToRender: lazyStage1,\r\n    visible: false,\r\n    private: true,\r\n    index: 30,\r\n  },\r\n  {\r\n    path: '/player',\r\n    label: 'route.player',\r\n    exact: true,\r\n    componentToRender: lazyPlayer,\r\n    icon: MaleIcon,\r\n    visible: true,\r\n    private: true,\r\n    index: 40,\r\n  },\r\n  {\r\n    path: '/player/edit',\r\n    label: 'route.player',\r\n    exact: true,\r\n    componentToRender: lazyPlayerEdit,\r\n    visible: false,\r\n    private: true,\r\n    index: 41,\r\n  },\r\n  {\r\n    path: '/user',\r\n    label: 'route.user',\r\n    exact: true,\r\n    componentToRender: lazyUser,\r\n    visible: false,\r\n    private: true,\r\n    index: 50,\r\n  },\r\n  {\r\n    path: '/stage2',\r\n    label: 'route.stage2',\r\n    exact: true,\r\n    componentToRender: lazyStage2,\r\n    visible: false,\r\n    private: true,\r\n    index: 60,\r\n  },\r\n  {\r\n    path: '/swagger',\r\n    label: 'route.swagger',\r\n    exact: true,\r\n    componentToRender: lazySwagger,\r\n    icon: FileMedicalIcon,\r\n    visible: true,\r\n    private: true,\r\n    index: 70,\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'route.notFound',\r\n    exact: false,\r\n    componentToRender: lazyRedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000,\r\n  },\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find((e) => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find((e) => e.path === pathName);\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpBackend from 'i18next-http-backend';\r\n\r\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\r\ni18n\r\n  .use(HttpBackend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    debug: process.env.NODE_ENV === 'development',\r\n    //## Langs\r\n    // Language to use (overrides language detection)\r\n    // lng: 'it-IT',\r\n    // Array of allowed languages\r\n    supportedLngs: ['it-IT', 'en-US'],\r\n    // Language to use if translations in user language are not available.\r\n    fallbackLng: 'en-US',\r\n\r\n    //## Namespaces\r\n    // String or array of namespaces to load\r\n    ns: ['common', 'auth', 'tournament', 'pair'],\r\n    // Default namespace used if not passed to translation function\r\n    defaultNS: 'common',\r\n    // String or array of namespaces to lookup key if not found in given namespace.\r\n    fallbackNS: ['common'],\r\n\r\n    //## Load options\r\n    // Array of languages to preload.\r\n    preload: ['it-IT'],\r\n    /**\r\n     * Language codes to lookup, given set language is\r\n     * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\r\n     * 'currentOnly' --> 'en-US',\r\n     * 'languageOnly' --> 'en'\r\n     */\r\n    load: 'currentOnly',\r\n    interpolation: {\r\n      // react already safes from xss\r\n      escapeValue: false,\r\n    },\r\n    backend: {\r\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n\r\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'en-US' : 'it-IT');\r\n","import React, { CSSProperties } from 'react';\r\nimport backgroundImage from '../../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport routes from '../core/routing/Routes';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuthSelector } from 'redux/selectors/auth.selector';\r\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\r\nimport { AuthAction } from 'redux/actions';\r\nimport i18n, { getOtherLang } from 'i18n/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\n\r\n// Header applicazione, include navbar\r\nconst Header: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const { t } = useTranslation(['common']);\r\n\r\n  const { user, isAuthenticated, isAdmin } = useSelector(AuthSelector.getSession);\r\n\r\n  const logout = () => dispatch(AuthAction.logout.request({ history: currentHistory }));\r\n\r\n  // const yellow = '#ffc107';\r\n  const jumboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px',\r\n    minHeight: '28vh',\r\n  };\r\n\r\n  const titleStyle: CSSProperties = {\r\n    color: 'white',\r\n  };\r\n\r\n  const otherLang = getOtherLang();\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumboStyle}>\r\n        <h1 style={{ margin: '5vh' }}>\r\n          <strong style={titleStyle}>{applicationName}</strong>\r\n        </h1>\r\n        {isAuthenticated ? (\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n              <span>\r\n                <HomeIcon /> {t('route.home')}\r\n              </span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {routes.map((route) =>\r\n                  !route.visible || (route.path === '/swagger' && !isAdmin) ? null : (\r\n                    <Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\r\n                      <span>\r\n                        {route.icon ? <route.icon /> : null} {t(route.label)}\r\n                      </span>\r\n                    </Nav.Link>\r\n                  )\r\n                )}\r\n              </Nav>\r\n              {user ? (\r\n                <>\r\n                  <Dropdown alignRight as={ButtonGroup}>\r\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\r\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }}>\r\n                        {user.username} <UserIcon />\r\n                      </strong>\r\n                    </Button>\r\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" />\r\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as={Link}\r\n                        to={'/user'}\r\n                        eventKey=\"1\"\r\n                      >\r\n                        <span>{t('route.user')}</span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        onClick={() => i18n.changeLanguage(otherLang)}\r\n                        as=\"button\"\r\n                        eventKey=\"2\"\r\n                      >\r\n                        <span>\r\n                          <LanguageIcon /> {t(`common:lang.${otherLang}`)}\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as=\"button\"\r\n                        onClick={logout}\r\n                        eventKey=\"3\"\r\n                      >\r\n                        <span>\r\n                          <LogoutIcon /> <strong>{t('logout')} </strong>\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        ) : null}\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { routeType, getLabelByPathname } from './Routes';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { AuthSelector } from 'redux/selectors/auth.selector';\r\nimport { TournamentSelector } from 'redux/selectors';\r\n\r\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\r\nexport const ProtectedRoute: React.FC<routeType> = (props) => {\r\n  const isAuthenticated = useSelector(AuthSelector.isAuthenticated);\r\n  const session = useSelector(AuthSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(innerProps) => {\r\n        const { location } = innerProps;\r\n        console.log('ProtectedRoute : ', session, tournament, location);\r\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\r\n        if (isAuthenticated && location.pathname === '/login') {\r\n          console.log('ProtectedRoute => redirect to Home');\r\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\r\n        }\r\n\r\n        // Se non è una rotta protetta\r\n        if (!props.private) {\r\n          console.log('ProtectedRoute => public route : ', { ...props });\r\n          return <props.componentToRender {...props} />;\r\n        }\r\n\r\n        // Se è una rotta privata e non sono autenticato devo andare alla login\r\n        if (!isAuthenticated) {\r\n          console.log('ProtectedRoute => redirect to Login : ', { ...session });\r\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\r\n        }\r\n        /**\r\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\r\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\r\n         */\r\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\r\n        return <props.componentToRender {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default connect(ProtectedRoute);\r\n","import React from 'react';\r\n\r\ninterface IErrorBoundaryProps {\r\n  readonly children: JSX.Element | JSX.Element[];\r\n}\r\n\r\ninterface IErrorBoundaryState {\r\n  readonly error: any;\r\n  readonly errorInfo: any;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\r\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    const { children } = this.props;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n        process.env.NODE_ENV === 'development' ? (\r\n          <details className=\"preserve-space\">\r\n            {error && error.toString()}\r\n            <br />\r\n            {errorInfo.componentStack}\r\n          </details>\r\n        ) : undefined;\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { CSSProperties } from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\n\r\ninterface AppBadgeProps {}\r\nconst AppBadge: React.FC<AppBadgeProps> = () => {\r\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\r\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\r\n\r\n  const style: CSSProperties = {\r\n    position: 'absolute',\r\n    top: '0.1em',\r\n    right: '0.1em',\r\n  };\r\n  return (\r\n    <h4 style={style}>\r\n      <Badge variant=\"info\">\r\n        <span>v.</span>\r\n        <strong>{appVersion}</strong>\r\n        <span>\r\n          <i>\r\n            <small> @ {commitHash}</small>\r\n          </i>\r\n        </span>\r\n      </Badge>\r\n    </h4>\r\n  );\r\n};\r\n\r\nexport default AppBadge;\r\n","import React, { Suspense, useEffect } from 'react';\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\n// Routing\r\nimport { Switch, useHistory } from 'react-router';\r\nimport routes from '../core/routing/Routes';\r\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\r\nimport ErrorBoundary from '../core/errorBoundary';\r\n// Style\r\nimport './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuthAction } from 'redux/actions';\r\nimport { loadIcons } from '../core/icons';\r\n// Toasts\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast.css';\r\nimport AppBadge from './badge';\r\nimport { AuthSelector } from 'redux/selectors';\r\n// i18n\r\nimport '../../i18n/i18n';\r\n\r\nloadIcons();\r\nconst App: React.FC = (_) => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const isLoading = useSelector(AuthSelector.isLoading);\r\n\r\n  // Check if user is already logged\r\n  useEffect(() => {\r\n    dispatch(AuthAction.checkAuthentication.request({ history: currentHistory }));\r\n  }, [currentHistory, dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary>\r\n        {/* Loading translations */}\r\n        <Suspense fallback={<LoadingModal />}>\r\n          <Header />\r\n        </Suspense>\r\n        <Container fluid style={{ marginBottom: '20vh' }}>\r\n          {/*<RedirectionControl />*/}\r\n          <ToastContainer autoClose={2000} />\r\n          {isLoading ? (\r\n            // Loading store\r\n            <LoadingModal />\r\n          ) : (\r\n            // Loading lazy components\r\n            <Suspense fallback={<LoadingModal />}>\r\n              <Switch>\r\n                {routes.map((route) => (\r\n                  <ProtectedRoute {...route} key={route.index} />\r\n                ))}\r\n              </Switch>\r\n            </Suspense>\r\n          )}\r\n          <AppBadge />\r\n        </Container>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { StrictMode } from 'react';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from '../../redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { LoadingModal } from 'components/core/generic/Commons';\r\n\r\nconst Application: React.FC = () => (\r\n  <Provider store={store}>\r\n    <PersistGate loading={<LoadingModal show={true} />} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\nconst Entry: React.FC = () =>\r\n  process.env.NODE_ENV !== 'production' ? (\r\n    <StrictMode>\r\n      <Application />\r\n    </StrictMode>\r\n  ) : (\r\n    <Application />\r\n  );\r\n\r\nexport default Entry;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'typeface-roboto';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport it from 'date-fns/locale/it';\r\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\r\n\r\nimport Entry from './components/App/Entry';\r\n\r\nsetDefaultLocale('it');\r\nregisterLocale('it', it);\r\n\r\nReactDOM.render(<Entry />, document.getElementById('root'));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\r\nserviceWorker.unregister();\r\n\r\n// Redefine console so it does not in production env\r\nif (process.env.NODE_ENV === 'production') {\r\n  if (!window.console) (window as any).console = {};\r\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\r\n}\r\n","import {\r\n  FetchTournamentsRequest,\r\n  SaveTournamentRequest,\r\n  FetchTournamentsResponse,\r\n  SaveTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n  TournamentError,\r\n} from '@common/models/tournament.model';\r\nimport { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { TournamentDTO } from '@common/dto';\r\n\r\nconst actionName = '[Tournament]';\r\n\r\nexport const TournamentAction = {\r\n  // fetch tournaments\r\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\r\n    FetchTournamentsRequest,\r\n    FetchTournamentsResponse,\r\n    Error\r\n  >(),\r\n  // set selected tournament\r\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\r\n  // save a new tournament\r\n  save: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\r\n    SaveTournamentRequest,\r\n    SaveTournamentResponse,\r\n    TournamentError\r\n  >(),\r\n  // save a new tournament\r\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\r\n    UpdateTournamentRequest,\r\n    UpdateTournamentResponse,\r\n    TournamentError\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { PlayerRole } from '../dto';\r\nimport { RootState } from '.';\r\nimport { HTTPStatusCode } from './HttpStatusCode';\r\n\r\nexport enum Environment {\r\n  development = 'development',\r\n  test = 'test',\r\n  production = 'production',\r\n}\r\n\r\nexport interface GenericReponse {\r\n  code: HTTPStatusCode;\r\n  message: string;\r\n  userMessage: UserMessage;\r\n}\r\n\r\nexport enum UserMessageType {\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Danger = 'danger',\r\n}\r\nexport interface UserMessage {\r\n  type: UserMessageType;\r\n  message: string;\r\n}\r\n\r\nexport type OmitHistory<T> = Omit<T, 'history'>;\r\n// FIXME:\r\nexport type OmitGeneric<T extends GenericReponse> = Omit<T, 'code' | 'message' | 'userMessage'>;\r\n// FIXME: UNUSED\r\nexport type PickGeneric<T extends GenericReponse> = Pick<T, 'code' | 'message' | 'userMessage'>;\r\n\r\nexport const UnexpectedServerError: GenericReponse = {\r\n  code: HTTPStatusCode.InternalServerError,\r\n  message: 'Unexpected Server Error',\r\n  userMessage: {\r\n    type: UserMessageType.Danger,\r\n    // eslint-disable-next-line quotes\r\n    message: \"Errore server non previsto. E' stata avviata la procedura di autodistruzione.\",\r\n  },\r\n};\r\n\r\nexport const initialState: RootState = {\r\n  tournamentState: {\r\n    tournament: null,\r\n    tournamentsList: [],\r\n    isLoading: false,\r\n  },\r\n  playerState: {\r\n    isLoading: false,\r\n    playersList: [],\r\n    isSaving: false,\r\n  },\r\n  pairState: {\r\n    isLoading: false,\r\n    isSaving: false,\r\n  },\r\n  authState: {\r\n    isAuthenticated: false,\r\n    isAdmin: false,\r\n    isLoading: false,\r\n  },\r\n  stage1State: {\r\n    needRefresh: false,\r\n    selectedPairs: [\r\n      {\r\n        id: null,\r\n        tournamentId: 0,\r\n        rowNumber: 0,\r\n        player1: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        player2: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        alias: '-',\r\n        stage1Name: '',\r\n        placement: 0,\r\n        paid1: false,\r\n        paid2: false,\r\n      },\r\n    ],\r\n    isLoading: false,\r\n    stages: [],\r\n  },\r\n  stage2State: {\r\n    isLoading: false,\r\n  },\r\n};\r\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\r\nexport enum HTTPStatusCode {\r\n  Continue = 100,\r\n  SwitchingProtocols = 101,\r\n  Processing = 102,\r\n  EarlyHints = 103,\r\n\r\n  /**\r\n   * All `1xx` status codes.\r\n   */\r\n  InformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\r\n\r\n  OK = 200,\r\n  Created = 201,\r\n  Accepted = 202,\r\n  NonAuthoritativeInformation = 203,\r\n  NoContent = 204,\r\n  ResetContent = 205,\r\n  PartialContent = 206,\r\n  MultiStatus = 207,\r\n  AlreadyReported = 208,\r\n  IMUsed = 226,\r\n\r\n  /**\r\n   * All `2xx` status codes.\r\n   */\r\n  Success = OK |\r\n    Created |\r\n    Accepted |\r\n    NonAuthoritativeInformation |\r\n    NoContent |\r\n    ResetContent |\r\n    PartialContent |\r\n    MultiStatus |\r\n    AlreadyReported |\r\n    IMUsed,\r\n\r\n  MultipleChoices = 300,\r\n  MovedPermanently = 301,\r\n  Found = 302,\r\n  SeeOther = 303,\r\n  NotModified = 304,\r\n  UseProxy = 305,\r\n  SwitchProxy = 306,\r\n  TemporaryRedirect = 307,\r\n  PermanentRedirect = 308,\r\n\r\n  /**\r\n   * All `3xx` status codes.\r\n   */\r\n  Redirection = MultipleChoices |\r\n    MovedPermanently |\r\n    Found |\r\n    SeeOther |\r\n    NotModified |\r\n    UseProxy |\r\n    SwitchProxy |\r\n    TemporaryRedirect |\r\n    PermanentRedirect,\r\n\r\n  BadRequest = 400,\r\n  /**\r\n   * The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\r\n   */\r\n  Unauthorized = 401,\r\n  PaymentRequired = 402,\r\n  /**\r\n   * The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\r\n   * This status is similar to 401, but in this case, re-authenticating will make no difference.\r\n   * The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.\r\n   */\r\n  Forbidden = 403,\r\n  NotFound = 404,\r\n  MethodNotAllowed = 405,\r\n  NotAcceptable = 406,\r\n  ProxyAuthenticationRequired = 407,\r\n  RequestTimeout = 408,\r\n  Conflict = 409,\r\n  Gone = 410,\r\n  LengthRequired = 411,\r\n  PreconditionFailed = 412,\r\n  PayloadTooLarge = 413,\r\n  URITooLong = 414,\r\n  UnsupportedMediaType = 415,\r\n  RangeNotSatisfiable = 416,\r\n  ExpectationFailed = 417,\r\n  ImATeapot = 418,\r\n  MisdirectedRequest = 421,\r\n  UnprocessableEntity = 422,\r\n  Locked = 423,\r\n  FailedDependency = 424,\r\n  UpgradeRequired = 426,\r\n  PreconditionRequired = 428,\r\n  TooManyRequests = 429,\r\n  RequestHeaderFieldsTooLarge = 431,\r\n  UnavailableForLegalReasons = 451,\r\n\r\n  /**\r\n   * All `4xx` error codes.\r\n   */\r\n  ClientErrors = BadRequest |\r\n    Unauthorized |\r\n    PaymentRequired |\r\n    Forbidden |\r\n    NotFound |\r\n    MethodNotAllowed |\r\n    NotAcceptable |\r\n    ProxyAuthenticationRequired |\r\n    RequestTimeout |\r\n    Conflict |\r\n    Gone |\r\n    LengthRequired |\r\n    PreconditionFailed |\r\n    PayloadTooLarge |\r\n    URITooLong |\r\n    UnsupportedMediaType |\r\n    RangeNotSatisfiable |\r\n    ExpectationFailed |\r\n    ImATeapot |\r\n    MisdirectedRequest |\r\n    UnprocessableEntity |\r\n    Locked |\r\n    FailedDependency |\r\n    UpgradeRequired |\r\n    PreconditionRequired |\r\n    TooManyRequests |\r\n    RequestHeaderFieldsTooLarge |\r\n    UnavailableForLegalReasons,\r\n\r\n  InternalServerError = 500,\r\n  NotImplemented = 501,\r\n  BadGateway = 502,\r\n  ServiceUnavailable = 503,\r\n  GatewayTimeout = 504,\r\n  HTTPVersionNotSupported = 505,\r\n  VariantAlsoNegotiates = 506,\r\n  InsufficientStorage = 507,\r\n  LoopDetected = 508,\r\n  NotExtended = 510,\r\n  NetworkAuthenticationRequired = 511,\r\n\r\n  /**\r\n   * All `5xx` error codes.\r\n   */\r\n  ServerErrors = InternalServerError |\r\n    NotImplemented |\r\n    BadGateway |\r\n    ServiceUnavailable |\r\n    GatewayTimeout |\r\n    HTTPVersionNotSupported |\r\n    VariantAlsoNegotiates |\r\n    InsufficientStorage |\r\n    LoopDetected |\r\n    NotExtended |\r\n    NetworkAuthenticationRequired,\r\n}\r\n\r\nexport const InformationCodes = [\r\n  HTTPStatusCode.Continue,\r\n  HTTPStatusCode.SwitchingProtocols,\r\n  HTTPStatusCode.Processing,\r\n  HTTPStatusCode.EarlyHints,\r\n];\r\nexport const SuccessCodes = [\r\n  HTTPStatusCode.OK,\r\n  HTTPStatusCode.Created,\r\n  HTTPStatusCode.Accepted,\r\n  HTTPStatusCode.NonAuthoritativeInformation,\r\n  HTTPStatusCode.NoContent,\r\n  HTTPStatusCode.ResetContent,\r\n  HTTPStatusCode.PartialContent,\r\n  HTTPStatusCode.MultiStatus,\r\n  HTTPStatusCode.AlreadyReported,\r\n  HTTPStatusCode.IMUsed,\r\n];\r\n\r\nexport const RedirectCodes = [\r\n  HTTPStatusCode.MultipleChoices,\r\n  HTTPStatusCode.MovedPermanently,\r\n  HTTPStatusCode.Found,\r\n  HTTPStatusCode.SeeOther,\r\n  HTTPStatusCode.NotModified,\r\n  HTTPStatusCode.UseProxy,\r\n  HTTPStatusCode.SwitchProxy,\r\n  HTTPStatusCode.TemporaryRedirect,\r\n  HTTPStatusCode.PermanentRedirect,\r\n];\r\n\r\nexport const ClientErrorsCodes = [\r\n  HTTPStatusCode.BadRequest,\r\n  HTTPStatusCode.Unauthorized,\r\n  HTTPStatusCode.PaymentRequired,\r\n  HTTPStatusCode.Forbidden,\r\n  HTTPStatusCode.NotFound,\r\n  HTTPStatusCode.MethodNotAllowed,\r\n  HTTPStatusCode.NotAcceptable,\r\n  HTTPStatusCode.ProxyAuthenticationRequired,\r\n  HTTPStatusCode.RequestTimeout,\r\n  HTTPStatusCode.Conflict,\r\n  HTTPStatusCode.Gone,\r\n  HTTPStatusCode.LengthRequired,\r\n  HTTPStatusCode.PreconditionFailed,\r\n  HTTPStatusCode.PayloadTooLarge,\r\n  HTTPStatusCode.URITooLong,\r\n  HTTPStatusCode.UnsupportedMediaType,\r\n  HTTPStatusCode.RangeNotSatisfiable,\r\n  HTTPStatusCode.ExpectationFailed,\r\n  HTTPStatusCode.ImATeapot,\r\n  HTTPStatusCode.MisdirectedRequest,\r\n  HTTPStatusCode.UnprocessableEntity,\r\n  HTTPStatusCode.Locked,\r\n  HTTPStatusCode.FailedDependency,\r\n  HTTPStatusCode.UpgradeRequired,\r\n  HTTPStatusCode.PreconditionRequired,\r\n  HTTPStatusCode.TooManyRequests,\r\n  HTTPStatusCode.RequestHeaderFieldsTooLarge,\r\n  HTTPStatusCode.UnavailableForLegalReasons,\r\n];\r\n\r\nexport const ServerErrorsCodes = [\r\n  HTTPStatusCode.InternalServerError,\r\n  HTTPStatusCode.NotImplemented,\r\n  HTTPStatusCode.BadGateway,\r\n  HTTPStatusCode.ServiceUnavailable,\r\n  HTTPStatusCode.GatewayTimeout,\r\n  HTTPStatusCode.HTTPVersionNotSupported,\r\n  HTTPStatusCode.VariantAlsoNegotiates,\r\n  HTTPStatusCode.InsufficientStorage,\r\n  HTTPStatusCode.LoopDetected,\r\n  HTTPStatusCode.NotExtended,\r\n  HTTPStatusCode.NetworkAuthenticationRequired,\r\n];\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSignOutAlt,\r\n  faUser,\r\n  faMale,\r\n  faLanguage,\r\n  faHome,\r\n  faBroom,\r\n  faArrowAltCircleRight,\r\n  faArrowAltCircleLeft,\r\n  faTimes,\r\n  faToggleOff,\r\n  faToggleOn,\r\n  faPlus,\r\n  faTrophy,\r\n  faAngleDoubleRight,\r\n  faBan,\r\n  faFileMedicalAlt,\r\n  faEdit,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const loadIcons = () => {\r\n  library.add(\r\n    // Regular\r\n    faTrashAlt,\r\n    faSave,\r\n    // Solid\r\n    faSignOutAlt,\r\n    faUser,\r\n    faMale,\r\n    faLanguage,\r\n    faHome,\r\n    faBroom,\r\n    faArrowAltCircleRight,\r\n    faArrowAltCircleLeft,\r\n    faTimes,\r\n    faToggleOff,\r\n    faToggleOn,\r\n    faPlus,\r\n    faTrophy,\r\n    faAngleDoubleRight,\r\n    faBan,\r\n    faFileMedicalAlt,\r\n    faEdit\r\n  );\r\n};\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst SOLID = 'fas';\r\nconst REGULAR = 'far';\r\n\r\n// Wrapper per icone FontAwesome\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\r\n);\r\n\r\n// Solid\r\nexport const EditIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"edit\" />\r\n);\r\nexport const FileMedicalIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"file-medical-alt\" />\r\n);\r\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\r\n);\r\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\r\n);\r\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\r\n);\r\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\r\n);\r\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\r\n);\r\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\r\n);\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\r\n);\r\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\r\n);\r\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\r\n);\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\r\n);\r\n","export * from './pair.dto';\r\nexport * from './player.dto';\r\nexport * from './stage1.dto';\r\nexport * from './stage2.dto';\r\nexport * from './tournament.dto';\r\nexport * from './user.dto';\r\n","import { PairDTO } from '@common/dto';\r\nimport {\r\n  FetchPairsRequest,\r\n  FetchPairsResponse,\r\n  SavePairResponse,\r\n  SavePairRequest,\r\n  DeletePairsRequest,\r\n  DeletePairsResponse,\r\n  FindAliasRequest,\r\n  FindAliasResponse,\r\n  SelectPairsResponse,\r\n  SelectPairsRequest,\r\n} from '@common/models';\r\nimport { deleteWrapper, getWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\r\nimport { getEmptyPlayer } from './player.service';\r\n\r\nconst API_VERSION = '/api/v2/pair';\r\nconst listAPI = (tId: number) => `${API_VERSION}/list?tId=${encodeURIComponent(tId)}`;\r\nconst aliasAPI = (player1Id: number, player2Id: number) =>\r\n  `${API_VERSION}/alias?player1Id=${encodeURIComponent(player1Id)}&player2Id=${encodeURIComponent(player2Id)}`;\r\nconst selectAPI = () => `${API_VERSION}/selected`;\r\nconst newAPI = () => `${API_VERSION}/new`;\r\nconst deleteAPI = () => `${API_VERSION}/delete`;\r\n\r\nexport const fetchPairs = async ({ tId }: FetchPairsRequest): Promise<FetchPairsResponse> =>\r\n  getWrapper<FetchPairsResponse>(listAPI(tId));\r\nexport const findAlias = async ({ player1Id, player2Id }: FindAliasRequest): Promise<FindAliasResponse> =>\r\n  getWrapper<FindAliasResponse>(aliasAPI(player1Id, player2Id));\r\nexport const selectPairs = async (request: SelectPairsRequest): Promise<SelectPairsResponse> =>\r\n  putWrapper<SelectPairsRequest, SelectPairsResponse>(selectAPI(), request);\r\n\r\nexport const postPair = async (request: SavePairRequest): Promise<SavePairResponse> =>\r\n  postWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\r\n\r\n// FIXME: create update\r\nexport const updatePair = async (request: SavePairRequest): Promise<SavePairResponse> =>\r\n  postWrapper<SavePairRequest, SavePairResponse>(newAPI(), request);\r\n\r\nexport const deletePairs = async (request: DeletePairsRequest): Promise<DeletePairsResponse> =>\r\n  deleteWrapper<DeletePairsRequest, DeletePairsResponse>(deleteAPI(), request);\r\n\r\nexport const getEmptyPair = (label?: string): PairDTO => ({\r\n  id: null,\r\n  tournamentId: 0,\r\n  rowNumber: 0,\r\n  player1: getEmptyPlayer(),\r\n  player2: getEmptyPlayer(),\r\n  alias: label || '',\r\n  stage1Name: '',\r\n  placement: 0,\r\n  paid1: false,\r\n  paid2: false,\r\n});\r\n","import { PlayerDTO, PlayerRole } from '@common/dto';\r\nimport {\r\n  FetchPlayersRequest,\r\n  FetchPlayersResponse,\r\n  DeletePlayersRequest,\r\n  DeletePlayersResponse,\r\n  SavePlayerResponse,\r\n  SavePlayerRequest,\r\n} from '@common/models';\r\nimport { UnexpectedServerError } from '@common/models/common.models';\r\nimport { DEFAULT_HEADERS, deleteWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\r\n  try {\r\n    const response = await fetch(tId ? `/api/v2/player/list/${encodeURIComponent(tId)}` : '/api/v2/player/list', {\r\n      method: 'GET',\r\n      ...DEFAULT_HEADERS,\r\n    });\r\n    const result: FetchPlayersResponse = await response.json();\r\n    return {\r\n      ...result,\r\n      playersList: addEmpty ? [...result.playersList, getEmptyPlayer('Nessun Giocatore')] : result.playersList,\r\n    };\r\n  } catch (e) {\r\n    return { ...UnexpectedServerError, playersList: [] };\r\n  }\r\n};\r\n\r\nexport const deletePlayers = async ({ players }: DeletePlayersRequest): Promise<DeletePlayersResponse> =>\r\n  deleteWrapper<DeletePlayersRequest, DeletePlayersResponse>('/api/v2/player/delete', { players });\r\n\r\nexport const savePlayer = async ({ player }: SavePlayerRequest): Promise<SavePlayerResponse> =>\r\n  postWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/new', { player });\r\n\r\nexport const updatePlayer = async ({ player }: SavePlayerRequest): Promise<SavePlayerResponse> =>\r\n  putWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/update', { player });\r\n\r\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\r\n  id: null,\r\n  name: '',\r\n  surname: '',\r\n  alias: '',\r\n  label: label || '',\r\n  role: PlayerRole.GoalKeeper,\r\n  email: '',\r\n  phone: '',\r\n  match_played: 0,\r\n  match_won: 0,\r\n  total_score: 0,\r\n  editable: false,\r\n  rowNumber: 0,\r\n});\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const AuthSelector = {\r\n  isLoading: ({ authState: { isLoading } }: RootState) => isLoading,\r\n  isAdmin: ({ authState: { isAdmin } }: RootState) => isAdmin,\r\n  isAuthenticated: ({ authState: { isAuthenticated } }: RootState) => isAuthenticated,\r\n  getUser: ({ authState: { user } }: RootState) => user,\r\n  getSession: ({ authState }: RootState) => authState,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const PairSelector = {\r\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\r\n  getPairsList: ({ pairState: { pairsList } }: RootState) => pairsList,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const PlayerSelector = {\r\n  // Default states\r\n  isLoading: ({ playerState: { isLoading } }: RootState) => isLoading,\r\n  isSaving: ({ playerState: { isSaving } }: RootState) => isSaving,\r\n  // Player\r\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\r\n  getPlayer: ({ playerState: { player } }: RootState) => player,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const Stage1Selector = {\r\n  isLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\r\n  getSelectedRows: ({ stage1State: { selectedRows } }: RootState) => selectedRows || null,\r\n  getSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\r\n  getNeedRefresh: ({ stage1State: { needRefresh } }: RootState) => needRefresh,\r\n  // Utilizzare una closure nel compoanente per accedere allo specifico stage\r\n  getStages: ({ stage1State: { stages } }: RootState) => stages,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const Stage2Selector = {\r\n  isLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\r\n  getCells: ({ stage2State: { cells } }: RootState) => cells,\r\n  getRowsNumber: ({ stage2State: { rowsNumber } }: RootState) => rowsNumber,\r\n};\r\n","import React, { CSSProperties } from 'react';\r\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\r\nconst fancyModalFooter = (\r\n  <>\r\n    <Spinner animation=\"border\" variant=\"light\" />\r\n    <Spinner animation=\"border\" variant=\"primary\" />\r\n    <Spinner animation=\"border\" variant=\"secondary\" />\r\n    <Spinner animation=\"border\" variant=\"success\" />\r\n    <Spinner animation=\"border\" variant=\"danger\" />\r\n    <Spinner animation=\"border\" variant=\"warning\" />\r\n    <Spinner animation=\"border\" variant=\"info\" />\r\n    <Spinner animation=\"border\" variant=\"dark\" />\r\n  </>\r\n);\r\n// Loading Modal\r\ninterface LoadingModalPropsType {\r\n  show?: boolean;\r\n  title?: string;\r\n  message?: string;\r\n  onHide?: () => void;\r\n}\r\n\r\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\r\n  title = 'Caricamento....',\r\n  message = 'Caricamento....',\r\n  show = true,\r\n  onHide = () => (show = false),\r\n}) => (\r\n  <Modal show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\r\n      {message}\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport interface YesNoModalProps {\r\n  title: string;\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\r\n  title,\r\n  message,\r\n  show,\r\n  onHide = () => (show = false),\r\n  onClick,\r\n}) => (\r\n  <Modal\r\n    className=\"YesNoModal\"\r\n    show={show}\r\n    onHide={onHide}\r\n    centered\r\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\r\n  >\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body style={modalStyle}>\r\n      <Container fluid>\r\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\r\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\r\n          <Col>\r\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\r\n              Annulla\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\r\n              Conferma\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\nexport interface IToastProps {\r\n  message: string;\r\n  type?: toastType;\r\n}\r\n\r\nexport type toastType = 'success' | 'warning' | 'danger';\r\n\r\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\n// TODO: Componente fallback se route non trovata\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}