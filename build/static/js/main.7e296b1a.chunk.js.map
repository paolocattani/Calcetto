{"version":3,"sources":["models/tournament.model.ts","components/core/generic/Commons.tsx","components/Pair/helper.ts","models/player.model.ts","assets/header.jpg","models/index.ts","actions/constants.ts","actions/tournament.action.ts","components/core/routing/Routes.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/App/App.tsx","serviceWorker.ts","models/user.model.ts","reducers/tournament.reducer.ts","reducers/player.reducer.ts","reducers/pair.reducer.ts","reducers/session.reducer.ts","services/tournament.service.ts","sagas/tournament.saga.ts","sagas/player.saga.ts","services/pair.service.ts","sagas/pair.saga.ts","services/session.service.ts","sagas/session.saga.ts","reducers/stage1.reducer.ts","store.ts","index.tsx","actions/pair.action.ts","actions/stage1.action.ts","actions/session.action.ts","actions/player.action.ts","selectors/session.selector.ts","services/player.service.ts"],"names":["TournamentProgress","LoadingModal","message","show","onHide","size","centered","Header","closeButton","Title","Body","Footer","animation","variant","GenericToast","type","className","key","LogSessionContext","session","useSelector","SessionSelector","getSession","Object","entries","map","value","RedirectionControl","props","location","useLocation","pathname","getEmptyRowModel","label","id","tId","rowNumber","player1","getEmptyPlayer","player2","alias","stage1Name","placement","paid1","paid2","fetchPairs","setterFunction","a","fetch","method","headers","response","json","result","customStyles","option","provided","state","backgroundColor","color","input","control","height","marginBottom","singleValue","valueContainer","fontSize","fetchData","rows","players","console","log","PlayerRole","module","exports","Request","Success","Failure","ActionName","TournamentAction","getTournaments","createAsyncAction","setTournament","createAction","saveTournament","lazyPlayer","lazy","lazyTournament","lazyPairs","lazyStage1","lazyStage2","routes","path","exact","ComponentToRender","visible","private","index","then","default","dispatch","useDispatch","logout","ok","SessionAction","updateSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","Jumbotron","style","margin","isAuthenticated","Navbar","collapseOnSelect","expand","bg","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","route","user","Dropdown","alignRight","ButtonGroup","Button","opacity","disabled","username","split","Menu","Item","onClick","eventKey","Divider","borderTopColor","ProtectedRoute","render","innerProps","from","pathName","element","find","e","getLabelByPathname","library","add","fas","far","App","_","useEffect","checkAuthentication","request","Container","fluid","fallback","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","UserRole","TournamentReducer","createReducer","tournament","tournamentsList","isLoading","handleAction","errorMessage","undefined","failure","payload","success","results","length","PlayerReducer","PlayerAction","getPlayers","playersList","PairReducer","PairAction","getPairs","pairList","SessionReducer","isAdmin","role","Admin","fetchTournaments","handleError","postTournament","model","body","JSON","stringify","warn","Error","getTournamentsSaga","postTournamentSaga","action","call","put","TournamentsSagas","takeEvery","getPlayersSaga","fetchPlayers","PlayersSagas","getPairsSaga","PairsSagas","CheckAuthentication","checkAuthenticationSaga","SessionSagas","initialState","selectedPairs","Stage1Reducer","Stage1Action","setSelectedPairs","stageName","selected","selectedRows","Map","set","filter","pair","rootSagas","composeEnhancer","compose","sagaMiddleware","createSagaMiddleware","commonReducers","tournamentState","playerState","pairState","sessionState","stage1State","store","createStore","combineReducers","applyMiddleware","all","run","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","getUser","addEmpty","name","surname","GoalKeeper","email","phone","match_played","match_won","total_score","editable"],"mappings":"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","file":"static/js/main.7e296b1a.chunk.js","sourcesContent":["// Requests\r\nexport interface FetchTournamentsRequest {\r\n  tId?: number;\r\n}\r\nexport interface PostTournamentRequest {\r\n  model: TournamentDTO;\r\n}\r\n\r\n// Responses\r\nexport interface FetchTournamentsResponse {\r\n  results: TournamentDTO[];\r\n}\r\nexport interface PostTournamentResponse {\r\n  result: TournamentDTO | null;\r\n}\r\n//\r\nexport interface TournamentState {\r\n  tournament: TournamentDTO | null;\r\n  tournamentsList: TournamentDTO[] | [];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface TournamentDTO {\r\n  id: number | null;\r\n  name: string;\r\n  date: Date;\r\n  progress: TournamentProgress;\r\n  public: boolean;\r\n  label: string;\r\n  ownerId: number | null;\r\n}\r\n\r\nexport enum TournamentProgress {\r\n  New = 'New',\r\n  PairsSelection = 'PairsSelection',\r\n  Stage1 = 'Stage1',\r\n  Stage2 = 'Stage2',\r\n}\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n\r\n// Loading Modal\r\ntype loadingModalPropsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\nexport const LoadingModal: React.FC<loadingModalPropsType> = ({\r\n  message,\r\n  show,\r\n  onHide = () => (show = false),\r\n}: loadingModalPropsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\nexport interface IToastProps {\r\n  message: string;\r\n  type?: toastType;\r\n}\r\n\r\nexport type toastType = 'success' | 'warning' | 'danger';\r\n\r\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const LogSessionContext: React.FC<{}> = () => {\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  return (\r\n    <>\r\n      {Object.entries(session).map(([key, value]) => (\r\n        <p>\r\n          {key} : {value}\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import { getEmptyPlayer } from 'services/player.service';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO } from 'models';\r\n\r\nexport const getEmptyRowModel = (label?: string): PairDTO => ({\r\n  id: null,\r\n  tId: 0,\r\n  rowNumber: 0,\r\n  player1: getEmptyPlayer(),\r\n  player2: getEmptyPlayer(),\r\n  alias: label || '',\r\n  stage1Name: '',\r\n  placement: 0,\r\n  paid1: false,\r\n  paid2: false,\r\n});\r\n\r\nexport const fetchPairs = (setterFunction: React.Dispatch<React.SetStateAction<PairDTO[]>>, tId: number) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption: PairDTO) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.alias && selectedOption.alias !== '') return `${selectedOption.alias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n\r\nexport const fetchData = async (tId: number) => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  console.log('rows : ', rows);\r\n  return { rows, players };\r\n};\r\n","// Requests\r\nexport interface FetchPlayersRequest {\r\n  tId?: number;\r\n  addEmpty: boolean;\r\n}\r\n// Responses\r\nexport interface FetchPlayersResponse {\r\n  results: PlayerDTO[];\r\n}\r\n\r\nexport interface PlayerState {\r\n  player?: PlayerDTO;\r\n  playerList?: PlayerDTO[];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface PlayerDTO {\r\n  id: number | null;\r\n  name: string;\r\n  surname: string;\r\n  alias: string;\r\n  label: string;\r\n  role: PlayerRole;\r\n  email: string;\r\n  phone: string;\r\n  userId?: number;\r\n  match_played?: number;\r\n  match_won?: number;\r\n  total_score?: number;\r\n  editable: boolean;\r\n}\r\n\r\nexport enum PlayerRole {\r\n  GoalKeeper = 'Portiere',\r\n  Master = 'Master',\r\n  Striker = 'Attaccante',\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","export * from './common.model';\r\nexport * from './pair.model';\r\nexport * from './player.model';\r\nexport * from './tournament.model';\r\nexport * from './session.model';\r\nexport * from './stage1.model';\r\nexport * from './stage2.model';\r\n","export const Request = 'Request';\r\nexport const Success = 'Success';\r\nexport const Failure = 'Failure';\r\n","import {\r\n  FetchTournamentsRequest,\r\n  TournamentDTO,\r\n  PostTournamentRequest,\r\n  FetchTournamentsResponse,\r\n  PostTournamentResponse,\r\n} from '../models/tournament.model';\r\nimport { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { Failure, Success, Request } from './constants';\r\n\r\nconst ActionName = '[Tournament]';\r\n\r\nexport const TournamentAction = {\r\n  // fetch tournaments\r\n  getTournaments: createAsyncAction(\r\n    `${ActionName} Get Tournament ${Request}`,\r\n    `${ActionName} Get Tournament ${Success}`,\r\n    `${ActionName} Get Tournament ${Failure}`\r\n  )<FetchTournamentsRequest, FetchTournamentsResponse, Error>(),\r\n  // set selected tournament\r\n  setTournament: createAction(`${ActionName} Set Tournament`)<TournamentDTO | null>(),\r\n  // save a new tournament\r\n  saveTournament: createAsyncAction(\r\n    `${ActionName} Save Tournament ${Request}`,\r\n    `${ActionName} Save Tournament ${Success}`,\r\n    `${ActionName} Save Tournament ${Failure}`\r\n  )<PostTournamentRequest, PostTournamentResponse, Error>(),\r\n};\r\n","import React, { lazy } from 'react';\r\n\r\n// import { OrganizationChartDemo } from '../Stage2/table';\r\nconst lazyPlayer = lazy(() => import('../../Player/table'));\r\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\r\nconst lazyPairs = lazy(() => import('../../Pair/table'));\r\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\r\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\r\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\r\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\r\nconst lazyRedirectionControl = lazy(() =>\r\n  import('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\r\n);\r\n\r\nexport interface routeType {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  ComponentToRender: React.ComponentType;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n}\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    ComponentToRender: lazyLogin,\r\n    visible: false,\r\n    private: false,\r\n    index: 0,\r\n  },\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    ComponentToRender: lazyTournament,\r\n    visible: false,\r\n    private: true,\r\n    index: 10,\r\n  },\r\n  {\r\n    path: '/tournament',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    ComponentToRender: lazyPairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 20,\r\n  },\r\n  {\r\n    //FIXME:\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    ComponentToRender: lazyStage1,\r\n    visible: false,\r\n    private: true,\r\n    index: 30,\r\n  },\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    ComponentToRender: lazyPlayer,\r\n    visible: true,\r\n    private: true,\r\n    index: 40,\r\n  },\r\n  {\r\n    path: '/user',\r\n    label: 'Gestione Utente',\r\n    exact: true,\r\n    ComponentToRender: lazyUser,\r\n    visible: false,\r\n    private: true,\r\n    index: 50,\r\n  },\r\n  {\r\n    path: '/stage2',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    ComponentToRender: lazyStage2 as any,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    private: true,\r\n    index: 100,\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'Not Found',\r\n    exact: false,\r\n    ComponentToRender: lazyRedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000,\r\n  },\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find((e) => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find((e) => e.path === pathName);\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport backgroundImage from '../../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport routes from '../core/routing/Routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\nimport { SessionAction } from 'actions';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\nexport const Header: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  const logout = async () => {\r\n    const response = await fetch('/api/v1/auth/logout');\r\n    if (response.ok) dispatch(SessionAction.updateSession(null));\r\n    // TODO: gestire messaggi utente\r\n  };\r\n\r\n  // const yellow = '#ffc107';\r\n  const jumboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px',\r\n    minHeight: '28vh',\r\n  };\r\n\r\n  const titleStyle: CSSProperties = {\r\n    color: 'white',\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumboStyle}>\r\n        <h1 style={{ margin: '5vh' }}>\r\n          <strong style={titleStyle}>{applicationName}</strong>\r\n        </h1>\r\n        {session.isAuthenticated ? (\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {routes.map((route) =>\r\n                  route.visible ? (\r\n                    route.private && !session.isAuthenticated ? null : (\r\n                      <Nav.Link as={Link} key={route.index} to={route.path}>\r\n                        {route.label}\r\n                      </Nav.Link>\r\n                    )\r\n                  ) : null\r\n                )}\r\n              </Nav>\r\n              {session.user ? (\r\n                <>\r\n                  <Dropdown alignRight as={ButtonGroup}>\r\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\r\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }}>{session.user.username}</strong>\r\n                    </Button>\r\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" />\r\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as=\"button\"\r\n                        variant=\"warning\"\r\n                        onClick={logout}\r\n                        eventKey=\"1\"\r\n                      >\r\n                        Log out\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as={Link}\r\n                        to={'/user'}\r\n                        eventKey=\"2\"\r\n                      >\r\n                        Gestione Utente\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        ) : null}\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { routeType, getLabelByPathname } from './Routes';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n\r\nexport const ProtectedRoute: React.FC<routeType> = (props) => {\r\n  const isAuthenticated = useSelector(SessionSelector.isAuthenticated);\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(innerProps) => {\r\n        const { location } = innerProps;\r\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\r\n        if (isAuthenticated && location.pathname === '/login') {\r\n          console.log('ProtectedRoute => redirect to Home');\r\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\r\n        }\r\n\r\n        // Se non è una rotta protetta\r\n        if (!props.private) {\r\n          console.log('ProtectedRoute => public route : ', { ...props });\r\n          return <props.ComponentToRender {...props} />;\r\n        }\r\n\r\n        // Se è una rotta privata e non sono autenticato devo andare alla login\r\n        if (!isAuthenticated) {\r\n          console.log('ProtectedRoute => redirect to Login : ', { ...session });\r\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\r\n        }\r\n        /**\r\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\r\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\r\n         */\r\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\r\n        return <props.ComponentToRender {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { Suspense, useEffect } from 'react';\r\n// Components\r\nimport { Header } from '../Header/Header';\r\nimport { LoadingModal /* LogSessionContext */ } from '../core/generic/Commons';\r\n// Routing\r\nimport { Switch } from 'react-router';\r\nimport routes from '../core/routing/Routes';\r\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\r\n// Style\r\nimport './App.css';\r\nimport { Container } from 'react-bootstrap';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SessionAction } from 'actions';\r\n\r\nlibrary.add(fas, far);\r\n\r\nconst App: React.FC = (_) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Check if user is already logged\r\n  useEffect(() => {\r\n    dispatch(SessionAction.checkAuthentication.request({}));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Container fluid style={{ marginBottom: '20vh' }}>\r\n        {/*<LogSessionContext /> */}\r\n        {/*<RedirectionControl />*/}\r\n        <Suspense fallback={<LoadingModal show={true} message={'....Caricamento'} />}>\r\n          <Switch>\r\n            {routes.map((route) => (\r\n              <ProtectedRoute {...route} key={route.index} />\r\n            ))}\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = _ => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = _ => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { PlayerDTO } from './player.model';\r\n\r\nexport interface UserState {}\r\n\r\nexport interface UserDTO {\r\n  id: number;\r\n  username: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  phone: string;\r\n  role: UserRole;\r\n  birthday: Date;\r\n  label: string;\r\n  player: PlayerDTO;\r\n}\r\nexport enum UserRole {\r\n  Admin = 'Admin',\r\n  User = 'User',\r\n}\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { TournamentAction } from '../actions/tournament.action';\r\nimport { TournamentState } from 'models/tournament.model';\r\n\r\nconst initialState: TournamentState = {\r\n  tournament: null,\r\n  tournamentsList: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialState)\r\n  // Request\r\n  .handleAction([TournamentAction.getTournaments.request, TournamentAction.saveTournament.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction(\r\n    [TournamentAction.getTournaments.failure, TournamentAction.saveTournament.failure],\r\n    (state, { payload: { message } }) => ({\r\n      ...state,\r\n      errorMessage: message,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  // Fetch Tournament\r\n  .handleAction(TournamentAction.getTournaments.success, (state, { payload: { results } }) => ({\r\n    ...state,\r\n    tournament: results && results.length > 0 ? results[0] : state.tournament,\r\n    tournamentsList: results,\r\n    isLoading: false,\r\n  }))\r\n  // Set selected tournament\r\n  .handleAction(TournamentAction.setTournament, (state, { payload }) => ({\r\n    ...state,\r\n    tournament: payload,\r\n    isLoading: false,\r\n  }))\r\n  // Create a new tournament\r\n  .handleAction(TournamentAction.saveTournament.success, (state, { payload: { result } }) => ({\r\n    ...state,\r\n    tournament: result,\r\n    isLoading: false,\r\n  }));\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PlayerState } from 'models/player.model';\r\nimport { PlayerAction } from 'actions/player.action';\r\n\r\nconst initialState: PlayerState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialState)\r\n  // Request\r\n  .handleAction([PlayerAction.getPlayers.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction([PlayerAction.getPlayers.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PlayerAction.getPlayers.success, (state, { payload: { results } }) => ({\r\n    ...state,\r\n    playersList: results,\r\n    isLoading: false,\r\n  }));\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PairState } from 'models';\r\nimport { PairAction } from 'actions';\r\n\r\nconst initialState: PairState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const PairReducer = createReducer<PairState, Action>(initialState)\r\n  // Request\r\n  .handleAction([PairAction.getPairs.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction([PairAction.getPairs.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PairAction.getPairs.success, (state, { payload: { results } }) => ({\r\n    ...state,\r\n    pairList: results,\r\n    isLoading: false,\r\n  }));\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { SessionState } from 'models/session.model';\r\nimport { SessionAction } from 'actions/session.action';\r\nimport { UserRole } from 'models/user.model';\r\n\r\nconst initialState: SessionState = {\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  isLoading: false,\r\n};\r\n\r\nexport const SessionReducer = createReducer<SessionState, Action>(initialState)\r\n  // Request\r\n  .handleAction([SessionAction.checkAuthentication.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction([SessionAction.checkAuthentication.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Check Authentication\r\n  .handleAction(SessionAction.updateSession, (state, { payload }) => ({\r\n    ...state,\r\n    user: payload ? payload : undefined,\r\n    isAuthenticated: payload ? true : false,\r\n    isAdmin: payload ? payload.role === UserRole.Admin : false,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction(SessionAction.checkAuthentication.success, (state, { payload: { user } }) => ({\r\n    ...state,\r\n    user,\r\n    isAuthenticated: user ? true : false,\r\n    isAdmin: user ? user.role === UserRole.Admin : false,\r\n    isLoading: false,\r\n  }));\r\n","import {\r\n  FetchTournamentsRequest,\r\n  FetchTournamentsResponse,\r\n  TournamentDTO,\r\n  PostTournamentRequest,\r\n  PostTournamentResponse,\r\n} from '../models/tournament.model';\r\n\r\nexport const fetchTournaments = async (request: FetchTournamentsRequest): Promise<FetchTournamentsResponse> => {\r\n  try {\r\n    const response = await fetch(request?.tId ? `/api/v1/tournament/${request.tId}` : '/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const results: TournamentDTO[] = await response.json();\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e);\r\n    return { results: [] };\r\n  }\r\n};\r\nexport const postTournament = async ({ model }: PostTournamentRequest): Promise<PostTournamentResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model),\r\n    });\r\n    const result: TournamentDTO = await response.json();\r\n    return { result };\r\n  } catch (e) {\r\n    handleError(e);\r\n    return { result: null };\r\n  }\r\n};\r\n\r\nconst handleError = (errorMessage: string): PostTournamentResponse => {\r\n  console.warn('Failed to fetch tournaments', errorMessage);\r\n  throw new Error('Something went wrong');\r\n};\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { fetchTournaments, postTournament } from 'services/tournament.service';\r\nimport { PostTournamentResponse, FetchTournamentsResponse } from 'models/tournament.model';\r\nimport { TournamentAction } from 'actions/tournament.action';\r\n\r\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\r\nfunction* getTournamentsSaga(\r\n  action: ReturnType<typeof TournamentAction.getTournaments.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchTournamentsResponse = yield call(fetchTournaments, action.payload);\r\n    yield put(TournamentAction.getTournaments.success(response));\r\n  } catch (err) {\r\n    yield put(TournamentAction.getTournaments.failure(err));\r\n  }\r\n}\r\n\r\nfunction* postTournamentSaga(\r\n  action: ReturnType<typeof TournamentAction.saveTournament.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('post saga : ', action.payload);\r\n\r\n    const response: PostTournamentResponse = yield call(postTournament, action.payload);\r\n    yield put(TournamentAction.saveTournament.success(response));\r\n  } catch (err) {\r\n    yield put(TournamentAction.saveTournament.failure(err));\r\n  }\r\n}\r\n\r\nexport const TournamentsSagas = [\r\n  takeEvery(TournamentAction.getTournaments.request, getTournamentsSaga),\r\n  takeEvery(TournamentAction.saveTournament.request, postTournamentSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PlayerAction } from 'actions/player.action';\r\nimport { FetchPlayersResponse } from 'models/player.model';\r\nimport { fetchPlayers } from 'services/player.service';\r\n\r\nfunction* getPlayersSaga(\r\n  action: ReturnType<typeof PlayerAction.getPlayers.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('getPlayersSaga');\r\n\r\n    const response: FetchPlayersResponse = yield call(fetchPlayers, action.payload);\r\n    console.log('getPlayersSaga: ', response);\r\n\r\n    yield put(PlayerAction.getPlayers.success(response));\r\n  } catch (err) {\r\n    yield put(PlayerAction.getPlayers.failure(err));\r\n  }\r\n}\r\n\r\nexport const PlayersSagas = [takeEvery(PlayerAction.getPlayers.request, getPlayersSaga)];\r\n","import { FetchPairsRequest, FetchPairsResponse, PostPairsResponse, PostPairsRequest } from 'models';\r\n\r\nexport const fetchPairs = async ({ tId }: FetchPairsRequest): Promise<FetchPairsResponse> => {\r\n  try {\r\n    console.log('fetchPairs : ', tId);\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const results = await response.json();\r\n    console.log('fetchPairs : ', tId, results);\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e);\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nexport const postPair = async ({ models }: PostPairsRequest): Promise<PostPairsResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/pair', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(models),\r\n    });\r\n    const results = await response.json();\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e);\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nconst handleError = (errorMessage: string): FetchPairsResponse => {\r\n  console.warn('Pair Error : ', errorMessage);\r\n  throw new Error('Something went wrong');\r\n};\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PairAction } from 'actions';\r\nimport { fetchPairs } from 'services/pair.service';\r\nimport { FetchPairsResponse } from 'models';\r\n\r\nfunction* getPairsSaga(action: ReturnType<typeof PairAction.getPairs.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchPairsResponse = yield call(fetchPairs, action.payload);\r\n    console.log('getPairsSaga : ', response);\r\n\r\n    yield put(PairAction.getPairs.success(response));\r\n  } catch (err) {\r\n    yield put(PairAction.getPairs.failure(err));\r\n  }\r\n}\r\n\r\nexport const PairsSagas = [takeEvery(PairAction.getPairs.request, getPairsSaga)];\r\n","import { CheckAuthenticationRequest, CheckAuthenticationResponse } from 'models';\r\nimport { UserDTO } from 'models/user.model';\r\n\r\n// eslint-disable-next-line no-empty-pattern\r\nexport const CheckAuthentication = async ({}: CheckAuthenticationRequest): Promise<CheckAuthenticationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/');\r\n    const user: UserDTO | null = await response.json();\r\n    console.log('SessionContext.user : ', user);\r\n\r\n    return { user: user && response.ok ? user : undefined };\r\n  } catch (error) {\r\n    handleError('SessionContext.error :');\r\n    return { user: undefined };\r\n  }\r\n};\r\n\r\nconst handleError = (errorMessage: string) => {\r\n  console.warn('Session Error : ', errorMessage);\r\n  throw new Error('Something went wrong');\r\n};\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { SessionAction } from 'actions/session.action';\r\nimport { CheckAuthenticationRequest } from 'models';\r\nimport { CheckAuthentication } from 'services/session.service';\r\n\r\nfunction* checkAuthenticationSaga(\r\n  action: ReturnType<typeof SessionAction.checkAuthentication.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: CheckAuthenticationRequest = yield call(CheckAuthentication, action.payload);\r\n    yield put(SessionAction.checkAuthentication.success(response));\r\n  } catch (err) {\r\n    yield put(SessionAction.checkAuthentication.failure(err));\r\n  }\r\n}\r\n\r\nexport const SessionSagas = [takeEvery(SessionAction.checkAuthentication.request, checkAuthenticationSaga)];\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage1State, Stage1Row } from 'models';\r\nimport { Stage1Action } from 'actions';\r\nimport { getEmptyRowModel } from 'components/Pair/helper';\r\n\r\nconst initialState: Stage1State = {\r\n  selectedPairs: [getEmptyRowModel('placeholder')],\r\n  isLoading: false,\r\n};\r\n\r\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialState)\r\n  // Request\r\n  .handleAction([Stage1Action.setSelectedPairs], (state, { payload: { stageName, rows } }) => {\r\n    const selected = state.selectedRows ? state.selectedRows : new Map<string, Stage1Row[]>();\r\n    selected.set(stageName, rows);\r\n\r\n    const selectedPairs = state.selectedPairs\r\n      ? [\r\n          // Filtro selectedPairs\r\n          //  e.id === null : mantengo il placeholder\r\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\r\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stageName),\r\n          ...rows.map((e) => e.pair),\r\n        ]\r\n      : [...rows.map((e) => e.pair)];\r\n    console.log('selectedPairs : ', selectedPairs);\r\n\r\n    return {\r\n      ...state,\r\n      selectedRows: selected,\r\n      selectedPairs,\r\n      isLoading: true,\r\n    };\r\n  });\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport { RootState } from 'models';\r\nimport { TournamentReducer, PlayerReducer, PairReducer, SessionReducer } from 'reducers';\r\nimport { TournamentsSagas, PlayersSagas, PairsSagas, SessionSagas } from 'sagas';\r\nimport { Stage1Reducer } from 'reducers/stage1.reducer';\r\n\r\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\r\n// custom compose for the redux devtool extension\r\nconst composeEnhancer = (() => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    // https://github.com/zalmoxisus/redux-devtools-extension#redux-devtools-extension\r\n    const key = '__REDUX_DEVTOOLS_EXTENSION_COMPOSE__';\r\n    if (window && typeof (window as any)[key] !== 'undefined') {\r\n      // custom compose\r\n      return (window as any)[key];\r\n    }\r\n  }\r\n  // default compose\r\n  return compose;\r\n})();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst commonReducers: ReducersMapObject<RootState> = {\r\n  tournamentState: TournamentReducer,\r\n  playerState: PlayerReducer,\r\n  pairState: PairReducer,\r\n  sessionState: SessionReducer,\r\n  stage1State: Stage1Reducer,\r\n};\r\n\r\n// Meet the Store\r\nexport const store = createStore(combineReducers(commonReducers), composeEnhancer(applyMiddleware(sagaMiddleware)));\r\n\r\n// Exec all sagas ( watcher )\r\nfunction* rootSagas() {\r\n  yield all([...TournamentsSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas]);\r\n}\r\n\r\nsagaMiddleware.run(rootSagas);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport it from 'date-fns/locale/it';\r\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\r\nimport { store } from 'store';\r\nimport { Provider } from 'react-redux';\r\nsetDefaultLocale('it');\r\nregisterLocale('it', it);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nprocess.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\r\n","import { createAsyncAction } from 'typesafe-actions';\r\nimport { Failure, Success, Request } from './constants';\r\nimport { FetchPairsRequest, FetchPairsResponse } from 'models';\r\n\r\nconst ActionName = '[Pair]';\r\n\r\nexport const PairAction = {\r\n  // fetch tournaments\r\n  getPairs: createAsyncAction(\r\n    `${ActionName} Get Pair ${Request}`,\r\n    `${ActionName} Get Pair ${Success}`,\r\n    `${ActionName} Get Pair ${Failure}`\r\n  )<FetchPairsRequest, FetchPairsResponse, Error>(),\r\n};\r\n","import { createAction } from 'typesafe-actions';\r\nimport { Stage1Row } from 'models';\r\n\r\nconst ActionName = '[Stage1]';\r\n\r\nexport const Stage1Action = {\r\n  // get selected tournament\r\n  setSelectedPairs: createAction(`${ActionName} Set Selected Pairs`)<{ stageName: string; rows: Stage1Row[] }>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { Failure, Success, Request } from './constants';\r\nimport { CheckAuthenticationRequest, CheckAuthenticationResponse } from 'models/session.model';\r\nimport { UserDTO } from 'models/user.model';\r\n\r\nconst ActionName = '[Session]';\r\n\r\nexport const SessionAction = {\r\n  // Check if user is already authenticate\r\n  checkAuthentication: createAsyncAction(\r\n    `${ActionName} Get Session ${Request}`,\r\n    `${ActionName} Get Session ${Success}`,\r\n    `${ActionName} Get Session ${Failure}`\r\n  )<CheckAuthenticationRequest, CheckAuthenticationResponse, Error>(),\r\n  // set selected tournament\r\n  updateSession: createAction(`${ActionName} Set Session`)<UserDTO | null>(),\r\n};\r\n","import { createAsyncAction } from 'typesafe-actions';\r\nimport { Failure, Success, Request } from './constants';\r\nimport { FetchPlayersResponse, FetchPlayersRequest } from 'models/player.model';\r\n\r\nconst ActionName = '[Player]';\r\n\r\nexport const PlayerAction = {\r\n  // fetch tournaments\r\n  getPlayers: createAsyncAction(\r\n    `${ActionName} Get Player ${Request}`,\r\n    `${ActionName} Get Player ${Success}`,\r\n    `${ActionName} Get Player ${Failure}`\r\n  )<FetchPlayersRequest, FetchPlayersResponse, Error>(),\r\n};\r\n","import { RootState } from 'models';\r\n\r\n// Get state from store\r\nexport const SessionSelector = {\r\n  isLoading({ sessionState: { isLoading } }: RootState) {\r\n    return isLoading;\r\n  },\r\n  getUser({ sessionState: { user } }: RootState) {\r\n    return user;\r\n  },\r\n  isAdmin({ sessionState: { isAdmin } }: RootState) {\r\n    return isAdmin;\r\n  },\r\n  isAuthenticated({ sessionState: { isAuthenticated } }: RootState) {\r\n    return isAuthenticated;\r\n  },\r\n  getSession({ sessionState }: RootState) {\r\n    return sessionState;\r\n  },\r\n};\r\n","import { FetchPlayersRequest, FetchPlayersResponse, PlayerRole, PlayerDTO } from 'models';\r\n\r\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\r\n  try {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    return { results: addEmpty ? [...result, getEmptyPlayer('Nessun Giocatore')] : result };\r\n  } catch (e) {\r\n    handleError(e);\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nconst handleError = (errorMessage: string): FetchPlayersResponse => {\r\n  console.warn('Player Error : ', errorMessage);\r\n  throw new Error('Something went wrong');\r\n};\r\n\r\nexport function getEmptyPlayer(label?: string): PlayerDTO {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: PlayerRole.GoalKeeper,\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false,\r\n  };\r\n}\r\n"],"sourceRoot":""}