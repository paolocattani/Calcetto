{"version":3,"sources":["components/Player/helper.js","components/core/Icons.tsx","components/core/utils.ts","components/Tournament/type.ts","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","selectOptions","Portiere","Attaccante","Master","clearAllFilter","playerColumns","isEditable","dataField","text","editable","headerStyle","column","colIndex","width","headerClasses","autoSelectText","filter","textFilter","placeholder","getFilter","selectFilter","options","editor","type","Type","SELECT","getOptions","_","value","label","hidden","valueFormatter","selectedOption","alias","surname","name","getEmptyPlayer","id","role","email","phone","match_played","match_won","total_score","TrashIcon","size","undefined","icon","findIconDefinition","prefix","iconName","SaveIcon","ToggleOn","ToggleOff","RightArrowIcon","getTodayDate","formatDate","Date","translateTournamentProgress","TournamentProgress","New","PairsSelection","Stage1","Stage2","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","RegExp","passwordRegExp","emailRegExp","animatedComponents","makeAnimated","PlayerSelection","React","forwardRef","props","ref","useState","setSelectedOption","row","columnIndex","onUpdate","onSelect","styles","components","onChange","pairId","isSearchable","isClearable","columns","align","editorRenderer","editorProps","rowIndex","customStyles","toUpperCase","split","map","e","CHECKBOX","style","content","backgroundColor","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","a","fetch","method","headers","body","JSON","stringify","response","json","getEmptyRowModel","rowNumber","tId","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","rows","result","players","console","log","tournament","fetchPairs","setterFunction","option","provided","state","color","input","control","height","marginBottom","singleValue","valueContainer","fontSize","TableHeader","progress","noData","addRow","optionsLength","diff","Button","variant","onClick","disabled","to","PairsTable","useParams","currentHistory","useHistory","message","isLoading","setIsLoading","messageInitialState","setMessage","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","emptyRow","current","addMultipleRows","ii","deleteRow","forEach","push","sort","e1","e2","localeCompare","find","selectedRow","updateOptions","player","selected","useEffect","selectedElement","newRowsElement","rowElement","handleSelect","isSelected","found","confirmPairs","missingStage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","selectRow","onSelectAll","deleteStage1","setStage1Name","names","newRows","error","availableRows","Math","floor","accumulator","deleteDisabled","deleteTooltipMessage","rightOuter","className","fontWeight","padding","SessionContext","Consumer","session","Row","show","Col","md","sm","margin","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","ListGroup","Item","action","OverlayTrigger","placement","key","overlay","Tooltip","pointerEvents","bootstrap4","keyField","cellEdit","noDataIndication","caption","striped","hover"],"mappings":"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","file":"static/js/7.557ae34a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  emailFilter('');\r\n  phoneFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = isEditable => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (emailFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (phoneFilter = filter)\r\n    })\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\ninterface IconType {\r\n  size?: SizeProp;\r\n}\r\nexport const TrashIcon: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'far',\r\n      iconName: 'trash-alt'\r\n    })}\r\n  />\r\n);\r\n\r\nexport const SaveIcon: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'far',\r\n      iconName: 'save'\r\n    })}\r\n  />\r\n);\r\n\r\nexport const ToggleOn: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'fas',\r\n      iconName: 'toggle-on'\r\n    })}\r\n  />\r\n);\r\n\r\nexport const ToggleOff: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'fas',\r\n      iconName: 'toggle-off'\r\n    })}\r\n  />\r\n);\r\n\r\nexport const RightArrowIcon: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'far',\r\n      iconName: 'arrow-alt-circle-right'\r\n    })}\r\n  />\r\n);\r\n\r\nexport const PlusIcon: React.FC<IconType> = ({ size }) => (\r\n  <FontAwesomeIcon\r\n    size={size || undefined}\r\n    icon={findIconDefinition({\r\n      prefix: 'fas',\r\n      iconName: 'plus'\r\n    })}\r\n  />\r\n);\r\n","import { TournamentProgress } from '../Tournament/type';\r\n\r\nexport const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function translateTournamentProgress(value: string) {\r\n  switch (value) {\r\n    case TournamentProgress.New:\r\n      return 'Nuovo';\r\n    case TournamentProgress.PairsSelection:\r\n      return 'Selezione Coppie';\r\n    case TournamentProgress.Stage1:\r\n      return 'Fase 1';\r\n    case TournamentProgress.Stage2:\r\n      return 'Fase 2';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport type TournamentModel = {\r\n  id: number;\r\n  name: string;\r\n  date: Date;\r\n  progress: TournamentProgressType;\r\n  public: boolean;\r\n  label: string;\r\n  ownerId?: number;\r\n  pairs?: PairModel[];\r\n};\r\n\r\nexport type selectOptions = {\r\n  label: string;\r\n  value: string;\r\n  data: TournamentModel;\r\n};\r\n\r\nexport const TournamentProgress = { New: 'New', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      styles={props.styles || null}\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = editable =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n  console.log('playerList : ', result);\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nconst customStyles = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white'\r\n    }\r\n  }),\r\n  input: (provided, state) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: provided => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided, state) => ({ ...provided }),\r\n  valueContainer: provided => ({ ...provided, height: '100%', fontSize: 'larger' })\r\n};\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\nimport { translateTournamentProgress } from '../core/utils';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          \"<strong>{tournament?.name.toUpperCase()}</strong>\"\r\n          <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength, isEditable }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast } from '../core/generic/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\nimport { SessionContext } from '../core/routing/SessionContext';\r\nimport { RightArrowIcon } from '../core/Icons';\r\nconst PairsTable = () => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso',\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter((e) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map((rowElement) => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData((current) => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows((selectedRows) => {\r\n      const found = selectedRows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e) => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tId) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter((e) => !e.stage1Name || e.stage1Name === '').map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => e.player1.id === null || e.player2.id === null)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    try {\r\n      await fetch('/api/v1/tournament/', {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament),\r\n      });\r\n    } catch (error) {\r\n      console.log('errororroror :', error);\r\n    }\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n  /*\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n*/\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach((row) => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/v1/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament),\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n\r\n    if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2') {\r\n      showErrorMessage('Non riassegnare i gironi in quanto le coppie sono gia state confermate per la fase successiva');\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData((current) => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1.id && !e.player2.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  //console.log('render table : ', availableRows);\r\n\r\n  const rightOuter = (\r\n    <>\r\n      <Button type=\"button\" onClick={confirmPairs} size=\"lg\" variant=\"outline-warning\" className=\"default-color-white\">\r\n        <span style={{ fontSize: 'larger', fontWeight: 'bolder', padding: '1vw' }}>Prosegui</span>\r\n        <RightArrowIcon size=\"lg\" />\r\n      </Button>\r\n\r\n      <GenericToast message={message.message} type={message.type} />\r\n    </>\r\n  );\r\n\r\n  const leftOuter = (isEditable) => (\r\n    <>\r\n      {isEditable ? (\r\n        <Row style={{ margin: '0px' }}>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup onChange={(e) => setStage1Number(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                disabled={\r\n                  data.rows.length < 4 || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2'\r\n                }\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup onChange={(e) => setNewRowsNumber(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiungi coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={(e) => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row style={{ margin: '5vh 0vh' }}>\r\n        <Col md=\"2\" sm=\"12\">\r\n          <ListGroup>\r\n            {/*\r\n            <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n              Home\r\n            </ListGroup.Item>\r\n            */}\r\n            <ListGroup.Item\r\n              action\r\n              variant=\"success\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isEditable}\r\n            >\r\n              Aggiungi Coppia\r\n            </ListGroup.Item>\r\n\r\n            <OverlayTrigger placement=\"right\" key=\"right\" overlay={<Tooltip>{deleteTooltipMessage}</Tooltip>}>\r\n              <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"danger\"\r\n                  style={{ pointerEvents: 'none' }}\r\n                  disabled={deleteDisabled || !isEditable}\r\n                >\r\n                  Elimina Coppia {deleteDisabled}\r\n                </ListGroup.Item>\r\n              </span>\r\n            </OverlayTrigger>\r\n\r\n            <ListGroup.Item action variant=\"danger\" onClick={deleteStage1} disabled={!isEditable}>\r\n              Reset gironi\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md=\"10\" sm=\"12\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data.rows}\r\n            columns={columns(onSelect, data.players)}\r\n            cellEdit={cellEditProps(isEditable)}\r\n            selectRow={selectRow}\r\n            noDataIndication={\r\n              <NoData isEditable={isEditable} addRow={() => addRow()} optionsLength={data.players.length} />\r\n            }\r\n            caption={<TableHeader tournament={data.tournament} />}\r\n            headerClasses=\"default-background default-color-white\"\r\n            striped\r\n            hover\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {([session]) => (\r\n        <>\r\n          <Row>\r\n            <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n            <Col md=\"10\" sm=\"12\">\r\n              {leftOuter(session.isEditable)}\r\n            </Col>\r\n            <Col md=\"2\" sm=\"12\">\r\n              {rightOuter}\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n"],"sourceRoot":""}