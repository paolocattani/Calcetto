{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx","components/core/utils.ts","common.module.css","components/Tournament/badge.tsx"],"names":["InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","NoData","addRow","optionsLength","isEditable","t","useTranslation","players","diff","Button","variant","onClick","disabled","current","min","to","PlayerSelection","styles","row","columnIndex","onSelect","onUpdate","options","useState","selectedOption","setSelectedOption","onChange","option","actionMeta","id","getOptionLabel","alias","getOptionValue","toString","value","placeholder","isSearchable","isClearable","playerSelection","editorProps","rowIndex","customStyles","checkBoxProps","align","headerStyle","column","colIndex","width","editor","Type","CHECKBOX","style","content","backgroundColor","columns","labels","dataField","text","editable","hidden","player1","editorRenderer","stage1","SELECT","toUpperCase","split","map","e","label","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","dispatch","useDispatch","isAdmin","useSelector","SessionSelector","tournament","TournamentSelector","getTournament","state","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyRowModel","tId","fetch","method","headers","body","JSON","stringify","response","json","result","rowNumber","length","addMultipleRows","ii","deleteRow","forEach","push","player2","sort","e1","e2","localeCompare","filter","find","selectedRow","updateOptions","player","selected","useEffect","fetchData","selectedElement","Promise","all","rowElement","getEmptyPlayer","encodeURIComponent","ok","newRowsElement","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","progress","TournamentProgress","Stage1","TournamentAction","update","request","model","PairAction","goBack","selectRow","mode","isSelected","found","onSelectAll","hideSelectColumn","PairsSelection","processDeleteStage1","deleteStage1","onHide","setStage1Name","names","newRows","prevData","availableRows","Math","floor","accumulator","deleteDisabled","paid1","paid2","Col","commonStyle","toolsBarContainer","Row","toolsBar","FormControl","max","step","undefined","event","Number","currentTarget","Stage2","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","headerClasses","striped","hover","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","RegExp","passwordRegExp","emailRegExp","getBaseLog","x","y","module","exports","TournamentBadge","name"],"mappings":"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","file":"static/js/192.0514d78d.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\n// Componente da mostrare se non sono presenti coppie\r\nconst NoData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const { t } = useTranslation(['common', 'pair']);\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p>{`${t('pair:missing.1')}...`}</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        {t('pair:add.one')}\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>{t('pair:missing.2', { current: players, min: MIN_PLAYERS })}</p>\r\n      <p>{`${diff === 1 ? t('pair:missing.3') : t('pair:missing.4', { diff })}...`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">{t('common:root.player')}</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import { PlayerDTO } from '@common/dto';\r\nimport React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (option: ValueType<PlayerDTO>, actionMeta: ActionMeta<PlayerDTO>) => {\r\n      setSelectedOption(option as PlayerDTO);\r\n      onSelect(option, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={(option) => option.alias}\r\n        getOptionValue={(option) => option.id?.toString(10)!}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nconst ALIGN_CENTER = 'center';\r\nconst YES = 'Si';\r\nconst NO = 'No';\r\n\r\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\r\n  <PlayerSelect\r\n    {...editorProps}\r\n    id={columnIndex}\r\n    row={row}\r\n    rowIndex={rowIndex}\r\n    columnIndex={columnIndex}\r\n    value={value}\r\n    onSelect={onSelect}\r\n    options={options}\r\n    styles={customStyles}\r\n  />\r\n);\r\n\r\nconst checkBoxProps = {\r\n  align: () => ALIGN_CENTER,\r\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n  editor: {\r\n    type: Type.CHECKBOX,\r\n    value: `${YES}:${NO}`,\r\n  },\r\n  style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\r\n};\r\n\r\nexport const columns = (onSelect, options, labels) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: labels.player1,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: labels.player1,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: labels.alias, headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: labels.stage1,\r\n    align: () => ALIGN_CENTER,\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => ({ value: e, label: e })),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    ...checkBoxProps,\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    ...checkBoxProps,\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n// Components\r\nimport NoData from './noData';\r\n// Core / Helper / Editor\r\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\r\nimport { FormEventType } from '../core/types';\r\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\n// Style\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n// Service\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\n// Selector\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n// Action\r\nimport { TournamentAction, PairAction } from '../../redux/actions';\r\nimport TournamentBadge from '../Tournament/badge';\r\nimport { useTranslation } from 'react-i18next';\r\n// Models\r\nimport { PairDTO, PlayerDTO, TournamentProgress } from '@common/dto';\r\n\r\nconst hideAskUser = {\r\n  message: '',\r\n  onClick: () => console.log(''),\r\n  show: false,\r\n  title: '',\r\n};\r\ninterface PairTableProps {}\r\nconst PairsTable: React.FC<PairTableProps> = () => {\r\n  // Navigation\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation(['common', 'pair']);\r\n\r\n  const isAdmin = useSelector(SessionSelector.isAdmin);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: t('common:loading') });\r\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\r\n\r\n  // Data\r\n  const [data, setData] = useState<{ rows: PairDTO[]; players: PlayerDTO[] }>({ rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    if (!tournament) return;\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.error(message, { autoClose: 10000 });\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.success(message);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id || 0;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage(t('pair:success.add'));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.19'));\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: PlayerDTO[] = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(t(`pair:success.${selectedRows.length > 1 ? 'deleteMulti' : 'deleteOne'}`));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.18'));\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO | undefined, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = async (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = await Promise.all(\r\n      data.rows.map<Promise<PairDTO>>(async (rowElement) => {\r\n        if (rowElement.id === rowIndex) {\r\n          let row = rowElement;\r\n          if (columnIndex === 1) {\r\n            if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n              // Devo salvare l'elemnto che sto per sostituire\r\n              row.player1 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n              updateOptions(row.player1, selectedElement);\r\n              row.player1 = selectedElement;\r\n            }\r\n          } else {\r\n            if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n              row.player2 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              updateOptions(row.player2, selectedElement);\r\n              row.player2 = selectedElement;\r\n            }\r\n          }\r\n          //\r\n          if (!row.alias && row.player1 && row.player1.id && row.player2 && row.player2.id) {\r\n            const response = await fetch(\r\n              `/api/v1/pair/alias?player1Id=${encodeURIComponent(row.player1.id)}&player2Id=${encodeURIComponent(\r\n                row.player2.id\r\n              )}`\r\n            );\r\n            const result = await response.json();\r\n            if (response.ok && result.alias) {\r\n              row.alias = result.alias;\r\n            } else {\r\n              row.alias = '';\r\n            }\r\n          }\r\n          // update Db. Non aspetto la risposta...\r\n          fetch('/api/v1/pair', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row),\r\n          });\r\n          return row;\r\n        } else return rowElement;\r\n      })\r\n    );\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((rows) => {\r\n      const found = rows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? rows : [row, ...rows];\r\n      } else {\r\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage(`${t('pair:error.16')}...`);\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage(t('pair:error.15'));\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingStage1Name.length === 1 ? '13' : '14'}`, { missingStage1Name }));\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingPairs.length === 1 ? '11' : '12'}`, { missingPairs }));\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        t(`pair:error.${invalidStage.length === 1 ? '9' : '10'}`, { invalidStage, min: MIN_PAIR_PER_STAGE + 1 })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n      tournament.progress = TournamentProgress.Stage1;\r\n      dispatch(TournamentAction.update.request({ model: tournament }));\r\n    }\r\n    // Go to Stage1\r\n    dispatch(PairAction.fetch.request({ tId: tournament.id! }));\r\n    currentHistory.push('/stage1');\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow: SelectRowProps<PairDTO> = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: !isAdmin || tournament.progress > TournamentProgress.PairsSelection,\r\n  };\r\n\r\n  const processDeleteStage1 = async () => {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      if (isAdmin) {\r\n        dispatch(\r\n          TournamentAction.update.request({\r\n            model: { ...tournament, progress: TournamentProgress.PairsSelection },\r\n          })\r\n        );\r\n      }\r\n      showSuccessMessage(t('pair:success.delete'));\r\n      setAskUser(hideAskUser);\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.8'));\r\n    }\r\n  };\r\n\r\n  function deleteStage1() {\r\n    if (tournament.progress > TournamentProgress.Stage1) {\r\n      showErrorMessage(t('pair:error.7'));\r\n      return;\r\n    }\r\n    // Chiedo conferma all'utente\r\n    setAskUser({\r\n      message: `${t('pair:stage1.resetConfirm')} ?`,\r\n      onClick: () => processDeleteStage1(),\r\n      onHide: () => setAskUser(hideAskUser),\r\n      show: true,\r\n      title: t('pair:stage1.reset'),\r\n    });\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage(t('pair:error.6'));\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress > TournamentProgress.PairsSelection) {\r\n      showErrorMessage(t('pair:error.5'));\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: t('common:loading') });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage(t('pair:success.stage1Name'));\r\n    setData((prevData) => ({ rows: newRows, players: prevData.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled = selectedRows.length <= 0 || tournament.progress > TournamentProgress.PairsSelection;\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const assignMatches = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:stage1.set')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder={\r\n          data.rows.length < 4 ? t('pair:error.3') : t('pair:error.4', { max: Math.floor(data.rows.length / 4) })\r\n        }\r\n        type=\"number\"\r\n        step={1}\r\n        min={0}\r\n        max={Math.floor(data.rows.length / 4)}\r\n        value={stage1Number !== 0 ? stage1Number : undefined}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\r\n        disabled={\r\n          data.rows.length < 4 ||\r\n          tournament.progress === TournamentProgress.Stage1 ||\r\n          tournament.progress === TournamentProgress.Stage2\r\n        }\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={setStage1Name}\r\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n        >\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const addPairs = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:add.multi')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        disabled={availableRows <= 0}\r\n        type=\"number\"\r\n        step={1}\r\n        min={1}\r\n        max={availableRows}\r\n        placeholder={availableRows <= 0 ? t('pair:error.1') : t('pair:error.2', { max: availableRows })}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\r\n        value={newRowsNumber || ''}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n          disabled={newRowsNumber > availableRows}\r\n        >\r\n          {t('common:max')}\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n\r\n  const toolsBar = () => (\r\n    <div className={commonStyle.toolsBarContainer}>\r\n      <Row className={commonStyle.toolsBar}>\r\n        <Col>\r\n          <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n            <HomeIcon /> {t('common:route.home')}\r\n          </Button>\r\n        </Col>\r\n\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"align-middle\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isAdmin}\r\n            >\r\n              <PlusIcon /> {t('pair:add.one')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteRow} disabled={deleteDisabled || !isAdmin}>\r\n              <TrashIcon /> {selectedRows.length === 1 ? t('pair:delete.one') : t('pair:delete.multi')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress !== TournamentProgress.Stage1 ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!isAdmin}>\r\n              {t('stage1:reset')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            className=\"default-color-white float-right align-middle\"\r\n            onClick={confirmPairs}\r\n            disabled={!isAdmin}\r\n          >\r\n            <b>{t('common:continue')} </b> <RightArrowIcon />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isAdmin && tournament.progress < TournamentProgress.PairsSelection ? (\r\n        <>\r\n          {assignMatches()}\r\n          {addPairs()}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  const labels = {\r\n    player1: t('pair:field.player1'),\r\n    player2: t('pair:field.player2'),\r\n    alias: t('pair:field.alias'),\r\n    stage1: t('pair:field.stage1'),\r\n    paid1: t('pair:field.paid1'),\r\n    paid2: t('pair:field.paid2'),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col>\r\n        {toolsBar()}\r\n        <Row>\r\n          <Col>\r\n            {data.rows && data.players ? (\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players, labels) as ColumnDescription<PairDTO, PairDTO>[]}\r\n                cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage1)}\r\n                selectRow={selectRow}\r\n                noDataIndication={() => (\r\n                  <NoData isEditable={isAdmin || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n                )}\r\n                caption={<TournamentBadge />}\r\n                headerClasses=\"default-background default-color-yellow\"\r\n                striped\r\n                hover\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n","export const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\r\nexport const justADate = (initDate?: Date | string) => {\r\n  let utcMidnightDateObj: Date;\r\n  // if no date supplied, use Now.\r\n  if (!initDate) initDate = new Date();\r\n\r\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\r\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\r\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\r\n  } else {\r\n    // if init date is not already a date object, feed it to the date constructor.\r\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\r\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\r\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\r\n  }\r\n\r\n  return {\r\n    toISOString: () => utcMidnightDateObj.toISOString(),\r\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\r\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\r\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\r\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\r\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\r\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\r\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\r\n    addDays: (days: number) => {\r\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\r\n    },\r\n    toString: () => utcMidnightDateObj.toString(),\r\n    toLocaleDateString: (\r\n      locales?: string | string[] | undefined,\r\n      options?: Intl.DateTimeFormatOptions | undefined\r\n    ): string => {\r\n      const option = options || {};\r\n      option.timeZone = 'UTC';\r\n      const locale = locales || 'it-IT';\r\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\r\n    },\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate } from 'components/core/utils';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  const { t } = useTranslation(['tournament']);\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>{t('tournament:tournament')} </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {t(`tournament:progress.${tournament!.progress}`)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n"],"sourceRoot":""}