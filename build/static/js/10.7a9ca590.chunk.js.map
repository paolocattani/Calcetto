{"version":3,"sources":["components/Player/helper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","components/Player/header.tsx","components/Player/table.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","selectOptions","Portiere","Attaccante","Master","clearAllFilter","playerColumns","isEditable","dataField","text","editable","headerStyle","column","colIndex","width","headerClasses","autoSelectText","filter","textFilter","placeholder","getFilter","selectFilter","options","editor","type","Type","SELECT","getOptions","_","value","label","hidden","valueFormatter","selectedOption","alias","surname","name","getEmptyPlayer","id","role","email","phone","match_played","match_won","total_score","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_assertThisInitialized","self","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","_setPrototypeOf","p","tableHeader","Player","subClass","superClass","TypeError","create","Derived","Constructor","protoProps","staticProps","result","Super","NewTarget","this","arguments","apply","instance","handleOnSelect","row","isSelected","setState","state","selectedRows","found","find","cellEditProps","editabile","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","a","fetch","method","headers","body","JSON","stringify","response","json","rows","isLoading","bind","deleteRow","addRow","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","style","backgroundColor","selectColumnStyle","checked","disabled","rowIndex","rowKey","SessionContext","Consumer","session","show","message","Row","Col","ListGroup","horizontal","Button","variant","onClick","wrapperClasses","keyField","data","columns","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component"],"mappings":"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","file":"static/js/10.7a9ca590.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = isEditable => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        fetch('/api/v1/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = editabile =>\r\n    cellEditFactory({\r\n      mode: editabile ? 'click' : 'none',\r\n      blurToSave: true,\r\n      autoSelectText: true,\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        (async () => {\r\n          // TODO: gestire try-catch\r\n          const response = await fetch('/api/v1/player', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row)\r\n          });\r\n          await response.json();\r\n        })();\r\n      }\r\n    });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    // console.log('Render player : ', { ...this.props });\r\n\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {([session]) => (\r\n          <>\r\n            <LoadingModal show={isLoading} message={'Caricamento'} />\r\n            <Row>\r\n              <Col>\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    {isEditable(session) ? (\r\n                      <Button variant=\"success\" onClick={addRow}>\r\n                        Aggiungi giocatore\r\n                      </Button>\r\n                    ) : null}\r\n                    {isEditable(session) ? (\r\n                      <Button variant=\"danger\" onClick={deleteRow}>\r\n                        Calcella giocatore\r\n                      </Button>\r\n                    ) : null}\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns(isEditable(session))}\r\n                    cellEdit={this.cellEditProps(isEditable(session))}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"sourceRoot":""}