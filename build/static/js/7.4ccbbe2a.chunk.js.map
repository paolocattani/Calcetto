{"version":3,"sources":["common.module.css","components/Player/helper.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx"],"names":["module","exports","nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","clearAllFilter","filterFactory","filterTableFactory","cellEditProps","isAdmin","dispatch","cellEditFactory","mode","blurToSave","autoSelectText","afterSaveCell","oldValue","newValue","player","column","playerColumns","dataField","text","editable","headerStyle","colIndex","width","headerClasses","filter","textFilter","placeholder","getFilter","selectFilter","options","PlayerRole","GoalKeeper","Striker","Master","editor","type","Type","SELECT","getOptions","_","value","label","hidden","valueFormatter","selectedOption","alias","surname","name","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","TableHeader","tournament","useSelector","TournamentSelector","getTournament","toUpperCase","translateTournamentProgress","progress","noData","addRow","optionsLength","isEditable","players","diff","Button","variant","onClick","disabled","to","PlayerSelection","styles","row","columnIndex","onUpdate","onSelect","useState","setSelectedOption","onChange","actionMeta","id","isSearchable","isClearable","playerSelection","editorProps","rowIndex","customStyles","checkBoxProps","align","CHECKBOX","style","content","backgroundColor","columns","editorRenderer","split","map","e","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","useDispatch","session","SessionSelector","getSession","state","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyRowModel","tId","fetch","method","headers","body","JSON","stringify","response","json","result","rowNumber","length","current","addMultipleRows","ii","deleteRow","forEach","player1","push","player2","sort","e1","e2","localeCompare","find","selectedRow","updateOptions","selected","useEffect","fetchData","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","TournamentProgress","Stage1","TournamentAction","updateTournament","request","model","PairAction","fetchPairs","goBack","selectRow","isSelected","found","onSelectAll","processDeleteStage1","PairsSelection","deleteStage1","onHide","setStage1Name","Stage2","names","newRows","availableRows","Math","floor","accumulator","deleteDisabled","Col","Row","commonStyle","toolsBarContainer","toolsBar","FormControl","aria-label","step","min","max","event","Number","currentTarget","bootstrap4","keyField","selectedElement","newRowsElement","rowElement","getEmptyPlayer","cellEdit","noDataIndication","caption","striped","hover"],"mappings":"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","file":"static/js/7.4ccbbe2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport filterTableFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\nimport { PlayerRole } from '../../redux/models/player.model';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  emailFilter('');\r\n  phoneFilter('');\r\n}\r\n\r\nexport const filterFactory = filterTableFactory();\r\nexport const cellEditProps = (isAdmin, dispatch) =>\r\n  cellEditFactory({\r\n    mode: isAdmin ? 'click' : 'none',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, player, column) => dispatch(player),\r\n  });\r\n\r\n// Columns default\r\nconst playerColumns = (isAdmin) => [\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isAdmin ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: {\r\n        [PlayerRole.GoalKeeper]: PlayerRole.GoalKeeper,\r\n        [PlayerRole.Striker]: PlayerRole.Striker,\r\n        [PlayerRole.Master]: PlayerRole.Master,\r\n      },\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: (_) => {\r\n        return [\r\n          { value: PlayerRole.GoalKeeper, label: PlayerRole.GoalKeeper },\r\n          { value: PlayerRole.Striker, label: PlayerRole.Striker },\r\n          { value: PlayerRole.Master, label: PlayerRole.Master },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = (props) => (\r\n  <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n    Esporta in CSV\r\n  </Button>\r\n);\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport { translateTournamentProgress } from '../core/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n\r\nconst TableHeader: React.FC<{}> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          \"<strong>{tournament?.name.toUpperCase()}</strong>\"\r\n          <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\n// Componente da mostrare se non sono presenti coppie\r\nconst noData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\nimport { valueFormatter } from './helper';\r\n// FIXME: import makeAnimated from 'react-select/animated';\r\nimport { PlayerDTO } from 'redux/models';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (selectedOption: ValueType<PlayerDTO>, actionMeta: ActionMeta<PlayerDTO>) => {\r\n      // selectedOption.pairId = id;\r\n      setSelectedOption(selectedOption as PlayerDTO);\r\n      const value = valueFormatter(selectedOption);\r\n      onUpdate(value);\r\n      onSelect(selectedOption, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nconst ALIGN_CENTER = 'center';\r\nconst YES = 'Si';\r\nconst NO = 'No';\r\n\r\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\r\n  <PlayerSelect\r\n    {...editorProps}\r\n    id={columnIndex}\r\n    row={row}\r\n    rowIndex={rowIndex}\r\n    columnIndex={columnIndex}\r\n    value={value}\r\n    onSelect={onSelect}\r\n    options={options}\r\n    styles={customStyles}\r\n  />\r\n);\r\n\r\nconst checkBoxProps = {\r\n  align: () => ALIGN_CENTER,\r\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n  editor: {\r\n    type: Type.CHECKBOX,\r\n    value: `${YES}:${NO}`,\r\n  },\r\n  style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\r\n};\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => ALIGN_CENTER,\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => ({ value: e, label: e })),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    ...checkBoxProps,\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    ...checkBoxProps,\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n// Components\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\n// Core / Helper / Editor\r\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\r\nimport { FormEventType } from '../core/generic/CommonTypes';\r\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\n// Style\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n// Service\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\n// Selector\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n// Models\r\nimport { PairDTO, PlayerDTO } from 'redux/models';\r\nimport { TournamentProgress } from 'redux/models/tournament.model';\r\n// Action\r\nimport { TournamentAction, PairAction } from 'redux/actions';\r\n\r\nconst hideAskUser = {\r\n  message: '',\r\n  onClick: () => console.log(''),\r\n  show: false,\r\n  title: '',\r\n};\r\ninterface PairTableProps {}\r\nconst PairsTable: React.FC<PairTableProps> = () => {\r\n  // Navigation\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\r\n\r\n  // Data\r\n  const [data, setData] = useState({ rows: [] as PairDTO[], players: [] as PlayerDTO[] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    if (!tournament) return;\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.error(message, { autoClose: 10000 });\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.success(message);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id || 0;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso',\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: PlayerDTO[] = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = data.rows.map((rowElement: { id: any }) => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row: any = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((selectedRows) => {\r\n      const found = selectedRows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e) => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (session.isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n      tournament.progress = TournamentProgress.Stage1;\r\n      dispatch(TournamentAction.updateTournament.request({ model: tournament }));\r\n    }\r\n    // Go to Stage1\r\n    dispatch(PairAction.fetchPairs.request({ tId: tournament.id! }));\r\n    currentHistory.push('/stage1');\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow: SelectRowProps<PairDTO> = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  const processDeleteStage1 = async () => {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      if (session.isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n        tournament.progress = TournamentProgress.PairsSelection;\r\n        dispatch(TournamentAction.updateTournament.request({ model: tournament }));\r\n      }\r\n      showSuccessMessage('Cancellazione completata');\r\n      setAskUser(hideAskUser);\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  };\r\n\r\n  function deleteStage1() {\r\n    if (tournament.progress > TournamentProgress.Stage1) {\r\n      showErrorMessage('Non è possibile cancellare in quanto il torneo è gia alla fase 2');\r\n      return;\r\n    }\r\n    // Chiedo conferma all'utente\r\n    setAskUser({\r\n      message: 'Vuoi resettare i gironi ? ',\r\n      onClick: () => processDeleteStage1(),\r\n      onHide: () => setAskUser(hideAskUser),\r\n      show: true,\r\n      title: 'Reset Gironi',\r\n    });\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress === TournamentProgress.Stage1 || tournament.progress === TournamentProgress.Stage2) {\r\n      showErrorMessage('Non riassegnare i gironi in quanto le coppie sono gia state confermate per la fase successiva');\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData((current) => ({ rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || tournament.progress === 'Stage1' || tournament.progress === 'Stage2';\r\n\r\n  /*\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (tournament.progress === 'Stage1' || tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n*/\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const assignMatches = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>Assegna gironi</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder={\r\n          data.rows.length < 4\r\n            ? 'Inserisci almeno 4 coppie'\r\n            : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n        }\r\n        aria-label=\"Numero di gironi\"\r\n        type=\"number\"\r\n        step={1}\r\n        min={0}\r\n        max={Math.floor(data.rows.length / 4)}\r\n        value={stage1Number}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\r\n        disabled={\r\n          data.rows.length < 4 ||\r\n          tournament.progress === TournamentProgress.Stage1 ||\r\n          tournament.progress === TournamentProgress.Stage2\r\n        }\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={setStage1Name}\r\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n        >\r\n          Esegui\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const addPairs = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>Aggiungi coppie</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        disabled={availableRows <= 0}\r\n        type=\"number\"\r\n        step={1}\r\n        min={1}\r\n        max={availableRows}\r\n        placeholder={\r\n          availableRows <= 0\r\n            ? 'Numero massimo di coppie gia creato'\r\n            : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n        }\r\n        aria-label=\"Numero di coppie\"\r\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\r\n        value={newRowsNumber || ''}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n          disabled={newRowsNumber > availableRows}\r\n        >\r\n          Max\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\r\n          Esegui\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const toolsBar = () => (\r\n    <Col className={commonStyle.toolsBarContainer}>\r\n      <div className={commonStyle.toolsBar}>\r\n        <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n          <HomeIcon /> Home\r\n        </Button>\r\n        <Button\r\n          variant=\"success\"\r\n          className=\"align-middle\"\r\n          onClick={() => addRow()}\r\n          disabled={availableRows <= 0 || !session.isAdmin}\r\n        >\r\n          <PlusIcon /> Aggiungi Coppia\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          className=\"align-middle\"\r\n          onClick={deleteRow}\r\n          disabled={deleteDisabled || !session.isAdmin}\r\n        >\r\n          <TrashIcon /> Elimina Coppia\r\n        </Button>\r\n        <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!session.isAdmin}>\r\n          Reset gironi\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-warning\"\r\n          className=\"default-color-white float-right align-middle\"\r\n          onClick={confirmPairs}\r\n          disabled={!session.isAdmin}\r\n        >\r\n          <b>Prosegui </b> <RightArrowIcon />\r\n        </Button>\r\n      </div>\r\n      {session.isAdmin ? (\r\n        <>\r\n          {assignMatches()}\r\n          {addPairs()}\r\n        </>\r\n      ) : null}\r\n    </Col>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col>\r\n        <Row>{toolsBar()}</Row>\r\n        <Row>\r\n          <Col>\r\n            {data.rows && data.players ? (\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players) as ColumnDescription<PairDTO>[]}\r\n                cellEdit={cellEditProps(session.isAdmin)}\r\n                selectRow={selectRow}\r\n                noDataIndication={() => (\r\n                  <NoData\r\n                    isEditable={session.isAdmin || false}\r\n                    addRow={() => addRow()}\r\n                    optionsLength={data.players.length}\r\n                  />\r\n                )}\r\n                caption={<TableHeader />}\r\n                headerClasses=\"default-background default-color-yellow\"\r\n                striped\r\n                hover\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n"],"sourceRoot":""}