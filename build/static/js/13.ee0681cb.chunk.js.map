{"version":3,"sources":["components/Player/helper.js","components/core/generic/TableHeader.tsx","components/Player/table.tsx","common.module.css"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","filterFactory","filterTableFactory","cellEditProps","isAdmin","dispatch","cellEditFactory","mode","blurToSave","autoSelectText","afterSaveCell","oldValue","newValue","player","column","playerColumns","labels","dataField","text","editable","headerStyle","colIndex","width","name","headerClasses","filter","textFilter","placeholder","getFilter","surname","alias","role","selectFilter","options","PlayerRole","GoalKeeper","goalKeeper","Striker","striker","Master","master","editor","type","Type","SELECT","getOptions","value","label","email","hidden","phone","Header","title","saved","divStyle","color","undefined","t","useTranslation","style","withRouter","useDispatch","currentHistory","useHistory","isLoading","useSelector","PlayerSelector","SessionSelector","playersList","getPlayersList","isSaving","useState","selectedRows","setSelectedRows","useEffect","PlayerAction","fetchPlayers","request","handleOnSelect","row","isSelected","rows","found","find","e","id","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","backgroundColor","hideSelectAll","hideSelectColumn","selectColumnStyle","checked","disabled","rowIndex","rowKey","addRow","savePlayer","getEmptyPlayer","deleteRow","deletePlayers","players","goBack","push","fieldLabels","show","message","Col","Row","className","commonStyle","toolsBarContainer","toolsBar","Button","variant","onClick","clearAllFilter","length","bootstrap4","keyField","data","columns","cellEdit","caption","TableHeader","noDataIndication","striped","hover","module","exports"],"mappings":"0IAQIA,EACAC,EACAC,EACAC,EACAC,EACAC,E,gLAaG,IAAMC,EAAgBC,MAChBC,EAAgB,SAACC,EAASC,GAAV,OAC3BC,IAAgB,CACdC,KAAMH,EAAU,QAAU,OAC1BI,YAAY,EACZC,gBAAgB,EAChBC,cAAe,SAACC,EAAUC,EAAUC,EAAQC,GAA7B,OAAwCT,EAASQ,OA6FrDE,EAzFO,SAACX,EAASY,GAAV,YAAqB,CACzC,CAAEC,UAAW,YAAaC,KAAM,KAAMC,UAAU,EAAOC,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAO,QACpG,CACEL,UAAW,OACXC,KAAMF,EAAOO,KACbC,cAAe,8BACff,gBAAgB,EAChBW,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAOlB,EAAU,MAAQ,QAC/DqB,OAAQC,qBAAW,CACjBC,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXG,UAAW,SAACH,GAAD,OAAa9B,EAAa8B,MAGzC,CACER,UAAW,UACXC,KAAMF,EAAOa,QACbL,cAAe,8BACff,gBAAgB,EAChBW,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAOlB,EAAU,MAAQ,QAC/DqB,OAAQC,qBAAW,CACjBC,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXG,UAAW,SAACH,GAAD,OAAa7B,EAAgB6B,MAG5C,CACER,UAAW,QACXC,KAAMF,EAAOc,MACbN,cAAe,8BACfJ,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAOlB,EAAU,MAAQ,QAC/DK,gBAAgB,EAChBgB,OAAQC,qBAAW,CACjBC,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXG,UAAW,SAACH,GAAD,OAAa5B,EAAc4B,MAG1C,CACER,UAAW,OACXC,KAAMF,EAAOe,KACbP,cAAe,8BACfJ,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAM,GAAD,OAAKlB,EAAU,KAAO,KAAtB,OAC3CqB,OAAQO,uBAAa,CACnBL,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXQ,SAAO,mBACJC,aAAWC,WAAanB,EAAOoB,YAD3B,cAEJF,aAAWG,QAAUrB,EAAOsB,SAFxB,cAGJJ,aAAWK,OAASvB,EAAOwB,QAHvB,GAKPZ,UAAW,SAACH,GAAD,OAAa3B,EAAa2B,KAEvCgB,OAAQ,CACNC,KAAMC,OAAKC,OACXC,WAAY,WACV,MAAO,CACL,CAAEC,MAAOZ,aAAWC,WAAYY,MAAO/B,EAAOoB,YAC9C,CAAEU,MAAOZ,aAAWG,QAASU,MAAO/B,EAAOsB,SAC3C,CAAEQ,MAAOZ,aAAWK,OAAQQ,MAAO/B,EAAOwB,YAKlD,CACEvB,UAAW,QACXC,KAAMF,EAAOgC,MACb5B,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAO,QAC7CE,cAAe,8BACff,gBAAgB,EAChBwC,QAAS7C,EACTqB,OAAQC,qBAAW,CACjBC,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXG,UAAW,SAACH,GAAD,OAAa1B,EAAc0B,MAG1C,CACER,UAAW,QACXG,YAAa,SAACN,EAAQO,GAAT,MAAuB,CAAEC,MAAO,QAC7CJ,KAAMF,EAAOkC,MACb1B,cAAe,8BACff,gBAAgB,EAChBwC,QAAS7C,EACTqB,OAAQC,qBAAW,CACjBC,YAAY,GAAD,OAAKX,EAAOS,OAAZ,OACXG,UAAW,SAACH,GAAD,OAAazB,EAAcyB,MAG1C,CAAER,UAAW,eAAgBC,KAAM,kBAAmB+B,QAAQ,GAC9D,CAAEhC,UAAW,YAAaC,KAAM,WAAY+B,QAAQ,GACpD,CAAEhC,UAAW,cAAeC,KAAM,YAAa+B,QAAQ,K,aCtG1CE,EAbuB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACxCC,EAAW,CACfC,MAAOF,EAAQ,eAAYG,GAErBC,EAAMC,YAAe,CAAC,WAAtBD,EACR,OACE,4BACE,uBAAGE,MAAOL,GAA4B,kBAAVF,EAAqBK,EAAEL,GAASA,GAC3DC,EAAQ,+CAAcI,EAAE,iBAAhB,YAAkD,O,wCC8HlDG,uBAxH4B,WACzC,IAAMvD,EAAWwD,cACXC,EAAiBC,cACfN,EAAMC,YAAe,CAAC,SAAU,WAAhCD,EAEFO,EAAYC,YAAYC,IAAeF,WACvC5D,EAAU6D,YAAYE,IAAgB/D,SACtCgE,EAAcH,YAAYC,IAAeG,gBACzCC,EAAWL,YAAYC,IAAeI,UARG,EAUPC,mBAAsB,IAVf,mBAUxCC,EAVwC,KAU1BC,EAV0B,KAa/CC,qBAAU,WACRrE,EAASsE,IAAaC,aAAaC,QAAQ,OAC1C,CAACxE,IAEJ,IA0BMyE,EAAiB,SAACC,EAAgBC,GAStC,OARAP,GAAgB,SAACQ,GACf,IAAMC,IAAUD,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAON,EAAIM,MAC9C,OAAIL,EACKE,EAAQD,EAAH,CAAWF,GAAX,mBAAmBE,IAExBC,EAAQD,EAAKxD,QAAO,SAAC2D,GAAD,OAAOA,EAAEC,KAAON,EAAIM,MAAMJ,MAGlD,GAGHK,EAAuC,CAC3C/E,KAAM,WACNgF,cAAenB,EAAY3C,QAAO,SAAC2D,GAAD,OAAOA,EAAEC,KAAOD,EAAEjE,YAAUqE,KAAI,SAACJ,GAAD,OAAOA,EAAEC,MAC3EI,SAAUX,EACVY,YAAa,SAACV,EAAYC,GAAb,OAAsBA,EAAKU,SAAQ,SAACZ,GAAD,OAASD,EAAeC,EAAKC,OAC7ErB,MAAO,CAAEiC,gBAAiB,WAC1BC,eAAgBzB,EAAYe,MAAK,SAACC,GAAD,OAAOA,EAAEjE,YAC1C2E,kBAAmB1B,EAAYe,MAAK,SAACC,GAAD,OAAOA,EAAEjE,cAAcf,EAC3D2F,kBAAmB,cAAGC,QAAH,EAAYC,SAAZ,IAAsBC,EAAtB,EAAsBA,SAAtB,EAAgCC,OAAhC,OACjB/B,EAAY8B,GAAU/E,SAAW,GAAK,CAAEyE,gBAAiB,aAGvDQ,EAAS,kBAAM/F,EAASsE,IAAa0B,WAAWxB,QAAQ,CAAEhE,OAAQyF,kBAClEC,EAAY,WACX/B,IACLnE,EAASsE,IAAa6B,cAAc3B,QAAQ,CAAE4B,QAASjC,KACvDC,EAAgB,MAGlB,SAASiC,IACP5C,EAAe6C,KAAK,KAGtB,IAAMC,EAAc,CAClBrF,KAAMkC,EAAE,qBACR5B,QAAS4B,EAAE,wBACX3B,MAAO2B,EAAE,sBACT1B,KAAM0B,EAAE,qBACRT,MAAOS,EAAE,sBACTP,MAAOO,EAAE,sBACThC,OAAQgC,EAAE,uBACVrB,WAAYqB,EAAE,0BACdnB,QAASmB,EAAE,uBACXjB,OAAQiB,EAAE,uBAEZ,OACE,oCACE,kBAAC,eAAD,CAAcoD,KAAM7C,EAAW8C,QAASrD,EAAE,oBAC1C,kBAACsD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KA5EJ,kBAACD,EAAA,EAAD,CAAKE,UAAWC,IAAYC,mBAC1B,yBAAKF,UAAWC,IAAYE,UAC1B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYL,UAAU,0BAA0BM,QAASb,GACvE,kBAAC,IAAD,MACA,kCAAQjD,EAAE,uBAEXrD,EACC,kBAACiH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASnB,GACjC,kBAAC,IAAD,MACA,8BAAO3C,EAAE,gBAET,KACJ,kBAAC4D,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAS,kBFpCjC,SAAwBnH,EAASY,GACtCrB,EAAW,IACXC,EAAc,IACdC,EAAY,IACZC,EAAW,IACPM,IACFL,EAAY,IACZC,EAAY,KE6B8BwH,CAAepH,KACnD,kBAAC,IAAD,MACA,kCAAQqD,EAAE,mBAEXrD,EACC,kBAACiH,EAAA,EAAD,CAAQC,QAAQ,SAASL,UAAU,cAAcM,QAAShB,EAAWN,SAAkC,IAAxBzB,EAAaiD,QAC1F,kBAAC,IAAD,MADF,IACiBjD,EAAaiD,OAAS,EAAIhE,EAAE,uBAAyBA,EAAE,sBAEtE,QAyDJ,kBAACuD,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAAC,IAAD,CACEW,YAAU,EACVC,SAAS,KACTC,KAAMxD,EACNyD,QAASA,EAAQzH,EAASwG,GAC1BkB,SAAU3H,EAAcC,GAAS,SAACS,GAAD,OAC/BR,EAASsE,IAAa0B,WAAWxB,QAAQ,CAAEhE,eAE7CyE,UAAWA,EACXyC,QAAS,kBAACC,EAAD,CAAa5E,MAAO,sBAAuBC,MAAOiB,IAC3D7C,OAAQxB,EACRuB,cAAc,0CACdyG,iBAAkB,kBAAM,2BAAIxE,EAAE,iBAC9ByE,SAAO,EACPC,OAAK,Y,oBCnInBC,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,kBAAoB,kCAAkC,YAAc","file":"static/js/13.ee0681cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport filterTableFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { PlayerRole } from '@common/dto';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter(isAdmin, labels) {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  if (isAdmin) {\r\n    emailFilter('');\r\n    phoneFilter('');\r\n  }\r\n}\r\n\r\nexport const filterFactory = filterTableFactory();\r\nexport const cellEditProps = (isAdmin, dispatch) =>\r\n  cellEditFactory({\r\n    mode: isAdmin ? 'click' : 'none',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, player, column) => dispatch(player),\r\n  });\r\n\r\n// Columns default\r\nconst playerColumns = (isAdmin, labels) => [\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: labels.name,\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: labels.surname,\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: labels.alias,\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: labels.role,\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isAdmin ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      options: {\r\n        [PlayerRole.GoalKeeper]: labels.goalKeeper,\r\n        [PlayerRole.Striker]: labels.striker,\r\n        [PlayerRole.Master]: labels.master,\r\n      },\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: () => {\r\n        return [\r\n          { value: PlayerRole.GoalKeeper, label: labels.goalKeeper },\r\n          { value: PlayerRole.Striker, label: labels.striker },\r\n          { value: PlayerRole.Master, label: labels.master },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: labels.email,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: labels.phone,\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isAdmin,\r\n    filter: textFilter({\r\n      placeholder: `${labels.filter}...`,\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = (props) => (\r\n  <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n    Esporta in CSV\r\n  </Button>\r\n);\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface HeaderProps {\r\n  title: React.Component | string;\r\n  saved: boolean;\r\n}\r\nconst Header: React.FC<HeaderProps> = ({ title, saved }) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined,\r\n  };\r\n  const { t } = useTranslation(['common']);\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>{typeof title === 'string' ? t(title) : title}</b>\r\n      {saved ? <small> {`- ${t('common:saving')}...`} </small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BootstrapTable, { ColumnDescription, SelectRowProps } from 'react-bootstrap-table-next';\r\n// style\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n//\r\nimport columns, { clearAllFilter, cellEditProps, filterFactory } from './helper';\r\nimport TableHeader from '../core/generic/TableHeader';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\n\r\nimport { PlayerAction } from 'redux/actions';\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\nimport { PlayerSelector, SessionSelector } from 'redux/selectors';\r\nimport { TrashIcon, PlusIcon, BroomIcon, HomeIcon } from '../core/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PlayerDTO } from '@common/dto';\r\n\r\ninterface PlayerProps {}\r\nconst PlayerTable: React.FC<PlayerProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const { t } = useTranslation(['common', 'player']);\r\n  // From Store\r\n  const isLoading = useSelector(PlayerSelector.isLoading);\r\n  const isAdmin = useSelector(SessionSelector.isAdmin);\r\n  const playersList = useSelector(PlayerSelector.getPlayersList);\r\n  const isSaving = useSelector(PlayerSelector.isSaving);\r\n  // Component State\r\n  const [selectedRows, setSelectedRows] = useState<PlayerDTO[]>([]);\r\n\r\n  // Effetcs\r\n  useEffect(() => {\r\n    dispatch(PlayerAction.fetchPlayers.request({}));\r\n  }, [dispatch]);\r\n\r\n  const toolsBar = () => (\r\n    <Col className={commonStyle.toolsBarContainer}>\r\n      <div className={commonStyle.toolsBar}>\r\n        <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n          <HomeIcon />\r\n          <span> {t('common:route.home')}</span>\r\n        </Button>\r\n        {isAdmin ? (\r\n          <Button variant=\"success\" onClick={addRow}>\r\n            <PlusIcon />\r\n            <span>{t('player:add')}</span>\r\n          </Button>\r\n        ) : null}\r\n        <Button variant=\"dark\" onClick={() => clearAllFilter(isAdmin)}>\r\n          <BroomIcon />\r\n          <span> {t('player:filter')}</span>\r\n        </Button>\r\n        {isAdmin ? (\r\n          <Button variant=\"danger\" className=\"float-right\" onClick={deleteRow} disabled={selectedRows.length === 0}>\r\n            <TrashIcon /> {selectedRows.length > 1 ? t('player:delete.multi') : t('player:delete.one')}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </Col>\r\n  );\r\n\r\n  const handleOnSelect = (row: PlayerDTO, isSelected: boolean) => {\r\n    setSelectedRows((rows) => {\r\n      const found = !!rows.find((e) => e.id === row.id);\r\n      if (isSelected) {\r\n        return found ? rows : [row, ...rows];\r\n      } else {\r\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const selectRow: SelectRowProps<PlayerDTO> = {\r\n    mode: 'checkbox',\r\n    nonSelectable: playersList.filter((e) => e.id && !e.editable).map((e) => e.id!),\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach((row) => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectAll: !playersList.find((e) => e.editable),\r\n    hideSelectColumn: !playersList.find((e) => e.editable) || !isAdmin,\r\n    selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n      playersList[rowIndex].editable ? {} : { backgroundColor: '#dc3545' },\r\n  };\r\n\r\n  const addRow = () => dispatch(PlayerAction.savePlayer.request({ player: getEmptyPlayer() }));\r\n  const deleteRow = () => {\r\n    if (!selectedRows) return;\r\n    dispatch(PlayerAction.deletePlayers.request({ players: selectedRows }));\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const fieldLabels = {\r\n    name: t('player:field.name'),\r\n    surname: t('player:field.surname'),\r\n    alias: t('player:field.alias'),\r\n    role: t('player:field.role'),\r\n    email: t('player:field.email'),\r\n    phone: t('player:field.phone'),\r\n    filter: t('player:field.filter'),\r\n    goalKeeper: t('player:role.goalKeeper'),\r\n    striker: t('player:role.striker'),\r\n    master: t('player:role.master'),\r\n  };\r\n  return (\r\n    <>\r\n      <LoadingModal show={isLoading} message={t('common:loading')} />\r\n      <Col>\r\n        <Row>{toolsBar()}</Row>\r\n        <Row>\r\n          <Col>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={playersList}\r\n              columns={columns(isAdmin, fieldLabels) as ColumnDescription<PlayerDTO, PlayerDTO>[]}\r\n              cellEdit={cellEditProps(isAdmin, (player: PlayerDTO) =>\r\n                dispatch(PlayerAction.savePlayer.request({ player }))\r\n              )}\r\n              selectRow={selectRow}\r\n              caption={<TableHeader title={'common:route.player'} saved={isSaving} />}\r\n              filter={filterFactory}\r\n              headerClasses=\"default-background default-color-yellow\"\r\n              noDataIndication={() => <p>{t('player:data')}</p>}\r\n              striped\r\n              hover\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};"],"sourceRoot":""}