{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx","common.module.css","components/Tournament/badge.tsx"],"names":["noop","ToggleButton","React","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","bsPrefix","size","_ref$as","useBootstrapPrefix","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","NoData","addRow","optionsLength","isEditable","t","useTranslation","players","diff","variant","onClick","current","min","to","PlayerSelection","styles","row","columnIndex","onSelect","onUpdate","options","selectedOption","setSelectedOption","option","actionMeta","id","getOptionLabel","alias","getOptionValue","toString","placeholder","isSearchable","isClearable","playerSelection","editorProps","rowIndex","customStyles","checkBoxProps","align","headerStyle","column","colIndex","width","editor","Type","CHECKBOX","formatter","cell","formatExtraData","ButtonGroup","toggle","columns","labels","dataField","text","editable","hidden","player1","editorRenderer","player2","stage1","SELECT","toUpperCase","split","map","label","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","dispatch","useDispatch","isAdmin","useSelector","AuthSelector","tournament","TournamentSelector","getTournament","state","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyRowModel","tId","fetch","method","headers","body","JSON","stringify","response","json","result","rowNumber","length","addMultipleRows","ii","deleteRow","forEach","push","sort","e1","e2","localeCompare","filter","find","selectedRow","updateOptions","player","selected","useEffect","fetchData","selectedElement","Promise","all","rowElement","getEmptyPlayer","encodeURIComponent","ok","newRowsElement","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","progress","TournamentProgress","Stage1","TournamentAction","update","request","PairAction","goBack","selectRow","mode","isSelected","found","onSelectAll","style","backgroundColor","hideSelectColumn","PairsSelection","processDeleteStage1","deleteStage1","onHide","setStage1Name","names","newRows","prevData","availableRows","Math","floor","accumulator","deleteDisabled","paid1","paid2","Col","commonStyle","toolsBarContainer","Row","toolsBar","FormControl","max","step","event","Number","currentTarget","Stage2","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","headerClasses","striped","hover","module","exports","TournamentBadge","formatDate","date"],"mappings":"uGAAA,4DAMIA,EAAO,aAIPC,EAAeC,IAAMC,YAAW,SAAUC,EAAMC,GAClD,IAAIC,EAAWF,EAAKE,SAChBC,EAAOH,EAAKG,KACZC,EAAYJ,EAAKI,UACjBC,EAAUL,EAAKK,QACfC,EAAON,EAAKM,KACZC,EAAWP,EAAKO,SAChBC,EAAQR,EAAKQ,MACbC,EAAWT,EAAKS,SAChBC,EAAWV,EAAKU,SAChBC,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,OAAQ,YAAa,UAAW,OAAQ,WAAY,QAAS,WAAY,aAElIa,EAAYC,oBAAS,GACrBC,EAAUF,EAAU,GACpBG,EAAaH,EAAU,GAEvBI,EAAcC,uBAAY,SAAUC,GACb,UAArBA,EAAEC,OAAOC,SAAqBL,GAAW,KAC5C,IACCM,EAAaJ,uBAAY,SAAUC,GACZ,UAArBA,EAAEC,OAAOC,SAAqBL,GAAW,KAC5C,IACH,OAAoBlB,IAAMyB,cAAcC,IAAQC,YAAS,GAAId,EAAO,CAClEV,IAAKA,EACLG,UAAWsB,IAAWtB,EAAWW,GAAW,QAASN,GAAY,YACjEH,UAAMqB,EACNC,SAAUvB,EACVwB,GAAI,UACW/B,IAAMyB,cAAc,QAAS,CAC5CpB,KAAMA,EACNG,KAAMA,EACNE,MAAOA,EACPP,IAAKS,EACLoB,aAAc,MACdzB,UAAWA,EACXI,WAAYA,EACZsB,QAASd,EACTe,OAAQV,EACRf,SAAUA,GAAYX,IACpBM,MAENL,EAAaoC,YAAc,eACZpC,O,yDCpDf,mEAMIqC,EAAmBC,YAAmB,sBACtCC,EAAoBD,YAAmB,uBACvCE,EAAiBF,YAAmB,mBAAoB,CAC1DG,UAAW,SAuBTC,EAAazC,IAAMC,YAAW,SAAUC,EAAMC,GAChD,IAAIuC,EAAWxC,EAAKwC,SAChBC,EAAOzC,EAAKyC,KACZrC,EAAYJ,EAAKI,UACjBsC,EAAU1C,EAAK6B,GACfS,OAAwB,IAAZI,EAAqB,MAAQA,EACzC/B,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,OAAQ,YAAa,OAGlF,OADAwC,EAAWG,YAAmBH,EAAU,eACpB1C,IAAMyB,cAAce,EAAWb,YAAS,CAC1DxB,IAAKA,GACJU,EAAO,CACRP,UAAWsB,IAAWtB,EAAWoC,EAAUC,GAAQD,EAAW,IAAMC,SAGxEF,EAAWN,YAAc,aAEzB,IAAIW,EAAuBnB,YAAS,GAAIc,EAAY,CAClDM,KAAMR,EACNS,MAjCoB,SAAyBnC,GAC7C,OAAoBb,IAAMyB,cAAcc,EAAgB,KAAmBvC,IAAMyB,cAAc,QAASE,YAAS,CAC/GnB,KAAM,SACLK,MA+BHoC,SAxCuB,SAA4BpC,GACnD,OAAoBb,IAAMyB,cAAcc,EAAgB,KAAmBvC,IAAMyB,cAAc,QAASE,YAAS,CAC/GnB,KAAM,YACLK,MAsCHqC,OAAQd,EACRe,QAASb,IAGIQ,O,sNCrBAM,EAxBuB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACtDC,EAAMC,YAAe,CAAC,SAAU,SAAhCD,EAEFE,EAAUJ,EAAgB,EAC1BK,EAAOD,EAFO,IAE+BA,EAAU,EAC7D,OAAKJ,EACEI,GAJa,EAKlB,oCACE,qCAAOF,EAAE,kBAAT,QACA,kBAAC9B,EAAA,EAAD,CAAQkC,QAAQ,UAAUC,QAASR,EAAQ1C,UAAW4C,GACnDC,EAAE,kBAIP,oCACE,2BAAIA,EAAE,iBAAkB,CAAEM,QAASJ,EAASK,IAb5B,KAchB,qCAAgB,IAATJ,EAAaH,EAAE,kBAAoBA,EAAE,iBAAkB,CAAEG,SAAhE,QACA,kBAAC,IAAD,CAAMK,GAAI,WACR,kBAACtC,EAAA,EAAD,CAAQkC,QAAQ,WAAWJ,EAAE,yBAbR,M,2CCsBdS,EAzBsCjE,IAAMC,YACzD,WAAoEE,GAAS,IAA1E+D,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,YAA+BC,GAA6B,EAAvCC,SAAuC,EAA7BD,UAAUE,EAAmB,EAAnBA,QAAmB,EAC9BvD,qBAD8B,mBACnEwD,EADmE,KACnDC,EADmD,KAQ1E,OACE,kBAAC,IAAD,CACEP,OAAQA,EACRK,QAASA,EACT9D,SATiB,SAACiE,EAA8BC,GAClDF,EAAkBC,GAClBL,EAASK,EAAQP,EAAIS,GAAIR,IAQvBS,eAAgB,SAACH,GAAD,OAAYA,EAAOI,OACnCC,eAAgB,SAACL,GAAD,uBAAYA,EAAOE,UAAnB,aAAY,EAAWI,SAAS,KAChDtE,MAAO8D,EACPS,YAAY,WACZC,cAAY,EACZC,aAAW,O,2BCtBbC,EAAkB,SAACC,EAAa3E,EAAOyD,EAAKmB,EAAUlB,EAAaC,EAAUE,GAA3D,OACtB,kBAAC,EAAD,iBACMc,EADN,CAEET,GAAIR,EACJD,IAAKA,EACLmB,SAAUA,EACVlB,YAAaA,EACb1D,MAAOA,EACP2D,SAAUA,EACVE,QAASA,EACTL,OAAQqB,QAINC,EAAgB,CACpBC,MAAO,iBAnBY,UAoBnBC,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAC7CC,OAAQ,CACNtF,KAAMuF,OAAKC,SACXtF,MAAM,GAAD,OAtBG,KAsBH,YArBE,OAuBTuF,UAAW,SAACC,EAAM/B,EAAKmB,EAAUa,GAAtB,OACT,kBAACC,EAAA,EAAD,CAAaC,QAAM,EAAC/F,UAAU,QAC5B,kBAACP,EAAA,EAAD,CAAc6D,QAAWsC,EAAO,UAAY,SAAU3F,QAAS2F,EAAMxF,MAAM,IAAIF,KAAK,YAC/E0F,EAAO,SAAW,iBAOhBI,EAAU,SAACjC,EAAUE,EAASgC,GAApB,MAA+B,CACpD,CAAEC,UAAW,KAAMC,KAAM,KAAMC,UAAU,EAAOC,QAAQ,EAAMlB,MAAO,iBApClD,WAqCnB,CAAEe,UAAW,YAAaC,KAAM,KAAMC,UAAU,EAAOjB,MAAO,iBArC3C,WAsCnB,CACEe,UAAW,gBACXC,KAAMF,EAAOK,QACbnB,MAAO,iBAzCU,UA0CjBoB,eAAgB,SAACxB,EAAa3E,EAAOyD,EAAKwB,EAAQL,EAAUlB,GAA5C,OACdgB,EAAgBC,EAAa3E,EAAOyD,EAAKmB,EAAUlB,EAAaC,EAAUE,IAC5EmB,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAE/C,CACEW,UAAW,gBACXC,KAAMF,EAAOO,QACbrB,MAAO,iBAjDU,UAkDjBoB,eAAgB,SAACxB,EAAa3E,EAAOyD,EAAKwB,EAAQL,EAAUlB,GAA5C,OACdgB,EAAgBC,EAAa3E,EAAOyD,EAAKmB,EAAUlB,EAAaC,EAAUE,IAC5EmB,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAE/C,CAAEW,UAAW,QAASC,KAAMF,EAAOzB,MAAOY,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SACvF,CACEW,UAAW,aACXC,KAAMF,EAAOQ,OACbtB,MAAO,iBA1DU,UA2DjBC,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,QAC7CC,OAAQ,CACNtF,KAAMuF,OAAKiB,OACXzC,QAAS,6BACN0C,cACAC,MAAM,IACNC,KAAI,SAAC9F,GAAD,MAAQ,CAAEX,MAAOW,EAAG+F,MAAO/F,QA9Bc,aAkClDmF,UAAW,QACXC,KAAM,YACHjB,GApC+C,aAuClDgB,UAAW,QACXC,KAAM,YACHjB,K,8ECrDD6B,EAAc,CAClBC,QAAS,GACTzD,QAAS,kBAAM0D,QAAQC,IAAI,KAC3BC,MAAM,EACNC,MAAO,IAmgBMC,uBAhgB8B,WAE3C,IAAMC,EAAiBC,cACjBC,EAAWC,cACTvE,EAAMC,YAAe,CAAC,SAAU,SAAhCD,EAEFwE,EAAUC,YAAYC,IAAaF,SACnCG,EAAaF,YAAYG,IAAmBC,eAPD,EAWfrH,mBAAS,CAAEsH,OAAO,EAAOhB,QAAS9D,EAAE,oBAXrB,mBAW1C+E,EAX0C,KAW/BC,EAX+B,OAYnBxH,mBAA0BqG,GAZP,mBAY1CoB,EAZ0C,KAYjCC,EAZiC,OAezB1H,mBAAoD,CAAE2H,KAAM,GAAIjF,QAAS,KAfhD,mBAe1CkF,EAf0C,KAepCC,EAfoC,OAgBT7H,mBAAoB,IAhBX,mBAgB1C8H,EAhB0C,KAgB5BC,EAhB4B,OAkBT/H,mBAAiB,GAlBR,mBAkB1CgI,GAlB0C,KAkB5BC,GAlB4B,QAmBPjI,mBAAiB,GAnBV,qBAmB1CkI,GAnB0C,MAmB3BC,GAnB2B,MA4BjD,SAASC,GAAiB9B,GACxBkB,EAAa,CAAEF,OAAO,EAAOhB,YAC7B+B,IAAMC,MAAMhC,EAAS,CAAEiC,UAAW,MAEpC,SAASC,GAAmBlC,GAC1BkB,EAAa,CAAEF,OAAO,EAAOhB,YAC7B+B,IAAMI,QAAQnC,GAlCiC,SAqClCjE,GArCkC,iFAqCjD,WAAsBqG,GAAtB,mBAAAC,EAAA,sEAEInB,EAAa,CAAEF,OAAO,EAAMhB,QAAS9D,EAAE,qBACjCoG,EAAWC,eACRC,IAAM3B,EAAWvD,IAAM,EAJpC,SAK2BmF,MAAM,eAAgB,CAC3CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUR,KAR3B,cAKUS,EALV,gBAUyBA,EAASC,OAVlC,OAUUC,EAVV,OAWIX,EAAShF,GAAK2F,EAAO3F,GACrBgF,EAASY,UAAYd,GAASd,EAAKD,KAAK8B,OAAS,EACjD5B,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAK,CAAEiB,GAAH,mBAAgB9F,EAAQ6E,OAC5BjF,QAASI,EAAQJ,YAEnB8F,GAAmBhG,EAAE,qBAjBzB,kDAmBI4F,GAAiB5F,EAAE,kBAnBvB,2DArCiD,+BA4DlCkH,KA5DkC,8EA4DjD,8BAAAf,EAAA,sDACMD,EAAQd,EAAKD,KAAK8B,OAAS,EACtBE,EAAK,EAFhB,YAEmBA,EAAKzB,IAFxB,gCAGU7F,GAAOqG,GAHjB,OAIIA,IAJJ,OAEuCiB,IAFvC,sBAMExB,GAAiB,GANnB,6CA5DiD,+BAqElCyB,KArEkC,8EAqEjD,8BAAAjB,EAAA,sEAEInB,EAAa,CAAEF,OAAO,EAAMhB,QAAS9D,EAAE,oBAEnCE,EAAuB,GAC3BoF,EAAa+B,SAAQ,SAACxJ,GAChBA,EAAEuF,SAAWvF,EAAEuF,QAAQhC,IAAIlB,EAAQoH,KAAKzJ,EAAEuF,SAC1CvF,EAAEyF,SAAWzF,EAAEyF,QAAQlC,IAAIlB,EAAQoH,KAAKzJ,EAAEyF,YAE5CpD,GACFmF,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAM7E,EAAQ6E,KACdjF,QAAS,UAAIA,EAAJ,YAAgBI,EAAQJ,UAASqH,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGlG,MAAMoG,cAAcD,EAAGnG,cAZ7F,SAe2BiF,MAAM,eAAgB,CAC3CC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUtB,KAlB3B,cAeUuB,EAfV,iBAoBUA,EAASC,OApBnB,QAsBIzB,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAM7E,EAAQ6E,KAAKwC,QAAO,SAAChH,GAAD,OAAU2E,EAAasC,MAAK,SAACC,GAAD,OAAiBA,EAAYzG,KAAOT,EAAIS,SAC9FlB,QAASI,EAAQJ,YAGnB8F,GAAmBhG,EAAE,gBAAD,OAAiBsF,EAAa2B,OAAS,EAAI,cAAgB,eA3BnF,kDA6BIrB,GAAiB5F,EAAE,kBA7BvB,QAgCEuF,EAAgB,IAhClB,2DArEiD,sBAyGjD,SAASuC,GAAcC,EAA+BC,GAChDD,GAAUA,EAAO3G,GACf4G,EAAS5G,GACXiE,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAM7E,EAAQ6E,KACdjF,QAAS,sBAAII,EAAQJ,QAAQyH,QAAO,SAAC9J,GAAD,OAAOA,EAAEuD,KAAO4G,EAAS5G,OAApD,CAAyD2G,IAAQR,MAAK,SAACC,EAAIC,GAAL,OAC7ED,EAAGlG,MAAMoG,cAAcD,EAAGnG,cAI9B+D,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAM7E,EAAQ6E,KACdjF,QAAS,sBAAII,EAAQJ,SAAZ,CAAqB6H,IAAQR,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGlG,MAAMoG,cAAcD,EAAGnG,cAE9E0G,EAAS5G,IAChBiE,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAM7E,EAAQ6E,KACdjF,QAASI,EAAQJ,QAAQyH,QAAO,SAAC9J,GAAD,OAAoBA,EAAEuD,KAAO4G,EAAS5G,UApG5E6G,qBAAU,WACHtD,GACL,sBAAC,sBAAAwB,EAAA,kEAAYd,EAAZ,SAA0B6C,YAAUvD,EAAWvD,IAA/C,sGAAD,KACC,CAACuD,IAqGJ,IAAM9D,GAAQ,uCAAG,WAAOsH,EAA4BrG,EAAkBlB,GAArD,eAAAuF,EAAA,sEACciC,QAAQC,IACnCjD,EAAKD,KAAKxB,IAAV,uCAAgC,WAAO2E,GAAP,mBAAAnC,EAAA,yDAC1BmC,EAAWlH,KAAOU,EADQ,oBAExBnB,EAAM2H,EACU,IAAhB1H,EACEuH,EAAgB/G,IAAMT,EAAI2C,SAAW3C,EAAI2C,QAAQlC,KAAO+G,EAAgB/G,IAE1ET,EAAIyC,QAAUmF,cACd3C,GAAiB5F,EAAE,oBAGnB8H,GAAcnH,EAAIyC,QAAS+E,GAC3BxH,EAAIyC,QAAU+E,GAGZA,EAAgB/G,IAAMT,EAAIyC,SAAWzC,EAAIyC,QAAQhC,KAAO+G,EAAgB/G,IAC1ET,EAAI2C,QAAUiF,cACd3C,GAAiB5F,EAAE,oBAEnB8H,GAAcnH,EAAI2C,QAAS6E,GAC3BxH,EAAI2C,QAAU6E,MAIbxH,EAAIW,OAASX,EAAIyC,SAAWzC,EAAIyC,QAAQhC,IAAMT,EAAI2C,SAAW3C,EAAI2C,QAAQlC,IAvBlD,iCAwBHmF,MAAM,gCAAD,OACMiC,mBAAmB7H,EAAIyC,QAAQhC,IADrC,sBACsDoH,mBAC9E7H,EAAI2C,QAAQlC,MA1BU,cAwBpByF,EAxBoB,gBA6BLA,EAASC,OA7BJ,OA6BpBC,EA7BoB,OA8BtBF,EAAS4B,IAAM1B,EAAOzF,MACxBX,EAAIW,MAAQyF,EAAOzF,MAEnBX,EAAIW,MAAQ,GAjCY,eAqC5BiF,MAAM,eAAgB,CACpBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUjG,KAxCK,kBA0CrBA,GA1CqB,iCA2ChB2H,GA3CgB,4CAAhC,wDAFa,OACTI,EADS,OAgDfrD,GAAQ,SAAC/E,GAAD,MAAc,CACpB6E,KAAMuD,EACNxI,QAASI,EAAQJ,YAlDJ,2CAAH,0DAkERyI,GAAY,uCAAG,oCAAAxC,EAAA,yDACdxB,EAAWvD,KACdwE,GAAiB,GAAD,OAAI5F,EAAE,iBAAN,QAChB4I,YAAW,kBAAMxE,EAAekD,KAAK,OAAM,QAIzClC,EAAKD,KAAK8B,OAAS,GAPJ,uBAQjBrB,GAAiB5F,EAAE,kBARF,6BAec,KAH3B6I,EAAoBzD,EAAKD,KAC5BwC,QAAO,SAAC9J,GAAD,OAAgCA,EAAEiL,YAA+B,KAAjBjL,EAAEiL,cACzDnF,KAAI,SAAC9F,GAAD,OAAOA,EAAEmJ,cACMC,OAfH,uBAgBjBrB,GAAiB5F,EAAE,cAAD,OAA4C,IAA7B6I,EAAkB5B,OAAe,KAAO,MAAQ,CAAE4B,uBAhBlE,6BAwBS,KAHtBE,EAAe3D,EAAKD,KACvBwC,QAAO,SAAC9J,GAAD,OAAQA,EAAEuF,UAAYvF,EAAEuF,QAAQhC,KAAOvD,EAAEyF,UAAYzF,EAAEyF,QAAQlC,MACtEuC,KAAI,SAAC9F,GAAD,OAAOA,EAAEmJ,cACCC,OAxBE,wBAyBjBrB,GAAiB5F,EAAE,cAAD,OAAuC,IAAxB+I,EAAa9B,OAAe,KAAO,MAAQ,CAAE8B,kBAzB7D,2BAqCnB,IAASC,KAPkB,EACvBC,EAAe,GACbC,EAAe9D,EAAKD,KAAKgE,QAAO,SAACC,EAAmCzI,GAGxE,OAFIA,EAAImI,cAAcM,EAAUA,EAASzI,EAAImI,cACxCM,EAASzI,EAAImI,YAAc,EACzBM,IACN,IAEGF,EAAaF,IARQ,GAQ0BC,EAAa3B,KAAK0B,GAtCpD,KAwCfC,EAAahC,OAAS,GAxCP,wBAyCjBrB,GACE5F,EAAE,cAAD,OAAuC,IAAxBiJ,EAAahC,OAAe,IAAM,MAAQ,CAAEgC,eAAc1I,IAAK8I,KA1ChE,2BAiDf7E,GAAWG,EAAW2E,SAAWC,qBAAmBC,SACtD7E,EAAW2E,SAAWC,qBAAmBC,OACzClF,EAASmF,IAAiBC,OAAOC,QAAQ,CAAEhF,iBAG7CL,EAASsF,IAAWrD,MAAMoD,QAAQ,CAAErD,IAAK3B,EAAWvD,MACpDgD,EAAekD,KAAK,WAvDD,4CAAH,qDA0DlB,SAASuC,KACPzF,EAAekD,KAAK,KAGtB,IAAMwC,GAAqC,CACzCC,KAAM,WACNlJ,SA5EmB,SAACF,EAAcqJ,GASlC,OARAzE,GAAgB,SAACJ,GACf,IAAM8E,IAAQ9E,EAAKyC,MAAK,SAAC/J,GAAD,OAAOA,EAAEuD,KAAOT,EAAIS,MAC5C,OAAI4I,EACKC,EAAQ9E,EAAH,CAAWxE,GAAX,mBAAmBwE,IAExB8E,EAAQ9E,EAAKwC,QAAO,SAAC9J,GAAD,OAAOA,EAAEuD,KAAOT,EAAIS,MAAM+D,MAGlD,GAoEP+E,YAAa,SAACF,EAAqB7E,GAAtB,OAA0CI,EAAgByE,EAAa7E,EAAO,KAC3FgF,MAAO,CAAEC,gBAAiB,WAC1BC,kBAAmB7F,GAAWG,EAAW2E,SAAWC,qBAAmBe,gBAGnEC,GAAmB,uCAAG,4BAAApE,EAAA,sEAExBnB,EAAa,CAAEF,OAAO,EAAMhB,QAAS9D,EAAE,oBAFf,SAGDuG,MAAM,iBAAkB,CAC7CC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEN,IAAK3B,EAAWvD,OANjB,cAGlByF,EAHkB,gBAQlBA,EAASC,OARS,OAUpBtC,GACFF,EACEmF,IAAiBC,OAAOC,QAAQ,CAC9BhF,WAAW,2BAAMA,GAAP,IAAmB2E,SAAUC,qBAAmBe,oBAIhEtE,GAAmBhG,EAAE,wBACrBkF,EAAWrB,GAlBa,kDAoBxB+B,GAAiB5F,EAAE,iBApBK,0DAAH,qDAwBzB,SAASwK,KACH7F,EAAW2E,SAAWC,qBAAmBC,OAC3C5D,GAAiB5F,EAAE,iBAIrBkF,EAAW,CACTpB,QAAQ,GAAD,OAAK9D,EAAE,4BAAP,MACPK,QAAS,kBAAMkK,MACfE,OAAQ,kBAAMvF,EAAWrB,IACzBI,MAAM,EACNC,MAAOlE,EAAE,uBAzSoC,SA6SlC0K,KA7SkC,8EA6SjD,oCAAAvE,EAAA,yDACOX,GADP,uBAEII,GAAiB5F,EAAE,iBAFvB,+BAMM2E,EAAW2E,SAAWC,qBAAmBe,gBAN/C,uBAOI1E,GAAiB5F,EAAE,iBAPvB,0BAeE,IAASkG,KAJTlB,EAAa,CAAEF,OAAO,EAAMhB,QAAS9D,EAAE,oBACnCM,EAAU,EACRqK,EAAQ,6BAA6BlH,cAAcC,MAAM,IAC3DkH,EAAiB,GACHxF,EAAKD,KAAM,CACvBxE,EAAMyE,EAAKD,KAAKe,GAGhB5F,GAAWkF,KAAclF,EAAU,GACvCK,EAAG,WAAiBgK,EAAMrK,GAC1BA,IACA,IACEiG,MAAM,eAAgB,CACpBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUjG,KAEvBiK,EAAQtD,KAAK3G,GACb,MAAOmF,GACPF,GAAiB,UACjBgF,EAAQtD,KAAK3G,IAGjBqF,GAAmBhG,EAAE,4BACrBqF,GAAQ,SAACwF,GAAD,MAAe,CAAE1F,KAAMyF,EAAS1K,QAAS2K,EAAS3K,YAnC5D,6CA7SiD,sBAmVjD,IDjS4BgD,GCiStB4H,GAAgBC,KAAKC,MACzBD,KAAKC,OAAO5F,EAAKlF,QAAQ+G,OAAS,GAAK,IACf,IAArB7B,EAAKD,KAAK8B,OACP,EACA7B,EAAKD,KAAKgE,QAAO,SAAC8B,EAAqBpN,GAAO,IAAD,IAC3C,OAAMA,EAAEuF,UAAYvF,EAAEyF,WAAa,UAACzF,EAAEuF,eAAH,aAAC,EAAWhC,OAAM,UAACvD,EAAEyF,eAAH,aAAC,EAAWlC,IAAY6J,EAAc,EACtFpN,EAAEuF,SAAYvF,EAAEuF,QAAQhC,IAAOvD,EAAEyF,SAAYzF,EAAEyF,QAAQlC,GACrD6J,EADgEA,EAAc,KAEpF,KAGLC,GAAiB5F,EAAa2B,QAAU,GAAKtC,EAAW2E,SAAWC,qBAAmBe,eAyHtFvH,GAAS,CACbK,QAASpD,EAAE,sBACXsD,QAAStD,EAAE,sBACXsB,MAAOtB,EAAE,oBACTuD,OAAQvD,EAAE,qBACVmL,MAAOnL,EAAE,oBACToL,MAAOpL,EAAE,qBAGX,OACE,6BACE,kBAAC,aAAD,CAAY8D,QAASmB,EAAQnB,QAASI,MAAOe,EAAQf,MAAO7D,QAAS4E,EAAQ5E,QAAS4D,KAAMgB,EAAQhB,OACpG,kBAAC,eAAD,CAAcA,KAAMc,EAAUD,MAAOhB,QAASiB,EAAUjB,UACxD,kBAACuH,EAAA,EAAD,KAnEF,yBAAKvO,UAAWwO,IAAYC,mBAC1B,kBAACC,EAAA,EAAD,CAAK1O,UAAWwO,IAAYG,UAC1B,kBAACJ,EAAA,EAAD,KACE,kBAACnN,EAAA,EAAD,CAAQkC,QAAQ,YAAYtD,UAAU,0BAA0BuD,QAASwJ,IACvE,kBAAC,IAAD,MADF,IACgB7J,EAAE,uBAInB2E,EAAW2E,SAAWC,qBAAmBe,eAAiB,KACzD,kBAACe,EAAA,EAAD,KACE,kBAACnN,EAAA,EAAD,CACEkC,QAAQ,UACRtD,UAAU,eACVuD,QAAS,kBAAMR,MACf1C,SAAU2N,IAAiB,IAAMtG,GAEjC,kBAAC,IAAD,MANF,IAMgBxE,EAAE,kBAIrB2E,EAAW2E,SAAWC,qBAAmBe,eAAiB,KACzD,kBAACe,EAAA,EAAD,KACE,kBAACnN,EAAA,EAAD,CAAQkC,QAAQ,SAAStD,UAAU,eAAeuD,QAAS+G,GAAWjK,SAAU+N,KAAmB1G,GACjG,kBAAC,IAAD,MADF,IACyC,IAAxBc,EAAa2B,OAAejH,EAAE,mBAAqBA,EAAE,uBAIzE2E,EAAW2E,WAAaC,qBAAmBC,OAAS,KACnD,kBAAC6B,EAAA,EAAD,KACE,kBAACnN,EAAA,EAAD,CAAQkC,QAAQ,SAAStD,UAAU,eAAeuD,QAASmK,GAAcrN,UAAWqH,GACjFxE,EAAE,kBAIT,kBAACqL,EAAA,EAAD,KACE,kBAACnN,EAAA,EAAD,CACEkC,QAAQ,kBACRtD,UAAU,+CACVuD,QAASsI,GACTxL,UAAWqH,GAEX,2BAAIxE,EAAE,mBAAN,KANF,IAMiC,kBAAC,IAAD,SAIpCwE,GAAWG,EAAW2E,SAAWC,qBAAmBe,eACnD,oCA5GJ,kBAACrL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWU,QAAZ,KACE,kBAACV,EAAA,EAAWM,KAAZ,KAAkBS,EAAE,qBAEtB,kBAAC0L,EAAA,EAAD,CACEjK,YACE2D,EAAKD,KAAK8B,OAAS,EAAIjH,EAAE,gBAAkBA,EAAE,eAAgB,CAAE2L,IAAKZ,KAAKC,MAAM5F,EAAKD,KAAK8B,OAAS,KAEpGjK,KAAK,SACL4O,KAAM,EACNrL,IAAK,EACLoL,IAAKZ,KAAKC,MAAM5F,EAAKD,KAAK8B,OAAS,GACnC/J,MAAwB,IAAjBsI,GAAqBA,QAAenH,EAC3CpB,SAAU,SAAC4O,GAAD,OAA2CpG,GAAgBqG,OAAOD,EAAME,cAAc7O,SAChGC,SACEiI,EAAKD,KAAK8B,OAAS,GACnBtC,EAAW2E,WAAaC,qBAAmBC,QAC3C7E,EAAW2E,WAAaC,qBAAmByC,SAG/C,kBAAC/M,EAAA,EAAWS,OAAZ,KACE,kBAACxB,EAAA,EAAD,CACEkC,QAAQ,UACRC,QAASqK,GACTvN,UAAWqI,IAAgBA,GAAeuF,KAAKC,MAAM5F,EAAKD,KAAK8B,OAAS,IAAM7B,EAAKD,KAAK8B,OAAS,GAEhGjH,EAAE,kBAMT,kBAACf,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWU,QAAZ,KACE,kBAACV,EAAA,EAAWM,KAAZ,KAAkBS,EAAE,oBAEtB,kBAAC0L,EAAA,EAAD,CACEvO,SAAU2N,IAAiB,EAC3B9N,KAAK,SACL4O,KAAM,EACNrL,IAAK,EACLoL,IAAKb,GACLrJ,YAAaqJ,IAAiB,EAAI9K,EAAE,gBAAkBA,EAAE,eAAgB,CAAE2L,IAAKb,KAC/E7N,SAAU,SAAC4O,GAAD,OAA2ClG,GAAiBmG,OAAOD,EAAME,cAAc7O,SACjGA,MAAOwI,IAAiB,KAE1B,kBAACzG,EAAA,EAAWS,OAAZ,KACE,kBAACxB,EAAA,EAAD,CACEkC,QAAQ,UACRC,QAAS,SAACxC,GAAD,OAAY8H,GAAiBmF,KACtC3N,SAAUuI,GAAgBoF,IAEzB9K,EAAE,eAEL,kBAAC9B,EAAA,EAAD,CAAQkC,QAAQ,UAAUC,QAAS6G,GAAiB/J,UAAWuI,IAAiBA,GAAgBoF,IAC7F9K,EAAE,mBAyDH,MAmBF,kBAACwL,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,KACGjG,EAAKD,MAAQC,EAAKlF,QACjB,kBAAC,IAAD,CACE+L,YAAU,EACVC,SAAS,KACT9G,KAAMA,EAAKD,KACXrC,QAASA,EAAQjC,GAAUuE,EAAKlF,QAAS6C,IACzCoJ,UD5bcjJ,GC4bUsB,GAAWG,EAAW2E,SAAWC,qBAAmBC,OD3b1F4C,IAAgB,CACdrC,KAAM7G,GAAW,QAAU,OAC3BmJ,YAAY,EACZC,cAAe,SAACC,EAAUC,EAAU7L,EAAKwB,GAEd,kBAArBA,EAAOa,WAAsD,kBAArBb,EAAOa,WACnD,sBAAC,4BAAAmD,EAAA,sEACwBI,MAAM,eAAgB,CAC3CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUjG,KAJxB,cACOkG,EADP,gBAMOA,EAASC,OANhB,0CAAD,OCsbUgD,UAAWA,GACX2C,iBAAkB,kBAChB,kBAAC,EAAD,CAAQ1M,WAAYyE,IAAW,EAAO3E,OAAQ,kBAAMA,MAAUC,cAAesF,EAAKlF,QAAQ+G,UAE5FyF,QAAS,kBAAC,IAAD,MACTC,cAAc,0CACdC,SAAO,EACPC,OAAK,IAEL,a,oBC5hBhBC,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,kBAAoB,kCAAkC,YAAc,8B,iCCDpI,iFA+BeC,IAvByC,WACtD,IAAMrI,EAAaF,YAAYG,IAAmBC,eAC1C7E,EAAMC,YAAe,CAAC,eAAtBD,EACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIlD,UAAU,cACZ,kBAAC,IAAD,CAAOsD,QAAQ,QACb,8BAAOJ,EAAE,yBAAT,KACA,oCAAU2E,EAAW9H,KAAK4G,cAA1B,KACA,8BACE,wCACSwJ,YAAWtI,EAAWuI,MAD/B,KAEE,qCAAWlN,EAAE,uBAAD,OAAwB2E,EAAW2E","file":"static/js/9.568cfc0b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\n// Componente da mostrare se non sono presenti coppie\r\nconst NoData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const { t } = useTranslation(['common', 'pair']);\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p>{`${t('pair:missing.1')}...`}</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        {t('pair:add.one')}\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>{t('pair:missing.2', { current: players, min: MIN_PLAYERS })}</p>\r\n      <p>{`${diff === 1 ? t('pair:missing.3') : t('pair:missing.4', { diff })}...`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">{t('common:root.player')}</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import { PlayerDTO } from '@common/dto';\r\nimport React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (option: ValueType<PlayerDTO>, actionMeta: ActionMeta<PlayerDTO>) => {\r\n      setSelectedOption(option as PlayerDTO);\r\n      onSelect(option, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={(option) => option.alias}\r\n        getOptionValue={(option) => option.id?.toString(10)!}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nimport { ToggleButton, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst ALIGN_CENTER = 'center';\r\nconst YES = 'Si';\r\nconst NO = 'No';\r\n\r\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\r\n  <PlayerSelect\r\n    {...editorProps}\r\n    id={columnIndex}\r\n    row={row}\r\n    rowIndex={rowIndex}\r\n    columnIndex={columnIndex}\r\n    value={value}\r\n    onSelect={onSelect}\r\n    options={options}\r\n    styles={customStyles}\r\n  />\r\n);\r\n\r\nconst checkBoxProps = {\r\n  align: () => ALIGN_CENTER,\r\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n  editor: {\r\n    type: Type.CHECKBOX,\r\n    value: `${YES}:${NO}`,\r\n  },\r\n  formatter: (cell, row, rowIndex, formatExtraData) => (\r\n    <ButtonGroup toggle className=\"mb-2\">\r\n      <ToggleButton variant={!!cell ? 'success' : 'danger'} checked={cell} value=\"1\" type=\"checkbox\">\r\n        {!!cell ? 'Pagato' : 'Non Pagato'}\r\n      </ToggleButton>\r\n    </ButtonGroup>\r\n  ),\r\n  //style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\r\n};\r\n\r\nexport const columns = (onSelect, options, labels) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: labels.player1,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: labels.player2,\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: labels.alias, headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: labels.stage1,\r\n    align: () => ALIGN_CENTER,\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => ({ value: e, label: e })),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    ...checkBoxProps,\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    ...checkBoxProps,\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n// Components\r\nimport NoData from './noData';\r\n// Core / Helper / Editor\r\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\r\nimport { FormEventType } from '../core/types';\r\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\n// Style\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n// Service\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\n// Selector\r\nimport { AuthSelector } from 'redux/selectors/auth.selector';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n// Action\r\nimport { TournamentAction, PairAction } from '../../redux/actions';\r\nimport TournamentBadge from '../Tournament/badge';\r\nimport { useTranslation } from 'react-i18next';\r\n// Models\r\nimport { PairDTO, PlayerDTO, TournamentProgress } from '@common/dto';\r\n\r\nconst hideAskUser = {\r\n  message: '',\r\n  onClick: () => console.log(''),\r\n  show: false,\r\n  title: '',\r\n};\r\ninterface PairTableProps {}\r\nconst PairsTable: React.FC<PairTableProps> = () => {\r\n  // Navigation\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation(['common', 'pair']);\r\n\r\n  const isAdmin = useSelector(AuthSelector.isAdmin);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: t('common:loading') });\r\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\r\n\r\n  // Data\r\n  const [data, setData] = useState<{ rows: PairDTO[]; players: PlayerDTO[] }>({ rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    if (!tournament) return;\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.error(message, { autoClose: 10000 });\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.success(message);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id || 0;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage(t('pair:success.add'));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.19'));\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: PlayerDTO[] = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(t(`pair:success.${selectedRows.length > 1 ? 'deleteMulti' : 'deleteOne'}`));\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.18'));\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO | undefined, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = async (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = await Promise.all(\r\n      data.rows.map<Promise<PairDTO>>(async (rowElement) => {\r\n        if (rowElement.id === rowIndex) {\r\n          let row = rowElement;\r\n          if (columnIndex === 1) {\r\n            if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n              // Devo salvare l'elemnto che sto per sostituire\r\n              row.player1 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n              updateOptions(row.player1, selectedElement);\r\n              row.player1 = selectedElement;\r\n            }\r\n          } else {\r\n            if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n              row.player2 = getEmptyPlayer();\r\n              showErrorMessage(t('pair:error.17'));\r\n            } else {\r\n              updateOptions(row.player2, selectedElement);\r\n              row.player2 = selectedElement;\r\n            }\r\n          }\r\n          //\r\n          if (!row.alias && row.player1 && row.player1.id && row.player2 && row.player2.id) {\r\n            const response = await fetch(\r\n              `/api/v1/pair/alias?player1Id=${encodeURIComponent(row.player1.id)}&player2Id=${encodeURIComponent(\r\n                row.player2.id\r\n              )}`\r\n            );\r\n            const result = await response.json();\r\n            if (response.ok && result.alias) {\r\n              row.alias = result.alias;\r\n            } else {\r\n              row.alias = '';\r\n            }\r\n          }\r\n          // update Db. Non aspetto la risposta...\r\n          fetch('/api/v1/pair', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row),\r\n          });\r\n          return row;\r\n        } else return rowElement;\r\n      })\r\n    );\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((rows) => {\r\n      const found = rows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? rows : [row, ...rows];\r\n      } else {\r\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage(`${t('pair:error.16')}...`);\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage(t('pair:error.15'));\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingStage1Name.length === 1 ? '13' : '14'}`, { missingStage1Name }));\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(t(`pair:error.${missingPairs.length === 1 ? '11' : '12'}`, { missingPairs }));\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        t(`pair:error.${invalidStage.length === 1 ? '9' : '10'}`, { invalidStage, min: MIN_PAIR_PER_STAGE + 1 })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n      tournament.progress = TournamentProgress.Stage1;\r\n      dispatch(TournamentAction.update.request({ tournament }));\r\n    }\r\n    // Go to Stage1\r\n    dispatch(PairAction.fetch.request({ tId: tournament.id! }));\r\n    currentHistory.push('/stage1');\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow: SelectRowProps<PairDTO> = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: !isAdmin || tournament.progress > TournamentProgress.PairsSelection,\r\n  };\r\n\r\n  const processDeleteStage1 = async () => {\r\n    try {\r\n      setIsLoading({ state: true, message: t('common:loading') });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      if (isAdmin) {\r\n        dispatch(\r\n          TournamentAction.update.request({\r\n            tournament: { ...tournament, progress: TournamentProgress.PairsSelection },\r\n          })\r\n        );\r\n      }\r\n      showSuccessMessage(t('pair:success.delete'));\r\n      setAskUser(hideAskUser);\r\n    } catch (error) {\r\n      showErrorMessage(t('pair:error.8'));\r\n    }\r\n  };\r\n\r\n  function deleteStage1() {\r\n    if (tournament.progress > TournamentProgress.Stage1) {\r\n      showErrorMessage(t('pair:error.7'));\r\n      return;\r\n    }\r\n    // Chiedo conferma all'utente\r\n    setAskUser({\r\n      message: `${t('pair:stage1.resetConfirm')} ?`,\r\n      onClick: () => processDeleteStage1(),\r\n      onHide: () => setAskUser(hideAskUser),\r\n      show: true,\r\n      title: t('pair:stage1.reset'),\r\n    });\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage(t('pair:error.6'));\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress > TournamentProgress.PairsSelection) {\r\n      showErrorMessage(t('pair:error.5'));\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: t('common:loading') });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage(t('pair:success.stage1Name'));\r\n    setData((prevData) => ({ rows: newRows, players: prevData.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled = selectedRows.length <= 0 || tournament.progress > TournamentProgress.PairsSelection;\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const assignMatches = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:stage1.set')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder={\r\n          data.rows.length < 4 ? t('pair:error.3') : t('pair:error.4', { max: Math.floor(data.rows.length / 4) })\r\n        }\r\n        type=\"number\"\r\n        step={1}\r\n        min={0}\r\n        max={Math.floor(data.rows.length / 4)}\r\n        value={stage1Number !== 0 ? stage1Number : undefined}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\r\n        disabled={\r\n          data.rows.length < 4 ||\r\n          tournament.progress === TournamentProgress.Stage1 ||\r\n          tournament.progress === TournamentProgress.Stage2\r\n        }\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={setStage1Name}\r\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n        >\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const addPairs = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{t('pair:add.multi')}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        disabled={availableRows <= 0}\r\n        type=\"number\"\r\n        step={1}\r\n        min={1}\r\n        max={availableRows}\r\n        placeholder={availableRows <= 0 ? t('pair:error.1') : t('pair:error.2', { max: availableRows })}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\r\n        value={newRowsNumber || ''}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n          disabled={newRowsNumber > availableRows}\r\n        >\r\n          {t('common:max')}\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\r\n          {t('common:exec')}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n\r\n  const toolsBar = () => (\r\n    <div className={commonStyle.toolsBarContainer}>\r\n      <Row className={commonStyle.toolsBar}>\r\n        <Col>\r\n          <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n            <HomeIcon /> {t('common:route.home')}\r\n          </Button>\r\n        </Col>\r\n\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"align-middle\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isAdmin}\r\n            >\r\n              <PlusIcon /> {t('pair:add.one')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteRow} disabled={deleteDisabled || !isAdmin}>\r\n              <TrashIcon /> {selectedRows.length === 1 ? t('pair:delete.one') : t('pair:delete.multi')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress !== TournamentProgress.Stage1 ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!isAdmin}>\r\n              {t('stage1:reset')}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            className=\"default-color-white float-right align-middle\"\r\n            onClick={confirmPairs}\r\n            disabled={!isAdmin}\r\n          >\r\n            <b>{t('common:continue')} </b> <RightArrowIcon />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isAdmin && tournament.progress < TournamentProgress.PairsSelection ? (\r\n        <>\r\n          {assignMatches()}\r\n          {addPairs()}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  const labels = {\r\n    player1: t('pair:field.player1'),\r\n    player2: t('pair:field.player2'),\r\n    alias: t('pair:field.alias'),\r\n    stage1: t('pair:field.stage1'),\r\n    paid1: t('pair:field.paid1'),\r\n    paid2: t('pair:field.paid2'),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col>\r\n        {toolsBar()}\r\n        <Row>\r\n          <Col>\r\n            {data.rows && data.players ? (\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players, labels) as ColumnDescription<PairDTO, PairDTO>[]}\r\n                cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage1)}\r\n                selectRow={selectRow}\r\n                noDataIndication={() => (\r\n                  <NoData isEditable={isAdmin || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n                )}\r\n                caption={<TournamentBadge />}\r\n                headerClasses=\"default-background default-color-yellow\"\r\n                striped\r\n                hover\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate } from '../../@common/utils/date.utils';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  const { t } = useTranslation(['tournament']);\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>{t('tournament:tournament')} </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n"],"sourceRoot":""}