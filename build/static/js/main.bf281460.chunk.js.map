{"version":3,"sources":["components/core/SessionContext.tsx","components/core/ProtectedRoute.tsx","components/Login/Login.tsx","components/core/utils.ts","components/Tournament/type.ts","components/Player/helper.js","components/Tournament/Tournament.jsx","components/Tournament/helper.ts","components/Player/header.tsx","components/core/Commons.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/core/Routes.ts","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/DELETE/Todo.tsx","components/Navbar/Navbar.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["initialSession","SessionContext","createContext","useSessionContext","useContext","ProtectedRoute","props","currentLocation","useLocation","redirectPath","redirectPathOnAuthentication","console","log","isAuthenticated","setRedirectPathOnAuthentication","pathname","authenticationPath","component","to","render","undefined","Login","sessionContext","updateSessionContext","currentHistory","useHistory","onClick","push","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","nameFilter","surnameFilter","aliasFilter","roleFilter","TournamentProgress","IndicatorsContainer","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","IndicatorSeparator","innerProps","style","cardStyle","margin","FTournament","useState","selectedOption","setSelectedOption","tournamentList","setTournamentList","useEffect","setterFunction","setterFunction2","a","fetch","method","headers","response","json","result","found","find","e","name","tmp","sort","handleSubmit","event","preventDefault","model","value","ownerId","progress","public","body","JSON","stringify","res","message","id","Card","Body","Title","Form","onSubmit","components","options","placeholder","isSearchable","isClearable","onChange","onCreateOption","label","prevList","Button","type","size","variant","disabled","clearAllFilter","dataField","text","editable","headerClasses","autoSelectText","filter","textFilter","getFilter","selectFilter","Portiere","Attaccante","Master","editor","Type","SELECT","getOptions","_","hidden","valueFormatter","alias","surname","getEmptyPlayer","role","email","phone","match_played","match_won","total_score","tableHeader","LoadingModal","show","onHide","Modal","centered","Header","closeButton","Footer","Spinner","animation","SuccessToast","Toast","className","key","Alert","WarningToast","ErrorToast","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","column","rows","isLoading","bind","deleteRow","addRow","this","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","Row","Col","keyField","data","columns","exportCSV","ListGroup","horizontal","wrapperClasses","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","getEmptyRowModel","rowNumber","tId","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","players","tournament","fetchPairs","createAlias","TableHeader","noData","optionsLength","diff","PairsTable","useParams","setIsLoading","successMessage","setSuccessMessage","allertMessage","setAllertMessage","errorMessage","setErrorMessage","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","emptyRow","length","current","ii","e1","e2","localeCompare","updateOptions","player","selected","handleSelect","names","newRows","availableRows","Math","floor","reduce","accumulator","md","span","Item","action","missingStage1Name","missingPairs","invalidStage","pairsInStage","allNames","stageName","MIN_PAIR_PER_STAGE","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","selectedElement","newRowsElement","rowElement","title","saved","divStyle","color","PairsSelection","pairsList","setPairsList","baseColumns","cell","colIndex","headerAlign","toString","parseInt","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","ok","routes","path","exact","visible","Pairs","stage","stageList","element","renderTables","PlayerTable","innerElementStyle","flexDirection","alignItems","innerParentStyle","display","justifyContent","alignContent","thisList","pow","location","FNavbar","bg","route","App","defaultProtectedRouteProps","Container","fluid","Boolean","window","hostname","match","ReactDOM","defaultSessionContext","Provider","children","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf281460.chunk.js","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean;\r\n  redirectPathOnAuthentication?: string;\r\n}\r\n\r\nexport const initialSession: Session = {};\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = props => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  return <SessionContext.Provider value={defaultSessionContext}>{props.children}</SessionContext.Provider>;\r\n};\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router';\r\n\r\nexport interface ProtectedRouteProps extends RouteProps {\r\n  isAuthenticated: boolean;\r\n  authenticationPath: string;\r\n  redirectPathOnAuthentication: string;\r\n  setRedirectPathOnAuthentication: (path: string) => void;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = props => {\r\n  const currentLocation = useLocation();\r\n  // console.log('Current Location ', currentLocation);\r\n  let redirectPath = props.redirectPathOnAuthentication;\r\n\r\n  // FIXME:\r\n  console.log('ProtectedRoute....');\r\n  if (process.env.NODE_ENV === 'development') return <Route {...props} />;\r\n\r\n  if (!props.isAuthenticated) {\r\n    // console.log('Not Authenticated');\r\n    props.setRedirectPathOnAuthentication(currentLocation.pathname);\r\n    redirectPath = props.authenticationPath;\r\n  }\r\n\r\n  if (redirectPath !== currentLocation.pathname && !props.isAuthenticated) {\r\n    // console.log('Redirecting to : ' + redirectPath);\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n    return <Route {...props} component={renderComponent} render={undefined} />;\r\n  } else {\r\n    // console.log('Render component', props);\r\n    return <Route {...props} />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { useSessionContext } from '../core/SessionContext';\r\nimport { useHistory } from 'react-router';\r\n\r\n// TODO:\r\nexport const Login: React.FC = () => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const handleClick = () => {\r\n    updateSessionContext({ ...sessionContext, isAuthenticated: true });\r\n    currentHistory.push('/');\r\n  };\r\n\r\n  return <button onClick={handleClick}>Login</button>;\r\n};\r\n","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentModel = {\r\n  id: number | null;\r\n  name: string;\r\n  ownerId: number;\r\n  progress: string;\r\n  public: boolean;\r\n  pairs: PairModel[];\r\n};\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport const TournamentProgress = { New: 'new', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns de\r\nexport default [\r\n  { dataField: 'id', text: 'ID', editable: false },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/player/list/${tId}` : '/api/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: '',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { components } from 'react-select';\r\nimport { Form, Button, Card, Tooltip } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { getTodayDate } from '../core/utils';\r\nimport { fetchTournaments } from './helper';\r\nimport { TournamentProgress } from './type';\r\n\r\n//export default const FTournament: React.FC = () => {\r\nconst FTournament = () => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    setSelectedOption({ value: selectedOption, label: selectedOption });\r\n    setTournamentList(prevList => [...prevList, { value: selectedOption, label: selectedOption }]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const model = {\r\n      name: selectedOption.value,\r\n      ownerId: 1,\r\n      progress: TournamentProgress.New,\r\n      public: true\r\n    };\r\n    const response = await fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model)\r\n    });\r\n    const res = await response.json();\r\n    if (res.message) console.log(res.message);\r\n    currentHistory.push(`/tournament/${res.id}`);\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Body>\r\n        <Card.Title>Scegli un torneo</Card.Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <CreatableSelect\r\n            components={{ IndicatorSeparator, IndicatorsContainer }}\r\n            //formatOptionLabel={formatOptionLabel}\r\n            value={selectedOption}\r\n            options={tournamentList}\r\n            placeholder=\"Crea/Cerca un torneo\"\r\n            isSearchable={true}\r\n            isClearable\r\n            onChange={handleChange}\r\n            onCreateOption={handleCreate}\r\n          />\r\n          <br></br>\r\n          <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n            Continua\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// TODO:\r\n// https://react-select.com/components#components\r\nconst IndicatorsContainer = props => {\r\n  return (\r\n    <div>\r\n      <components.IndicatorsContainer {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Indicator Separator\r\nconst indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => {\r\n  return <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n};\r\n\r\nconst cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto'\r\n};\r\n\r\nconst formatOptionLabel = props => {\r\n  console.log('format : ', props);\r\n\r\n  return (\r\n    <strong>\r\n      {props.name}\r\n      <small style={{ color: '#ccc' }}>@{props.progress}</small>\r\n    </strong>\r\n  );\r\n};\r\n\r\nexport default FTournament;\r\n","import { getTodayDate } from '../core/utils';\r\nimport { TournamentModel } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = result.find(e => e.name === getTodayDate());\r\n    let tmp = found ? [found, ...result] : result;\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\ntype propsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\ntype toastType = {\r\n  message: string;\r\n};\r\nexport const LoadingModal: React.FC<propsType> = ({ message, show, onHide = () => (show = false) }: propsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport const SuccessToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'success-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'success'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const WarningToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'warning-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'warning'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const ErrorToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'error-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'danger'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter, ExportCSVButton } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      (async () => {\r\n        // TODO: gestire try-catch\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <LoadingModal show={isLoading} message={'Caricamento'} />\r\n        <Row>\r\n          <Col>\r\n            <ToolkitProvider keyField=\"id\" data={rows} columns={columns} exportCSV>\r\n              {props => (\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    <Button variant=\"success\" onClick={addRow}>\r\n                      Aggiungi giocatore\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={deleteRow}>\r\n                      Calcella giocatore\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n\r\n                  {/* FIXME:\r\n                  <ExportCSVButton {...props.csvProps} />\r\n                  */}\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns}\r\n                    cellEdit={this.cellEditProps}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              )}\r\n            </ToolkitProvider>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    // onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { TournamentProgress } from '../Tournament/type';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    )\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    )\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia' },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = cellEditFactory({\r\n  mode: 'click',\r\n  blurToSave: true,\r\n  afterSaveCell: (oldValue, newValue, row, column) => {\r\n    // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n    if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n    (async () => {\r\n      const response = await fetch('/api/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(row)\r\n      });\r\n      await response.json();\r\n    })();\r\n  }\r\n});\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/player/list/${tId}` : '/api/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  // Aggiorno stato torneo\r\n  tournament.progress = TournamentProgress.PairsSelection;\r\n  response = await fetch('/api/tournament', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(tournament)\r\n  });\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, SuccessToast, WarningToast, ErrorToast } from '../core/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\n\r\nconst PairsTable = _ => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [allertMessage, setAllertMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setSuccessMessage(message);\r\n    setTimeout(() => setSuccessMessage(''), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const response = await fetch('/api/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      await response.json();\r\n\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = () => {\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      setErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    if (!tId) {\r\n      setErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n        currentHistory.push('/');\r\n      }, 5000);\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      setErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data.tournament)\r\n    });\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament)\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      setErrorMessage('Specificare il numero di gironi da assegnare');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        const response = await fetch('/api/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  console.log('render table : ', data);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n        <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n          <Row>\r\n            <ListGroup>\r\n              <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                Prosegui\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                Home\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"success\" onClick={addRow} disabled={availableRows <= 0}>\r\n                Aggiungi Coppia\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"danger\" onClick={deleteRow} disabled={!(selectedRows.length > 0)}>\r\n                Elimina Coppia\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"danger\" onClick={deleteStage1}>\r\n                Reset gironi\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }}>\r\n          <Row>\r\n            <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                disabled={data.rows.length < 4}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={e => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n          <Row>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={data.rows}\r\n              columns={columns(onSelect, data.players)}\r\n              cellEdit={cellEditProps}\r\n              selectRow={selectRow}\r\n              noDataIndication={<NoData addRow={addRow} optionsLength={data.players.length} />}\r\n              caption={<TableHeader tournament={data.tournament} />}\r\n              wrapperClasses=\"player-table\"\r\n              headerClasses=\"player-table-header\"\r\n              striped\r\n              hover\r\n            />\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }} md={2}>\r\n          <SuccessToast message={successMessage} />\r\n          <WarningToast message={allertMessage} />\r\n          <ErrorToast message={errorMessage} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nexport const newColumn = (index, onChange) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    beforeSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno cella opposta\r\n        rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        // Aggiorno posizione relativa\r\n        [...rows]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n      }\r\n    },\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno dati sul Db\r\n        updateCellValue(oldValue, newValue, row, column);\r\n        let acc = 0;\r\n        for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n        rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n        acc = 0;\r\n        for (let key in rows[parseInt(column.text) - 1])\r\n          if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n        rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        bootstrap4\r\n        keyField=\"id\"\r\n        data={rows}\r\n        columns={columns}\r\n        selectRow={selectRow}\r\n        cellEdit={cellEditProps}\r\n        noDataIndication=\"Nessun dato reperito\"\r\n        wrapperClasses=\"player-table\"\r\n        headerClasses=\"player-table-header\"\r\n        caption={<TableHeader title={tableName} saved={saved} />}\r\n        striped\r\n        hover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import FTournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { OrganizationChartDemo } from '../Stage2/table';\r\n\r\n// TODO:\r\nimport * as Todo from '../DELETE/Todo';\r\n\r\ntype routeType = {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  component: any;\r\n  visible: boolean;\r\n  index: number;\r\n};\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/', label: 'Home', exact: true, component: FTournament, visible: true, index: 0 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    component: Pairs,\r\n    visible: false,\r\n    index: 10\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    component: Stage1Wrapper,\r\n    visible: false,\r\n    index: 20\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    component: PlayerTable,\r\n    visible: true,\r\n    index: 30\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    component: Stage2,\r\n    //component: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    index: 40\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  { path: '*', label: 'Not Found', exact: false, component: Todo.RedirectionControl, visible: false, index: 1000 }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair, wapperPropsType } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC<wapperPropsType> = (props: wapperPropsType): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// 404 Page\r\nexport function NoMatch(): JSX.Element {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Home(props: any): JSX.Element {\r\n  return (\r\n    <div>\r\n      <h1> HOME PAGE </h1>\r\n      <h2>Welcome </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function About(): JSX.Element {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n","// Style\r\nimport './Navbar.css';\r\n// React\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\n// import { useSessionContext } from '../core/SessionContext';\r\nimport routes from '../core/Routes';\r\n\r\nexport const FNavbar: React.FC = () => {\r\n  // const [sessionContext, updateSessionContext] = useSessionContext();\r\n  return (\r\n    <Navbar bg=\"ligth\" variant=\"light\" className=\"navbar-container\">\r\n      {/*\r\n          <Navbar.Brand href=\"#home\">\r\n        <img src={logo} alt=\"Calcetto C.S.M.\" />\r\n      </Navbar.Brand>\r\n      */}\r\n      {/* sessionContext.isAuthenticated */ true ? (\r\n        <ul className=\"navbar-list\">\r\n          {routes.map(route =>\r\n            route.visible ? (\r\n              <li key={`li-${route.index}`} className=\"navbar-list-item\">\r\n                <Link key={`link-${route.index}`} to={route.path}>\r\n                  {route.label}\r\n                </Link>\r\n              </li>\r\n            ) : null\r\n          )}\r\n        </ul>\r\n      ) : null}\r\n    </Navbar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport { useSessionContext } from '../components/core/SessionContext';\r\nimport { ProtectedRoute, ProtectedRouteProps } from '../components/core/ProtectedRoute';\r\nimport './style/App.css';\r\nimport { Login } from './Login/Login';\r\n// import { useHistory } from 'react-router-dom';\r\nimport routes from '../components/core/Routes';\r\nimport { FNavbar } from './Navbar/Navbar';\r\nimport { Container } from 'react-bootstrap';\r\nimport headerImage from './assets/header-background.jpeg';\r\nconst applicationName = 'Calcetto C.S.M';\r\n\r\nconst App: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n\r\n  const setRedirectPathOnAuthentication = (path: string) => {\r\n    updateSessionContext({ ...sessionContext, redirectPathOnAuthentication: path });\r\n  };\r\n\r\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\r\n    isAuthenticated: !!sessionContext.isAuthenticated,\r\n    authenticationPath: '/login',\r\n    redirectPathOnAuthentication: sessionContext.redirectPathOnAuthentication || '',\r\n    setRedirectPathOnAuthentication\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/** Header */}\r\n      <header className=\"app-header\">\r\n        <p>{applicationName}</p>\r\n        <FNavbar />\r\n      </header>\r\n\r\n      <br></br>\r\n      <Container fluid>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          {/* Carica dinamicamente le route a partire dall'oggetto routes ( vedi sopra ) */\r\n          routes.map(route => (\r\n            <ProtectedRoute {...route} {...defaultProtectedRouteProps} key={route.index} />\r\n          ))}\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <SessionContextProvider>\r\n      <App />\r\n    </SessionContextProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}