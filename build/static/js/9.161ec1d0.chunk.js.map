{"version":3,"sources":["components/core/icons.tsx","components/core/utils.ts","selectors/tournament.selector.ts","components/Player/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx"],"names":["Icon","size","prefix","iconName","color","icon","findIconDefinition","TrashIcon","SaveIcon","RightArrowIcon","ToggleOn","ToggleOff","TrophyIcon","DoubleRightIcon","BanIcon","getTodayDate","formatDate","Date","translateTournamentProgress","value","TournamentProgress","New","PairsSelection","Stage1","Stage2","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","RegExp","passwordRegExp","emailRegExp","getBaseLog","x","y","Math","log","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","selectOptions","Portiere","Attaccante","Master","clearAllFilter","playerColumns","isEditable","dataField","text","editable","headerStyle","column","colIndex","width","headerClasses","autoSelectText","filter","textFilter","placeholder","getFilter","selectFilter","options","editor","type","Type","SELECT","getOptions","_","label","hidden","valueFormatter","selectedOption","alias","surname","name","TableHeader","useSelector","toUpperCase","progress","noData","addRow","optionsLength","players","diff","Button","variant","onClick","disabled","to","PlayerSelection","React","forwardRef","ref","styles","row","columnIndex","onUpdate","onSelect","useState","setSelectedOption","onChange","actionMeta","id","isSearchable","isClearable","columns","align","editorRenderer","editorProps","rowIndex","customStyles","split","map","e","CHECKBOX","style","content","backgroundColor","withRouter","session","SessionSelector","getSession","currentHistory","useHistory","state","message","setIsLoading","messageInitialState","setMessage","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","a","emptyRow","getEmptyRowModel","tId","fetch","method","headers","body","JSON","stringify","response","json","result","rowNumber","current","addMultipleRows","ii","deleteRow","forEach","player1","push","player2","sort","e1","e2","localeCompare","find","selectedRow","updateOptions","player","selected","useEffect","fetchData","selectedElement","newRowsElement","rowElement","getEmptyPlayer","confirmPairs","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","console","selectRow","mode","isSelected","found","onSelectAll","deleteStage1","setStage1Name","names","newRows","error","availableRows","floor","accumulator","deleteDisabled","deleteTooltipMessage","rightOuter","className","fontSize","fontWeight","padding","Row","show","Col","md","sm","margin","InputGroup","Prepend","Text","FormControl","aria-label","step","min","max","event","Number","currentTarget","Append","ListGroup","Item","action","OverlayTrigger","placement","key","overlay","Tooltip","pointerEvents","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","striped","hover","leftOuter","isAdmin"],"mappings":"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","file":"static/js/9.161ec1d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"far\" iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"far\" iconName=\"save\" />\r\n);\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} prefix=\"fas\" iconName=\"arrow-alt-circle-right\" />\r\n);\r\n\r\n// Solid\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix=\"fas\" iconName=\"ban\" />\r\n);\r\n","import { TournamentProgress } from '../../models/tournament.model';\r\n\r\nexport const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function translateTournamentProgress(value: string) {\r\n  switch (value) {\r\n    case TournamentProgress.New:\r\n      return 'Nuovo';\r\n    case TournamentProgress.PairsSelection:\r\n      return 'Selezione Coppie';\r\n    case TournamentProgress.Stage1:\r\n      return 'Fase 1';\r\n    case TournamentProgress.Stage2:\r\n      return 'Fase 2';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n","import { RootState } from 'models/common.model';\r\nimport { TournamentDTO } from 'models/tournament.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading({ tournamentState: { isLoading } }: RootState): boolean {\r\n    return isLoading;\r\n  },\r\n  // Get selected Tournament\r\n  getTournament({ tournamentState: { tournament } }: RootState): TournamentDTO | null {\r\n    return tournament;\r\n  },\r\n  // Get tournament List\r\n  getTournamentsList({ tournamentState: { tournamentsList } }: RootState): TournamentDTO[] {\r\n    return tournamentsList;\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master',\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  emailFilter('');\r\n  phoneFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = (isEditable) => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: (_) => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = (props) => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { translateTournamentProgress } from '../core/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\n\r\nconst TableHeader: React.FC<{}> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          \"<strong>{tournament?.name.toUpperCase()}</strong>\"\r\n          <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\nconst noData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\nimport { valueFormatter } from './helper';\r\n// FIXME: import makeAnimated from 'react-select/animated';\r\nimport { PlayerDTO } from 'models';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (selectedOption: ValueType<PlayerDTO>, actionMeta: ActionMeta) => {\r\n      // selectedOption.pairId = id;\r\n      setSelectedOption(selectedOption as PlayerDTO);\r\n      const value = valueFormatter(selectedOption);\r\n      onUpdate(value);\r\n      onSelect(selectedOption, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n        styles={customStyles}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => {\r\n          return { value: e, label: e };\r\n        }),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No',\r\n    },\r\n\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No',\r\n    },\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    },\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\nimport { useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast, IToastProps } from '../core/generic/Commons';\r\nimport './style.css';\r\nimport { RightArrowIcon } from '../core/icons';\r\nimport { TournamentProgress } from 'models/tournament.model';\r\nimport { useSelector } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\nimport { PairDTO, PlayerDTO } from 'models';\r\n\r\nconst PairsTable = () => {\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // Navigation\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState: IToastProps = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState<IToastProps>(messageInitialState);\r\n  // Data\r\n  const [data, setData] = useState({ rows: [] as PairDTO[], players: [] as PlayerDTO[] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament.id]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id || 0;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso',\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: PlayerDTO[] = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = data.rows.map((rowElement: { id: any }) => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row: any = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((selectedRows) => {\r\n      const found = selectedRows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e) => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    tournament.progress = TournamentProgress.Stage1;\r\n    try {\r\n      await fetch('/api/v1/tournament/', {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(tournament),\r\n      });\r\n    } catch (error) {\r\n      console.log('errororroror :', error);\r\n    }\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tournament.id}`);\r\n  };\r\n  /*\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n*/\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      //FIXME:\r\n      tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/v1/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(tournament),\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress === 'Stage1' || tournament.progress === 'Stage2') {\r\n      showErrorMessage('Non riassegnare i gironi in quanto le coppie sono gia state confermate per la fase successiva');\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData((current) => ({ rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || tournament.progress === 'Stage1' || tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (tournament.progress === 'Stage1' || tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const rightOuter = (\r\n    <>\r\n      <Button type=\"button\" onClick={confirmPairs} size=\"lg\" variant=\"outline-warning\" className=\"default-color-white\">\r\n        <span style={{ fontSize: 'larger', fontWeight: 'bolder', padding: '1vw' }}>Prosegui</span>\r\n        <RightArrowIcon size=\"lg\" />\r\n      </Button>\r\n\r\n      <GenericToast message={message.message} type={message.type} />\r\n    </>\r\n  );\r\n\r\n  const leftOuter = (isEditable: boolean | undefined) => (\r\n    <>\r\n      {isEditable ? (\r\n        <Row style={{ margin: '0px' }}>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                type=\"number\"\r\n                step={1}\r\n                min={0}\r\n                max={Math.floor(data.rows.length / 4)}\r\n                value={stage1Number}\r\n                onChange={(event: React.FormEvent<FormControl & HTMLInputElement>) =>\r\n                  setStage1Number(Number(event.currentTarget.value))\r\n                }\r\n                disabled={\r\n                  data.rows.length < 4 ||\r\n                  tournament.progress === TournamentProgress.Stage1 ||\r\n                  tournament.progress === TournamentProgress.Stage2\r\n                }\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiungi coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                type=\"number\"\r\n                step={1}\r\n                min={1}\r\n                max={availableRows}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                onChange={(event: React.FormEvent<FormControl & HTMLInputElement>) =>\r\n                  setNewRowsNumber(Number(event.currentTarget.value))\r\n                }\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row style={{ margin: '5vh 0vh' }}>\r\n        <Col md=\"2\" sm=\"12\">\r\n          <ListGroup>\r\n            {/*\r\n            <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n              Home\r\n            </ListGroup.Item>\r\n            */}\r\n            <ListGroup.Item\r\n              action\r\n              variant=\"success\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isEditable}\r\n            >\r\n              Aggiungi Coppia\r\n            </ListGroup.Item>\r\n\r\n            <OverlayTrigger\r\n              placement=\"right\"\r\n              key=\"right\"\r\n              overlay={<Tooltip id=\"tooltip-pair\">{deleteTooltipMessage}</Tooltip>}\r\n            >\r\n              <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"danger\"\r\n                  style={{ pointerEvents: 'none' }}\r\n                  disabled={deleteDisabled || !isEditable}\r\n                >\r\n                  Elimina Coppia {deleteDisabled}\r\n                </ListGroup.Item>\r\n              </span>\r\n            </OverlayTrigger>\r\n\r\n            <ListGroup.Item action variant=\"danger\" onClick={deleteStage1} disabled={!isEditable}>\r\n              Reset gironi\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md=\"10\" sm=\"12\">\r\n          {data.rows && data.players ? (\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={data.rows}\r\n              columns={columns(onSelect, data.players) as any}\r\n              cellEdit={cellEditProps(isEditable) as any}\r\n              selectRow={selectRow as any}\r\n              noDataIndication={() => (\r\n                <NoData isEditable={isEditable || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n              )}\r\n              caption={<TableHeader />}\r\n              headerClasses=\"default-background default-color-yellow\"\r\n              striped\r\n              hover\r\n            />\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col md=\"10\" sm=\"12\">\r\n        {leftOuter(session.isAdmin)}\r\n      </Col>\r\n      <Col md=\"2\" sm=\"12\">\r\n        {rightOuter}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n"],"sourceRoot":""}