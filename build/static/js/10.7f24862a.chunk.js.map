{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/Stage2/cell.tsx","components/Pair/select.tsx","components/Stage2/table.tsx","components/Stage2/helper.tsx","components/Stage2/handler.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common.module.css","components/Tournament/badge.tsx","components/Stage2/style.module.css"],"names":["InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","Cell","icon","onClick","name","isWinner","span","rowIndex","colIndex","pair","buttonDisabled","isLast","renderCustomComponent","isAdmin","useSelector","AuthSelector","color","rowSpan","style","cell","borderBottom","join","container","prepend","FormControl","placeholder","value","player1","player2","aria-label","aria-describedby","readOnly","Button","disabled","append","e","PairsSelect","getOptionLabel","styles","options","onChange","defaultValue","tournamentId","useState","selectedOption","setSelectedOption","components","actionMeta","newValue","getEmptyPair","isSearchable","isClearable","Stage2","elements","pairsSelect","rowNumber","onSelectPair","tournament","TournamentSelector","getTournament","colNumber","getBaseLog","bRows","rows","counter","Array","fill","index","pairsNumber","indexes","NaN","currentMax","ii","growFactor","Math","pow","jj","getIndexes","provided","flex","option","zIndex","menuList","height","id","placement","stage1Name","alias","console","log","row","matchId","cellRowIndex","cellColIndex","parentId","push","undefined","isButtonDisabled","length","getTableBodyRows","hElem","tds","headerCell","width","getTableHeaderElements","table","body","Stage2Handler","currentHistory","useHistory","dispatch","useDispatch","cells","Stage2Selector","getCells","count","getCount","isLoading","pairsList","setPairsList","useEffect","a","Stage2Action","setLoading","fetchPairsStage2","response","SuccessCodes","includes","code","pairs","Col","commonStyle","toolsBarContainer","Row","toolsBarRow","variant","event","current1","current2","next","updateCell","request","setCells","newPair","prevPair","filter","show","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","module","exports","TournamentBadge","t","useTranslation","public","toUpperCase","formatDate","date","progress"],"mappings":"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","file":"static/js/10.7f24862a.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\nimport style from './style.module.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { DoubleRightIcon, BanIcon, TrophyIcon } from '../core/icons';\nimport { ICell, PairDTO } from '../../@common/dto';\nimport { useSelector } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors';\n\ninterface NodeElement extends ICell {\n  span: number;\n  renderCustomComponent?: (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => JSX.Element;\n  onClick: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    rowIndex: number,\n    colIndex: number,\n    winner: boolean\n  ) => void;\n  rowIndex: number;\n  colIndex: number;\n  buttonDisabled: boolean;\n  isLast: boolean;\n}\n\nconst Cell: React.FC<NodeElement> = ({\n  onClick,\n  name,\n  isWinner,\n  span,\n  rowIndex,\n  colIndex,\n  pair,\n  buttonDisabled,\n  isLast,\n  renderCustomComponent,\n}) => {\n  const isAdmin = useSelector(AuthSelector.isAdmin);\n  let icon: JSX.Element;\n  if (isLast) icon = <TrophyIcon size=\"lg\" color=\"gold\" />;\n  else icon = isWinner ? <DoubleRightIcon size=\"lg\" color=\"green\" /> : <BanIcon size=\"1x\" color=\"red\" />;\n\n  return (\n    <td rowSpan={span} className={rowIndex % 2 === 0 ? [style.cell, style.borderBottom].join(' ') : style.cell}>\n      <InputGroup className={style.container}>\n        <InputGroup.Prepend className={style.prepend}>\n          <InputGroup.Text>{rowIndex}</InputGroup.Text>\n        </InputGroup.Prepend>\n        {isAdmin && renderCustomComponent ? (\n          renderCustomComponent(rowIndex, colIndex, isLast, pair)\n        ) : (\n          <FormControl\n            placeholder={'Username' + colIndex}\n            value={pair ? `${pair.player1?.name} - ${pair.player2?.name}` : name}\n            aria-label=\"Username\"\n            aria-describedby=\"Username\"\n            readOnly={colIndex > 1 || !isAdmin}\n            size=\"lg\"\n          />\n          )}\n        {isAdmin ?\n          <InputGroup.Append>\n            <Button\n              disabled={!isAdmin || buttonDisabled}\n              className={style.append}\n              onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => onClick(e, rowIndex, colIndex, !isWinner)}\n            >\n              {icon}\n            </Button>\n          </InputGroup.Append> : null}\n      </InputGroup>\n    </td>\n  );\n};\n\nexport default Cell;\n","import { PairDTO } from '../../@common/dto';\nimport React, { useState } from 'react';\nimport Select, { Styles, ValueType, ActionMeta, components } from 'react-select';\nimport { SelectComponents } from 'react-select/src/components';\nimport { getEmptyPair } from '../../@common/models';\n\ninterface PairSelectProps {\n  tournamentId:number;\n  // indice riga ( Stage2 )\n  rowIndex: number;\n  // stili\n  styles?: Partial<Styles>;\n  // opzioni della lista\n  options: PairDTO[];\n  // Callback per formattare le opzioni della lista\n  getOptionLabel?: (option: PairDTO) => string;\n  // Callback onChange\n  onChange?: (value: ValueType<PairDTO, false>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\n  components?: Partial<SelectComponents<PairDTO, false>>;\n  defaultValue?: PairDTO;\n}\n\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\n// TODO: Si potrebbe generalizzare questo componente tramite i generics\nconst PairsSelect: React.FC<PairSelectProps> = React.forwardRef(\n  ({ getOptionLabel, styles, rowIndex, options, onChange, defaultValue,tournamentId }, ref) => {\n    const [selectedOption, setSelectedOption] = useState<PairDTO>();\n\n    const handleChange = (value: ValueType<PairDTO, false>, actionMeta: ActionMeta<PairDTO>) => {\n      const newValue = value ? value : getEmptyPair('-', tournamentId);\n      setSelectedOption(newValue);\n      if (onChange) {\n        onChange(newValue, rowIndex, actionMeta);\n      }\n    };\n\n    return (\n      <Select\n        defaultValue={defaultValue}\n        components={components}\n        styles={styles}\n        options={options}\n        onChange={handleChange}\n        getOptionLabel={getOptionLabel}\n        value={selectedOption}\n        placeholder=\"Cerca...\"\n        isSearchable\n        isClearable\n      />\n    );\n  }\n);\n\nexport default PairsSelect;\n","import React from 'react';\nimport style from './style.module.css';\nimport { getIndexes, getEmptyCell, onClickCallback, onSelectCallback } from './helper';\nimport Cell from './cell';\nimport { getBaseLog } from '../../@common/utils/math.utils';\nimport PairsSelect from '../Pair/select';\nimport { Styles } from 'react-select';\nimport { PairDTO, ICell } from '../../@common/dto';\nimport { useSelector } from 'react-redux';\nimport { TournamentSelector } from '../../redux/selectors';\n// import { valueFormatter } from 'components/Pair/helper';\n\n// https://www.kodbiro.com/blog/rorgchart-react-module-for-displaying-and-editing-data-in-org-chart/\n\ninterface Stage2Props {\n  pairsSelect: PairDTO[];\n  elements: ICell[][];\n  rowNumber: number;\n  onClick: onClickCallback;\n  onSelectPair: onSelectCallback;\n}\n\nconst Stage2: React.FC<Stage2Props> = ({ onClick, elements, pairsSelect,rowNumber = 64, onSelectPair }) => {\n  /*\n   * Calcolo il numero di colonne in funzione del numero di righe\n   * in quanto l'oggetto che ricevo protrebbe essere solo un parziale\n   */\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  const colNumber = getBaseLog(2, rowNumber) + 1;\n  const bRows = getTableBodyRows(tournament.id,elements, rowNumber, colNumber, onClick, pairsSelect, onSelectPair);\n  const hElem = getTableHeaderElements(colNumber);\n\n  return (\n    <table className={style.table}>\n      <thead>\n        <tr>{hElem}</tr>\n      </thead>\n      <tbody className={style.body}>{bRows}</tbody>\n    </table>\n  );\n};\n\nexport default Stage2;\n\nfunction getTableHeaderElements(colNumber: number): JSX.Element[] {\n  const tds: JSX.Element[] = [];\n  for (let ii = 1; ii <= colNumber; ii++) {\n    tds.push(\n      <td\n        key={`header ${ii}`}\n        className={style.headerCell}\n        style={{\n          width: `${100 / colNumber}%`,\n        }}\n      >\n        <strong>{`Stage-${ii}`}</strong>\n      </td>\n    );\n  }\n  return tds;\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction getTableBodyRows(\n  tournamentId:number,\n  elements: ICell[][],\n  rowNumber: number,\n  colNumber: number,\n  onClick: onClickCallback,\n  pairsSelect: PairDTO[],\n  onSelectPair: onSelectCallback\n): JSX.Element[] {\n  // Conterrà tutte le righe della tabella\n  const rows: JSX.Element[] = [];\n  // Indice di riga progressivo\n  const counter = new Array<number>(colNumber).fill(0);\n  // Sequenza numero di elementi da aggiungere alla riga\n  const index: number[] = getIndexes(rowNumber);\n\n  const renderCustomComponent = (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => {\n    const styles: Partial<Styles> = {\n      container: (provided) => ({\n        ...provided,\n        flex: '1 1 auto',\n      }),\n      option: (provided) => ({ ...provided, zIndex: 6 }),\n      menuList: (provided) => ({\n        ...provided,\n        flex: '1 1 auto',\n        zIndex: 5,\n        height: 'auto',\n      }),\n    };\n    const getOptionLabel = (option: PairDTO) =>\n      option.id\n        ? `${option.placement}${option.stage1Name} : ${\n            option.alias ? option.alias : `${option.player1?.name} - ${option.player2?.name} `\n          }`\n        : '-';\n    /* TODO:\n    const CustomOption = ({ innerRef, innerProps, data }: OptionProps<PairDTO>) => (\n      <div ref={innerRef} {...innerProps}>\n        {data.placement}\n      </div>\n    );\n    */\n    console.log('Render stage2 select :', rowIndex, colIndex, isLast, pair);\n    return (\n      <PairsSelect\n        //components={{ Option: CustomOption }}\n        tournamentId={tournamentId}\n        styles={styles}\n        defaultValue={pair}\n        options={pairsSelect}\n        rowIndex={rowIndex}\n        onChange={onSelectPair}\n        getOptionLabel={getOptionLabel}\n      />\n    );\n  };\n\n  for (let ii = 1; ii <= rowNumber; ii++) {\n    const row: JSX.Element[] = [];\n    for (let jj = 0; jj < index[ii]; jj++) {\n      counter[jj] += 1;\n      const cell = elements[jj] ? elements[jj][counter[jj] - 1] : getEmptyCell();\n      row.push(\n        <Cell\n          renderCustomComponent={jj === 0 ? renderCustomComponent : undefined}\n          key={`cell : ${jj}-${counter[jj] - 1}`}\n          span={Math.pow(2, jj)}\n          rowIndex={counter[jj]}\n          colIndex={jj + 1}\n          onClick={onClick}\n          buttonDisabled={isButtonDisabled(counter[jj], jj, elements)}\n          isLast={elements[jj].length === 1}\n          {...cell}\n        />\n      );\n    }\n    rows.push(\n      <tr key={`row : ${ii}`} className={style.row}>\n        {row}\n      </tr>\n    );\n  }\n  return rows;\n}\n\n/*\n  Il button per impostare la coppia vincente è abilitato solo se entrambe le cell hanno una coppia assegnata\n*/\nconst isButtonDisabled = (rowIndex: number, colIndex: number, elements: ICell[][]) =>\n  (elements[colIndex] && elements[colIndex].length === 1) ||\n  (rowIndex % 2 !== 0\n    ? !elements[colIndex][rowIndex - 1].pair || (elements[colIndex][rowIndex] && !elements[colIndex][rowIndex].pair)\n    : !elements[colIndex][rowIndex - 1].pair ||\n      (elements[colIndex][rowIndex - 2] && !elements[colIndex][rowIndex - 2].pair));\n","import { getBaseLog } from '../../@common/utils';\nimport { ValueType, ActionMeta } from 'react-select';\nimport { PairDTO, ICell } from '../../@common/dto';\n\nexport type onClickCallback = (\n  event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  rowIndex: number,\n  colIndex: number,\n  isWinner: boolean\n) => void;\n\nexport type onSelectCallback = (value: ValueType<PairDTO, false>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\nexport const getIndexes = (pairsNumber: number): number[] => {\n  const N = getBaseLog(2, pairsNumber) + 1; // Numero massimo di elementi td\n  /*\n   * Array per mappare numero riga a numero di elementi td\n   * Inizializzo come primo NaN solo per avere un placeholder all'index 0  e iniziare l'analisi da 1\n   */\n  let indexes = [NaN, N];\n  let currentMax = 1;\n  for (let ii = 1; ii <= pairsNumber; ii++) {\n    if (!indexes[ii]) {\n      indexes[ii] = currentMax;\n      let growFactor = Math.pow(2, currentMax);\n      for (let jj = 1; ii + growFactor * jj < pairsNumber + 1; jj++) indexes[ii + growFactor * jj] = currentMax;\n      currentMax++;\n    }\n  }\n  return indexes;\n};\n\nexport const getEmptyCell = (name?: string): ICell => ({\n  name: '',\n  isWinner: false,\n  matchId: 0,\n  cellRowIndex: 0,\n  cellColIndex: 0,\n  parentId: 0,\n});\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Stage2 from './table';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport commonStyle from '../../common.module.css';\nimport { Stage2Selector, TournamentSelector } from '../../redux/selectors';\nimport { Stage2Action } from '../../redux/actions';\nimport { LoadingModal } from '../core/generic/Commons';\nimport { LeftArrowIcon } from '../core/icons';\nimport TournamentBadge from '../Tournament/badge';\nimport { fetchPairsStage2 } from '../../redux/services/stage2.service';\nimport { onClickCallback, onSelectCallback } from './helper';\nimport { PairDTO, ICell } from '../../@common/dto';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { FetchStage2PairsResponse } from '../../@common/models';\n// import template from './template';\n\ninterface Stage2HandlerProps extends RouteComponentProps {}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Stage2Handler: React.FC<Stage2HandlerProps> = () => {\n  const currentHistory = useHistory();\n  const dispatch = useDispatch();\n\n  // Sono presenti aggiornamenti\n  const cells = useSelector(Stage2Selector.getCells);\n  const count = useSelector(Stage2Selector.getCount);\n  const isLoading = useSelector(Stage2Selector.isLoading);\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  // const pairsListFromStore = useSelector(Stage1Selector.getSelectedPairs);\n  const [pairsList, setPairsList] = useState<PairDTO[]>();\n\n  function goBack() {\n    currentHistory.push('/stage1');\n  }\n\n  useEffect(() => {\n    (async () => {\n      dispatch(Stage2Action.setLoading(true));\n      const response = await fetchPairsStage2({ tournamentId: tournament.id });\n      if (SuccessCodes.includes(response.code)) {\n        const result = response as FetchStage2PairsResponse;\n        setPairsList(result.pairs);\n      }\n      dispatch(Stage2Action.setLoading(false));\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tournament.id]);\n\n  // Callback tasto vittoria/sconfitta coppia : Sposta la coppia alla fase successiva\n  const onClick: onClickCallback = (event, rowIndex, colIndex, isWinner) => {\n    const elements = [...cells!];\n    // Coppia 1 e 2 dell'incontro corrente\n    let current1: ICell | null = null;\n    let current2: ICell | null = null;\n    // Element Incontro successivo\n    let next: ICell | null = null;\n    if (rowIndex % 2 !== 0) {\n      current1 = elements[colIndex - 1][rowIndex - 1];\n      current2 = elements[colIndex - 1][rowIndex];\n    } else {\n      current1 = elements[colIndex - 1][rowIndex - 1];\n      current2 = elements[colIndex - 1][rowIndex - 2];\n    }\n    next = elements[colIndex][current1.matchId - 1];\n    console.log(' onClick : ', current1, current2, next);\n\n    current1.isWinner = isWinner;\n    current2.isWinner = !isWinner;\n    if (next) next.pair = isWinner ? current1.pair : current2.pair;\n    // Update current and next steps\n    dispatch(Stage2Action.updateCell.request({ cells:[current1, current2,next] }));\n    dispatch(Stage2Action.setCells(elements));\n  };\n\n  // Questa funzione viene richiamata quando viene selezionata una coppia nella prima colonna\n  const onSelectPair: onSelectCallback = (value, rowIndex, actionMeta) => {\n    console.log(' onSelectPair : ', value, rowIndex);\n    if (!pairsList) {\n      return;\n    }\n    const elements = [...cells!];\n    const newPair = value as PairDTO;\n    const prevPair = elements[0][rowIndex - 1].pair;\n    let pairs: Array<PairDTO> = [...pairsList];\n\n    // Se ho selezionato una coppia la elimino dalla lista ( newPair.id esclude il placeholder )\n    if (newPair && newPair.id) {\n      pairs = pairs.filter((e) => e.id !== newPair.id);\n    }\n    // Se nella celle era gia presente una coppia la ripristino\n    if (prevPair && prevPair.id) {\n      pairs = [...pairs, prevPair];\n    }\n    setPairsList(pairs);\n    elements[0][rowIndex - 1].pair = newPair;\n    console.log(' onSelectPair : ', elements[0][rowIndex - 1]);\n    dispatch(Stage2Action.setCells(elements));\n    dispatch(Stage2Action.updateCell.request({ cells:[elements[0][rowIndex - 1]]}));\n  };\n\n  //console.log('render stage2 :', cells, pairsList, rowNumber);\n  return cells && pairsList && count ? (\n    <>\n      <Col className={commonStyle.toolsBarContainer}>\n        <Row className={commonStyle.toolsBarRow}>\n          <Col>\n            <Button variant=\"secondary\" className=\"float-left\" onClick={goBack}>\n              <LeftArrowIcon /> Indietro\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <TournamentBadge />\n\n      <Stage2\n        pairsSelect={pairsList}\n        onClick={onClick}\n        rowNumber={count}\n        elements={cells}\n        onSelectPair={onSelectPair}\n      />\n    </>\n  ) : (\n    <LoadingModal show={isLoading} />\n  );\n};\n\nexport default Stage2Handler;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\nimport { TournamentSelector } from '../../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Badge } from 'react-bootstrap';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface TournamentBadgeProps {}\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  const { t } = useTranslation(['tournament']);\n  return (\n    <Row>\n      <Col>\n        <h2 className=\"float-left\">\n          <Badge variant=\"info\">\n            <span>{t(`tournament:${tournament.public ? 'public':'private'}_tournament`)} </span>\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\n            <span>\n              <i>\n                {` - ${formatDate(tournament.date)} `}\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\n                {process.env.NODE_ENV === 'development' ? <strong>{`  --> ( ${tournament.id} )`}</strong>: null}\n              </i>\n            </span>\n          </Badge>\n        </h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TournamentBadge;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2Kzbq\",\"cell\":\"style_cell__1Tgmm\",\"borderBottom\":\"style_borderBottom__2eMt1\",\"headerCell\":\"style_headerCell__2Jwbq\",\"container\":\"style_container__3mFJG\",\"row\":\"style_row__3YvC9\",\"prepend\":\"style_prepend__1aYFO\",\"append\":\"style_append__1Z8QN\",\"center\":\"style_center__3xWH5\"};"],"sourceRoot":""}