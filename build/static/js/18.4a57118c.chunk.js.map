{"version":3,"sources":["components/Auth/Delete.tsx"],"names":["Delete","show","onHide","useSessionContext","updateSessionContext","useState","errorMessage","setErrorMessage","useInput","password","value","bindPassword","bind","currentHistory","useHistory","showError","message","setTimeout","handleSubmit","evt","email","username","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","result","ok","isAuthenticated","push","status","console","log","error","key","variant","Consumer","onSubmit","e","Group","as","Row","controlId","Label","column","sm","Control","style","fontSize","fontWeight","className","plaintext","readOnly","defaultValue","type","placeholder","size","onClick","centered","Header","backgroundColor","color","closeButton","Title","Body","fluid"],"mappings":"mQAsJeA,UA1IA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAoC,EACzBC,cAAxBC,EADiD,sBAElBC,mBAAS,IAFS,mBAEnDC,EAFmD,KAErCC,EAFqC,OAGVC,YAAS,IAA1CC,EAH2C,EAGlDC,MAAuBC,EAH2B,EAGjCC,KAEnBC,EAAiBC,cAEjBC,EAAY,SAACC,GACjBT,EAAgBS,GAChBC,YAAW,kBAAMV,EAAgB,MAAK,MAGlCW,EAAY,uCAAG,WACnBC,EACAC,EACAC,GAHmB,iBAAAC,EAAA,6DAKnBH,EAAII,iBALe,kBAOMC,MAAM,gBAAiB,CAC5CC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAET,QAAOC,WAAUZ,eAVzB,cAOXqB,EAPW,gBAYIA,EAASC,OAZb,OAYXC,EAZW,OAabF,EAASG,IAAMD,GACjB5B,EAAqB,CAAE8B,iBAAiB,IACxChC,IACAW,EAAesB,KAAK,MAEI,MAApBL,EAASM,OAAgBrB,EAAU,4BAClCA,EAAU,oEAnBA,kDAsBjBsB,QAAQC,IAAI,mBAAZ,MACAvB,EAAU,oEAvBO,0DAAH,0DAqCZwB,EAAQjC,EACZ,kBAAC,IAAD,CAAOkC,IAAK,aAAcC,QAAS,UAChCnC,EAAc,KAEf,KAEEqB,EACJ,kBAAC,IAAee,SAAhB,MACG,sCAAItB,EAAJ,EAAIA,MAAOC,EAAX,EAAWA,SAAX,OACED,GAAUC,EAKT,kBAAC,IAAD,CAAMsB,SAAU,SAACC,GAAD,OAA6C1B,EAAa0B,EAAGxB,EAAOC,KAClF,kBAAC,IAAKwB,MAAN,CAAYC,GAAIC,IAAKC,UAAU,SAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,CACEC,MAAO,CAAEC,SAAU,SAAUC,WAAY,UACzCC,UAAU,sBACVC,WAAS,EACTC,UAAQ,EACRC,aAAcvC,MAIpB,kBAAC,IAAKyB,MAAN,CAAYC,GAAIC,IAAKC,UAAU,YAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,CACEC,MAAO,CAAEC,SAAU,SAAUC,WAAY,UACzCC,UAAU,sBACVC,WAAS,EACTC,UAAQ,EACRC,aAActC,MAIpB,kBAAC,IAAKwB,MAAN,CAAYC,GAAIC,IAAKC,UAAU,YAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,eAAcQ,KAAK,WAAWC,YAAY,YAAelD,MAG7D,kBAAC,IAAD,CAAQmD,KAAK,KAAKN,UAAU,aAAaO,QAAS7D,EAAQuC,QAAQ,kBAAkBmB,KAAK,UAAzF,WAGA,kBAAC,IAAD,CAAQE,KAAK,KAAKN,UAAU,cAAcf,QAAQ,iBAAiBmB,KAAK,UACtE,kBAAC,IAAD,MADF,cA5CF,oCACE,8DAA4C,QAoDtD,OACE,kBAAC,IAAD,CAAO3D,KAAMA,EAAMC,OAAQA,EAAQ4D,KAAM,KAAME,UAAQ,GACrD,kBAAC,IAAMC,OAAP,CACEZ,MAAO,CACLa,gBAAiB,UACjBC,MAAO,SAETC,aAAW,GAEX,kBAAC,IAAMC,MAAP,CAAab,UAAU,qBAAvB,mBAEF,kBAAC,IAAMc,KAAP,CACEjB,MAAO,CACLa,gBAAiB,UACjBC,MAAO,UAGT,kBAAC,IAAD,CAAWI,OAAK,GACbhC,EACAZ","file":"static/js/18.4a57118c.chunk.js","sourcesContent":["import React, { useState, SetStateAction } from 'react';\r\nimport { useSessionContext } from 'components/core/routing/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Container, Alert, Form, Col, Row, Button } from 'react-bootstrap';\r\nimport { useInput } from '../core/hooks/InputHook';\r\nimport { SessionContext } from '../core/routing/SessionContext';\r\nimport { TrashIcon } from '../core/Icons';\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\nconst Delete = ({ show, onHide }: authType): JSX.Element => {\r\n  const [, updateSessionContext] = useSessionContext();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { value: password, bind: bindPassword } = useInput('');\r\n\r\n  const currentHistory = useHistory();\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (\r\n    evt: React.SyntheticEvent<Element, Event>,\r\n    email: string | null | undefined,\r\n    username: string | null | undefined\r\n  ) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/v1/auth/', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, username, password })\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({ isAuthenticated: false });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) showError('Utente o Password errata');\r\n        else showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  /*\r\n  const modalStyle: CSSProperties = {\r\n    textAlign: 'left',\r\n    width: '40vw',\r\n    height: 'auto',\r\n    margin: 'auto',\r\n    backgroundColor: '#343A40',\r\n    color: 'white'\r\n  };\r\n*/\r\n  const error = errorMessage ? (\r\n    <Alert key={'auth-alert'} variant={'danger'}>\r\n      {errorMessage}{' '}\r\n    </Alert>\r\n  ) : null;\r\n\r\n  const body = (\r\n    <SessionContext.Consumer>\r\n      {([{ email, username }]) =>\r\n        !email || !username ? (\r\n          <>\r\n            <strong>Eliminazione non possibile</strong>{' '}\r\n          </>\r\n        ) : (\r\n          <Form onSubmit={(e: React.SyntheticEvent<Element, Event>) => handleSubmit(e, email, username)}>\r\n            <Form.Group as={Row} controlId=\"email\">\r\n              <Form.Label column sm=\"2\">\r\n                Email\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n                  className=\"default-color-white\"\r\n                  plaintext\r\n                  readOnly\r\n                  defaultValue={email}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"username\">\r\n              <Form.Label column sm=\"2\">\r\n                Username\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n                  className=\"default-color-white\"\r\n                  plaintext\r\n                  readOnly\r\n                  defaultValue={username}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"password\">\r\n              <Form.Label column sm=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n              </Col>\r\n            </Form.Group>\r\n            <Button size=\"lg\" className=\"float-left\" onClick={onHide} variant=\"outline-success\" type=\"button\">\r\n              Annulla\r\n            </Button>\r\n            <Button size=\"lg\" className=\"float-right\" variant=\"outline-danger\" type=\"submit\">\r\n              <TrashIcon /> Conferma\r\n            </Button>\r\n          </Form>\r\n        )\r\n      }\r\n    </SessionContext.Consumer>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#343A40',\r\n          color: 'white'\r\n        }}\r\n        closeButton\r\n      >\r\n        <Modal.Title className=\"default-color-red\">Elimina Utente</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body\r\n        style={{\r\n          backgroundColor: '#343A40',\r\n          color: 'white'\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          {error}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n"],"sourceRoot":""}