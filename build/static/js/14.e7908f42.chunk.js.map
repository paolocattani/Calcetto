{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","components/Auth/Wrapper.tsx"],"names":["CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Login","lazy","Register","AuthWrapper","useState","register","setRegister","errorMessage","setErrorMessage","title","buttonString","md","span","offset","sm","style","textAlign","color","key","size","onClick"],"mappings":"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","file":"static/js/14.e7908f42.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React, { useState, CSSProperties, lazy } from 'react';\r\nimport { Button, Container, Alert, Card, Col } from 'react-bootstrap';\r\nimport { ToggleOn, ToggleOff } from '../core/icons';\r\n\r\nconst Login = lazy(() => import('./Login'));\r\nconst Register = lazy(() => import('./Register'));\r\n\r\nconst AuthWrapper: React.FC = (): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [title, body, buttonString] = register\r\n    ? [\r\n        'Registrati',\r\n        <Register setErrorMessage={setErrorMessage} />,\r\n        <>\r\n          <ToggleOn /> <strong>Login</strong>\r\n        </>,\r\n      ]\r\n    : [\r\n        'Login',\r\n        <Login setErrorMessage={setErrorMessage} />,\r\n        <>\r\n          <ToggleOff /> <strong>Registrati</strong>\r\n        </>,\r\n      ];\r\n\r\n  const modalStyle: CSSProperties = {\r\n    textAlign: 'left',\r\n    color: 'white',\r\n  };\r\n\r\n  return (\r\n    <Col md={{ span: '6', offset: '3' }} sm=\"12\">\r\n      <Card style={modalStyle} className=\"default-background\">\r\n        <Card.Header as=\"h2\">{title}</Card.Header>\r\n        <Card.Body>\r\n          <Container>\r\n            {errorMessage ? (\r\n              <Alert key={'auth-alert'} variant={'danger'}>\r\n                {errorMessage}\r\n              </Alert>\r\n            ) : null}\r\n            {body}\r\n          </Container>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button size=\"lg\" variant=\"outline-warning\" onClick={() => setRegister(!register)}>\r\n            {buttonString}\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n"],"sourceRoot":""}