{"version":3,"sources":["redux/services/stage2.service.ts","redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","@common/utils/date.utils.ts","@common/utils/math.utils.ts","redux/selectors/tournament.selector.ts","@common/dto/player.dto.ts","@common/dto/tournament.dto.ts","@common/dto/user.dto.ts","components/Stage1/helper.ts","assets/header.jpg","redux/actions/session.action.ts","redux/actions/constants.ts","redux/actions/tournament.action.ts","@common/dto/index.ts","serviceWorker.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/session.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/services/tournament.service.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/services/pair.service.ts","redux/sagas/pair.saga.ts","redux/services/session.service.ts","redux/services/stage1.service.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/sagas/session.saga.ts","test/commons.ts","redux/store.ts","components/core/routing/Routes.ts","i18n/i18n.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","@common/utils/fetch.utils.ts","redux/actions/player.action.ts","@common/models/HttpStatusCode.ts","@common/models/common.models.ts","components/core/icons.tsx","redux/services/player.service.ts","redux/selectors/session.selector.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","components/core/generic/Commons.tsx","components/Pair/helper.ts"],"names":["deleteStage2","tId","a","fetch","method","DEFAULT_HEADERS","body","JSON","stringify","response","json","updateCells","cell1","cell2","console","error","fetchPairsStage2","result","pairs","getEmptyRowModel","fetchStage2","rowsNumber","count","tournamentId","cells","PairAction","createAsyncAction","defaultAsyncParams","purge","createAction","PURGE_STORE_ACTION","Stage1Action","updateSelectedPairs","stage1Watcher","fetchStage1","updateCellStage1","updatePlacement","Stage2Action","updateCell","delete","setCells","defaultParam","setLoading","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","getBaseLog","x","y","Math","log","RegExp","passwordRegExp","emailRegExp","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","PlayerRole","TournamentProgress","UserRole","getOpposite","value","parseInt","comparator","obj1","obj2","total","rowNumber","rowsGenerator","pairsList","map","e","ii","row","id","pair","placement","jj","module","exports","SessionAction","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","actionName","name","TournamentAction","setTournament","save","Boolean","window","location","hostname","match","initialTournamentState","TournamentReducer","createReducer","handleAction","request","state","failure","success","payload","initialPlayerState","isSaving","playersList","PlayerReducer","PlayerAction","fetchPlayers","errorMessage","undefined","savePlayer","deletePlayers","message","player","filter","find","selectedRow","i","initialPairState","PairReducer","results","pairList","initialSessionState","isAuthenticated","isAdmin","SessionReducer","user","role","Admin","initialStage1State","needRefresh","selectedPairs","stages","Stage1Reducer","stageName","rows","currentStage","s","newStage","autoOrder","selected","selectedRows","Map","set","stage1Name","initialStage2State","Stage2Reducer","fetchTournaments","getWrapper","postTournament","postWrapper","updateTournament","putWrapper","getTournamentsSaga","saveTournamentSaga","updateTournamentSaga","action","call","put","code","HTTPStatusCode","OK","history","push","toast","userMessage","UnexpectedServerError","TournamentsSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","PlayersSagas","fetchPairs","getPairsSaga","SessionStatus","PairsSagas","updateUser","updateUserRequest","deleteUser","deleteUserRequest","deleteWrapper","loginRequest","registrationRequest","CheckAuthentication","status","Unauthorized","type","UserMessageType","Success","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","template","model","createStage1Channel","NEED_REFRESH","watchStage1Saga","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","EventSource","take","fork","Stage1Sagas","takeLatest","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","Stage2Sagas","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","registrationSaga","updateUserSaga","deleteUserSaga","delay","Danger","logoutReponse","persistor","loginReponse","registrationReponse","errors","forEach","updateReponse","deleteReponse","SessionSagas","process","GoalKeeper","New","Stage2","User","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","playerState","pairState","sessionState","stage1State","stage2State","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","run","lazySwagger","lazy","lazyPlayer","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","default","RedirectionControl","routes","path","label","exact","componentToRender","visible","private","index","icon","MaleIcon","FileMedicalIcon","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","Header","dispatch","useDispatch","currentHistory","useHistory","t","useTranslation","useSelector","SessionSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","language","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","size","disabled","fontSize","username","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","session","render","innerProps","pathname","from","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","fallback","Container","fluid","marginBottom","autoClose","Application","loading","show","Entry","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","headers","url","version","fetchWrapper","group","groupEnd","startsWith","InternalServerError","library","add","faTrashAlt","faSave","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faTrophy","faAngleDoubleRight","faBan","faFileMedicalAlt","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","addEmpty","getEmptyPlayer","players","surname","alias","email","phone","match_played","match_won","total_score","editable","getUser","PairSelector","getPairsList","PlayerSelector","getPlayersList","Stage1Selector","getSelectedRows","getSelectedPairs","getNeedRefresh","getStages","Stage2Selector","getCells","getRowsNumber","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","useLocation","player1","player2","paid1","paid2","customStyles","option","provided","input","control","height","singleValue","valueContainer","fetchData"],"mappings":"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","file":"static/js/main.7d2f6594.chunk.js","sourcesContent":["import { FetchStage2Response, FetchStage2Request } from '@common/models';\r\nimport { getEmptyRowModel } from '../../components/Pair/helper';\r\nimport { ICell } from '../../@common/dto';\r\nimport { DEFAULT_HEADERS } from '../../@common/utils/fetch.utils';\r\n\r\nexport const deleteStage2 = async (tId: number) => {\r\n  const response = await fetch('/api/v1/stage2', {\r\n    method: 'DELETE',\r\n    ...DEFAULT_HEADERS,\r\n    body: JSON.stringify({ tId }),\r\n  });\r\n  await response.json();\r\n};\r\n\r\nexport const updateCells = async (cell1: ICell, cell2: ICell | null) => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2/cells', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ cell1, cell2 }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    console.error('Error stage2 update');\r\n  }\r\n};\r\n\r\nexport const fetchPairsStage2 = async (tId: number) => {\r\n  try {\r\n    const response = await fetch(`/api/v1/stage2/pairs/${tId}`);\r\n    const result = await response.json();\r\n    return { pairs: [getEmptyRowModel('-'), ...result.pairs] };\r\n  } catch (e) {\r\n    console.error('Error stage2 fetching pairs');\r\n  }\r\n  return { pairs: [] };\r\n};\r\n\r\nexport const fetchStage2 = async ({\r\n  count: rowsNumber,\r\n  tournamentId,\r\n}: FetchStage2Request): Promise<FetchStage2Response> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ tournamentId, rowsNumber }),\r\n    });\r\n    const cells = await response.json();\r\n    return { cells, rowsNumber };\r\n  } catch (e) {\r\n    return { cells: [], rowsNumber };\r\n  }\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { FetchPairsRequest, FetchPairsResponse } from '@common/models';\r\n\r\nconst actionName = '[Pair]';\r\n\r\nexport const PairAction = {\r\n  // Fetch Pairs\r\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\r\n    FetchPairsRequest,\r\n    FetchPairsResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  WatchStage1Request,\r\n  WatchStage1Response,\r\n  FetchStage1Response,\r\n  FetchStage1Request,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdatePlacementResponse,\r\n  UpdateSelectedPairsRequest,\r\n  UpdateSelectedPairsResponse,\r\n} from '@common/models';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\n\r\nconst actionName = '[Stage1]';\r\n\r\nexport const Stage1Action = {\r\n  // Update Selected Pairs\r\n  updateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Update Selected Pairs Stage1'))<\r\n    UpdateSelectedPairsRequest,\r\n    UpdateSelectedPairsResponse,\r\n    Error\r\n  >(),\r\n\r\n  // watcher\r\n  stage1Watcher: createAsyncAction(...defaultAsyncParams(actionName, 'Stage1 Watcher'))<\r\n    WatchStage1Request,\r\n    WatchStage1Response,\r\n    Error\r\n  >(),\r\n  fetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\r\n    FetchStage1Request,\r\n    FetchStage1Response,\r\n    Error\r\n  >(),\r\n  updateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\r\n    UpdateCellRequest,\r\n    UpdateCellResponse,\r\n    Error\r\n  >(),\r\n  updatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\r\n    UpdatePlacementRequest,\r\n    UpdatePlacementResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  FetchStage2Response,\r\n  FetchStage2Request,\r\n  UpdateStage2CellResponse,\r\n  UpdateStage2CellRequest,\r\n  DeleteStage2Request,\r\n  DeleteStage2Response,\r\n} from '@common/models';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { ICell } from '@common/dto';\r\n\r\nconst actionName = '[Stage2]';\r\n\r\nexport const Stage2Action = {\r\n  // get selected tournament\r\n  fetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\r\n    FetchStage2Request,\r\n    FetchStage2Response,\r\n    Error\r\n  >(),\r\n  updateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\r\n    UpdateStage2CellRequest,\r\n    UpdateStage2CellResponse,\r\n    Error\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\r\n    DeleteStage2Request,\r\n    DeleteStage2Response,\r\n    Error\r\n  >(),\r\n  setCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\r\n  setLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","export const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\r\nexport const justADate = (initDate?: Date | string) => {\r\n  let utcMidnightDateObj: Date;\r\n  // if no date supplied, use Now.\r\n  if (!initDate) initDate = new Date();\r\n\r\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\r\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\r\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\r\n  } else {\r\n    // if init date is not already a date object, feed it to the date constructor.\r\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\r\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\r\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\r\n  }\r\n\r\n  return {\r\n    toISOString: () => utcMidnightDateObj.toISOString(),\r\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\r\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\r\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\r\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\r\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\r\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\r\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\r\n    addDays: (days: number) => {\r\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\r\n    },\r\n    toString: () => utcMidnightDateObj.toString(),\r\n    toLocaleDateString: (\r\n      locales?: string | string[] | undefined,\r\n      options?: Intl.DateTimeFormatOptions | undefined\r\n    ): string => {\r\n      const option = options || {};\r\n      option.timeZone = 'UTC';\r\n      const locale = locales || 'it-IT';\r\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\r\n    },\r\n  };\r\n};\r\n","export function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { RootState } from '@common/models/root.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\r\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\r\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\r\n};\r\n","export interface PlayerDTO {\r\n  id: number | null;\r\n  name: string;\r\n  surname: string;\r\n  alias: string;\r\n  label: string;\r\n  role: PlayerRole;\r\n  email: string;\r\n  phone: string;\r\n  userId?: number;\r\n  match_played?: number;\r\n  match_won?: number;\r\n  total_score?: number;\r\n  editable: boolean;\r\n  rowNumber: number;\r\n}\r\n\r\nexport enum PlayerRole {\r\n  NotAPlayer = 'Non sono un giocatore',\r\n  GoalKeeper = 'Portiere',\r\n  Master = 'Master',\r\n  Striker = 'Attaccante',\r\n}\r\n","export interface TournamentDTO {\r\n  id: number | null;\r\n  name: string;\r\n  date: Date;\r\n  progress: TournamentProgress;\r\n  public: boolean;\r\n  autoOrder: boolean;\r\n  label: string;\r\n  ownerId: number | null;\r\n}\r\n\r\nexport enum TournamentProgress {\r\n  New = 'new',\r\n  PairsSelection = 'pairsSelection',\r\n  Stage1 = 'stage1',\r\n  Stage2 = 'stage2',\r\n}\r\n","import { PlayerDTO } from '.';\r\n\r\nexport interface UserDTO {\r\n  id: number;\r\n  username: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  phone: string;\r\n  role: UserRole;\r\n  birthday: Date;\r\n  label: string;\r\n  player?: PlayerDTO;\r\n}\r\nexport enum UserRole {\r\n  Admin = 'Admin',\r\n  User = 'User',\r\n}\r\n","import { PairDTO, Stage1Row } from '@common/dto';\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value: string | null) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (parseInt(value)) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n\r\n/**\r\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\r\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\r\n * Inoltre viene passata al BE per salvare i dati sul DB.\r\n *\r\n * @param pairsList PairDTO[] Lista di coppie\r\n *\r\n */\r\nexport const rowsGenerator = (pairsList: PairDTO[]): Stage1Row[] =>\r\n  pairsList.map((e, ii) => {\r\n    const row: Stage1Row = {\r\n      id: `row-${e.tId}-${ii}`,\r\n      rowNumber: ii + 1,\r\n      pair: e,\r\n      total: 0,\r\n      placement: e.placement || 0,\r\n    };\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      row[`col${jj}`] = null;\r\n    }\r\n    return row;\r\n  });\r\n","module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  CheckAuthenticationRequest,\r\n  WatchSessionRequest,\r\n  AuthenticationError,\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  RegistrationRequest,\r\n  LogoutRequest,\r\n  DeleteUserRequest,\r\n  UpdateUserRequest,\r\n} from '@common/models/session.model';\r\n\r\nconst actionName = '[Session]';\r\n\r\nexport const SessionAction = {\r\n  // Register new user\r\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\r\n    RegistrationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Login\r\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\r\n    LoginRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\r\n    LogoutRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\r\n    DeleteUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\r\n    UpdateUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Check if user is already authenticate\r\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\r\n    CheckAuthenticationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Session watcher\r\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\r\n    WatchSessionRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n\r\n  // set selected tournament\r\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { TypeConstant } from 'typesafe-actions';\r\n\r\nexport const Request = 'Request';\r\nexport const Success = 'Success';\r\nexport const Failure = 'Failure';\r\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\r\n\r\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\r\n  `${actionName} ${name} ${Request}`,\r\n  `${actionName} ${name} ${Success}`,\r\n  `${actionName} ${name} ${Failure}`,\r\n];\r\n\r\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\r\n\r\nexport interface PurgeResponse {}\r\n","import {\r\n  FetchTournamentsRequest,\r\n  SaveTournamentRequest,\r\n  FetchTournamentsResponse,\r\n  SaveTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n  TournamentError,\r\n} from '@common/models/tournament.model';\r\nimport { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { TournamentDTO } from '@common/dto';\r\n\r\nconst actionName = '[Tournament]';\r\n\r\nexport const TournamentAction = {\r\n  // fetch tournaments\r\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\r\n    FetchTournamentsRequest,\r\n    FetchTournamentsResponse,\r\n    Error\r\n  >(),\r\n  // set selected tournament\r\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\r\n  // save a new tournament\r\n  save: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\r\n    SaveTournamentRequest,\r\n    SaveTournamentResponse,\r\n    TournamentError\r\n  >(),\r\n  // save a new tournament\r\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\r\n    UpdateTournamentRequest,\r\n    UpdateTournamentResponse,\r\n    TournamentError\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","export * from './pair.dto';\r\nexport * from './player.dto';\r\nexport * from './stage1.dto';\r\nexport * from './stage2.dto';\r\nexport * from './tournament.dto';\r\nexport * from './user.dto';\r\n","import { toast } from 'react-toastify';\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          toast.warn('This web app is being served cache-first by a service worker.');\r\n          // TODO: show this message to user\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              toast.warn('Content is cached for offline use.');\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      toast.warn('Error during service worker registration.');\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      toast.warn('No internet connection found. App is running in offline mode.');\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { TournamentAction } from '../actions/tournament.action';\r\nimport { TournamentState } from '../../@common/models/tournament.model';\r\n\r\nexport const initialTournamentState: TournamentState = {\r\n  tournament: null,\r\n  tournamentsList: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\r\n  // Request\r\n  .handleAction(\r\n    [TournamentAction.fetch.request, TournamentAction.save.request, TournamentAction.update.request],\r\n    (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [TournamentAction.fetch.failure, TournamentAction.save.failure, TournamentAction.update.failure],\r\n    (state) => ({ ...state, isLoading: false })\r\n  )\r\n  // SUCCESS\r\n  // Fetch Tournament\r\n  .handleAction(TournamentAction.fetch.success, (state, { payload: { tournamentsList } }) => ({\r\n    tournament: tournamentsList && tournamentsList.length > 0 ? tournamentsList[0] : null,\r\n    tournamentsList: tournamentsList || [],\r\n    isLoading: false,\r\n  }))\r\n  // Set selected tournament\r\n  .handleAction(TournamentAction.setTournament, (state, { payload }) => ({\r\n    ...state,\r\n    tournament: payload,\r\n    isLoading: false,\r\n  }))\r\n  // Create/Update a new tournament\r\n  .handleAction(\r\n    [TournamentAction.save.success, TournamentAction.update.success],\r\n    (state, { payload: { tournament } }) => ({\r\n      ...state,\r\n      tournament,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(TournamentAction.purge, () => initialTournamentState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PlayerState } from '@common/models/player.model';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\n\r\nexport const initialPlayerState: PlayerState = {\r\n  isLoading: false,\r\n  isSaving: false,\r\n  playersList: [],\r\n};\r\n\r\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\r\n  // Request\r\n  .handleAction([PlayerAction.fetchPlayers.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  .handleAction([PlayerAction.savePlayer.request, PlayerAction.deletePlayers.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    isSaving: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction(\r\n    [PlayerAction.fetchPlayers.failure, PlayerAction.savePlayer.failure],\r\n    (state, { payload: { message } }) => ({\r\n      ...state,\r\n      errorMessage: message,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\r\n    playersList: [player, ...state.playersList],\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { playersList } }) => ({\r\n    playersList: state.playersList.filter((row) => !playersList.find((selectedRow) => selectedRow.id === row.id)),\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { playersList } }) => ({\r\n    playersList: playersList.map((e, i) => ({ ...e, rowNumber: i + 1 })),\r\n    isLoading: false,\r\n    isSaving: false,\r\n  }))\r\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PairState } from '@common/models';\r\nimport { PairAction } from 'redux/actions';\r\n\r\nexport const initialPairState: PairState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\r\n  // Request\r\n  .handleAction([PairAction.fetch.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction([PairAction.fetch.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PairAction.fetch.success, (state, { payload: { results } }) => ({\r\n    ...state,\r\n    pairList: results,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction(PairAction.purge, () => initialPairState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { SessionState } from '@common/models/session.model';\r\nimport { SessionAction } from 'redux/actions/session.action';\r\nimport { UserRole } from '@common/dto';\r\n\r\nexport const initialSessionState: SessionState = {\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  isLoading: true,\r\n};\r\n\r\nexport const SessionReducer = createReducer<SessionState, Action>(initialSessionState)\r\n  // Request\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.request,\r\n      SessionAction.registration.request,\r\n      SessionAction.login.request,\r\n      SessionAction.logout.request,\r\n      SessionAction.update.request,\r\n      SessionAction.delete.request,\r\n    ],\r\n    (state) => ({ ...state, isLoading: true })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.failure,\r\n      SessionAction.registration.failure,\r\n      SessionAction.login.failure,\r\n      SessionAction.logout.failure,\r\n      SessionAction.update.failure,\r\n      SessionAction.delete.failure,\r\n    ],\r\n    (state) => ({ ...state, isLoading: false })\r\n  )\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.success,\r\n      SessionAction.registration.success,\r\n      SessionAction.login.success,\r\n      SessionAction.logout.success,\r\n      SessionAction.update.success,\r\n      SessionAction.delete.success,\r\n      SessionAction.updateSession,\r\n    ],\r\n    (state, { payload: { user } }) => ({\r\n      user,\r\n      isAuthenticated: !!user,\r\n      isAdmin: user ? user.role === UserRole.Admin : false,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(SessionAction.purge, () => initialSessionState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage1State } from '@common/models';\r\nimport { Stage1Action } from 'redux/actions';\r\nimport { getEmptyRowModel } from 'components/Pair/helper';\r\nimport { Stage1Row } from '@common/dto';\r\n\r\nexport const initialStage1State: Stage1State = {\r\n  needRefresh: false,\r\n  selectedPairs: [getEmptyRowModel('-')],\r\n  isLoading: false,\r\n  stages: [],\r\n};\r\n\r\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\r\n  // Gestione Watcher\r\n  // All'avvio del watcher reimposto needRefresh\r\n  .handleAction([Stage1Action.stage1Watcher.request], (state) => ({ ...state, needRefresh: false }))\r\n  .handleAction([Stage1Action.stage1Watcher.failure], (state) => ({ ...state }))\r\n  .handleAction([Stage1Action.stage1Watcher.success], (state) => ({ ...state, needRefresh: true }))\r\n  //\r\n  .handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  .handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Aggiornamento valore cella/posizionamento\r\n  .handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Reperimento dati\r\n  .handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\r\n    const currentStage = state.stages.filter((s) => s.stageName === stageName);\r\n    const newStage =\r\n      currentStage && currentStage.length > 0\r\n        ? { ...currentStage[0], rows }\r\n        : { pairsList, stageName, rows, autoOrder: false, isLoading: false };\r\n    return {\r\n      ...state,\r\n      stages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\r\n      isLoading: false,\r\n    };\r\n  })\r\n  // Aggiornamento coppie selezionate dati vari gironi\r\n  .handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stageName, rows } }) => {\r\n    const selected = state.selectedRows ? state.selectedRows : new Map<string, Stage1Row[]>();\r\n    selected.set(stageName, rows);\r\n\r\n    const selectedPairs = state.selectedPairs\r\n      ? [\r\n          // Filtro selectedPairs\r\n          //  e.id === null : mantengo il placeholder\r\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\r\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stageName),\r\n          ...rows.map((e) => e.pair),\r\n        ]\r\n      : [...rows.map((e) => e.pair)];\r\n\r\n    return {\r\n      ...state,\r\n      selectedRows: selected,\r\n      selectedPairs,\r\n      isLoading: false,\r\n    };\r\n  })\r\n  .handleAction(Stage1Action.purge, () => initialStage1State);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage2State } from '@common/models';\r\nimport { Stage2Action } from 'redux/actions';\r\n\r\nexport const initialStage2State: Stage2State = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\r\n  // Request\r\n  .handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  // Failure\r\n  .handleAction([Stage2Action.fetchStage2.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Success\r\n  .handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, rowsNumber } }) => ({\r\n    cells,\r\n    rowsNumber,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.delete.success], () => ({\r\n    cells: undefined,\r\n    rowsNumber: 0,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.setCells], (state, { payload }) => ({\r\n    ...state,\r\n    cells: payload,\r\n  }))\r\n  .handleAction([Stage2Action.setLoading], (state, { payload }) => ({\r\n    ...state,\r\n    isLoading: payload,\r\n  }))\r\n  .handleAction(Stage2Action.purge, () => initialStage2State);\r\n","import {\r\n  FetchTournamentsRequest,\r\n  FetchTournamentsResponse,\r\n  SaveTournamentRequest,\r\n  SaveTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n} from '../../@common/models/tournament.model';\r\nimport { postWrapper, putWrapper, getWrapper } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchTournaments = async (request: FetchTournamentsRequest): Promise<FetchTournamentsResponse> =>\r\n  getWrapper<FetchTournamentsRequest, FetchTournamentsResponse>(\r\n    request?.tId ? `/api/v2/tournament/${request.tId}` : '/api/v2/tournament/list'\r\n  );\r\n\r\nexport const postTournament = async (request: SaveTournamentRequest): Promise<SaveTournamentResponse> =>\r\n  postWrapper<SaveTournamentRequest, SaveTournamentResponse>('/api/v2/tournament/new', request);\r\n\r\nexport const updateTournament = async (request: UpdateTournamentRequest): Promise<UpdateTournamentResponse> =>\r\n  putWrapper<UpdateTournamentRequest, UpdateTournamentResponse>('/api/v2/tournament/update', request);\r\n// TODO: add DELETE\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { fetchTournaments, postTournament, updateTournament } from 'redux/services/tournament.service';\r\nimport {\r\n  SaveTournamentResponse,\r\n  FetchTournamentsResponse,\r\n  UpdateTournamentResponse,\r\n} from '@common/models/tournament.model';\r\nimport { TournamentAction } from 'redux/actions/tournament.action';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { toast } from 'react-toastify';\r\nimport { UnexpectedServerError } from '../../@common/models/common.models';\r\n\r\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\r\nfunction* getTournamentsSaga(\r\n  action: ReturnType<typeof TournamentAction.fetch.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchTournamentsResponse = yield call(fetchTournaments, action.payload);\r\n    yield put(TournamentAction.fetch.success(response));\r\n  } catch (err) {\r\n    yield put(TournamentAction.fetch.failure(err));\r\n  }\r\n}\r\n\r\nfunction* saveTournamentSaga(\r\n  action: ReturnType<typeof TournamentAction.save.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: SaveTournamentResponse = yield call(postTournament, action.payload);\r\n    if (response.code === HTTPStatusCode.OK) {\r\n      yield put(TournamentAction.save.success(response));\r\n      action.payload.history.push('/tournament');\r\n      toast.success(response.userMessage.message);\r\n    } else {\r\n      toast.error(response.userMessage.message);\r\n      yield put(TournamentAction.save.failure(response));\r\n    }\r\n  } catch (err) {\r\n    yield put(TournamentAction.save.failure(UnexpectedServerError));\r\n  }\r\n}\r\n\r\nfunction* updateTournamentSaga({\r\n  payload,\r\n}: ReturnType<typeof TournamentAction.update.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('updateTournamentSaga : ', payload);\r\n    const response: UpdateTournamentResponse = yield call(updateTournament, payload);\r\n    if (response.code === HTTPStatusCode.OK) {\r\n      yield put(TournamentAction.update.success(response));\r\n      toast.success(response.userMessage.message);\r\n    } else {\r\n      toast.error(response.userMessage.message);\r\n      yield put(TournamentAction.update.failure(response));\r\n    }\r\n  } catch (err) {\r\n    yield put(TournamentAction.update.failure(UnexpectedServerError));\r\n  }\r\n}\r\n\r\nexport const TournamentsSagas = [\r\n  takeEvery(TournamentAction.fetch.request, getTournamentsSaga),\r\n  takeEvery(TournamentAction.save.request, saveTournamentSaga),\r\n  takeEvery(TournamentAction.update.request, updateTournamentSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\nimport { FetchPlayersResponse, DeletePlayersResponse, UpdatePlayerResponse } from '@common/models/player.model';\r\nimport { fetchPlayers, deletePlayers, savePlayer } from 'redux/services/player.service';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction* getPlayersSaga(\r\n  action: ReturnType<typeof PlayerAction.fetchPlayers.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('getPlayersSaga');\r\n\r\n    const result: FetchPlayersResponse = yield call(fetchPlayers, action.payload);\r\n    yield put(PlayerAction.fetchPlayers.success(result));\r\n  } catch (err) {\r\n    yield put(PlayerAction.fetchPlayers.failure(err));\r\n  }\r\n}\r\n\r\nfunction* deletePlayersSaga(\r\n  action: ReturnType<typeof PlayerAction.deletePlayers.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: DeletePlayersResponse = yield call(deletePlayers, action.payload);\r\n    yield put(PlayerAction.deletePlayers.success(response));\r\n    toast.success('Giocatore eliminato...');\r\n  } catch (err) {\r\n    yield put(PlayerAction.deletePlayers.failure(err));\r\n    toast.error('Errore...');\r\n  }\r\n}\r\n\r\nfunction* savePlayerSaga(\r\n  action: ReturnType<typeof PlayerAction.savePlayer.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: UpdatePlayerResponse = yield call(savePlayer, action.payload);\r\n    yield put(PlayerAction.savePlayer.success(response));\r\n    toast.success(action.payload.player.id === null ? 'Giocatore creato...' : 'Giocatore aggiornato...');\r\n  } catch (err) {\r\n    yield put(PlayerAction.savePlayer.failure(err));\r\n  }\r\n}\r\n\r\nexport const PlayersSagas = [\r\n  takeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\r\n  takeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\r\n  takeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\r\n];\r\n","import { FetchPairsRequest, FetchPairsResponse, PostPairsResponse, PostPairsRequest } from '@common/models';\r\nimport { DEFAULT_HEADERS } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchPairs = async ({ tId }: FetchPairsRequest): Promise<FetchPairsResponse> => {\r\n  try {\r\n    console.log('fetchPairs : ', tId);\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      ...DEFAULT_HEADERS,\r\n    });\r\n    const results = await response.json();\r\n    console.log('fetchPairs : ', tId, results);\r\n    return { results };\r\n  } catch (e) {\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nexport const postPair = async ({ models }: PostPairsRequest): Promise<PostPairsResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/pair', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify(models),\r\n    });\r\n    const results = await response.json();\r\n    return { results };\r\n  } catch (e) {\r\n    return { results: [] };\r\n  }\r\n};\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PairAction } from 'redux/actions';\r\nimport { fetchPairs } from 'redux/services/pair.service';\r\nimport { FetchPairsResponse } from '@common/models';\r\n\r\nfunction* getPairsSaga(action: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchPairsResponse = yield call(fetchPairs, action.payload);\r\n    yield put(PairAction.fetch.success(response));\r\n  } catch (err) {\r\n    yield put(PairAction.fetch.failure(err));\r\n  }\r\n}\r\n\r\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\r\n","import {\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  RegistrationRequest,\r\n  RegistrationResponse,\r\n  UpdateUserRequest,\r\n  DeleteUserRequest,\r\n  LogoutRequest,\r\n} from '../../@common/models';\r\nimport { eventChannel, buffers, END } from 'redux-saga';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { OmitHistory, UnexpectedServerError, UserMessageType } from '@common/models/common.models';\r\nimport { putWrapper, deleteWrapper, postWrapper, getWrapper } from '@common/utils';\r\n\r\nexport enum SessionStatus {\r\n  // Sessione scaduta, reindirizza l'utente alla login\r\n  SESSION_EXPIRED = 'session_expired',\r\n  // Necessario aggiornamento dati su Stage1\r\n  NEED_REFRESH = 'need_refresh',\r\n}\r\n\r\nexport interface Message {\r\n  status: SessionStatus;\r\n  message?: string;\r\n}\r\n\r\n// Update\r\nexport const updateUser = async (updateUserRequest: OmitHistory<UpdateUserRequest>): Promise<AuthenticationResponse> =>\r\n  await putWrapper<UpdateUserRequest, AuthenticationResponse>('/api/v2/auth/update', updateUserRequest);\r\n\r\n// Delete\r\nexport const deleteUser = async (deleteUserRequest: OmitHistory<DeleteUserRequest>): Promise<AuthenticationResponse> =>\r\n  await deleteWrapper<DeleteUserRequest, AuthenticationResponse>('/api/v2/auth/delete', deleteUserRequest);\r\n\r\n// Login\r\nexport const login = async (loginRequest: OmitHistory<LoginRequest>): Promise<AuthenticationResponse> =>\r\n  await postWrapper<LoginRequest, AuthenticationResponse>('/api/v2/auth/login', loginRequest);\r\n\r\n// Login\r\nexport const logout = async (): Promise<AuthenticationResponse> =>\r\n  await getWrapper<LogoutRequest, AuthenticationResponse>('/api/v2/auth/logout');\r\n\r\n// Registration\r\nexport const registration = async (\r\n  registrationRequest: OmitHistory<RegistrationRequest>\r\n): Promise<RegistrationResponse> =>\r\n  await postWrapper<RegistrationRequest, AuthenticationResponse>('/api/v2/auth/register', registrationRequest);\r\n\r\nexport const CheckAuthentication = async (): Promise<AuthenticationResponse> => {\r\n  let response;\r\n  try {\r\n    response = await fetch('/api/v2/auth/check');\r\n    return await response.json();\r\n  } catch (error) {\r\n    if (response?.status === HTTPStatusCode.Unauthorized) {\r\n      return {\r\n        user: undefined,\r\n        code: HTTPStatusCode.OK,\r\n        message: '',\r\n        userMessage: { type: UserMessageType.Success, message: '' },\r\n      };\r\n    }\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Session Control\r\nexport const createSessionChannel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Connected...');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.SESSION_EXPIRED) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { eventChannel, END, buffers } from 'redux-saga';\r\nimport { SessionStatus, Message } from './session.service';\r\nimport {\r\n  FetchStage1Request,\r\n  FetchStage1Response,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdateSelectedPairsRequest,\r\n} from '../../@common/models';\r\nimport { rowsGenerator } from '../../components/Stage1/helper';\r\nimport { DEFAULT_HEADERS } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchStage1 = async ({ pairsList, stageName }: FetchStage1Request): Promise<FetchStage1Response> => {\r\n  try {\r\n    const template = rowsGenerator(pairsList);\r\n    const response = await fetch('/api/v1/stage1', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ rows: template, stageName }),\r\n    });\r\n    const rows = await response.json();\r\n    return { pairsList, stageName, rows };\r\n  } catch (e) {\r\n    return { pairsList, stageName, rows: [] };\r\n  }\r\n};\r\n\r\nexport const updatePlacement = async ({ rows }: UpdatePlacementRequest): Promise<void> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage1/placement', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ rows }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    console.error('Error stage1 update placement');\r\n  }\r\n};\r\n\r\nexport const updateSelectedPairs = async ({ rows, stageName }: UpdateSelectedPairsRequest): Promise<void> => {\r\n  try {\r\n    const response = await fetch('/api/v1/pair/selected', {\r\n      method: 'PUT',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify({ pairs: rows.map((e) => e.pair), stage1Name: stageName }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    console.error('Error stage1 update selections');\r\n  }\r\n};\r\n\r\nexport const updateCellStage1 = async (model: UpdateCellRequest): Promise<UpdateCellResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      ...DEFAULT_HEADERS,\r\n      body: JSON.stringify(model),\r\n    });\r\n    await response.json();\r\n    return {};\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n};\r\nexport const createStage1Channel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Stage1 Channel is now open.');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.NEED_REFRESH) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { Stage1Action } from 'redux/actions';\r\nimport { takeLatest, StrictEffect, call, take, put, takeEvery, fork } from 'redux-saga/effects';\r\nimport {\r\n  createStage1Channel,\r\n  fetchStage1,\r\n  updateCellStage1,\r\n  updatePlacement,\r\n  updateSelectedPairs,\r\n} from 'redux/services/stage1.service';\r\nimport { FetchStage1Response } from '@common/models';\r\nimport { toast } from 'react-toastify';\r\n\r\n// TODO:\r\nfunction* watchStage1Saga(\r\n  action: ReturnType<typeof Stage1Action.stage1Watcher.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('watchStage1Saga : start');\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createStage1Channel, eventChannel);\r\n    while (true) {\r\n      const message = yield take(channel);\r\n      console.log('watchStage1Saga.message : ', message);\r\n    }\r\n  } catch (err) {\r\n    console.log('watchStage1Saga.err : ', err);\r\n  }\r\n}\r\n\r\nfunction* fetchSaga(action: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchStage1Response = yield call(fetchStage1, action.payload);\r\n    yield put(Stage1Action.fetchStage1.success(response));\r\n  } catch (err) {\r\n    yield put(Stage1Action.fetchStage1.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateCellSaga(\r\n  action: ReturnType<typeof Stage1Action.updateCellStage1.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateCellStage1, action.payload);\r\n    yield put(Stage1Action.updateCellStage1.success({}));\r\n  } catch (err) {\r\n    yield put(Stage1Action.updateCellStage1.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updatePlacementSaga(\r\n  action: ReturnType<typeof Stage1Action.updatePlacement.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updatePlacement, action.payload);\r\n    yield put(Stage1Action.updatePlacement.success({}));\r\n  } catch (err) {\r\n    yield put(Stage1Action.updatePlacement.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateSelectedPairsSaga(\r\n  action: ReturnType<typeof Stage1Action.updateSelectedPairs.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateSelectedPairs, action.payload);\r\n    yield put(Stage1Action.updateSelectedPairs.success(action.payload));\r\n  } catch (err) {\r\n    console.error('Error updating selected pairs : ', err);\r\n    yield put(Stage1Action.updateSelectedPairs.success(action.payload));\r\n    toast.error('Error updating selected pairs');\r\n  }\r\n}\r\n\r\nexport const Stage1Sagas = [\r\n  takeLatest(Stage1Action.stage1Watcher.request, watchStage1Saga),\r\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\r\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\r\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\r\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, select, fork } from 'redux-saga/effects';\r\nimport { Stage2Action, TournamentAction } from 'redux/actions';\r\nimport { fetchStage2, updateCells, deleteStage2 } from 'redux/services/stage2.service';\r\nimport { FetchStage2Response, DeleteStage2Response } from '@common/models';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { toast } from 'react-toastify';\r\nimport { TournamentProgress } from '@common/dto';\r\n\r\nfunction* deleteStage2Saga(action: ReturnType<typeof Stage2Action.delete.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: DeleteStage2Response = yield call(deleteStage2, action.payload.tId);\r\n    yield put(Stage2Action.delete.success(response));\r\n    const tournament = yield select(TournamentSelector.getTournament);\r\n    tournament.progress = TournamentProgress.Stage1;\r\n    toast.success('Fase 2 eiminata...');\r\n    yield put(TournamentAction.update.request({ tournament }));\r\n  } catch (err) {\r\n    yield put(Stage2Action.delete.failure(err));\r\n    toast.error('Error while deleting Stage2');\r\n  }\r\n}\r\n\r\nfunction* fetchStage2Saga(\r\n  action: ReturnType<typeof Stage2Action.fetchStage2.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchStage2Response = yield call(fetchStage2, action.payload);\r\n    yield put(Stage2Action.fetchStage2.success(response));\r\n  } catch (err) {\r\n    yield put(Stage2Action.fetchStage2.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateCellsSaga({\r\n  payload: { cell1, cell2 },\r\n}: ReturnType<typeof Stage2Action.updateCell.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateCells, cell1, cell2);\r\n    yield put(Stage2Action.updateCell.success({}));\r\n  } catch (err) {\r\n    yield put(Stage2Action.updateCell.failure(err));\r\n    toast.error('Error while updating Stage2');\r\n  }\r\n}\r\n\r\nexport const Stage2Sagas = [\r\n  takeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\r\n  takeEvery(Stage2Action.updateCell.request, updateCellsSaga),\r\n  takeEvery(Stage2Action.delete.request, deleteStage2Saga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, delay } from 'redux-saga/effects';\r\nimport { SessionAction } from 'redux/actions/session.action';\r\nimport { AuthenticationResponse, RegistrationResponse } from '@common/models';\r\nimport {\r\n  CheckAuthentication,\r\n  createSessionChannel,\r\n  Message,\r\n  login,\r\n  registration,\r\n  updateUser,\r\n  deleteUser,\r\n  logout,\r\n  SessionStatus,\r\n} from 'redux/services/session.service';\r\nimport { toast } from 'react-toastify';\r\nimport { Action } from 'typesafe-actions';\r\nimport { persistor } from 'redux/store';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { TournamentAction } from 'redux/actions';\r\nimport { UserMessageType } from '@common/models/common.models';\r\n\r\nfunction* checkAuthenticationSaga({\r\n  payload,\r\n}: ReturnType<typeof SessionAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: AuthenticationResponse = yield call(CheckAuthentication);\r\n    if (response.code === HTTPStatusCode.OK) {\r\n      yield put(SessionAction.checkAuthentication.success(response));\r\n      yield put(SessionAction.sessionControl.request({ history: payload.history }));\r\n    } else {\r\n      yield put(\r\n        SessionAction.checkAuthentication.failure({\r\n          code: response.code,\r\n          message: response.message,\r\n          userMessage: response.userMessage,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    yield put(SessionAction.checkAuthentication.failure(err));\r\n  }\r\n}\r\n\r\n/*\r\nFIXME:\r\nhttps://github.com/redux-saga/redux-saga/issues/868\r\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\r\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\r\n*/\r\n\r\nfunction* watchSessionSaga({\r\n  payload: { history },\r\n}: ReturnType<typeof SessionAction.sessionControl.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createSessionChannel, eventChannel);\r\n    while (true) {\r\n      const message: Message = yield take(channel);\r\n      if (message && message.status === SessionStatus.SESSION_EXPIRED) {\r\n        toast.error('La tua sessione è scaduta. Stai per essere reindirizzato alla login...');\r\n        yield delay(3000);\r\n        yield put(\r\n          SessionAction.logout.success({\r\n            user: undefined,\r\n            code: HTTPStatusCode.Unauthorized,\r\n            message: 'Unauthorized!',\r\n            userMessage: { message: 'Sessione scaduta...', type: UserMessageType.Danger },\r\n          })\r\n        );\r\n        history.push('/login');\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log('watchSessionSaga.err : ', err);\r\n  }\r\n}\r\n\r\n// Logout\r\nfunction* logoutSaga(action: ReturnType<typeof SessionAction.logout.request>): Generator<StrictEffect, void, any> {\r\n  const logoutReponse: AuthenticationResponse = yield call(logout);\r\n  if (logoutReponse.code === HTTPStatusCode.OK) {\r\n    yield put(SessionAction.logout.success(logoutReponse));\r\n    action.payload.history.push('/');\r\n    toast.success(logoutReponse.userMessage.message);\r\n  } else {\r\n    toast.error(logoutReponse.userMessage.message);\r\n    yield put(SessionAction.logout.failure(logoutReponse));\r\n  }\r\n  persistor.purge();\r\n  yield put(\r\n    SessionAction.logout.success({\r\n      code: HTTPStatusCode.OK,\r\n      message: 'Logout complete',\r\n      userMessage: {\r\n        type: UserMessageType.Success,\r\n        message: 'Logout ',\r\n      },\r\n    })\r\n  );\r\n}\r\n\r\n// Login\r\nfunction* loginSaga({\r\n  payload: { history, ...loginRequest },\r\n}: ReturnType<typeof SessionAction.login.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const loginReponse: AuthenticationResponse = yield call(login, loginRequest);\r\n  if (loginReponse.code === HTTPStatusCode.OK) {\r\n    yield put(SessionAction.login.success(loginReponse));\r\n    // Session control\r\n    yield put(SessionAction.sessionControl.request({ history }));\r\n    // Fetch tournament\r\n    yield put(TournamentAction.fetch.request({}));\r\n    // history.push('/');\r\n    toast.success(loginReponse.userMessage.message);\r\n  } else {\r\n    toast.error(loginReponse.userMessage.message);\r\n    yield put(SessionAction.login.failure(loginReponse));\r\n  }\r\n}\r\n\r\n// Registration\r\nfunction* registrationSaga({\r\n  payload: { history, ...registrationRequest },\r\n}: ReturnType<typeof SessionAction.registration.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Registration\r\n  const registrationReponse: RegistrationResponse = yield call(registration, registrationRequest);\r\n  console.log('registrationReponse : ', registrationReponse);\r\n  if (registrationReponse.code === HTTPStatusCode.OK) {\r\n    yield put(SessionAction.registration.success(registrationReponse));\r\n    // Session control\r\n    yield put(SessionAction.sessionControl.request({ history }));\r\n    // Fetch tournament\r\n    yield put(TournamentAction.fetch.request({}));\r\n    history.push('/');\r\n    toast.success(registrationReponse.userMessage.message);\r\n  } else {\r\n    if (registrationReponse.errors) {\r\n      registrationReponse.errors.forEach((e) => toast.error(e));\r\n    }\r\n    yield put(SessionAction.registration.failure(registrationReponse));\r\n  }\r\n}\r\n\r\n// Update user\r\nfunction* updateUserSaga({\r\n  payload: { history, ...updateUserRequest },\r\n}: ReturnType<typeof SessionAction.update.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const updateReponse: AuthenticationResponse = yield call(updateUser, updateUserRequest);\r\n  if (updateReponse.code === HTTPStatusCode.OK) {\r\n    yield put(SessionAction.update.success(updateReponse));\r\n    history.push('/');\r\n    toast.success(updateReponse.userMessage.message);\r\n  } else {\r\n    toast.error(updateReponse.userMessage.message);\r\n    yield put(SessionAction.update.failure(updateReponse));\r\n  }\r\n}\r\n\r\n// Delete user\r\nfunction* deleteUserSaga({\r\n  payload: { history, ...deleteUserRequest },\r\n}: ReturnType<typeof SessionAction.delete.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const deleteReponse: AuthenticationResponse = yield call(deleteUser, deleteUserRequest);\r\n  if (deleteReponse.code === HTTPStatusCode.OK) {\r\n    yield put(SessionAction.delete.success(deleteReponse));\r\n    yield put(SessionAction.logout.request({ history }));\r\n    toast.success(deleteReponse.userMessage.message);\r\n  } else {\r\n    toast.error(deleteReponse.userMessage.message);\r\n    yield put(SessionAction.delete.failure(deleteReponse));\r\n  }\r\n}\r\n\r\nfunction logger(action: Action<any>) {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('Action : ', action);\r\n  }\r\n}\r\n\r\nexport const SessionSagas = [\r\n  takeEvery(SessionAction.logout.request, logoutSaga),\r\n  takeEvery(SessionAction.login.request, loginSaga),\r\n  takeEvery(SessionAction.update.request, updateUserSaga),\r\n  takeEvery(SessionAction.delete.request, deleteUserSaga),\r\n  takeEvery(SessionAction.registration.request, registrationSaga),\r\n  takeEvery(SessionAction.checkAuthentication.request, checkAuthenticationSaga),\r\n  takeLatest(SessionAction.sessionControl.request, watchSessionSaga),\r\n  takeEvery('*', logger),\r\n];\r\n","import { PlayerRole, TournamentProgress, UserRole } from '@common/dto';\r\nimport { RootState } from '@common/models';\r\n\r\nexport const initialState: RootState = {\r\n  tournamentState: {\r\n    tournament: null,\r\n    tournamentsList: [],\r\n    isLoading: false,\r\n  },\r\n  playerState: {\r\n    isLoading: false,\r\n    playersList: [],\r\n    isSaving: false,\r\n  },\r\n  pairState: {\r\n    isLoading: false,\r\n  },\r\n  sessionState: {\r\n    isAuthenticated: false,\r\n    isAdmin: false,\r\n    isLoading: false,\r\n  },\r\n  stage1State: {\r\n    needRefresh: false,\r\n    selectedPairs: [\r\n      {\r\n        id: null,\r\n        tId: 0,\r\n        rowNumber: 0,\r\n        player1: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        player2: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        alias: '-',\r\n        stage1Name: '',\r\n        placement: 0,\r\n        paid1: false,\r\n        paid2: false,\r\n      },\r\n    ],\r\n    isLoading: false,\r\n    stages: [],\r\n  },\r\n  stage2State: {\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nexport const performAdminLogin = (): RootState => {\r\n  initialState.sessionState = adminSession;\r\n  initialState.tournamentState = {\r\n    ...initialState.tournamentState,\r\n    tournament,\r\n    tournamentsList,\r\n  };\r\n  return initialState;\r\n};\r\n\r\nexport const performUserLogin = (): RootState => {\r\n  initialState.sessionState = userSession;\r\n  initialState.tournamentState = {\r\n    ...initialState.tournamentState,\r\n    tournament,\r\n    tournamentsList,\r\n  };\r\n  return initialState;\r\n};\r\n\r\nexport const tournamentsList = [\r\n  {\r\n    id: 12,\r\n    name: 'hFarm2',\r\n    date: new Date('2020-09-05T08:53:36.000Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: true,\r\n    label: 'hFarm2 @ New',\r\n    ownerId: 1,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '10',\r\n    date: new Date('2020-08-26T13:43:08.795Z'),\r\n    progress: TournamentProgress.Stage2,\r\n    public: true,\r\n    autoOrder: true,\r\n    label: '10 @ Stage2',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '9',\r\n    date: new Date('2020-08-26T13:43:08.789Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '9 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '8',\r\n    date: new Date('2020-08-26T13:43:08.785Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '8 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '7',\r\n    date: new Date('2020-08-26T13:43:08.780Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '7 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '6',\r\n    date: new Date('2020-08-26T13:43:08.776Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '6 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '5',\r\n    date: new Date('2020-08-26T13:43:08.770Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '5 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '4',\r\n    date: new Date('2020-08-26T13:43:08.766Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '4 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '3',\r\n    date: new Date('2020-08-26T13:43:08.759Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '3 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '2',\r\n    date: new Date('2020-08-26T13:43:08.750Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '2 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '1',\r\n    date: new Date('2020-08-26T13:43:08.703Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: false,\r\n    label: '1 @ New',\r\n    ownerId: null,\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'hFarm',\r\n    date: new Date('2020-08-20T08:49:50.000Z'),\r\n    progress: TournamentProgress.New,\r\n    public: true,\r\n    autoOrder: true,\r\n    label: 'hFarm @ New',\r\n    ownerId: 1,\r\n  },\r\n];\r\n\r\nexport const tournament = {\r\n  id: 12,\r\n  name: 'hFarm2',\r\n  date: new Date('2020-09-05T08:53:36.000Z'),\r\n  progress: TournamentProgress.New,\r\n  public: true,\r\n  autoOrder: true,\r\n  label: 'hFarm2 @ New',\r\n  ownerId: 1,\r\n};\r\n\r\nexport const adminSession = {\r\n  user: {\r\n    id: 1,\r\n    username: 'Admin',\r\n    name: 'Admin',\r\n    surname: 'Admin',\r\n    email: 'admin@admin.it',\r\n    phone: '3472545771',\r\n    birthday: new Date('2020-08-26T14:00:27.743Z'),\r\n    label: 'Admin Admin',\r\n    role: UserRole.Admin,\r\n  },\r\n  isAuthenticated: true,\r\n  isAdmin: true,\r\n  isLoading: false,\r\n};\r\n\r\nexport const userSession = {\r\n  user: {\r\n    id: 1,\r\n    username: 'User',\r\n    name: 'User',\r\n    surname: 'User',\r\n    email: 'user@user.it',\r\n    phone: '3472545770',\r\n    birthday: new Date('2020-08-26T14:00:27.743Z'),\r\n    label: 'User user',\r\n    role: UserRole.User,\r\n  },\r\n  isAuthenticated: true,\r\n  isAdmin: false,\r\n  isLoading: false,\r\n};\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport localForage from 'localforage';\r\nimport { RootState } from '@common/models';\r\nimport {\r\n  TournamentReducer,\r\n  PlayerReducer,\r\n  PairReducer,\r\n  SessionReducer,\r\n  Stage1Reducer,\r\n  Stage2Reducer,\r\n  initialTournamentState,\r\n  initialPairState,\r\n  initialPlayerState,\r\n  initialStage1State,\r\n  initialStage2State,\r\n  initialSessionState,\r\n} from 'redux/reducers';\r\nimport { TournamentsSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas } from 'redux/sagas';\r\nimport { initialState } from 'test/commons';\r\n\r\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\r\n\r\n// https://github.com/rt2zz/redux-persist\r\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\r\n// custom compose for the redux devtool extension\r\nconst composeEnhancers =\r\n  (process.env.NODE_ENV !== 'production' &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25,\r\n    })) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const rootReducers: ReducersMapObject<RootState> = {\r\n  tournamentState: TournamentReducer,\r\n  playerState: PlayerReducer,\r\n  pairState: PairReducer,\r\n  sessionState: SessionReducer,\r\n  stage1State: Stage1Reducer,\r\n  stage2State: Stage2Reducer,\r\n};\r\n\r\nexport const initialStoreState: RootState = {\r\n  tournamentState: initialTournamentState,\r\n  pairState: initialPairState,\r\n  playerState: initialPlayerState,\r\n  stage1State: initialStage1State,\r\n  stage2State: initialStage2State,\r\n  sessionState: initialSessionState,\r\n};\r\n\r\n// Meet the Store\r\nexport const store = createStore(\r\n  persistReducer(\r\n    {\r\n      key: 'app',\r\n      storage: localForage,\r\n    },\r\n    combineReducers(rootReducers)\r\n  ),\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nexport const storeWithState = (preloaded: RootState = initialState) =>\r\n  createStore(\r\n    persistReducer(\r\n      {\r\n        key: 'app',\r\n        storage: localForage,\r\n      },\r\n\r\n      combineReducers(rootReducers)\r\n    ),\r\n    preloaded,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Exec all sagas\r\nfunction* rootSagas() {\r\n  yield all([...TournamentsSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas, ...Stage2Sagas, ...Stage1Sagas]);\r\n}\r\n\r\nsagaMiddleware.run(rootSagas);\r\n","import React, { lazy } from 'react';\r\nimport { MaleIcon, FileMedicalIcon } from '../icons';\r\n\r\nconst lazySwagger = lazy(() => import('../../Swagger/Swagger'));\r\nconst lazyPlayer = lazy(() => import('../../Player/table'));\r\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\r\nconst lazyPairs = lazy(() => import('../../Pair/table'));\r\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\r\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\r\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\r\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\r\nconst lazyRedirectionControl = lazy(() =>\r\n  import('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\r\n);\r\n\r\nexport interface routeType {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  componentToRender: React.ComponentType;\r\n  icon?: React.ComponentType;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n}\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  {\r\n    path: '/login',\r\n    label: 'route.login',\r\n    exact: true,\r\n    componentToRender: lazyLogin,\r\n    visible: false,\r\n    private: false,\r\n    index: 0,\r\n  },\r\n  {\r\n    path: '/',\r\n    label: 'route.home',\r\n    exact: true,\r\n    componentToRender: lazyTournament,\r\n    visible: false,\r\n    private: true,\r\n    index: 10,\r\n  },\r\n  {\r\n    path: '/tournament',\r\n    label: 'route.tournament',\r\n    exact: true,\r\n    componentToRender: lazyPairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 20,\r\n  },\r\n  {\r\n    path: '/stage1',\r\n    label: 'route.stage1',\r\n    exact: true,\r\n    componentToRender: lazyStage1,\r\n    visible: false,\r\n    private: true,\r\n    index: 30,\r\n  },\r\n  {\r\n    path: '/player',\r\n    label: 'route.player',\r\n    exact: true,\r\n    componentToRender: lazyPlayer,\r\n    icon: MaleIcon,\r\n    visible: true,\r\n    private: true,\r\n    index: 40,\r\n  },\r\n  {\r\n    path: '/user',\r\n    label: 'route.user',\r\n    exact: true,\r\n    componentToRender: lazyUser,\r\n    visible: false,\r\n    private: true,\r\n    index: 50,\r\n  },\r\n  {\r\n    path: '/stage2',\r\n    label: 'route.stage2',\r\n    exact: true,\r\n    componentToRender: lazyStage2,\r\n    visible: false,\r\n    private: true,\r\n    index: 60,\r\n  },\r\n  {\r\n    path: '/swagger',\r\n    label: 'route.swagger',\r\n    exact: true,\r\n    componentToRender: lazySwagger,\r\n    icon: FileMedicalIcon,\r\n    visible: true,\r\n    private: true,\r\n    index: 70,\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'route.notFound',\r\n    exact: false,\r\n    componentToRender: lazyRedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000,\r\n  },\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find((e) => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find((e) => e.path === pathName);\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpBackend from 'i18next-http-backend';\r\n\r\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\r\ni18n\r\n  .use(HttpBackend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    debug: process.env.NODE_ENV === 'development',\r\n    //## Langs\r\n    // Language to use (overrides language detection)\r\n    // lng: 'it-IT',\r\n    // Array of allowed languages\r\n    supportedLngs: ['it-IT', 'en-US'],\r\n    // Language to use if translations in user language are not available.\r\n    fallbackLng: 'en-US',\r\n\r\n    //## Namespaces\r\n    // String or array of namespaces to load\r\n    ns: ['common', 'auth', 'tournament', 'pair'],\r\n    // Default namespace used if not passed to translation function\r\n    defaultNS: 'common',\r\n    // String or array of namespaces to lookup key if not found in given namespace.\r\n    fallbackNS: ['common'],\r\n\r\n    //## Load options\r\n    // Array of languages to preload.\r\n    preload: ['it-IT'],\r\n    /**\r\n     * Language codes to lookup, given set language is\r\n     * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\r\n     * 'currentOnly' --> 'en-US',\r\n     * 'languageOnly' --> 'en'\r\n     */\r\n    load: 'currentOnly',\r\n    interpolation: {\r\n      // react already safes from xss\r\n      escapeValue: false,\r\n    },\r\n    backend: {\r\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n\r\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'en-US' : 'it-IT');\r\n","import React, { CSSProperties } from 'react';\r\nimport backgroundImage from '../../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport routes from '../core/routing/Routes';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\r\nimport { SessionAction } from 'redux/actions';\r\nimport i18n, { getOtherLang } from 'i18n/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\n\r\n// Header applicazione, include navbar\r\nconst Header: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const { t } = useTranslation(['common']);\r\n\r\n  const { user, isAuthenticated, isAdmin } = useSelector(SessionSelector.getSession);\r\n\r\n  const logout = () => dispatch(SessionAction.logout.request({ history: currentHistory }));\r\n\r\n  // const yellow = '#ffc107';\r\n  const jumboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px',\r\n    minHeight: '28vh',\r\n  };\r\n\r\n  const titleStyle: CSSProperties = {\r\n    color: 'white',\r\n  };\r\n\r\n  const otherLang = getOtherLang();\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumboStyle}>\r\n        <h1 style={{ margin: '5vh' }}>\r\n          <strong style={titleStyle}>{applicationName}</strong>\r\n        </h1>\r\n        {isAuthenticated ? (\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n              <span>\r\n                <HomeIcon /> {t('route.home')}\r\n              </span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {routes.map((route) =>\r\n                  !route.visible || (route.path === '/swagger' && !isAdmin) ? null : (\r\n                    <Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\r\n                      <span>\r\n                        {route.icon ? <route.icon /> : null} {t(route.label)}\r\n                      </span>\r\n                    </Nav.Link>\r\n                  )\r\n                )}\r\n              </Nav>\r\n              {user ? (\r\n                <>\r\n                  <Dropdown alignRight as={ButtonGroup}>\r\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\r\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }}>\r\n                        {user.username} <UserIcon />\r\n                      </strong>\r\n                    </Button>\r\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" />\r\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as={Link}\r\n                        to={'/user'}\r\n                        eventKey=\"1\"\r\n                      >\r\n                        <span>{t('route.user')}</span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        onClick={() => i18n.changeLanguage(otherLang)}\r\n                        as=\"button\"\r\n                        eventKey=\"2\"\r\n                      >\r\n                        <span>\r\n                          <LanguageIcon /> {t(`common:lang.${otherLang}`)}\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as=\"button\"\r\n                        onClick={logout}\r\n                        eventKey=\"3\"\r\n                      >\r\n                        <span>\r\n                          <LogoutIcon /> <strong>{t('logout')} </strong>\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        ) : null}\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { routeType, getLabelByPathname } from './Routes';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { TournamentSelector } from 'redux/selectors';\r\n\r\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\r\nexport const ProtectedRoute: React.FC<routeType> = (props) => {\r\n  const isAuthenticated = useSelector(SessionSelector.isAuthenticated);\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(innerProps) => {\r\n        const { location } = innerProps;\r\n        console.log('ProtectedRoute : ', session, tournament, location);\r\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\r\n        if (isAuthenticated && location.pathname === '/login') {\r\n          console.log('ProtectedRoute => redirect to Home');\r\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\r\n        }\r\n\r\n        // Se non è una rotta protetta\r\n        if (!props.private) {\r\n          console.log('ProtectedRoute => public route : ', { ...props });\r\n          return <props.componentToRender {...props} />;\r\n        }\r\n\r\n        // Se è una rotta privata e non sono autenticato devo andare alla login\r\n        if (!isAuthenticated) {\r\n          console.log('ProtectedRoute => redirect to Login : ', { ...session });\r\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\r\n        }\r\n        /**\r\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\r\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\r\n         */\r\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\r\n        return <props.componentToRender {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default connect(ProtectedRoute);\r\n","import React from 'react';\r\n\r\ninterface IErrorBoundaryProps {\r\n  readonly children: JSX.Element | JSX.Element[];\r\n}\r\n\r\ninterface IErrorBoundaryState {\r\n  readonly error: any;\r\n  readonly errorInfo: any;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\r\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    const { children } = this.props;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n        process.env.NODE_ENV === 'development' ? (\r\n          <details className=\"preserve-space\">\r\n            {error && error.toString()}\r\n            <br />\r\n            {errorInfo.componentStack}\r\n          </details>\r\n        ) : undefined;\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { CSSProperties } from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\n\r\ninterface AppBadgeProps {}\r\nconst AppBadge: React.FC<AppBadgeProps> = () => {\r\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\r\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\r\n\r\n  const style: CSSProperties = {\r\n    position: 'absolute',\r\n    top: '0.1em',\r\n    right: '0.1em',\r\n  };\r\n  return (\r\n    <h4 style={style}>\r\n      <Badge variant=\"info\">\r\n        <span>v.</span>\r\n        <strong>{appVersion}</strong>\r\n        <span>\r\n          <i>\r\n            <small> @ {commitHash}</small>\r\n          </i>\r\n        </span>\r\n      </Badge>\r\n    </h4>\r\n  );\r\n};\r\n\r\nexport default AppBadge;\r\n","import React, { Suspense, useEffect } from 'react';\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\n// Routing\r\nimport { Switch, useHistory } from 'react-router';\r\nimport routes from '../core/routing/Routes';\r\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\r\nimport ErrorBoundary from '../core/errorBoundary';\r\n// Style\r\nimport './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionAction } from 'redux/actions';\r\nimport { loadIcons } from '../core/icons';\r\n// Toasts\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast.css';\r\nimport AppBadge from './badge';\r\nimport { SessionSelector } from 'redux/selectors';\r\n// i18n\r\nimport '../../i18n/i18n';\r\n\r\nloadIcons();\r\nconst App: React.FC = (_) => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const isLoading = useSelector(SessionSelector.isLoading);\r\n\r\n  // Check if user is already logged\r\n  useEffect(() => {\r\n    dispatch(SessionAction.checkAuthentication.request({ history: currentHistory }));\r\n  }, [currentHistory, dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary>\r\n        {/* Loading translations */}\r\n        <Suspense fallback={<LoadingModal />}>\r\n          <Header />\r\n        </Suspense>\r\n        <Container fluid style={{ marginBottom: '20vh' }}>\r\n          {/*<RedirectionControl />*/}\r\n          <ToastContainer autoClose={2000} />\r\n          {isLoading ? (\r\n            // Loading store\r\n            <LoadingModal />\r\n          ) : (\r\n            // Loading lazy components\r\n            <Suspense fallback={<LoadingModal />}>\r\n              <Switch>\r\n                {routes.map((route) => (\r\n                  <ProtectedRoute {...route} key={route.index} />\r\n                ))}\r\n              </Switch>\r\n            </Suspense>\r\n          )}\r\n          <AppBadge />\r\n        </Container>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { StrictMode } from 'react';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from '../../redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { LoadingModal } from 'components/core/generic/Commons';\r\n\r\nconst Application: React.FC = () => (\r\n  <Provider store={store}>\r\n    <PersistGate loading={<LoadingModal show={true} />} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\nconst Entry: React.FC = () =>\r\n  process.env.NODE_ENV === 'development' ? (\r\n    <StrictMode>\r\n      <Application />\r\n    </StrictMode>\r\n  ) : (\r\n    <Application />\r\n  );\r\n\r\nexport default Entry;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'typeface-roboto';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport it from 'date-fns/locale/it';\r\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\r\n\r\nimport Entry from './components/App/Entry';\r\n\r\nsetDefaultLocale('it');\r\nregisterLocale('it', it);\r\n\r\nReactDOM.render(<Entry />, document.getElementById('root'));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\r\nserviceWorker.unregister();\r\n\r\n// Redefine console so it does not in production env\r\nif (process.env.NODE_ENV === 'production') {\r\n  if (!window.console) (window as any).console = {};\r\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\r\n}\r\n","//-----------------------------\r\n// Fetch utils\r\n//\r\nimport { GenericReponse, OmitHistory, UnexpectedServerError } from '../models/common.models';\r\nimport { toast } from 'react-toastify';\r\n\r\n//\r\nexport const DEFAULT_HEADERS = { headers: { 'Content-Type': 'application/json' } };\r\n\r\nexport const getWrapper = async <B, T extends GenericReponse>(url: string, version?: string): Promise<T> =>\r\n  await fetchWrapper(url, 'GET', undefined, version);\r\nexport const deleteWrapper = async <B, T extends GenericReponse>(\r\n  url: string,\r\n  body?: OmitHistory<B>,\r\n  version?: string\r\n): Promise<T> => await fetchWrapper(url, 'DELETE', body, version);\r\nexport const putWrapper = async <B, T extends GenericReponse>(\r\n  url: string,\r\n  body?: OmitHistory<B>,\r\n  version?: string\r\n): Promise<T> => await fetchWrapper(url, 'PUT', body, version);\r\nexport const postWrapper = async <B, T extends GenericReponse>(\r\n  url: string,\r\n  body?: OmitHistory<B>,\r\n  version?: string\r\n): Promise<T> => await fetchWrapper(url, 'POST', body, version);\r\n\r\nexport const fetchWrapper = async <B, T extends GenericReponse>(\r\n  url: string,\r\n  method: string,\r\n  body?: OmitHistory<B>,\r\n  version?: string\r\n): Promise<T> => {\r\n  let response = null;\r\n  try {\r\n    response = await fetch(url, {\r\n      method,\r\n      body: method === 'PUT' || method === 'POST' || method === 'DELETE' ? JSON.stringify(body) : undefined,\r\n      ...DEFAULT_HEADERS,\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.group('An error occur : ');\r\n    console.error('Error', error);\r\n    console.error('Details : ', response);\r\n    console.groupEnd();\r\n    // If performing fetch from FE, show errror.\r\n    if (!url.startsWith('http')) {\r\n      toast.error('Whoooops...Something went wrong...');\r\n    }\r\n    /*  FIXME:\r\n      Type 'GenericReponse' is not assignable to type 'T'.\r\n      'GenericReponse' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'GenericReponse'.\r\n    */\r\n    return UnexpectedServerError as any;\r\n  }\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  FetchPlayersResponse,\r\n  FetchPlayersRequest,\r\n  UpdatePlayerRequest,\r\n  UpdatePlayerResponse,\r\n  DeletePlayersResponse,\r\n  DeletePlayersRequest,\r\n} from '@common/models/player.model';\r\n\r\nconst actionName = '[Player]';\r\nexport const PlayerAction = {\r\n  // fetch tournaments\r\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Palyers'))<\r\n    FetchPlayersRequest,\r\n    FetchPlayersResponse,\r\n    Error\r\n  >(),\r\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\r\n    UpdatePlayerRequest,\r\n    UpdatePlayerResponse,\r\n    Error\r\n  >(),\r\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\r\n    DeletePlayersRequest,\r\n    DeletePlayersResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","export enum HTTPStatusCode {\r\n  Continue = 100,\r\n  SwitchingProtocols = 101,\r\n  Processing = 102,\r\n  EarlyHints = 103,\r\n\r\n  /**\r\n   * All `1xx` status codes.\r\n   */\r\n  InformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\r\n\r\n  OK = 200,\r\n  Created = 201,\r\n  Accepted = 202,\r\n  NonAuthoritativeInformation = 203,\r\n  NoContent = 204,\r\n  ResetContent = 205,\r\n  PartialContent = 206,\r\n  MultiStatus = 207,\r\n  AlreadyReported = 208,\r\n  IMUsed = 226,\r\n\r\n  /**\r\n   * All `2xx` status codes.\r\n   */\r\n  Success = OK |\r\n    Created |\r\n    Accepted |\r\n    NonAuthoritativeInformation |\r\n    NoContent |\r\n    ResetContent |\r\n    PartialContent |\r\n    MultiStatus |\r\n    AlreadyReported |\r\n    IMUsed,\r\n\r\n  MultipleChoices = 300,\r\n  MovedPermanently = 301,\r\n  Found = 302,\r\n  SeeOther = 303,\r\n  NotModified = 304,\r\n  UseProxy = 305,\r\n  SwitchProxy = 306,\r\n  TemporaryRedirect = 307,\r\n  PermanentRedirect = 308,\r\n\r\n  /**\r\n   * All `3xx` status codes.\r\n   */\r\n  Redirection = MultipleChoices |\r\n    MovedPermanently |\r\n    Found |\r\n    SeeOther |\r\n    NotModified |\r\n    UseProxy |\r\n    SwitchProxy |\r\n    TemporaryRedirect |\r\n    PermanentRedirect,\r\n\r\n  BadRequest = 400,\r\n  Unauthorized = 401,\r\n  PaymentRequired = 402,\r\n  Forbidden = 403,\r\n  NotFound = 404,\r\n  MethodNotAllowed = 405,\r\n  NotAcceptable = 406,\r\n  ProxyAuthenticationRequired = 407,\r\n  RequestTimeout = 408,\r\n  Conflict = 409,\r\n  Gone = 410,\r\n  LengthRequired = 411,\r\n  PreconditionFailed = 412,\r\n  PayloadTooLarge = 413,\r\n  URITooLong = 414,\r\n  UnsupportedMediaType = 415,\r\n  RangeNotSatisfiable = 416,\r\n  ExpectationFailed = 417,\r\n  ImATeapot = 418,\r\n  MisdirectedRequest = 421,\r\n  UnprocessableEntity = 422,\r\n  Locked = 423,\r\n  FailedDependency = 424,\r\n  UpgradeRequired = 426,\r\n  PreconditionRequired = 428,\r\n  TooManyRequests = 429,\r\n  RequestHeaderFieldsTooLarge = 431,\r\n  UnavailableForLegalReasons = 451,\r\n\r\n  /**\r\n   * All `4xx` error codes.\r\n   */\r\n  ClientErrors = BadRequest |\r\n    Unauthorized |\r\n    PaymentRequired |\r\n    Forbidden |\r\n    NotFound |\r\n    MethodNotAllowed |\r\n    NotAcceptable |\r\n    ProxyAuthenticationRequired |\r\n    RequestTimeout |\r\n    Conflict |\r\n    Gone |\r\n    LengthRequired |\r\n    PreconditionFailed |\r\n    PayloadTooLarge |\r\n    URITooLong |\r\n    UnsupportedMediaType |\r\n    RangeNotSatisfiable |\r\n    ExpectationFailed |\r\n    ImATeapot |\r\n    MisdirectedRequest |\r\n    UnprocessableEntity |\r\n    Locked |\r\n    FailedDependency |\r\n    UpgradeRequired |\r\n    PreconditionRequired |\r\n    TooManyRequests |\r\n    RequestHeaderFieldsTooLarge |\r\n    UnavailableForLegalReasons,\r\n\r\n  InternalServerError = 500,\r\n  NotImplemented = 501,\r\n  BadGateway = 502,\r\n  ServiceUnavailable = 503,\r\n  GatewayTimeout = 504,\r\n  HTTPVersionNotSupported = 505,\r\n  VariantAlsoNegotiates = 506,\r\n  InsufficientStorage = 507,\r\n  LoopDetected = 508,\r\n  NotExtended = 510,\r\n  NetworkAuthenticationRequired = 511,\r\n\r\n  /**\r\n   * All `5xx` error codes.\r\n   */\r\n  ServerErrors = InternalServerError |\r\n    NotImplemented |\r\n    BadGateway |\r\n    ServiceUnavailable |\r\n    GatewayTimeout |\r\n    HTTPVersionNotSupported |\r\n    VariantAlsoNegotiates |\r\n    InsufficientStorage |\r\n    LoopDetected |\r\n    NotExtended |\r\n    NetworkAuthenticationRequired,\r\n}\r\n","import { HTTPStatusCode } from './HttpStatusCode';\r\n\r\nexport interface GenericReponse {\r\n  code: HTTPStatusCode;\r\n  message: string;\r\n  userMessage: UserMessage;\r\n}\r\n\r\nexport enum UserMessageType {\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Danger = 'danger',\r\n}\r\nexport interface UserMessage {\r\n  type: UserMessageType;\r\n  message: string;\r\n}\r\n\r\nexport type OmitHistory<T> = Omit<T, 'history'>;\r\nexport type OmitGeneric<T> = Omit<T, 'code' | 'message' | 'userMessage'>;\r\n\r\nexport const UnexpectedServerError: GenericReponse = {\r\n  code: HTTPStatusCode.InternalServerError,\r\n  message: 'Unexpected Server Error',\r\n  userMessage: {\r\n    type: UserMessageType.Danger,\r\n    // eslint-disable-next-line quotes\r\n    message: \"Errore server non previsto. E' stata avviata la procedura di autodistruzione.\",\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSignOutAlt,\r\n  faUser,\r\n  faMale,\r\n  faLanguage,\r\n  faHome,\r\n  faBroom,\r\n  faArrowAltCircleRight,\r\n  faArrowAltCircleLeft,\r\n  faTimes,\r\n  faToggleOff,\r\n  faToggleOn,\r\n  faPlus,\r\n  faTrophy,\r\n  faAngleDoubleRight,\r\n  faBan,\r\n  faFileMedicalAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const loadIcons = () => {\r\n  library.add(\r\n    // Regular\r\n    faTrashAlt,\r\n    faSave,\r\n    // Solid\r\n    faSignOutAlt,\r\n    faUser,\r\n    faMale,\r\n    faLanguage,\r\n    faHome,\r\n    faBroom,\r\n    faArrowAltCircleRight,\r\n    faArrowAltCircleLeft,\r\n    faTimes,\r\n    faToggleOff,\r\n    faToggleOn,\r\n    faPlus,\r\n    faTrophy,\r\n    faAngleDoubleRight,\r\n    faBan,\r\n    faFileMedicalAlt\r\n  );\r\n};\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst SOLID = 'fas';\r\nconst REGULAR = 'far';\r\n\r\n// Wrapper per icone FontAwesome\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\r\n);\r\n\r\n// Solid\r\nexport const FileMedicalIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"file-medical-alt\" />\r\n);\r\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\r\n);\r\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\r\n);\r\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\r\n);\r\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\r\n);\r\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\r\n);\r\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\r\n);\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\r\n);\r\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\r\n);\r\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\r\n);\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\r\n);\r\n","import { PlayerDTO, PlayerRole } from '@common/dto';\r\nimport {\r\n  FetchPlayersRequest,\r\n  FetchPlayersResponse,\r\n  DeletePlayersRequest,\r\n  DeletePlayersResponse,\r\n  UpdatePlayerResponse,\r\n  UpdatePlayerRequest,\r\n} from '@common/models';\r\nimport { UserMessageType } from '@common/models/common.models';\r\nimport { HTTPStatusCode } from '@common/models/HttpStatusCode';\r\nimport { DEFAULT_HEADERS, deleteWrapper, postWrapper } from '../../@common/utils/fetch.utils';\r\n\r\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\r\n  try {\r\n    const response = await fetch(tId ? `/api/v2/player/list/${tId}` : '/api/v2/player/list', {\r\n      method: 'GET',\r\n      ...DEFAULT_HEADERS,\r\n    });\r\n    const result: FetchPlayersResponse = await response.json();\r\n    return {\r\n      ...result,\r\n      playersList: addEmpty ? [...result.playersList, getEmptyPlayer('Nessun Giocatore')] : result.playersList,\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      code: HTTPStatusCode.InternalServerError,\r\n      message: '',\r\n      userMessage: { type: UserMessageType.Danger, message: 'Errore server non previsto' },\r\n      playersList: [],\r\n    };\r\n  }\r\n};\r\n\r\nexport const deletePlayers = async ({ players }: DeletePlayersRequest): Promise<DeletePlayersResponse> =>\r\n  deleteWrapper<DeletePlayersRequest, DeletePlayersResponse>('/api/v2/player', { players });\r\n\r\nexport const savePlayer = async ({ player }: UpdatePlayerRequest): Promise<UpdatePlayerResponse> =>\r\n  postWrapper<UpdatePlayerRequest, UpdatePlayerResponse>('/api/v2/player', { player });\r\n\r\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\r\n  id: null,\r\n  name: '',\r\n  surname: '',\r\n  alias: '',\r\n  label: label || '',\r\n  role: PlayerRole.GoalKeeper,\r\n  email: '',\r\n  phone: '',\r\n  match_played: 0,\r\n  match_won: 0,\r\n  total_score: 0,\r\n  editable: false,\r\n  rowNumber: 0,\r\n});\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const SessionSelector = {\r\n  isLoading: ({ sessionState: { isLoading } }: RootState) => isLoading,\r\n  isAdmin: ({ sessionState: { isAdmin } }: RootState) => isAdmin,\r\n  isAuthenticated: ({ sessionState: { isAuthenticated } }: RootState) => isAuthenticated,\r\n  getUser: ({ sessionState: { user } }: RootState) => user,\r\n  getSession: ({ sessionState }: RootState) => sessionState,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const PairSelector = {\r\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\r\n  getPairsList: ({ pairState: { pairList } }: RootState) => pairList,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const PlayerSelector = {\r\n  isLoading: ({ playerState: { isLoading } }: RootState) => isLoading,\r\n  isSaving: ({ playerState: { isSaving } }: RootState) => isSaving,\r\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const Stage1Selector = {\r\n  isLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\r\n  getSelectedRows: ({ stage1State: { selectedRows } }: RootState) => selectedRows || null,\r\n  getSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\r\n  getNeedRefresh: ({ stage1State: { needRefresh } }: RootState) => needRefresh,\r\n  // Utilizzare una closure nel compoanente per accedere allo specifico stage\r\n  getStages: ({ stage1State: { stages } }: RootState) => stages,\r\n};\r\n","import { RootState } from '@common/models';\r\n\r\n// Get state from store\r\nexport const Stage2Selector = {\r\n  isLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\r\n  getCells: ({ stage2State: { cells } }: RootState) => cells,\r\n  getRowsNumber: ({ stage2State: { rowsNumber } }: RootState) => rowsNumber,\r\n};\r\n","import React, { CSSProperties } from 'react';\r\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\r\nconst fancyModalFooter = (\r\n  <>\r\n    <Spinner animation=\"border\" variant=\"light\" />\r\n    <Spinner animation=\"border\" variant=\"primary\" />\r\n    <Spinner animation=\"border\" variant=\"secondary\" />\r\n    <Spinner animation=\"border\" variant=\"success\" />\r\n    <Spinner animation=\"border\" variant=\"danger\" />\r\n    <Spinner animation=\"border\" variant=\"warning\" />\r\n    <Spinner animation=\"border\" variant=\"info\" />\r\n    <Spinner animation=\"border\" variant=\"dark\" />\r\n  </>\r\n);\r\n// Loading Modal\r\ninterface LoadingModalPropsType {\r\n  show?: boolean;\r\n  title?: string;\r\n  message?: string;\r\n  onHide?: () => void;\r\n}\r\n\r\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\r\n  title = 'Caricamento....',\r\n  message = 'Caricamento....',\r\n  show = true,\r\n  onHide = () => (show = false),\r\n}) => (\r\n  <Modal show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\r\n      {message}\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport interface YesNoModalProps {\r\n  title: string;\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\r\n  title,\r\n  message,\r\n  show,\r\n  onHide = () => (show = false),\r\n  onClick,\r\n}) => (\r\n  <Modal\r\n    className=\"YesNoModal\"\r\n    show={show}\r\n    onHide={onHide}\r\n    centered\r\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\r\n  >\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body style={modalStyle}>\r\n      <Container fluid>\r\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\r\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\r\n          <Col>\r\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\r\n              Annulla\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\r\n              Conferma\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\nexport interface IToastProps {\r\n  message: string;\r\n  type?: toastType;\r\n}\r\n\r\nexport type toastType = 'success' | 'warning' | 'danger';\r\n\r\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\n// TODO: Componente fallback se route non trovata\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import { getEmptyPlayer } from 'redux/services/player.service';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO } from '@common/dto';\r\nimport { FetchPlayersResponse } from '@common/models';\r\n\r\nexport const getEmptyRowModel = (label?: string): PairDTO => ({\r\n  id: null,\r\n  tId: 0,\r\n  rowNumber: 0,\r\n  player1: getEmptyPlayer(),\r\n  player2: getEmptyPlayer(),\r\n  alias: label || '',\r\n  stage1Name: '',\r\n  placement: 0,\r\n  paid1: false,\r\n  paid2: false,\r\n});\r\n\r\nexport const fetchPairs = (setterFunction: React.Dispatch<React.SetStateAction<PairDTO[]>>, tId: number) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport const valueFormatter = (selectedOption: PairDTO) =>\r\n  selectedOption.alias ? `${selectedOption.alias}` : createAlias(selectedOption);\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2 } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  // value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n\r\nexport const fetchData = async (tId: number) => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v2/player/list/${tId}` : '/api/v2/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const result: FetchPlayersResponse = await response.json();\r\n  const players = [...result.playersList, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  console.log('rows : ', rows);\r\n  return { rows, players };\r\n};\r\n"],"sourceRoot":""}