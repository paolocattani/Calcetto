{"version":3,"sources":["redux/services/tournament.service.ts","redux/services/stage2.service.ts","redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","redux/models/tournament.model.ts","redux/selectors/tournament.selector.ts","redux/models/player.model.ts","components/Stage1/helper.ts","assets/header.jpg","redux/actions/session.action.ts","redux/actions/constants.ts","redux/services/common.ts","redux/models/index.ts","serviceWorker.ts","redux/models/user.model.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/session.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/services/pair.service.ts","redux/sagas/pair.saga.ts","redux/services/session.service.ts","redux/services/stage1.service.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/sagas/session.saga.ts","test/commons.ts","redux/store.ts","components/core/routing/Routes.ts","i18n/i18n.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","redux/actions/tournament.action.ts","redux/actions/player.action.ts","redux/models/HttpStatusCode.ts","components/core/icons.tsx","redux/selectors/session.selector.ts","redux/services/player.service.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","components/core/generic/Commons.tsx","components/Pair/helper.ts","redux/models/common.model.ts"],"names":["fetchTournaments","request","a","fetch","tId","method","headers","response","json","results","handleError","postTournament","model","body","JSON","stringify","result","console","log","updateTournament","isValidTournament","isValid","errorMessage","deleteStage2","updateCells","cell1","cell2","fetchPairsStage2","pairs","getEmptyRowModel","fetchStage2","rowsNumber","count","tournamentId","cells","PairAction","fetchPairs","createAsyncAction","defaultAsyncParams","purge","createAction","PURGE_STORE_ACTION","Stage1Action","updateSelectedPairs","stage1Watcher","fetchStage1","updateCellStage1","updatePlacement","Stage2Action","updateCell","delete","setCells","defaultParam","setLoading","TournamentProgress","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","PlayerRole","getOpposite","value","parseInt","comparator","obj1","obj2","total","rowNumber","rowsGenerator","pairsList","map","e","ii","row","id","pair","placement","jj","length","module","exports","SessionAction","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","actionName","name","error","message","toast","Error","handleGenericError","group","groupEnd","UnexpectedServerError","code","HTTPStatusCode","InternalServerError","userMessage","type","UserMessageType","Danger","Boolean","window","location","hostname","match","UserRole","initialTournamentState","TournamentReducer","createReducer","handleAction","TournamentAction","saveTournament","state","undefined","failure","payload","success","setTournament","initialPlayerState","playersList","PlayerReducer","PlayerAction","fetchPlayers","savePlayer","player","deletePlayers","players","filter","find","selectedRow","i","initialPairState","PairReducer","pairList","initialSessionState","isAuthenticated","isAdmin","SessionReducer","user","role","Admin","initialStage1State","needRefresh","selectedPairs","stages","Stage1Reducer","stageName","rows","currentStage","s","newStage","autoOrder","selected","selectedRows","Map","set","stage1Name","initialStage2State","Stage2Reducer","getTournamentsSaga","saveTournamentSaga","updateTournamentSaga","action","call","put","history","push","TournamentsSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","PlayersSagas","getPairsSaga","SessionStatus","PairsSagas","updateUser","params","deleteUser","username","password","registrationInfo","CheckAuthentication","status","Unauthorized","Accepted","Success","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","template","createStage1Channel","NEED_REFRESH","watchStage1Saga","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","EventSource","take","fork","Stage1Sagas","takeLatest","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","Stage2Sagas","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","regitrationSaga","updateUserSaga","deleteUserSaga","logoutReponse","persistor","loginReponse","registrationReponse","errors","forEach","updateReponse","deleteReponse","SessionSagas","process","GoalKeeper","Date","New","Stage2","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","playerState","pairState","sessionState","stage1State","stage2State","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","run","lazyPlayer","lazy","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","default","RedirectionControl","routes","path","label","exact","componentToRender","visible","private","index","icon","MaleIcon","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","Header","dispatch","useDispatch","currentHistory","useHistory","t","useTranslation","useSelector","SessionSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","language","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","size","disabled","fontSize","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","session","render","innerProps","pathname","from","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","fallback","Container","fluid","marginBottom","autoClose","Entry","loading","show","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","library","add","faTrashAlt","faSave","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faTrophy","faAngleDoubleRight","faBan","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","getUser","getMessage","addEmpty","getEmptyPlayer","ok","surname","alias","email","phone","match_played","match_won","total_score","editable","PairSelector","getPairsList","PlayerSelector","getPlayersList","Stage1Selector","getSelectedRows","getSelectedPairs","getNeedRefresh","getStages","Stage2Selector","getCells","getRowsNumber","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","LogSessionContext","Object","entries","useLocation","player1","player2","paid1","paid2","customStyles","option","provided","input","control","height","singleValue","valueContainer","fetchData"],"mappings":"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","file":"static/js/main.18b22ece.chunk.js","sourcesContent":["import {\r\n  FetchTournamentsRequest,\r\n  FetchTournamentsResponse,\r\n  TournamentDTO,\r\n  PostTournamentRequest,\r\n  PostTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n  IsValidTournamentRequest,\r\n  IsValidTournamentResponse,\r\n} from '../models/tournament.model';\r\nimport { handleError } from './common';\r\n\r\nexport const fetchTournaments = async (request: FetchTournamentsRequest): Promise<FetchTournamentsResponse> => {\r\n  try {\r\n    const response = await fetch(request?.tId ? `/api/v1/tournament/${request.tId}` : '/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const results: TournamentDTO[] = await response.json();\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e, 'Error fetching Tournaments');\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nexport const postTournament = async ({ model }: PostTournamentRequest): Promise<PostTournamentResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model),\r\n    });\r\n    const result: TournamentDTO = await response.json();\r\n    console.log('postTournament : ', result);\r\n\r\n    return { result };\r\n  } catch (e) {\r\n    handleError(e, 'Error updating Tournament');\r\n    return { result: null };\r\n  }\r\n};\r\n\r\nexport const updateTournament = async ({ model }: UpdateTournamentRequest): Promise<UpdateTournamentResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model),\r\n    });\r\n    const result: TournamentDTO = await response.json();\r\n    return { result };\r\n  } catch (e) {\r\n    handleError(e, 'Error updating Tournament');\r\n    return { result: model };\r\n  }\r\n};\r\n\r\nexport const isValidTournament = async ({ model }: IsValidTournamentRequest): Promise<IsValidTournamentResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/tournament/isValid', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model),\r\n    });\r\n    const { isValid, errorMessage }: IsValidTournamentResponse = await response.json();\r\n    return { isValid, errorMessage };\r\n  } catch (e) {\r\n    handleError(e, 'Error validating Tournament');\r\n    return { isValid: false, errorMessage: '' };\r\n  }\r\n};\r\n","import { FetchStage2Response, FetchStage2Request, ICell } from 'redux/models';\r\nimport { handleError } from './common';\r\nimport { getEmptyRowModel } from 'components/Pair/helper';\r\n\r\nexport const deleteStage2 = async (tId: number) => {\r\n  const response = await fetch('/api/v1/stage2', {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ tId }),\r\n  });\r\n  await response.json();\r\n};\r\n\r\nexport const updateCells = async (cell1: ICell, cell2: ICell | null) => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2/cells', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ cell1, cell2 }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    handleError(e, 'Error stage2 update');\r\n  }\r\n};\r\n\r\nexport const fetchPairsStage2 = async (tId: number) => {\r\n  try {\r\n    const response = await fetch(`/api/v1/stage2/pairs/${tId}`);\r\n    const result = await response.json();\r\n    return { pairs: [getEmptyRowModel('-'), ...result.pairs] };\r\n  } catch (e) {\r\n    handleError(e, 'Error stage2 fetching pairs');\r\n  }\r\n  return { pairs: [] };\r\n};\r\n\r\nexport const fetchStage2 = async ({\r\n  count: rowsNumber,\r\n  tournamentId,\r\n}: FetchStage2Request): Promise<FetchStage2Response> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage2', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ tournamentId, rowsNumber }),\r\n    });\r\n    const cells = await response.json();\r\n    return { cells, rowsNumber };\r\n  } catch (e) {\r\n    handleError(e, 'Error stage2 fetch');\r\n    return { cells: [], rowsNumber };\r\n  }\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport { FetchPairsRequest, FetchPairsResponse } from 'redux/models';\r\n\r\nconst actionName = '[Pair]';\r\n\r\nexport const PairAction = {\r\n  // Fetch Pairs\r\n  fetchPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\r\n    FetchPairsRequest,\r\n    FetchPairsResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  WatchStage1Request,\r\n  WatchStage1Response,\r\n  FetchStage1Response,\r\n  FetchStage1Request,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdatePlacementResponse,\r\n  UpdateSelectedPairsRequest,\r\n  UpdateSelectedPairsResponse,\r\n} from 'redux/models';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\n\r\nconst actionName = '[Stage1]';\r\n\r\nexport const Stage1Action = {\r\n  // Update Selected Pairs\r\n  updateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Update Selected Pairs Stage1'))<\r\n    UpdateSelectedPairsRequest,\r\n    UpdateSelectedPairsResponse,\r\n    Error\r\n  >(),\r\n\r\n  // watcher\r\n  stage1Watcher: createAsyncAction(...defaultAsyncParams(actionName, 'Stage1 Watcher'))<\r\n    WatchStage1Request,\r\n    WatchStage1Response,\r\n    Error\r\n  >(),\r\n  fetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\r\n    FetchStage1Request,\r\n    FetchStage1Response,\r\n    Error\r\n  >(),\r\n  updateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\r\n    UpdateCellRequest,\r\n    UpdateCellResponse,\r\n    Error\r\n  >(),\r\n  updatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\r\n    UpdatePlacementRequest,\r\n    UpdatePlacementResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport {\r\n  FetchStage2Response,\r\n  FetchStage2Request,\r\n  UpdateStage2CellResponse,\r\n  UpdateStage2CellRequest,\r\n  ICell,\r\n  DeleteStage2Request,\r\n  DeleteStage2Response,\r\n} from 'redux/models';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\n\r\nconst actionName = '[Stage2]';\r\n\r\nexport const Stage2Action = {\r\n  // get selected tournament\r\n  fetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\r\n    FetchStage2Request,\r\n    FetchStage2Response,\r\n    Error\r\n  >(),\r\n  updateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\r\n    UpdateStage2CellRequest,\r\n    UpdateStage2CellResponse,\r\n    Error\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\r\n    DeleteStage2Request,\r\n    DeleteStage2Response,\r\n    Error\r\n  >(),\r\n  setCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\r\n  setLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import * as H from 'history';\r\n\r\n// Requests\r\nexport interface FetchTournamentsRequest {\r\n  tId?: number;\r\n}\r\n\r\nexport interface PostTournamentRequest {\r\n  model: TournamentDTO;\r\n  history: H.History<unknown>;\r\n}\r\n\r\nexport interface UpdateTournamentRequest {\r\n  model: TournamentDTO;\r\n}\r\n\r\nexport interface IsValidTournamentRequest {\r\n  model: TournamentDTO;\r\n}\r\n\r\n// Responses\r\nexport interface FetchTournamentsResponse {\r\n  results: TournamentDTO[];\r\n}\r\nexport interface PostTournamentResponse {\r\n  result: TournamentDTO | null;\r\n}\r\nexport interface UpdateTournamentResponse {\r\n  result: TournamentDTO;\r\n}\r\nexport interface IsValidTournamentResponse {\r\n  isValid: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\n//\r\nexport interface TournamentState {\r\n  tournament: TournamentDTO | null;\r\n  tournamentsList: TournamentDTO[] | [];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface TournamentDTO {\r\n  id: number | null;\r\n  name: string;\r\n  date: Date;\r\n  progress: TournamentProgress;\r\n  public: boolean;\r\n  autoOrder: boolean;\r\n  label: string;\r\n  ownerId: number | null;\r\n}\r\n\r\nexport enum TournamentProgress {\r\n  New = 'New',\r\n  PairsSelection = 'PairsSelection',\r\n  Stage1 = 'Stage1',\r\n  Stage2 = 'Stage2',\r\n}\r\n","import { RootState } from 'redux/models/common.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\r\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\r\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\r\n};\r\n","// Requests\r\nexport interface FetchPlayersRequest {\r\n  tId?: number;\r\n  addEmpty?: boolean;\r\n}\r\nexport interface UpdatePlayerRequest {\r\n  player: PlayerDTO;\r\n}\r\nexport interface DeletePlayersRequest {\r\n  players: PlayerDTO[];\r\n}\r\n// Responses\r\nexport interface FetchPlayersResponse {\r\n  results: PlayerDTO[];\r\n}\r\nexport interface UpdatePlayerResponse {\r\n  player: PlayerDTO;\r\n}\r\nexport interface DeletePlayersResponse {\r\n  players: PlayerDTO[];\r\n}\r\n\r\n//\r\nexport interface PlayerState {\r\n  player?: PlayerDTO;\r\n  playersList: PlayerDTO[];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface PlayerDTO {\r\n  id: number | null;\r\n  name: string;\r\n  surname: string;\r\n  alias: string;\r\n  label: string;\r\n  role: PlayerRole;\r\n  email: string;\r\n  phone: string;\r\n  userId?: number;\r\n  match_played?: number;\r\n  match_won?: number;\r\n  total_score?: number;\r\n  editable: boolean;\r\n  rowNumber: number;\r\n}\r\n\r\nexport enum PlayerRole {\r\n  None = 'No',\r\n  NotAPlayer = 'Non sono un giocatore',\r\n  GoalKeeper = 'Portiere',\r\n  Master = 'Master',\r\n  Striker = 'Attaccante',\r\n}\r\n","import { PairDTO, Stage1Row } from 'redux/models';\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value: string | null) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (parseInt(value)) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n\r\n/**\r\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\r\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\r\n * Inoltre viene passata al BE per salvare i dati sul DB.\r\n *\r\n * @param pairsList PairDTO[] Lista di coppie\r\n *\r\n */\r\nexport const rowsGenerator = (pairsList: PairDTO[]): Stage1Row[] =>\r\n  pairsList.map((e, ii) => {\r\n    const row: Stage1Row = {\r\n      id: `row-${e.tId}-${ii}`,\r\n      rowNumber: ii + 1,\r\n      pair: e,\r\n      total: 0,\r\n      placement: e.placement || 0,\r\n    };\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      row[`col${jj}`] = null;\r\n    }\r\n    return row;\r\n  });\r\n","module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  CheckAuthenticationRequest,\r\n  WatchSessionRequest,\r\n  AuthenticationError,\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  RegistrationRequest,\r\n  LogoutRequest,\r\n  DeleteUserRequest,\r\n  UpdateUserRequest,\r\n} from 'redux/models/session.model';\r\n\r\nconst actionName = '[Session]';\r\n\r\nexport const SessionAction = {\r\n  // Register new user\r\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\r\n    RegistrationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Login\r\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\r\n    LoginRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\r\n    LogoutRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\r\n    DeleteUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\r\n    UpdateUserRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Check if user is already authenticate\r\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\r\n    CheckAuthenticationRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n  // Session watcher\r\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\r\n    WatchSessionRequest,\r\n    AuthenticationResponse,\r\n    AuthenticationError\r\n  >(),\r\n\r\n  // set selected tournament\r\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { TypeConstant } from 'typesafe-actions';\r\n\r\nexport const Request = 'Request';\r\nexport const Success = 'Success';\r\nexport const Failure = 'Failure';\r\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\r\n\r\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\r\n  `${actionName} ${name} ${Request}`,\r\n  `${actionName} ${name} ${Success}`,\r\n  `${actionName} ${name} ${Failure}`,\r\n];\r\n\r\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\r\n\r\nexport interface PurgeResponse {}\r\n","import { toast } from 'react-toastify';\r\nimport { GenericReponse, UserMessageType } from '../models/common.model';\r\nimport { HTTPStatusCode } from '../models/HttpStatusCode';\r\n\r\nexport const handleError = (error: any, message: string): void => {\r\n  console.error(`${message}`, error);\r\n  toast.error(message);\r\n  throw new Error(`Something went wrong : ${message}`);\r\n};\r\n\r\nexport const handleGenericError = <T extends GenericReponse>(error: any, result: T): void => {\r\n  console.group('An error occur : ');\r\n  console.error('Error', error);\r\n  console.error('Details : ', { ...result });\r\n  console.groupEnd();\r\n  toast.error('Whops...Something went wrong...');\r\n  throw new Error(`Something went wrong : ${error}`);\r\n};\r\n\r\nexport const UnexpectedServerError = {\r\n  code: HTTPStatusCode.InternalServerError,\r\n  message: 'Unexpected Server Error',\r\n  userMessage: {\r\n    type: UserMessageType.Danger,\r\n    // eslint-disable-next-line quotes\r\n    message: \"Errore server non previsto. E' stata avviata la procedura di autodistruzione.\",\r\n  },\r\n};\r\n","export * from './common.model';\r\nexport * from './pair.model';\r\nexport * from './player.model';\r\nexport * from './tournament.model';\r\nexport * from './session.model';\r\nexport * from './stage1.model';\r\nexport * from './stage2.model';\r\n","import { toast } from 'react-toastify';\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          toast.warn('This web app is being served cache-first by a service worker.');\r\n          // TODO: show this message to user\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = (_) => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = (_) => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              toast.warn('Content is cached for offline use.');\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      toast.warn('Error during service worker registration.');\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      toast.warn('No internet connection found. App is running in offline mode.');\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { PlayerDTO } from './player.model';\r\n\r\nexport interface UserState {}\r\n\r\nexport interface UserDTO {\r\n  id: number;\r\n  username: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  phone: string;\r\n  role: UserRole;\r\n  birthday: Date;\r\n  label: string;\r\n  player?: PlayerDTO;\r\n}\r\nexport enum UserRole {\r\n  Admin = 'Admin',\r\n  User = 'User',\r\n}\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { TournamentAction } from '../actions/tournament.action';\r\nimport { TournamentState } from 'redux/models/tournament.model';\r\n\r\nexport const initialTournamentState: TournamentState = {\r\n  tournament: null,\r\n  tournamentsList: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\r\n  // Request\r\n  .handleAction(\r\n    [\r\n      TournamentAction.fetchTournaments.request,\r\n      TournamentAction.saveTournament.request,\r\n      TournamentAction.updateTournament.request,\r\n    ],\r\n    (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n      errorMessage: undefined,\r\n    })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [\r\n      TournamentAction.fetchTournaments.failure,\r\n      TournamentAction.saveTournament.failure,\r\n      TournamentAction.updateTournament.failure,\r\n    ],\r\n    (state, { payload: { message } }) => ({\r\n      ...state,\r\n      errorMessage: message,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  // SUCCESS\r\n  // Fetch Tournament\r\n  .handleAction(TournamentAction.fetchTournaments.success, (state, { payload: { results } }) => ({\r\n    tournament: results && results.length > 0 ? results[0] : null,\r\n    tournamentsList: results,\r\n    isLoading: false,\r\n  }))\r\n  // Set selected tournament\r\n  .handleAction(TournamentAction.setTournament, (state, { payload }) => ({\r\n    ...state,\r\n    tournament: payload,\r\n    isLoading: false,\r\n  }))\r\n  // Create/Update a new tournament\r\n  .handleAction(\r\n    [TournamentAction.saveTournament.success, TournamentAction.updateTournament.success],\r\n    (state, { payload: { result } }) => ({\r\n      ...state,\r\n      tournament: result,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(TournamentAction.purge, () => initialTournamentState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PlayerState } from 'redux/models/player.model';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\n\r\nexport const initialPlayerState: PlayerState = {\r\n  isLoading: false,\r\n  playersList: [],\r\n};\r\n\r\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\r\n  // Request\r\n  .handleAction([PlayerAction.fetchPlayers.request, PlayerAction.savePlayer.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction(\r\n    [PlayerAction.fetchPlayers.failure, PlayerAction.savePlayer.failure],\r\n    (state, { payload: { message } }) => ({\r\n      ...state,\r\n      errorMessage: message,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\r\n    playersList: [player, ...state.playersList],\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { players } }) => ({\r\n    playersList: state.playersList.filter((row) => !players.find((selectedRow) => selectedRow.id === row.id)),\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { results } }) => ({\r\n    playersList: results.map((e, i) => ({ ...e, rowNumber: i + 1 })),\r\n    isLoading: false,\r\n  }))\r\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { PairState } from 'redux/models';\r\nimport { PairAction } from 'redux/actions';\r\n\r\nexport const initialPairState: PairState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\r\n  // Request\r\n  .handleAction([PairAction.fetch.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    errorMessage: undefined,\r\n  }))\r\n  // Failure\r\n  .handleAction([PairAction.fetch.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Fetch Tournament\r\n  .handleAction(PairAction.fetch.success, (state, { payload: { results } }) => ({\r\n    ...state,\r\n    pairList: results,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction(PairAction.purge, () => initialPairState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { SessionState } from 'redux/models/session.model';\r\nimport { SessionAction } from 'redux/actions/session.action';\r\nimport { UserRole } from 'redux/models/user.model';\r\n\r\nexport const initialSessionState: SessionState = {\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  isLoading: true,\r\n};\r\n\r\nexport const SessionReducer = createReducer<SessionState, Action>(initialSessionState)\r\n  // Request\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.request,\r\n      SessionAction.login.request,\r\n      SessionAction.logout.request,\r\n      SessionAction.update.request,\r\n      SessionAction.delete.request,\r\n    ],\r\n    (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    })\r\n  )\r\n  // Failure\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.failure,\r\n      SessionAction.login.failure,\r\n      SessionAction.logout.failure,\r\n      SessionAction.update.failure,\r\n      SessionAction.delete.failure,\r\n    ],\r\n    (state, { payload: { userMessage } }) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      message: userMessage,\r\n    })\r\n  )\r\n  .handleAction(\r\n    [\r\n      SessionAction.checkAuthentication.success,\r\n      SessionAction.registration.success,\r\n      SessionAction.login.success,\r\n      SessionAction.logout.success,\r\n      SessionAction.update.success,\r\n      SessionAction.delete.success,\r\n      SessionAction.updateSession,\r\n    ],\r\n    (state, { payload: { user } }) => ({\r\n      user,\r\n      isAuthenticated: !!user,\r\n      isAdmin: user ? user.role === UserRole.Admin : false,\r\n      isLoading: false,\r\n    })\r\n  )\r\n  .handleAction(SessionAction.purge, () => initialSessionState);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage1State, Stage1Row } from 'redux/models';\r\nimport { Stage1Action } from 'redux/actions';\r\nimport { getEmptyRowModel } from 'components/Pair/helper';\r\n\r\nexport const initialStage1State: Stage1State = {\r\n  needRefresh: false,\r\n  selectedPairs: [getEmptyRowModel('-')],\r\n  isLoading: false,\r\n  stages: [],\r\n};\r\n\r\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\r\n  // Gestione Watcher\r\n  // All'avvio del watcher reimposto needRefresh\r\n  .handleAction([Stage1Action.stage1Watcher.request], (state) => ({ ...state, needRefresh: false }))\r\n  .handleAction([Stage1Action.stage1Watcher.failure], (state) => ({ ...state }))\r\n  .handleAction([Stage1Action.stage1Watcher.success], (state) => ({ ...state, needRefresh: true }))\r\n  //\r\n  .handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  .handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Aggiornamento valore cella/posizionamento\r\n  .handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }))\r\n  // Reperimento dati\r\n  .handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\r\n    const currentStage = state.stages.filter((s) => s.stageName === stageName);\r\n    const newStage =\r\n      currentStage && currentStage.length > 0\r\n        ? { ...currentStage[0], rows }\r\n        : { pairsList, stageName, rows, autoOrder: false, isLoading: false };\r\n    return {\r\n      ...state,\r\n      stages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\r\n      isLoading: false,\r\n    };\r\n  })\r\n  // Aggiornamento coppie selezionate dati vari gironi\r\n  .handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stageName, rows } }) => {\r\n    const selected = state.selectedRows ? state.selectedRows : new Map<string, Stage1Row[]>();\r\n    selected.set(stageName, rows);\r\n\r\n    const selectedPairs = state.selectedPairs\r\n      ? [\r\n          // Filtro selectedPairs\r\n          //  e.id === null : mantengo il placeholder\r\n          //  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\r\n          ...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stageName),\r\n          ...rows.map((e) => e.pair),\r\n        ]\r\n      : [...rows.map((e) => e.pair)];\r\n\r\n    return {\r\n      ...state,\r\n      selectedRows: selected,\r\n      selectedPairs,\r\n      isLoading: false,\r\n    };\r\n  })\r\n  .handleAction(Stage1Action.purge, () => initialStage1State);\r\n","import { createReducer, Action } from 'typesafe-actions';\r\nimport { Stage2State } from 'redux/models';\r\nimport { Stage2Action } from 'redux/actions';\r\n\r\nexport const initialStage2State: Stage2State = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\r\n  // Request\r\n  .handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }))\r\n  // Failure\r\n  .handleAction([Stage2Action.fetchStage2.failure], (state, { payload: { message } }) => ({\r\n    ...state,\r\n    errorMessage: message,\r\n    isLoading: false,\r\n  }))\r\n  // Success\r\n  .handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, rowsNumber } }) => ({\r\n    cells,\r\n    rowsNumber,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.delete.success], () => ({\r\n    cells: undefined,\r\n    rowsNumber: 0,\r\n    isLoading: false,\r\n  }))\r\n  .handleAction([Stage2Action.setCells], (state, { payload }) => ({\r\n    ...state,\r\n    cells: payload,\r\n  }))\r\n  .handleAction([Stage2Action.setLoading], (state, { payload }) => ({\r\n    ...state,\r\n    isLoading: payload,\r\n  }))\r\n  .handleAction(Stage2Action.purge, () => initialStage2State);\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { fetchTournaments, postTournament, updateTournament } from 'redux/services/tournament.service';\r\nimport { PostTournamentResponse, FetchTournamentsResponse } from 'redux/models/tournament.model';\r\nimport { TournamentAction } from 'redux/actions/tournament.action';\r\n\r\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\r\nfunction* getTournamentsSaga(\r\n  action: ReturnType<typeof TournamentAction.fetchTournaments.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchTournamentsResponse = yield call(fetchTournaments, action.payload);\r\n    yield put(TournamentAction.fetchTournaments.success(response));\r\n  } catch (err) {\r\n    yield put(TournamentAction.fetchTournaments.failure(err));\r\n  }\r\n}\r\n\r\nfunction* saveTournamentSaga(\r\n  action: ReturnType<typeof TournamentAction.saveTournament.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: PostTournamentResponse = yield call(postTournament, action.payload);\r\n    yield put(TournamentAction.saveTournament.success(response));\r\n    action.payload.history.push('/tournament');\r\n  } catch (err) {\r\n    yield put(TournamentAction.saveTournament.failure(err));\r\n  }\r\n}\r\n\r\nfunction* updateTournamentSaga(\r\n  action: ReturnType<typeof TournamentAction.saveTournament.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: PostTournamentResponse = yield call(updateTournament, action.payload);\r\n    yield put(TournamentAction.saveTournament.success(response));\r\n  } catch (err) {\r\n    yield put(TournamentAction.saveTournament.failure(err));\r\n  }\r\n}\r\n\r\nexport const TournamentsSagas = [\r\n  takeEvery(TournamentAction.fetchTournaments.request, getTournamentsSaga),\r\n  takeEvery(TournamentAction.saveTournament.request, saveTournamentSaga),\r\n  takeEvery(TournamentAction.updateTournament.request, updateTournamentSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PlayerAction } from 'redux/actions/player.action';\r\nimport { FetchPlayersResponse, DeletePlayersResponse, UpdatePlayerResponse } from 'redux/models/player.model';\r\nimport { fetchPlayers, deletePlayers, savePlayer } from 'redux/services/player.service';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction* getPlayersSaga(\r\n  action: ReturnType<typeof PlayerAction.fetchPlayers.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('getPlayersSaga');\r\n\r\n    const { results }: FetchPlayersResponse = yield call(fetchPlayers, action.payload);\r\n    console.log('getPlayersSaga: ', results);\r\n    yield put(PlayerAction.fetchPlayers.success({ results }));\r\n  } catch (err) {\r\n    yield put(PlayerAction.fetchPlayers.failure(err));\r\n  }\r\n}\r\n\r\nfunction* deletePlayersSaga(\r\n  action: ReturnType<typeof PlayerAction.deletePlayers.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: DeletePlayersResponse = yield call(deletePlayers, action.payload);\r\n    yield put(PlayerAction.deletePlayers.success(response));\r\n    toast.success('Giocatore eliminato...');\r\n  } catch (err) {\r\n    yield put(PlayerAction.deletePlayers.failure(err));\r\n    toast.error('Errore...');\r\n  }\r\n}\r\n\r\nfunction* savePlayerSaga(\r\n  action: ReturnType<typeof PlayerAction.savePlayer.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: UpdatePlayerResponse = yield call(savePlayer, action.payload);\r\n    yield put(PlayerAction.savePlayer.success(response));\r\n    toast.success(action.payload.player.id === null ? 'Giocatore creato...' : 'Giocatore aggiornato...');\r\n  } catch (err) {\r\n    yield put(PlayerAction.savePlayer.failure(err));\r\n  }\r\n}\r\n\r\nexport const PlayersSagas = [\r\n  takeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\r\n  takeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\r\n  takeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\r\n];\r\n","import { FetchPairsRequest, FetchPairsResponse, PostPairsResponse, PostPairsRequest } from 'redux/models';\r\nimport { handleError } from './common';\r\n\r\nexport const fetchPairs = async ({ tId }: FetchPairsRequest): Promise<FetchPairsResponse> => {\r\n  try {\r\n    console.log('fetchPairs : ', tId);\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const results = await response.json();\r\n    console.log('fetchPairs : ', tId, results);\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e, 'Error pairs fetch');\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nexport const postPair = async ({ models }: PostPairsRequest): Promise<PostPairsResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/pair', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(models),\r\n    });\r\n    const results = await response.json();\r\n    return { results };\r\n  } catch (e) {\r\n    handleError(e, 'Error pairs update');\r\n    return { results: [] };\r\n  }\r\n};\r\n","import { put, call, StrictEffect, takeEvery } from 'redux-saga/effects';\r\nimport { PairAction } from 'redux/actions';\r\nimport { fetchPairs } from 'redux/services/pair.service';\r\nimport { FetchPairsResponse } from 'redux/models';\r\n\r\nfunction* getPairsSaga(action: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchPairsResponse = yield call(fetchPairs, action.payload);\r\n    yield put(PairAction.fetch.success(response));\r\n  } catch (err) {\r\n    yield put(PairAction.fetch.failure(err));\r\n  }\r\n}\r\n\r\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\r\n","import {\r\n  CheckAuthenticationRequest,\r\n  AuthenticationResponse,\r\n  LoginRequest,\r\n  UserMessageType,\r\n  RegistrationRequest,\r\n  RegistrationResponse,\r\n  UpdateUserRequest,\r\n  DeleteUserRequest,\r\n} from 'redux/models';\r\nimport { eventChannel, buffers, END } from 'redux-saga';\r\nimport { HTTPStatusCode } from 'redux/models/HttpStatusCode';\r\nimport { handleGenericError, UnexpectedServerError } from './common';\r\n\r\nexport enum SessionStatus {\r\n  // Sessione scaduta, reindirizza l'utente alla login\r\n  SESSION_EXPIRED = 'session_expired',\r\n  // Necessario aggiornamento dati su Stage1\r\n  NEED_REFRESH = 'need_refresh',\r\n}\r\n\r\nexport interface Message {\r\n  status: SessionStatus;\r\n  message?: string;\r\n}\r\n\r\n// Update\r\nexport const updateUser = async (params: UpdateUserRequest): Promise<AuthenticationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/update', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(params.user),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result: AuthenticationResponse = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Delete\r\nexport const deleteUser = async (params: DeleteUserRequest): Promise<AuthenticationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/', {\r\n      method: 'DELETE',\r\n      body: JSON.stringify(params),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result: AuthenticationResponse = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Login\r\nexport const login = async ({ username, password }: LoginRequest): Promise<AuthenticationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/authenticate', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result: AuthenticationResponse = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Login\r\nexport const logout = async (): Promise<AuthenticationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/logout');\r\n    const result: AuthenticationResponse = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// Registration\r\nexport const registration = async ({\r\n  history,\r\n  ...registrationInfo\r\n}: RegistrationRequest): Promise<RegistrationResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(registrationInfo),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result: RegistrationResponse = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line no-empty-pattern\r\nexport const CheckAuthentication = async ({}: CheckAuthenticationRequest): Promise<AuthenticationResponse> => {\r\n  let response;\r\n  try {\r\n    response = await fetch('/api/v1/auth/');\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    if (response?.status === HTTPStatusCode.Unauthorized) {\r\n      return {\r\n        user: undefined,\r\n        code: HTTPStatusCode.Accepted,\r\n        message: '',\r\n        userMessage: { type: UserMessageType.Success, message: '' },\r\n      };\r\n    }\r\n    const result = {\r\n      user: undefined,\r\n      ...UnexpectedServerError,\r\n    };\r\n    handleGenericError<AuthenticationResponse>(error, result);\r\n    return result;\r\n  }\r\n};\r\n\r\n// Session Control\r\nexport const createSessionChannel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Connected...');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.SESSION_EXPIRED) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { eventChannel, END, buffers } from 'redux-saga';\r\nimport { SessionStatus, Message } from './session.service';\r\nimport {\r\n  FetchStage1Request,\r\n  FetchStage1Response,\r\n  UpdateCellRequest,\r\n  UpdateCellResponse,\r\n  UpdatePlacementRequest,\r\n  UpdateSelectedPairsRequest,\r\n} from 'redux/models';\r\nimport { handleError } from './common';\r\nimport { rowsGenerator } from 'components/Stage1/helper';\r\n\r\nexport const fetchStage1 = async ({ pairsList, stageName }: FetchStage1Request): Promise<FetchStage1Response> => {\r\n  try {\r\n    const template = rowsGenerator(pairsList);\r\n    const response = await fetch('/api/v1/stage1', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ rows: template, stageName }),\r\n    });\r\n    const rows = await response.json();\r\n    return { pairsList, stageName, rows };\r\n  } catch (e) {\r\n    handleError(e, 'Error stage1 fetch');\r\n    return { pairsList, stageName, rows: [] };\r\n  }\r\n};\r\n\r\nexport const updatePlacement = async ({ rows }: UpdatePlacementRequest): Promise<void> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage1/placement', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ rows }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    handleError(e, 'Error stage1 fetch');\r\n  }\r\n};\r\n\r\nexport const updateSelectedPairs = async ({ rows, stageName }: UpdateSelectedPairsRequest): Promise<void> => {\r\n  try {\r\n    const response = await fetch('/api/v1/pair/selected', {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ pairs: rows.map((e) => e.pair), stage1Name: stageName }),\r\n    });\r\n    await response.json();\r\n  } catch (e) {\r\n    handleError(e, 'Error stage1 fetch');\r\n  }\r\n};\r\n\r\nexport const updateCellStage1 = async (model: UpdateCellRequest): Promise<UpdateCellResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model),\r\n    });\r\n    await response.json();\r\n    return {};\r\n  } catch (e) {\r\n    handleError(e, 'Error stage1 fetch');\r\n    return {};\r\n  }\r\n};\r\nexport const createStage1Channel = (channel: EventSource) =>\r\n  eventChannel<Message>((emitter) => {\r\n    // Listen for open channel\r\n    const openListener = (event: Event) => console.log('Stage1 Channel is now open.');\r\n\r\n    // Listen for new message\r\n    const messageListener = (messageEvent: MessageEvent) => {\r\n      if (messageEvent) {\r\n        const message = JSON.parse(messageEvent.data) as Message;\r\n        if (message.status === SessionStatus.NEED_REFRESH) {\r\n          emitter(message);\r\n          closeConnection();\r\n        }\r\n      }\r\n    };\r\n    // Listen for error\r\n    const errorListener = (event: Event) => {\r\n      console.error('An Error Occur: ', event);\r\n      emitter(END);\r\n      closeConnection();\r\n    };\r\n    channel.addEventListener('open', openListener);\r\n    channel.addEventListener('message', messageListener);\r\n    channel.addEventListener('error', errorListener);\r\n    // Cleanup function\r\n    const closeConnection = () => {\r\n      channel.removeEventListener('open', openListener);\r\n      channel.removeEventListener('message', messageListener);\r\n      channel.removeEventListener('error', errorListener);\r\n      channel.close();\r\n    };\r\n    return closeConnection;\r\n  }, buffers.expanding());\r\n","import { Stage1Action } from 'redux/actions';\r\nimport { takeLatest, StrictEffect, call, take, put, takeEvery, fork } from 'redux-saga/effects';\r\nimport {\r\n  createStage1Channel,\r\n  fetchStage1,\r\n  updateCellStage1,\r\n  updatePlacement,\r\n  updateSelectedPairs,\r\n} from 'redux/services/stage1.service';\r\nimport { FetchStage1Response } from 'redux/models';\r\nimport { toast } from 'react-toastify';\r\n\r\n// TODO:\r\nfunction* watchStage1Saga(\r\n  action: ReturnType<typeof Stage1Action.stage1Watcher.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    console.log('watchStage1Saga : start');\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createStage1Channel, eventChannel);\r\n    while (true) {\r\n      const message = yield take(channel);\r\n      console.log('watchStage1Saga.message : ', message);\r\n    }\r\n  } catch (err) {\r\n    console.log('watchStage1Saga.err : ', err);\r\n  }\r\n}\r\n\r\nfunction* fetchSaga(action: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchStage1Response = yield call(fetchStage1, action.payload);\r\n    yield put(Stage1Action.fetchStage1.success(response));\r\n  } catch (err) {\r\n    yield put(Stage1Action.fetchStage1.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateCellSaga(\r\n  action: ReturnType<typeof Stage1Action.updateCellStage1.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateCellStage1, action.payload);\r\n    yield put(Stage1Action.updateCellStage1.success({}));\r\n  } catch (err) {\r\n    yield put(Stage1Action.updateCellStage1.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updatePlacementSaga(\r\n  action: ReturnType<typeof Stage1Action.updatePlacement.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updatePlacement, action.payload);\r\n    yield put(Stage1Action.updatePlacement.success({}));\r\n  } catch (err) {\r\n    yield put(Stage1Action.updatePlacement.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateSelectedPairsSaga(\r\n  action: ReturnType<typeof Stage1Action.updateSelectedPairs.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateSelectedPairs, action.payload);\r\n    yield put(Stage1Action.updateSelectedPairs.success(action.payload));\r\n  } catch (err) {\r\n    console.error('Error updating selected pairs : ', err);\r\n    yield put(Stage1Action.updateSelectedPairs.success(action.payload));\r\n    toast.error('Error updating selected pairs');\r\n  }\r\n}\r\n\r\nexport const Stage1Sagas = [\r\n  takeLatest(Stage1Action.stage1Watcher.request, watchStage1Saga),\r\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\r\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\r\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\r\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, select, fork } from 'redux-saga/effects';\r\nimport { Stage2Action, TournamentAction } from 'redux/actions';\r\nimport { fetchStage2, updateCells, deleteStage2 } from 'redux/services/stage2.service';\r\nimport { FetchStage2Response, TournamentProgress, DeleteStage2Response } from 'redux/models';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction* deleteStage2Saga(action: ReturnType<typeof Stage2Action.delete.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: DeleteStage2Response = yield call(deleteStage2, action.payload.tId);\r\n    yield put(Stage2Action.delete.success(response));\r\n    const tournament = yield select(TournamentSelector.getTournament);\r\n    tournament!.progress = TournamentProgress.Stage1;\r\n    toast.success('Fase 2 eiminata...');\r\n    yield put(TournamentAction.updateTournament.request({ model: tournament }));\r\n  } catch (err) {\r\n    yield put(Stage2Action.delete.failure(err));\r\n    toast.error('Error while deleting Stage2');\r\n  }\r\n}\r\n\r\nfunction* fetchStage2Saga(\r\n  action: ReturnType<typeof Stage2Action.fetchStage2.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: FetchStage2Response = yield call(fetchStage2, action.payload);\r\n    yield put(Stage2Action.fetchStage2.success(response));\r\n  } catch (err) {\r\n    yield put(Stage2Action.fetchStage2.failure(err));\r\n    toast.error('Error while fetching Stage2');\r\n  }\r\n}\r\n\r\nfunction* updateCellsSaga({\r\n  payload: { cell1, cell2 },\r\n}: ReturnType<typeof Stage2Action.updateCell.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    yield fork(updateCells, cell1, cell2);\r\n    yield put(Stage2Action.updateCell.success({}));\r\n  } catch (err) {\r\n    yield put(Stage2Action.updateCell.failure(err));\r\n    toast.error('Error while updating Stage2');\r\n  }\r\n}\r\n\r\nexport const Stage2Sagas = [\r\n  takeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\r\n  takeEvery(Stage2Action.updateCell.request, updateCellsSaga),\r\n  takeEvery(Stage2Action.delete.request, deleteStage2Saga),\r\n];\r\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, fork } from 'redux-saga/effects';\r\nimport { SessionAction } from 'redux/actions/session.action';\r\nimport { AuthenticationResponse, UserMessageType, RegistrationResponse } from 'redux/models';\r\nimport {\r\n  CheckAuthentication,\r\n  createSessionChannel,\r\n  Message,\r\n  login,\r\n  registration,\r\n  updateUser,\r\n  deleteUser,\r\n  logout,\r\n} from 'redux/services/session.service';\r\nimport { toast } from 'react-toastify';\r\nimport { Action } from 'typesafe-actions';\r\nimport { persistor } from 'redux/store';\r\nimport { HTTPStatusCode } from 'redux/models/HttpStatusCode';\r\nimport { TournamentAction } from 'redux/actions';\r\n\r\nfunction* checkAuthenticationSaga({\r\n  payload,\r\n}: ReturnType<typeof SessionAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const response: AuthenticationResponse = yield call(CheckAuthentication, payload);\r\n    yield put(SessionAction.checkAuthentication.success(response));\r\n    yield fork(SessionAction.sessionControl.request, { history: payload.history });\r\n  } catch (err) {\r\n    yield put(SessionAction.checkAuthentication.failure(err));\r\n  }\r\n}\r\n\r\n/*\r\nFIXME:\r\nhttps://github.com/redux-saga/redux-saga/issues/868\r\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\r\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\r\n*/\r\n\r\nfunction* watchSessionSaga(\r\n  action: ReturnType<typeof SessionAction.sessionControl.request>\r\n): Generator<StrictEffect, void, any> {\r\n  try {\r\n    const eventChannel = new EventSource('/sse/v1/session');\r\n    const channel = yield call(createSessionChannel, eventChannel);\r\n    while (true) {\r\n      const message: Message = yield take(channel);\r\n      if (message) {\r\n        console.log('Message from queue : ', message);\r\n        toast.error('La tua sessione è scaduta');\r\n        // FIXME:\r\n        yield put(\r\n          SessionAction.logout.success({\r\n            user: undefined,\r\n            code: HTTPStatusCode.Unauthorized,\r\n            message: 'Unauthorized!',\r\n            userMessage: { message: 'Sessione scaduta', type: UserMessageType.Danger },\r\n          })\r\n        );\r\n        action.payload.history.push('/login');\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log('watchSessionSaga.err : ', err);\r\n  }\r\n}\r\n\r\n// Logout\r\nfunction* logoutSaga(action: ReturnType<typeof SessionAction.logout.request>): Generator<StrictEffect, void, any> {\r\n  const logoutReponse: AuthenticationResponse = yield call(logout);\r\n  if (logoutReponse.code === HTTPStatusCode.Accepted) {\r\n    yield put(SessionAction.logout.success(logoutReponse));\r\n    action.payload.history.push('/');\r\n    toast.success(logoutReponse.userMessage.message);\r\n  } else {\r\n    toast.error(logoutReponse.userMessage.message);\r\n    yield put(SessionAction.logout.failure(logoutReponse));\r\n  }\r\n  persistor.purge();\r\n  yield put(\r\n    SessionAction.logout.success({\r\n      code: HTTPStatusCode.Accepted,\r\n      message: 'Logout complete',\r\n      userMessage: {\r\n        type: UserMessageType.Success,\r\n        message: 'Logout ',\r\n      },\r\n    })\r\n  );\r\n}\r\n\r\n// Login\r\nfunction* loginSaga(action: ReturnType<typeof SessionAction.login.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const loginReponse: AuthenticationResponse = yield call(login, action.payload);\r\n  if (loginReponse.code === HTTPStatusCode.Accepted) {\r\n    yield put(SessionAction.login.success(loginReponse));\r\n    yield fork(TournamentAction.fetchTournaments.request, {});\r\n    action.payload.history.push('/');\r\n    toast.success(loginReponse.userMessage.message);\r\n  } else {\r\n    toast.error(loginReponse.userMessage.message);\r\n    yield put(SessionAction.login.failure(loginReponse));\r\n  }\r\n}\r\n\r\n// Registration\r\nfunction* regitrationSaga(\r\n  action: ReturnType<typeof SessionAction.registration.request>\r\n): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const registrationReponse: RegistrationResponse = yield call(registration, action.payload);\r\n  console.log('regitrationSaga : ', registrationReponse);\r\n  if (registrationReponse.code === HTTPStatusCode.Accepted) {\r\n    yield put(SessionAction.registration.success(registrationReponse));\r\n    yield fork(TournamentAction.fetchTournaments.request, {});\r\n    action.payload.history.push('/');\r\n    toast.success(registrationReponse.userMessage.message);\r\n  } else {\r\n    if (registrationReponse.errors) {\r\n      registrationReponse.errors.forEach((e) => toast.error(e));\r\n    }\r\n    yield put(SessionAction.registration.failure(registrationReponse));\r\n  }\r\n}\r\n\r\n// Update user\r\nfunction* updateUserSaga(action: ReturnType<typeof SessionAction.update.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const updateReponse: AuthenticationResponse = yield call(updateUser, action.payload);\r\n  console.log('updateReponse : ', updateReponse);\r\n  if (updateReponse.code === HTTPStatusCode.Accepted) {\r\n    yield put(SessionAction.update.success(updateReponse));\r\n    action.payload.history.push('/');\r\n    toast.success(updateReponse.userMessage.message);\r\n  } else {\r\n    toast.error(updateReponse.userMessage.message);\r\n    yield put(SessionAction.update.failure(updateReponse));\r\n  }\r\n}\r\n\r\n// Delete user\r\nfunction* deleteUserSaga(action: ReturnType<typeof SessionAction.delete.request>): Generator<StrictEffect, void, any> {\r\n  // Validate Login\r\n  const deleteReponse: AuthenticationResponse = yield call(deleteUser, action.payload);\r\n  if (deleteReponse.code === HTTPStatusCode.Accepted) {\r\n    yield put(SessionAction.delete.success(deleteReponse));\r\n    yield put(SessionAction.logout.request({ history: action.payload.history }));\r\n    toast.success(deleteReponse.userMessage.message);\r\n  } else {\r\n    toast.error(deleteReponse.userMessage.message);\r\n    yield put(SessionAction.delete.failure(deleteReponse));\r\n  }\r\n}\r\n\r\n/*\r\nfunction* logger(action: Action<any>) {\r\n  const state = yield select();\r\n  console.log('action', action);\r\n  console.log('state after', state);\r\n}\r\n*/\r\n\r\nfunction logger(action: Action<any>) {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('Action : ', action);\r\n  }\r\n}\r\n\r\nexport const SessionSagas = [\r\n  takeEvery(SessionAction.logout.request, logoutSaga),\r\n  takeEvery(SessionAction.login.request, loginSaga),\r\n  takeEvery(SessionAction.update.request, updateUserSaga),\r\n  takeEvery(SessionAction.delete.request, deleteUserSaga),\r\n  takeEvery(SessionAction.registration.request, regitrationSaga),\r\n  takeEvery(SessionAction.checkAuthentication.request, checkAuthenticationSaga),\r\n  takeLatest(SessionAction.sessionControl.request, watchSessionSaga),\r\n  takeEvery('*', logger),\r\n];\r\n","import { RootState, TournamentProgress, PlayerRole } from 'redux/models';\r\nimport { UserRole } from 'redux/models/user.model';\r\n\r\nexport const initialState: RootState = {\r\n  tournamentState: {\r\n    tournament: null,\r\n    tournamentsList: [],\r\n    isLoading: false,\r\n  },\r\n  playerState: {\r\n    isLoading: false,\r\n    playersList: [],\r\n  },\r\n  pairState: {\r\n    isLoading: false,\r\n  },\r\n  sessionState: {\r\n    isAuthenticated: false,\r\n    isAdmin: false,\r\n    isLoading: false,\r\n  },\r\n  stage1State: {\r\n    needRefresh: false,\r\n    selectedPairs: [\r\n      {\r\n        id: null,\r\n        tId: 0,\r\n        rowNumber: 0,\r\n        player1: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        player2: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        alias: '-',\r\n        stage1Name: '',\r\n        placement: 0,\r\n        paid1: false,\r\n        paid2: false,\r\n      },\r\n    ],\r\n    isLoading: false,\r\n    stages: [],\r\n  },\r\n  stage2State: {\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nexport const afterLoginStata: RootState = {\r\n  tournamentState: {\r\n    tournament: {\r\n      id: 12,\r\n      name: 'hFarm2',\r\n      date: new Date('2020-09-05T08:53:36.000Z'),\r\n      progress: TournamentProgress.New,\r\n      public: true,\r\n      autoOrder: true,\r\n      label: 'hFarm2 @ New',\r\n      ownerId: 1,\r\n    },\r\n    tournamentsList: [\r\n      {\r\n        id: 12,\r\n        name: 'hFarm2',\r\n        date: new Date('2020-09-05T08:53:36.000Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: true,\r\n        label: 'hFarm2 @ New',\r\n        ownerId: 1,\r\n      },\r\n      {\r\n        id: 10,\r\n        name: '10',\r\n        date: new Date('2020-08-26T13:43:08.795Z'),\r\n        progress: TournamentProgress.Stage2,\r\n        public: true,\r\n        autoOrder: true,\r\n        label: '10 @ Stage2',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 9,\r\n        name: '9',\r\n        date: new Date('2020-08-26T13:43:08.789Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '9 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 8,\r\n        name: '8',\r\n        date: new Date('2020-08-26T13:43:08.785Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '8 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 7,\r\n        name: '7',\r\n        date: new Date('2020-08-26T13:43:08.780Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '7 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 6,\r\n        name: '6',\r\n        date: new Date('2020-08-26T13:43:08.776Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '6 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 5,\r\n        name: '5',\r\n        date: new Date('2020-08-26T13:43:08.770Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '5 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 4,\r\n        name: '4',\r\n        date: new Date('2020-08-26T13:43:08.766Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '4 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 3,\r\n        name: '3',\r\n        date: new Date('2020-08-26T13:43:08.759Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '3 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '2',\r\n        date: new Date('2020-08-26T13:43:08.750Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '2 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '1',\r\n        date: new Date('2020-08-26T13:43:08.703Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: false,\r\n        label: '1 @ New',\r\n        ownerId: null,\r\n      },\r\n      {\r\n        id: 11,\r\n        name: 'hFarm',\r\n        date: new Date('2020-08-20T08:49:50.000Z'),\r\n        progress: TournamentProgress.New,\r\n        public: true,\r\n        autoOrder: true,\r\n        label: 'hFarm @ New',\r\n        ownerId: 1,\r\n      },\r\n    ],\r\n    isLoading: false,\r\n  },\r\n  playerState: {\r\n    isLoading: false,\r\n    playersList: [],\r\n  },\r\n  pairState: {\r\n    isLoading: false,\r\n  },\r\n  sessionState: {\r\n    user: {\r\n      id: 1,\r\n      username: 'Admin',\r\n      name: 'Admin',\r\n      surname: 'Admin',\r\n      email: 'admin@admin.it',\r\n      phone: '3472545771',\r\n      birthday: new Date('2020-08-26T14:00:27.743Z'),\r\n      label: 'Admin Admin',\r\n      role: UserRole.Admin,\r\n    },\r\n    isAuthenticated: true,\r\n    isAdmin: true,\r\n    isLoading: false,\r\n  },\r\n  stage1State: {\r\n    needRefresh: false,\r\n    selectedPairs: [\r\n      {\r\n        id: null,\r\n        tId: 0,\r\n        rowNumber: 0,\r\n        player1: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        player2: {\r\n          id: null,\r\n          name: '',\r\n          surname: '',\r\n          alias: '',\r\n          label: '',\r\n          role: PlayerRole.GoalKeeper,\r\n          email: '',\r\n          phone: '',\r\n          match_played: 0,\r\n          match_won: 0,\r\n          total_score: 0,\r\n          editable: false,\r\n          rowNumber: 0,\r\n        },\r\n        alias: '-',\r\n        stage1Name: '',\r\n        placement: 0,\r\n        paid1: false,\r\n        paid2: false,\r\n      },\r\n    ],\r\n    isLoading: false,\r\n    stages: [],\r\n  },\r\n  stage2State: {\r\n    isLoading: false,\r\n  },\r\n};\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport localForage from 'localforage';\r\nimport { RootState } from 'redux/models';\r\nimport {\r\n  TournamentReducer,\r\n  PlayerReducer,\r\n  PairReducer,\r\n  SessionReducer,\r\n  Stage1Reducer,\r\n  Stage2Reducer,\r\n  initialTournamentState,\r\n  initialPairState,\r\n  initialPlayerState,\r\n  initialStage1State,\r\n  initialStage2State,\r\n  initialSessionState,\r\n} from 'redux/reducers';\r\nimport { TournamentsSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas } from 'redux/sagas';\r\nimport { initialState } from 'test/commons';\r\n\r\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\r\n\r\n// https://github.com/rt2zz/redux-persist\r\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\r\n// custom compose for the redux devtool extension\r\nconst composeEnhancers =\r\n  (process.env.NODE_ENV !== 'production' &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25,\r\n    })) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const rootReducers: ReducersMapObject<RootState> = {\r\n  tournamentState: TournamentReducer,\r\n  playerState: PlayerReducer,\r\n  pairState: PairReducer,\r\n  sessionState: SessionReducer,\r\n  stage1State: Stage1Reducer,\r\n  stage2State: Stage2Reducer,\r\n};\r\n\r\nexport const initialStoreState: RootState = {\r\n  tournamentState: initialTournamentState,\r\n  pairState: initialPairState,\r\n  playerState: initialPlayerState,\r\n  stage1State: initialStage1State,\r\n  stage2State: initialStage2State,\r\n  sessionState: initialSessionState,\r\n};\r\n\r\n// Meet the Store\r\nexport const store = createStore(\r\n  persistReducer(\r\n    {\r\n      key: 'app',\r\n      storage: localForage,\r\n    },\r\n    combineReducers(rootReducers)\r\n  ),\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nexport const storeWithState = (preloaded: RootState = initialState) =>\r\n  createStore(\r\n    persistReducer(\r\n      {\r\n        key: 'app',\r\n        storage: localForage,\r\n      },\r\n\r\n      combineReducers(rootReducers)\r\n    ),\r\n    preloaded,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Exec all sagas\r\nfunction* rootSagas() {\r\n  yield all([...TournamentsSagas, ...PlayersSagas, ...PairsSagas, ...SessionSagas, ...Stage2Sagas, ...Stage1Sagas]);\r\n}\r\n\r\nsagaMiddleware.run(rootSagas);\r\n","import React, { lazy } from 'react';\r\nimport { MaleIcon } from '../icons';\r\n\r\nconst lazyPlayer = lazy(() => import('../../Player/table'));\r\nconst lazyTournament = lazy(() => import('../../Tournament/select'));\r\nconst lazyPairs = lazy(() => import('../../Pair/table'));\r\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper'));\r\nconst lazyStage2 = lazy(() => import('../../Stage2/handler'));\r\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\r\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\r\nconst lazyRedirectionControl = lazy(() =>\r\n  import('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\r\n);\r\n\r\nexport interface routeType {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  componentToRender: React.ComponentType;\r\n  icon?: React.ComponentType;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n}\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  {\r\n    path: '/login',\r\n    label: 'route.login',\r\n    exact: true,\r\n    componentToRender: lazyLogin,\r\n    visible: false,\r\n    private: false,\r\n    index: 0,\r\n  },\r\n  {\r\n    path: '/',\r\n    label: 'route.home',\r\n    exact: true,\r\n    componentToRender: lazyTournament,\r\n    visible: false,\r\n    private: true,\r\n    index: 10,\r\n  },\r\n  {\r\n    path: '/tournament',\r\n    label: 'route.tournament',\r\n    exact: true,\r\n    componentToRender: lazyPairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 20,\r\n  },\r\n  {\r\n    path: '/stage1',\r\n    label: 'route.stage1',\r\n    exact: true,\r\n    componentToRender: lazyStage1,\r\n    visible: false,\r\n    private: true,\r\n    index: 30,\r\n  },\r\n  {\r\n    path: '/player',\r\n    label: 'route.player',\r\n    exact: true,\r\n    componentToRender: lazyPlayer,\r\n    icon: MaleIcon,\r\n    visible: true,\r\n    private: true,\r\n    index: 40,\r\n  },\r\n  {\r\n    path: '/user',\r\n    label: 'route.user',\r\n    exact: true,\r\n    componentToRender: lazyUser,\r\n    visible: false,\r\n    private: true,\r\n    index: 50,\r\n  },\r\n  {\r\n    path: '/stage2',\r\n    label: 'route.stage2',\r\n    exact: true,\r\n    componentToRender: lazyStage2 as any,\r\n    visible: false,\r\n    private: true,\r\n    index: 100,\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'route.notFound',\r\n    exact: false,\r\n    componentToRender: lazyRedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000,\r\n  },\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find((e) => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find((e) => e.path === pathName);\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpBackend from 'i18next-http-backend';\r\n\r\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\r\ni18n\r\n  .use(HttpBackend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    debug: true,\r\n    //## Langs\r\n    // Language to use (overrides language detection)\r\n    // lng: 'it-IT',\r\n    // Array of allowed languages\r\n    supportedLngs: ['it-IT', 'en-US'],\r\n    // Language to use if translations in user language are not available.\r\n    fallbackLng: 'en-US',\r\n\r\n    //## Namespaces\r\n    // String or array of namespaces to load\r\n    ns: ['common', 'auth', 'tournament'],\r\n    // Default namespace used if not passed to translation function\r\n    defaultNS: 'common',\r\n    // String or array of namespaces to lookup key if not found in given namespace.\r\n    fallbackNS: ['common'],\r\n\r\n    //## Load options\r\n    // Array of languages to preload.\r\n    preload: ['it-IT'],\r\n    /**\r\n     * Language codes to lookup, given set language is\r\n     * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\r\n     * 'currentOnly' --> 'en-US',\r\n     * 'languageOnly' --> 'en'\r\n     */\r\n    load: 'currentOnly',\r\n    interpolation: {\r\n      // react already safes from xss\r\n      escapeValue: false,\r\n    },\r\n    backend: {\r\n      loadPath: './locales/{{lng}}/{{ns}}.json',\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n\r\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'lang.en-US' : 'lang.it-IT');\r\n","import React, { CSSProperties } from 'react';\r\nimport backgroundImage from '../../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport routes from '../core/routing/Routes';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\r\nimport { SessionAction } from 'redux/actions';\r\nimport i18n, { getOtherLang } from 'i18n/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\n\r\n// Header applicazione, include navbar\r\nconst Header: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const { t } = useTranslation(['common']);\r\n  const changeLanguage = (language: string) => i18n.changeLanguage(language);\r\n\r\n  const { user, isAuthenticated } = useSelector(SessionSelector.getSession);\r\n\r\n  const logout = () => dispatch(SessionAction.logout.request({ history: currentHistory }));\r\n\r\n  // const yellow = '#ffc107';\r\n  const jumboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px',\r\n    minHeight: '28vh',\r\n  };\r\n\r\n  const titleStyle: CSSProperties = {\r\n    color: 'white',\r\n  };\r\n\r\n  const otherLang = getOtherLang();\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumboStyle}>\r\n        <h1 style={{ margin: '5vh' }}>\r\n          <strong style={titleStyle}>{applicationName}</strong>\r\n        </h1>\r\n        {isAuthenticated ? (\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n              <span>\r\n                <HomeIcon /> {t('route.home')}\r\n              </span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {routes.map((route) =>\r\n                  route.visible ? (\r\n                    route.private && !isAuthenticated ? null : (\r\n                      <Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\r\n                        {route.icon ? (\r\n                          <span>\r\n                            <route.icon /> {t(route.label)}\r\n                          </span>\r\n                        ) : (\r\n                          t(route.label)\r\n                        )}\r\n                      </Nav.Link>\r\n                    )\r\n                  ) : null\r\n                )}\r\n              </Nav>\r\n              {user ? (\r\n                <>\r\n                  <Dropdown alignRight as={ButtonGroup}>\r\n                    <Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\r\n                      <strong style={{ color: '#64bd9c', fontSize: 'larger' }}>\r\n                        {user.username} <UserIcon />\r\n                      </strong>\r\n                    </Button>\r\n                    <Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" />\r\n                    <Dropdown.Menu className=\"default-background default-border-yellow\">\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as={Link}\r\n                        to={'/user'}\r\n                        eventKey=\"1\"\r\n                      >\r\n                        <span>{t('route.user')}</span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        onClick={() => changeLanguage(otherLang)}\r\n                        as=\"button\"\r\n                        eventKey=\"2\"\r\n                      >\r\n                        <span>\r\n                          <LanguageIcon /> {t(otherLang)}\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\r\n                      <Dropdown.Item\r\n                        className=\"default-color-white default-hover-green\"\r\n                        as=\"button\"\r\n                        onClick={logout}\r\n                        eventKey=\"3\"\r\n                      >\r\n                        <span>\r\n                          <LogoutIcon /> <strong>{t('logout')} </strong>\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        ) : null}\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { routeType, getLabelByPathname } from './Routes';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { TournamentSelector } from 'redux/selectors';\r\n\r\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\r\nexport const ProtectedRoute: React.FC<routeType> = (props) => {\r\n  const isAuthenticated = useSelector(SessionSelector.isAuthenticated);\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(innerProps) => {\r\n        const { location } = innerProps;\r\n        console.log('ProtectedRoute : ', session, tournament, location);\r\n        // Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\r\n        if (isAuthenticated && location.pathname === '/login') {\r\n          console.log('ProtectedRoute => redirect to Home');\r\n          return <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\r\n        }\r\n\r\n        // Se non è una rotta protetta\r\n        if (!props.private) {\r\n          console.log('ProtectedRoute => public route : ', { ...props });\r\n          return <props.componentToRender {...props} />;\r\n        }\r\n\r\n        // Se è una rotta privata e non sono autenticato devo andare alla login\r\n        if (!isAuthenticated) {\r\n          console.log('ProtectedRoute => redirect to Login : ', { ...session });\r\n          return <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\r\n        }\r\n        /**\r\n         * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\r\n         * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\r\n         */\r\n        console.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\r\n        return <props.componentToRender {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default connect(ProtectedRoute);\r\n","import React from 'react';\r\n\r\ninterface IErrorBoundaryProps {\r\n  readonly children: JSX.Element | JSX.Element[];\r\n}\r\n\r\ninterface IErrorBoundaryState {\r\n  readonly error: any;\r\n  readonly errorInfo: any;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\r\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    const { children } = this.props;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n        process.env.NODE_ENV === 'development' ? (\r\n          <details className=\"preserve-space\">\r\n            {error && error.toString()}\r\n            <br />\r\n            {errorInfo.componentStack}\r\n          </details>\r\n        ) : undefined;\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { CSSProperties } from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\n\r\ninterface AppBadgeProps {}\r\nconst AppBadge: React.FC<AppBadgeProps> = () => {\r\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\r\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\r\n\r\n  const style: CSSProperties = {\r\n    position: 'absolute',\r\n    top: '0.1em',\r\n    right: '0.1em',\r\n  };\r\n  return (\r\n    <h4 style={style}>\r\n      <Badge variant=\"info\">\r\n        <span>v.</span>\r\n        <strong>{appVersion}</strong>\r\n        <span>\r\n          <i>\r\n            <small> @ {commitHash}</small>\r\n          </i>\r\n        </span>\r\n      </Badge>\r\n    </h4>\r\n  );\r\n};\r\n\r\nexport default AppBadge;\r\n","import React, { Suspense, useEffect } from 'react';\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\n// Routing\r\nimport { Switch, useHistory } from 'react-router';\r\nimport routes from '../core/routing/Routes';\r\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\r\nimport ErrorBoundary from '../core/errorBoundary';\r\n// Style\r\nimport './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionAction } from 'redux/actions';\r\nimport { loadIcons } from '../core/icons';\r\n// Toasts\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast.css';\r\nimport AppBadge from './badge';\r\nimport { SessionSelector } from 'redux/selectors';\r\n// i18n\r\nimport '../../i18n/i18n';\r\n\r\nloadIcons();\r\nconst App: React.FC = (_) => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  const isLoading = useSelector(SessionSelector.isLoading);\r\n\r\n  // Check if user is already logged\r\n  useEffect(() => {\r\n    dispatch(SessionAction.checkAuthentication.request({ history: currentHistory }));\r\n  }, [currentHistory, dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary>\r\n        {/* Loading translations */}\r\n        <Suspense fallback={<LoadingModal />}>\r\n          <Header />\r\n        </Suspense>\r\n        <Container fluid style={{ marginBottom: '20vh' }}>\r\n          {/*<RedirectionControl />*/}\r\n          <ToastContainer autoClose={2000} />\r\n          {isLoading ? (\r\n            // Loading store\r\n            <LoadingModal />\r\n          ) : (\r\n            // Loading lazy components\r\n            <Suspense fallback={<LoadingModal />}>\r\n              <Switch>\r\n                {routes.map((route) => (\r\n                  <ProtectedRoute {...route} key={route.index} />\r\n                ))}\r\n              </Switch>\r\n            </Suspense>\r\n          )}\r\n          <AppBadge />\r\n        </Container>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { StrictMode } from 'react';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from '../../redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { LoadingModal } from 'components/core/generic/Commons';\r\n\r\nconst Entry: React.FC = () => (\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<LoadingModal show={true} message={'....Caricamento'} />} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </StrictMode>\r\n);\r\n\r\nexport default Entry;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'typeface-roboto';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport it from 'date-fns/locale/it';\r\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\r\n\r\nimport Entry from './components/App/Entry';\r\n\r\nsetDefaultLocale('it');\r\nregisterLocale('it', it);\r\n\r\nReactDOM.render(<Entry />, document.getElementById('root'));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\r\nserviceWorker.unregister();\r\n\r\n// Redefine console so it does not in production env\r\nif (process.env.NODE_ENV === 'production') {\r\n  if (!window.console) (window as any).console = {};\r\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\r\n}\r\n","import {\r\n  FetchTournamentsRequest,\r\n  TournamentDTO,\r\n  PostTournamentRequest,\r\n  FetchTournamentsResponse,\r\n  PostTournamentResponse,\r\n  UpdateTournamentRequest,\r\n  UpdateTournamentResponse,\r\n} from '../models/tournament.model';\r\nimport { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\n\r\nconst actionName = '[Tournament]';\r\n\r\nexport const TournamentAction = {\r\n  // fetch tournaments\r\n  fetchTournaments: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\r\n    FetchTournamentsRequest,\r\n    FetchTournamentsResponse,\r\n    Error\r\n  >(),\r\n  // set selected tournament\r\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\r\n  // save a new tournament\r\n  saveTournament: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\r\n    PostTournamentRequest,\r\n    PostTournamentResponse,\r\n    Error\r\n  >(),\r\n  // save a new tournament\r\n  updateTournament: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\r\n    UpdateTournamentRequest,\r\n    UpdateTournamentResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","import { createAsyncAction, createAction } from 'typesafe-actions';\r\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\r\nimport {\r\n  FetchPlayersResponse,\r\n  FetchPlayersRequest,\r\n  UpdatePlayerRequest,\r\n  UpdatePlayerResponse,\r\n  DeletePlayersResponse,\r\n  DeletePlayersRequest,\r\n} from 'redux/models/player.model';\r\n\r\nconst actionName = '[Player]';\r\nexport const PlayerAction = {\r\n  // fetch tournaments\r\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Palyers'))<\r\n    FetchPlayersRequest,\r\n    FetchPlayersResponse,\r\n    Error\r\n  >(),\r\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\r\n    UpdatePlayerRequest,\r\n    UpdatePlayerResponse,\r\n    Error\r\n  >(),\r\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\r\n    DeletePlayersRequest,\r\n    DeletePlayersResponse,\r\n    Error\r\n  >(),\r\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\r\n};\r\n","export enum HTTPStatusCode {\r\n  Continue = 100,\r\n  SwitchingProtocols = 101,\r\n  Processing = 102,\r\n  EarlyHints = 103,\r\n\r\n  /**\r\n   * All `1xx` status codes.\r\n   */\r\n  InformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\r\n\r\n  OK = 200,\r\n  Created = 201,\r\n  Accepted = 202,\r\n  NonAuthoritativeInformation = 203,\r\n  NoContent = 204,\r\n  ResetContent = 205,\r\n  PartialContent = 206,\r\n  MultiStatus = 207,\r\n  AlreadyReported = 208,\r\n  IMUsed = 226,\r\n\r\n  /**\r\n   * All `2xx` status codes.\r\n   */\r\n  Success = OK |\r\n    Created |\r\n    Accepted |\r\n    NonAuthoritativeInformation |\r\n    NoContent |\r\n    ResetContent |\r\n    PartialContent |\r\n    MultiStatus |\r\n    AlreadyReported |\r\n    IMUsed,\r\n\r\n  MultipleChoices = 300,\r\n  MovedPermanently = 301,\r\n  Found = 302,\r\n  SeeOther = 303,\r\n  NotModified = 304,\r\n  UseProxy = 305,\r\n  SwitchProxy = 306,\r\n  TemporaryRedirect = 307,\r\n  PermanentRedirect = 308,\r\n\r\n  /**\r\n   * All `3xx` status codes.\r\n   */\r\n  Redirection = MultipleChoices |\r\n    MovedPermanently |\r\n    Found |\r\n    SeeOther |\r\n    NotModified |\r\n    UseProxy |\r\n    SwitchProxy |\r\n    TemporaryRedirect |\r\n    PermanentRedirect,\r\n\r\n  BadRequest = 400,\r\n  Unauthorized = 401,\r\n  PaymentRequired = 402,\r\n  Forbidden = 403,\r\n  NotFound = 404,\r\n  MethodNotAllowed = 405,\r\n  NotAcceptable = 406,\r\n  ProxyAuthenticationRequired = 407,\r\n  RequestTimeout = 408,\r\n  Conflict = 409,\r\n  Gone = 410,\r\n  LengthRequired = 411,\r\n  PreconditionFailed = 412,\r\n  PayloadTooLarge = 413,\r\n  URITooLong = 414,\r\n  UnsupportedMediaType = 415,\r\n  RangeNotSatisfiable = 416,\r\n  ExpectationFailed = 417,\r\n  ImATeapot = 418,\r\n  MisdirectedRequest = 421,\r\n  UnprocessableEntity = 422,\r\n  Locked = 423,\r\n  FailedDependency = 424,\r\n  UpgradeRequired = 426,\r\n  PreconditionRequired = 428,\r\n  TooManyRequests = 429,\r\n  RequestHeaderFieldsTooLarge = 431,\r\n  UnavailableForLegalReasons = 451,\r\n\r\n  /**\r\n   * All `4xx` error codes.\r\n   */\r\n  ClientErrors = BadRequest |\r\n    Unauthorized |\r\n    PaymentRequired |\r\n    Forbidden |\r\n    NotFound |\r\n    MethodNotAllowed |\r\n    NotAcceptable |\r\n    ProxyAuthenticationRequired |\r\n    RequestTimeout |\r\n    Conflict |\r\n    Gone |\r\n    LengthRequired |\r\n    PreconditionFailed |\r\n    PayloadTooLarge |\r\n    URITooLong |\r\n    UnsupportedMediaType |\r\n    RangeNotSatisfiable |\r\n    ExpectationFailed |\r\n    ImATeapot |\r\n    MisdirectedRequest |\r\n    UnprocessableEntity |\r\n    Locked |\r\n    FailedDependency |\r\n    UpgradeRequired |\r\n    PreconditionRequired |\r\n    TooManyRequests |\r\n    RequestHeaderFieldsTooLarge |\r\n    UnavailableForLegalReasons,\r\n\r\n  InternalServerError = 500,\r\n  NotImplemented = 501,\r\n  BadGateway = 502,\r\n  ServiceUnavailable = 503,\r\n  GatewayTimeout = 504,\r\n  HTTPVersionNotSupported = 505,\r\n  VariantAlsoNegotiates = 506,\r\n  InsufficientStorage = 507,\r\n  LoopDetected = 508,\r\n  NotExtended = 510,\r\n  NetworkAuthenticationRequired = 511,\r\n\r\n  /**\r\n   * All `5xx` error codes.\r\n   */\r\n  ServerErrors = InternalServerError |\r\n    NotImplemented |\r\n    BadGateway |\r\n    ServiceUnavailable |\r\n    GatewayTimeout |\r\n    HTTPVersionNotSupported |\r\n    VariantAlsoNegotiates |\r\n    InsufficientStorage |\r\n    LoopDetected |\r\n    NotExtended |\r\n    NetworkAuthenticationRequired,\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSignOutAlt,\r\n  faUser,\r\n  faMale,\r\n  faLanguage,\r\n  faHome,\r\n  faBroom,\r\n  faArrowAltCircleRight,\r\n  faArrowAltCircleLeft,\r\n  faTimes,\r\n  faToggleOff,\r\n  faToggleOn,\r\n  faPlus,\r\n  faTrophy,\r\n  faAngleDoubleRight,\r\n  faBan,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const loadIcons = () => {\r\n  library.add(\r\n    // Regular\r\n    faTrashAlt,\r\n    faSave,\r\n    // Solid\r\n    faSignOutAlt,\r\n    faUser,\r\n    faMale,\r\n    faLanguage,\r\n    faHome,\r\n    faBroom,\r\n    faArrowAltCircleRight,\r\n    faArrowAltCircleLeft,\r\n    faTimes,\r\n    faToggleOff,\r\n    faToggleOn,\r\n    faPlus,\r\n    faTrophy,\r\n    faAngleDoubleRight,\r\n    faBan\r\n  );\r\n};\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst SOLID = 'fas';\r\nconst REGULAR = 'far';\r\n\r\n// Wrapper per icone FontAwesome\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\r\n);\r\n\r\n// Solid\r\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\r\n);\r\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\r\n);\r\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\r\n);\r\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\r\n);\r\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\r\n);\r\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\r\n);\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\r\n);\r\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\r\n);\r\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\r\n);\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\r\n);\r\n","import { RootState } from 'redux/models';\r\n\r\n// Get state from store\r\nexport const SessionSelector = {\r\n  isLoading: ({ sessionState: { isLoading } }: RootState) => isLoading,\r\n  isAdmin: ({ sessionState: { isAdmin } }: RootState) => isAdmin,\r\n  isAuthenticated: ({ sessionState: { isAuthenticated } }: RootState) => isAuthenticated,\r\n  getUser: ({ sessionState: { user } }: RootState) => user,\r\n  getSession: ({ sessionState }: RootState) => sessionState,\r\n  getMessage: ({ sessionState: { message } }: RootState) => message,\r\n};\r\n","import {\r\n  FetchPlayersRequest,\r\n  FetchPlayersResponse,\r\n  PlayerRole,\r\n  PlayerDTO,\r\n  DeletePlayersRequest,\r\n  DeletePlayersResponse,\r\n  UpdatePlayerResponse,\r\n  UpdatePlayerRequest,\r\n} from 'redux/models';\r\nimport { handleError } from './common';\r\n\r\nexport const fetchPlayers = async ({ tId, addEmpty }: FetchPlayersRequest): Promise<FetchPlayersResponse> => {\r\n  try {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    return { results: addEmpty ? [...result, getEmptyPlayer('Nessun Giocatore')] : result };\r\n  } catch (e) {\r\n    handleError(e, 'Error players fetch');\r\n    return { results: [] };\r\n  }\r\n};\r\n\r\nexport const deletePlayers = async ({ players }: DeletePlayersRequest): Promise<DeletePlayersResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/player', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(players),\r\n    });\r\n    await response.json();\r\n    return { players: response.ok ? players : [] };\r\n  } catch (e) {\r\n    handleError(e, 'Error players fetch');\r\n    return { players: [] };\r\n  }\r\n};\r\n\r\nexport const savePlayer = async ({ player }: UpdatePlayerRequest): Promise<UpdatePlayerResponse> => {\r\n  try {\r\n    const response = await fetch('/api/v1/player', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(player),\r\n    });\r\n    const result = await response.json();\r\n    return { player: result };\r\n  } catch (e) {\r\n    handleError(e, 'Error players fetch');\r\n    return { player };\r\n  }\r\n};\r\n\r\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\r\n  id: null,\r\n  name: '',\r\n  surname: '',\r\n  alias: '',\r\n  label: label || '',\r\n  role: PlayerRole.GoalKeeper,\r\n  email: '',\r\n  phone: '',\r\n  match_played: 0,\r\n  match_won: 0,\r\n  total_score: 0,\r\n  editable: false,\r\n  rowNumber: 0,\r\n});\r\n","import { RootState } from 'redux/models';\r\n\r\n// Get state from store\r\nexport const PairSelector = {\r\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\r\n  getPairsList: ({ pairState: { pairList } }: RootState) => pairList,\r\n};\r\n","import { RootState } from 'redux/models';\r\n\r\n// Get state from store\r\nexport const PlayerSelector = {\r\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\r\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\r\n};\r\n","import { RootState } from 'redux/models';\r\n\r\n// Get state from store\r\nexport const Stage1Selector = {\r\n  isLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\r\n  getSelectedRows: ({ stage1State: { selectedRows } }: RootState) => selectedRows || null,\r\n  getSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\r\n  getNeedRefresh: ({ stage1State: { needRefresh } }: RootState) => needRefresh,\r\n  // Utilizzare una closure nel compoanente per accedere allo specifico stage\r\n  getStages: ({ stage1State: { stages } }: RootState) => stages,\r\n};\r\n","import { RootState } from 'redux/models';\r\n\r\n// Get state from store\r\nexport const Stage2Selector = {\r\n  isLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\r\n  getCells: ({ stage2State: { cells } }: RootState) => cells,\r\n  getRowsNumber: ({ stage2State: { rowsNumber } }: RootState) => rowsNumber,\r\n};\r\n","import React, { CSSProperties } from 'react';\r\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport './style.css';\r\n\r\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\r\nconst fancyModalFooter = (\r\n  <>\r\n    <Spinner animation=\"border\" variant=\"light\" />\r\n    <Spinner animation=\"border\" variant=\"primary\" />\r\n    <Spinner animation=\"border\" variant=\"secondary\" />\r\n    <Spinner animation=\"border\" variant=\"success\" />\r\n    <Spinner animation=\"border\" variant=\"danger\" />\r\n    <Spinner animation=\"border\" variant=\"warning\" />\r\n    <Spinner animation=\"border\" variant=\"info\" />\r\n    <Spinner animation=\"border\" variant=\"dark\" />\r\n  </>\r\n);\r\n// Loading Modal\r\ninterface LoadingModalPropsType {\r\n  show?: boolean;\r\n  title?: string;\r\n  message?: string;\r\n  onHide?: () => void;\r\n}\r\n\r\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\r\n  title = 'Caricamento....',\r\n  message = 'Caricamento....',\r\n  show = true,\r\n  onHide = () => (show = false),\r\n}) => (\r\n  <Modal show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\r\n      {message}\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport interface YesNoModalProps {\r\n  title: string;\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\r\n  title,\r\n  message,\r\n  show,\r\n  onHide = () => (show = false),\r\n  onClick,\r\n}) => (\r\n  <Modal\r\n    className=\"YesNoModal\"\r\n    show={show}\r\n    onHide={onHide}\r\n    centered\r\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\r\n  >\r\n    <Modal.Header closeButton style={modalStyle}>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body style={modalStyle}>\r\n      <Container fluid>\r\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\r\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\r\n          <Col>\r\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\r\n              Annulla\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\r\n              Conferma\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Modal.Body>\r\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\nexport interface IToastProps {\r\n  message: string;\r\n  type?: toastType;\r\n}\r\n\r\nexport type toastType = 'success' | 'warning' | 'danger';\r\n\r\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\n// Util per loggare i dati utente in sessione\r\nexport const LogSessionContext: React.FC<{}> = () => {\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  return (\r\n    <>\r\n      {Object.entries(session).map(([key, value]) => (\r\n        <p>\r\n          {key} : {value}\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// TODO: Componente fallback se route non trovata\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import { getEmptyPlayer } from 'redux/services/player.service';\r\nimport { Styles } from 'react-select';\r\nimport { PairDTO } from '../../redux/models';\r\n\r\nexport const getEmptyRowModel = (label?: string): PairDTO => ({\r\n  id: null,\r\n  tId: 0,\r\n  rowNumber: 0,\r\n  player1: getEmptyPlayer(),\r\n  player2: getEmptyPlayer(),\r\n  alias: label || '',\r\n  stage1Name: '',\r\n  placement: 0,\r\n  paid1: false,\r\n  paid2: false,\r\n});\r\n\r\nexport const fetchPairs = (setterFunction: React.Dispatch<React.SetStateAction<PairDTO[]>>, tId: number) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport const valueFormatter = (selectedOption: PairDTO) =>\r\n  selectedOption.alias ? `${selectedOption.alias}` : createAlias(selectedOption);\r\n\r\nexport function createAlias(selectedOption: PairDTO) {\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2 } = selectedOption;\r\n  value += player1!.alias ? player1!.alias : player1!.name;\r\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\r\n  // value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n\r\nexport const customStyles: Partial<Styles> | undefined = {\r\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#64bd9c',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\r\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\r\n  singleValue: (provided) => ({ ...provided }),\r\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\r\n};\r\n\r\nexport const fetchData = async (tId: number) => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  console.log('rows : ', rows);\r\n  return { rows, players };\r\n};\r\n","import { PlayerState, TournamentState, PairState, SessionState, Stage1State, Stage2State } from 'redux/models';\r\nimport { HTTPStatusCode } from './HttpStatusCode';\r\n\r\nexport interface RootState {\r\n  tournamentState: TournamentState;\r\n  pairState: PairState;\r\n  playerState: PlayerState;\r\n  stage1State: Stage1State;\r\n  stage2State: Stage2State;\r\n  sessionState: SessionState;\r\n}\r\n\r\nexport enum UserMessageType {\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Danger = 'danger',\r\n}\r\nexport interface UserMessage {\r\n  type: UserMessageType;\r\n  message: string;\r\n}\r\n\r\nexport interface GenericReponse {\r\n  code: HTTPStatusCode;\r\n  message: string;\r\n  userMessage: UserMessage;\r\n}\r\n"],"sourceRoot":""}