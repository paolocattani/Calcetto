{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/helper.ts","components/Pair/editor.js","components/Pair/table.tsx","common.module.css","@common/constants/label.ts","components/Tournament/badge.tsx"],"names":["noop","ToggleButton","React","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","bsPrefix","size","_ref$as","useBootstrapPrefix","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","NoData","addRow","optionsLength","isEditable","t","useTranslation","players","diff","variant","onClick","current","min","to","PlayerSelection","styles","row","columnIndex","onSelect","onUpdate","options","selectedOption","setSelectedOption","option","actionMeta","id","getOptionLabel","alias","getOptionValue","toString","placeholder","isSearchable","isClearable","customStyles","provided","state","backgroundColor","color","input","control","height","marginBottom","singleValue","valueContainer","fontSize","ALIGN_CENTER","playerSelection","editorProps","rowIndex","checkBoxProps","align","headerStyle","column","colIndex","width","editor","Type","CHECKBOX","formatter","cell","formatExtraData","ButtonGroup","toggle","columns","labels","dataField","text","editable","hidden","player1","editorRenderer","player2","stage1","SELECT","toUpperCase","split","map","label","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","dispatch","useDispatch","isAdmin","useSelector","AuthSelector","tournament","TournamentSelector","getTournament","LABEL_COMMON_LOADING","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyPair","postPair","pair","result","rowNumber","length","p","i","ii","forEach","push","deletePairs","pairsList","filter","find","selectedRow","sort","e1","e2","localeCompare","updateOptions","player","selected","useEffect","fetchPairs","tId","fetchPlayers","addEmpty","playersList","selectedElement","Promise","all","rowElement","getEmptyPlayer","findAlias","player1Id","player2Id","code","HTTPStatusCode","OK","updatePair","newRowsElement","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","progress","TournamentProgress","Stage1","TournamentAction","update","request","PairAction","fetch","history","selectRow","mode","isSelected","found","onSelectAll","style","hideSelectColumn","PairsSelection","processDeleteStage1","method","headers","body","JSON","stringify","response","json","names","newRows","prevData","availableRows","Math","floor","accumulator","deleteDisabled","assignMatches","FormControl","max","step","event","Number","currentTarget","Stage2","addPairs","toolsBar","commonStyle","toolsBarContainer","data-cy","Row","Col","onHide","paid1","paid2","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","headerClasses","striped","hover","module","exports","LABEL_AUTH_PASSWORD","LABEL_TOURNAMENT_SELECT","TournamentBadge","public","formatDate","date"],"mappings":"uGAAA,4DAMIA,EAAO,aAIPC,EAAeC,IAAMC,YAAW,SAAUC,EAAMC,GAClD,IAAIC,EAAWF,EAAKE,SAChBC,EAAOH,EAAKG,KACZC,EAAYJ,EAAKI,UACjBC,EAAUL,EAAKK,QACfC,EAAON,EAAKM,KACZC,EAAWP,EAAKO,SAChBC,EAAQR,EAAKQ,MACbC,EAAWT,EAAKS,SAChBC,EAAWV,EAAKU,SAChBC,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,OAAQ,YAAa,UAAW,OAAQ,WAAY,QAAS,WAAY,aAElIa,EAAYC,oBAAS,GACrBC,EAAUF,EAAU,GACpBG,EAAaH,EAAU,GAEvBI,EAAcC,uBAAY,SAAUC,GACb,UAArBA,EAAEC,OAAOC,SAAqBL,GAAW,KAC5C,IACCM,EAAaJ,uBAAY,SAAUC,GACZ,UAArBA,EAAEC,OAAOC,SAAqBL,GAAW,KAC5C,IACH,OAAoBlB,IAAMyB,cAAcC,IAAQC,YAAS,GAAId,EAAO,CAClEV,IAAKA,EACLG,UAAWsB,IAAWtB,EAAWW,GAAW,QAASN,GAAY,YACjEH,UAAMqB,EACNC,SAAUvB,EACVwB,GAAI,UACW/B,IAAMyB,cAAc,QAAS,CAC5CpB,KAAMA,EACNG,KAAMA,EACNE,MAAOA,EACPP,IAAKS,EACLoB,aAAc,MACdzB,UAAWA,EACXI,WAAYA,EACZsB,QAASd,EACTe,OAAQV,EACRf,SAAUA,GAAYX,IACpBM,MAENL,EAAaoC,YAAc,eACZpC,O,yDCpDf,mEAMIqC,EAAmBC,YAAmB,sBACtCC,EAAoBD,YAAmB,uBACvCE,EAAiBF,YAAmB,mBAAoB,CAC1DG,UAAW,SAuBTC,EAAazC,IAAMC,YAAW,SAAUC,EAAMC,GAChD,IAAIuC,EAAWxC,EAAKwC,SAChBC,EAAOzC,EAAKyC,KACZrC,EAAYJ,EAAKI,UACjBsC,EAAU1C,EAAK6B,GACfS,OAAwB,IAAZI,EAAqB,MAAQA,EACzC/B,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,OAAQ,YAAa,OAGlF,OADAwC,EAAWG,YAAmBH,EAAU,eACpB1C,IAAMyB,cAAce,EAAWb,YAAS,CAC1DxB,IAAKA,GACJU,EAAO,CACRP,UAAWsB,IAAWtB,EAAWoC,EAAUC,GAAQD,EAAW,IAAMC,SAGxEF,EAAWN,YAAc,aAEzB,IAAIW,EAAuBnB,YAAS,GAAIc,EAAY,CAClDM,KAAMR,EACNS,MAjCoB,SAAyBnC,GAC7C,OAAoBb,IAAMyB,cAAcc,EAAgB,KAAmBvC,IAAMyB,cAAc,QAASE,YAAS,CAC/GnB,KAAM,SACLK,MA+BHoC,SAxCuB,SAA4BpC,GACnD,OAAoBb,IAAMyB,cAAcc,EAAgB,KAAmBvC,IAAMyB,cAAc,QAASE,YAAS,CAC/GnB,KAAM,YACLK,MAsCHqC,OAAQd,EACRe,QAASb,IAGIQ,O,6NCrBAM,EAxBuB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACtDC,EAAMC,YAAe,CAAC,SAAU,OAAO,WAAvCD,EAEFE,EAAUJ,EAAgB,EAC1BK,EAAOD,EAFO,IAE+BA,EAAU,EAC7D,OAAKJ,EACEI,GAJa,EAKlB,qCACE,sCAAOF,EAAE,kBAAT,SACA,cAAC9B,EAAA,EAAD,CAAQkC,QAAQ,UAAUC,QAASR,EAAQ1C,UAAW4C,EAAtD,SACGC,EAAE,qBAIP,qCACE,4BAAIA,EAAE,iBAAkB,CAAEM,QAASJ,EAASK,IAb5B,MAchB,sCAAgB,IAATJ,EAAaH,EAAE,kBAAoBA,EAAE,iBAAkB,CAAEG,SAAhE,SACA,cAAC,IAAD,CAAMK,GAAI,UAAV,SACE,cAACtC,EAAA,EAAD,CAAQkC,QAAQ,UAAhB,SAA2BJ,EAAE,qBAbR,M,2CCsBdS,EAzBsCjE,IAAMC,YACzD,WAAoEE,GAAS,IAA1E+D,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,YAA+BC,GAA6B,EAAvCC,SAAuC,EAA7BD,UAAUE,EAAmB,EAAnBA,QAAmB,EAC9BvD,qBAD8B,mBACnEwD,EADmE,KACnDC,EADmD,KAQ1E,OACE,cAAC,IAAD,CACEP,OAAQA,EACRK,QAASA,EACT9D,SATiB,SAACiE,EAAqCC,GACzDF,EAAkBC,GAClBL,EAASK,EAAQP,EAAIS,GAAIR,IAQvBS,eAAgB,SAACH,GAAD,OAAYA,EAAOI,OACnCC,eAAgB,SAACL,GAAD,uBAAYA,EAAOE,UAAnB,aAAY,EAAWI,SAAS,KAChDtE,MAAO8D,EACPS,YAAY,WACZC,cAAY,EACZC,aAAW,OClBZ,IAAMC,EAA4C,CAEvDV,OAAQ,SAACW,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,gBAAiB,QACjBC,MAAO,QACP,UAAW,CACTD,gBAAiB,UACjBC,MAAO,YAGXC,MAAO,SAACJ,GAAD,mBAAC,eAAmBA,GAApB,IAA8BE,gBAAiB,aACtDG,QAAS,SAACL,GAAD,mBAAC,eAAmBA,GAApB,IAA8BM,OAAQ,QAASC,aAAc,UACtEC,YAAa,SAACR,GAAD,sBAAoBA,IACjCS,eAAgB,SAACT,GAAD,mBAAC,eAAmBA,GAApB,IAA8BM,OAAQ,OAAQI,SAAU,a,mBCtBpEC,EAAe,SAIfC,EAAkB,SAACC,EAAaxF,EAAOyD,EAAKgC,EAAU/B,EAAaC,EAAUE,GAA3D,OACtB,cAAC,EAAD,2BACM2B,GADN,IAEEtB,GAAIR,EACJD,IAAKA,EACLgC,SAAUA,EACV/B,YAAaA,EACb1D,MAAOA,EACP2D,SAAUA,EACVE,QAASA,EACTL,OAAQkB,MAINgB,EAAgB,CACpBC,MAAO,kBAAML,GACbM,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAC7CC,OAAQ,CACNlG,KAAMmG,OAAKC,SACXlG,MAAM,GAAD,OAtBG,KAsBH,YArBE,OAuBTmG,UAAW,SAACC,EAAM3C,EAAKgC,EAAUY,GAAtB,OACT,cAACC,EAAA,EAAD,CAAaC,QAAM,EAAC3G,UAAU,OAA9B,SACE,cAACP,EAAA,EAAD,CAAc6D,QAAWkD,EAAO,UAAY,SAAUvG,QAASuG,EAAMpG,MAAM,IAAIF,KAAK,WAApF,SACKsG,EAAO,SAAW,mBAOhBI,EAAU,SAAC7C,EAAUE,EAAS4C,GAApB,MAA+B,CACpD,CAAEC,UAAW,KAAMC,KAAM,KAAMC,UAAU,EAAOC,QAAQ,EAAMlB,MAAO,kBAAML,IAC3E,CAAEoB,UAAW,YAAaC,KAAM,KAAMC,UAAU,EAAOjB,MAAO,kBAAML,IACpE,CACEoB,UAAW,gBACXC,KAAMF,EAAOK,QACbnB,MAAO,kBAAML,GACbyB,eAAgB,SAACvB,EAAaxF,EAAOyD,EAAKoC,EAAQJ,EAAU/B,GAA5C,OACd6B,EAAgBC,EAAaxF,EAAOyD,EAAKgC,EAAU/B,EAAaC,EAAUE,IAC5E+B,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAE/C,CACEW,UAAW,gBACXC,KAAMF,EAAOO,QACbrB,MAAO,kBAAML,GACbyB,eAAgB,SAACvB,EAAaxF,EAAOyD,EAAKoC,EAAQJ,EAAU/B,GAA5C,OACd6B,EAAgBC,EAAaxF,EAAOyD,EAAKgC,EAAU/B,EAAaC,EAAUE,IAC5E+B,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SAE/C,CAAEW,UAAW,QAASC,KAAMF,EAAOrC,MAAOwB,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,SACvF,CACEW,UAAW,aACXC,KAAMF,EAAOQ,OACbtB,MAAO,kBAAML,GACbM,YAAa,SAACC,EAAQC,GAAT,MAAuB,CAAEC,MAAO,QAC7CC,OAAQ,CACNlG,KAAMmG,OAAKiB,OACXrD,QAAS,6BACNsD,cACAC,MAAM,IACNC,KAAI,SAAC1G,GAAD,MAAQ,CAAEX,MAAOW,EAAG2G,MAAO3G,QA9Bc,aAkClD+F,UAAW,QACXC,KAAM,YACHjB,GApC+C,aAuClDgB,UAAW,QACXC,KAAM,YACHjB,K,gHC5CD6B,EAAc,CAClBC,QAAS,GACTrE,QAAS,kBAAMsE,QAAQC,IAAI,KAC3BC,MAAM,EACNC,MAAO,IAieMC,uBA7d8B,WAE3C,IAAMC,EAAiBC,cACjBC,EAAWC,cACTnF,EAAMC,YAAe,CAAC,SAAU,SAAhCD,EAEFoF,EAAUC,YAAYC,IAAaF,SACnCG,EAAaF,YAAYG,IAAmBC,eAPD,EAWfjI,mBAAS,CAAEsE,OAAO,EAAO4C,QAAS1E,EAAE0F,OAXrB,mBAW1CC,EAX0C,KAW/BC,EAX+B,OAYnBpI,mBAA0BiH,GAZP,mBAY1CoB,EAZ0C,KAYjCC,EAZiC,OAezBtI,mBAAoD,CAAEuI,KAAM,GAAI7F,QAAS,KAfhD,mBAe1C8F,EAf0C,KAepCC,EAfoC,OAgBTzI,mBAAoB,IAhBX,mBAgB1C0I,EAhB0C,KAgB5BC,GAhB4B,QAkBT3I,mBAAiB,GAlBR,qBAkB1C4I,GAlB0C,MAkB5BC,GAlB4B,SAmBP7I,mBAAiB,GAnBV,qBAmB1C8I,GAnB0C,MAmB3BC,GAnB2B,MAgCjD,SAASC,GAAiB9B,GACxBkB,EAAa,CAAE9D,OAAO,EAAO4C,YAC7B+B,IAAMC,MAAMhC,EAAS,CAAEiC,UAAW,MAEpC,SAASC,GAAmBlC,GAC1BkB,EAAa,CAAE9D,OAAO,EAAO4C,YAC7B+B,IAAMI,QAAQnC,GAtCiC,SAyClC7E,GAzCkC,iFAyCjD,WAAsBiH,GAAtB,iBAAAC,EAAA,sEAEInB,EAAa,CAAE9D,OAAO,EAAM4C,QAAS1E,EAAE0F,OACjCsB,EAAmBC,uBAAa,GAAG1B,EAAWnE,IAAM,GAH9D,SAIyB8F,YAAS,CAAEC,KAAMH,IAJ1C,OAIUI,EAJV,OAKIJ,EAAS5F,GAAKgG,EAAOD,KAAK/F,GAC1B4F,EAASK,UAAYP,GAASd,EAAKD,KAAKuB,OAAS,EACjDrB,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAM,CAACiB,GAAD,mBAAc1G,EAAQyF,OAAMxB,KAAI,SAACgD,EAAGC,GAAJ,mBAAC,eAAcD,GAAf,IAAiBF,UAAUG,EAAE,OACnEtH,QAASI,EAAQJ,YAEnB0G,GAAmB5G,EAAE,qBAXzB,kDAaIwG,GAAiBxG,EAAE,kBAbvB,2DAzCiD,oEA0DjD,8BAAA+G,EAAA,sDACMD,EAAQd,EAAKD,KAAKuB,OAAS,EACtBG,EAAK,EAFhB,YAEmBA,EAAKnB,IAFxB,gCAGUzG,GAAOiH,GAHjB,OAIIA,IAJJ,OAEuCW,IAFvC,sBAMElB,GAAiB,GANnB,6CA1DiD,oEAmEjD,4BAAAQ,EAAA,sEAEInB,EAAa,CAAE9D,OAAO,EAAM4C,QAAS1E,EAAE0F,OAEjCxF,EAA4B,GAClCgG,EAAawB,SAAQ,SAAC7J,GAChBA,EAAEmG,SAAWnG,EAAEmG,QAAQ5C,IAAIlB,EAAQyH,KAAK9J,EAAEmG,SAC1CnG,EAAEqG,SAAWrG,EAAEqG,QAAQ9C,IAAIlB,EAAQyH,KAAK9J,EAAEqG,YAPpD,SAUU0D,YAAY,CAAEC,UAAW3B,IAVnC,OAWID,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAMzF,EAAQyF,KAAK+B,QAAO,SAACnH,GAAD,OAAUuF,EAAa6B,MAAK,SAACC,GAAD,OAAiBA,EAAY5G,KAAOT,EAAIS,SAC9FlB,QAASA,EACL,UAAIA,EAAJ,YAAgBI,EAAQJ,UAAS+H,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG5G,MAAM8G,cAAcD,EAAG7G,UAC5EhB,EAAQJ,YAGd0G,GAAmB5G,EAAE,gBAAD,OAAiBkG,EAAaoB,OAAS,EAAI,cAAgB,eAlBnF,kDAoBId,GAAiBxG,EAAE,kBApBvB,QAuBEmG,GAAgB,IAvBlB,2DAnEiD,sBA8FjD,SAASkC,GAAcC,EAA+BC,GAChDD,GAAUA,EAAOlH,GACfmH,EAASnH,GACX6E,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAMzF,EAAQyF,KACd7F,QAAS,sBAAII,EAAQJ,QAAQ4H,QAAO,SAACjK,GAAD,OAAOA,EAAEuD,KAAOmH,EAASnH,OAApD,CAAyDkH,IAAQL,MAAK,SAACC,EAAIC,GAAL,OAC7ED,EAAG5G,MAAM8G,cAAcD,EAAG7G,cAI9B2E,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAMzF,EAAQyF,KACd7F,QAAS,sBAAII,EAAQJ,SAAZ,CAAqBoI,IAAQL,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG5G,MAAM8G,cAAcD,EAAG7G,cAE9EiH,EAASnH,IAChB6E,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAMzF,EAAQyF,KACd7F,QAASI,EAAQJ,QAAQ4H,QAAO,SAACjK,GAAD,OAAoBA,EAAEuD,KAAOmH,EAASnH,UAzF5EoH,qBAAU,WACHjD,GACL,sBAAC,kCAAAwB,EAAA,sEAC6B0B,YAAW,CAAEC,IAAKnD,EAAWnE,KAD1D,uBACSyG,EADT,EACSA,UADT,SAE+Bc,YAAa,CAAEC,UAAU,EAAMF,IAAKnD,EAAWnE,KAF9E,gBAESyH,EAFT,EAESA,YACR5C,EAAQ,CAAEF,KAAM8B,EAAW3H,QAAS2I,IAHrC,0CAAD,KAKC,CAACtD,IAsFJ,IAAM1E,GAAQ,uCAAG,WAAOiI,EAA4BnG,EAAkB/B,GAArD,eAAAmG,EAAA,sEACcgC,QAAQC,IACnChD,EAAKD,KAAKxB,IAAV,uCAAgC,WAAO0E,GAAP,iBAAAlC,EAAA,yDAC1BkC,EAAW7H,KAAOuB,EADQ,oBAExBhC,EAAMsI,EACU,IAAhBrI,EACEkI,EAAgB1H,IAAMT,EAAIuD,SAAWvD,EAAIuD,QAAQ9C,KAAO0H,EAAgB1H,IAE1ET,EAAIqD,QAAUkF,2BACd1C,GAAiBxG,EAAE,oBAGnBqI,GAAc1H,EAAIqD,QAAS8E,GAC3BnI,EAAIqD,QAAU8E,GAGZA,EAAgB1H,IAAMT,EAAIqD,SAAWrD,EAAIqD,QAAQ5C,KAAO0H,EAAgB1H,IAC1ET,EAAIuD,QAAUgF,2BACd1C,GAAiBxG,EAAE,oBAEnBqI,GAAc1H,EAAIuD,QAAS4E,GAC3BnI,EAAIuD,QAAU4E,MAIbnI,EAAIW,OAASX,EAAIqD,SAAWrD,EAAIqD,QAAQ5C,IAAMT,EAAIuD,SAAWvD,EAAIuD,QAAQ9C,IAvBlD,gCAwBL+H,YAAU,CAAEC,UAAWzI,EAAIqD,QAAQ5C,GAAIiI,UAAW1I,EAAIuD,QAAQ9C,KAxBzD,OAwBpBgG,EAxBoB,OAyB1BzG,EAAIW,MAAQ8F,EAAOkC,OAASC,IAAeC,IAAMpC,EAAO9F,MAAQ8F,EAAO9F,MAAQ,GAzBrD,cA4B5BmI,YAAW,CAAEtC,KAAMxG,IA5BS,kBA6BrBA,GA7BqB,iCA8BhBsI,GA9BgB,4CAAhC,wDAFa,OACTS,EADS,OAmCfzD,GAAQ,SAAC3F,GAAD,MAAc,CACpByF,KAAM2D,EACNxJ,QAASI,EAAQJ,YArCJ,2CAAH,0DAqDRyJ,GAAY,uCAAG,oCAAA5C,EAAA,yDACdxB,EAAWnE,KACdoF,GAAiB,GAAD,OAAIxG,EAAE,iBAAN,QAChB4J,YAAW,kBAAM5E,EAAe2C,KAAK,OAAM,QAIzC3B,EAAKD,KAAKuB,OAAS,GAPJ,uBAQjBd,GAAiBxG,EAAE,kBARF,6BAec,KAH3B6J,EAAoB7D,EAAKD,KAC5B+B,QAAO,SAACjK,GAAD,OAAgCA,EAAEiM,YAA+B,KAAjBjM,EAAEiM,cACzDvF,KAAI,SAAC1G,GAAD,OAAOA,EAAEwJ,cACMC,OAfH,uBAgBjBd,GAAiBxG,EAAE,cAAD,OAA4C,IAA7B6J,EAAkBvC,OAAe,KAAO,MAAQ,CAAEuC,uBAhBlE,6BAwBS,KAHtBE,EAAe/D,EAAKD,KACvB+B,QAAO,SAACjK,GAAD,OAAQA,EAAEmG,UAAYnG,EAAEmG,QAAQ5C,KAAOvD,EAAEqG,UAAYrG,EAAEqG,QAAQ9C,MACtEmD,KAAI,SAAC1G,GAAD,OAAOA,EAAEwJ,cACCC,OAxBE,wBAyBjBd,GAAiBxG,EAAE,cAAD,OAAuC,IAAxB+J,EAAazC,OAAe,KAAO,MAAQ,CAAEyC,kBAzB7D,2BAqCnB,IAASC,KAPkB,EACvBC,EAAe,GACbC,EAAelE,EAAKD,KAAKoE,QAAO,SAACC,EAAmCzJ,GAGxE,OAFIA,EAAImJ,cAAcM,EAAUA,EAASzJ,EAAImJ,cACxCM,EAASzJ,EAAImJ,YAAc,EACzBM,IACN,IAEGF,EAAaF,IARQ,GAQ0BC,EAAatC,KAAKqC,GAtCpD,KAwCfC,EAAa3C,OAAS,GAxCP,wBAyCjBd,GACExG,EAAE,cAAD,OAAuC,IAAxBiK,EAAa3C,OAAe,IAAM,MAAQ,CAAE2C,eAAc1J,IAAK8J,KA1ChE,2BAiDfjF,GAAWG,EAAW+E,SAAWC,qBAAmBC,SACtDjF,EAAW+E,SAAWC,qBAAmBC,OACzCtF,EAASuF,IAAiBC,OAAOC,QAAQ,CAAEpF,iBAG7CL,EAAS0F,IAAWC,MAAMF,QAAQ,CAAEjC,IAAKnD,EAAWnE,GAAI0J,QAAQ9F,KAtD7C,4CAAH,qDA6DlB,IAAM+F,GAAqC,CACzCC,KAAM,WACNnK,SA3EmB,SAACF,EAAcsK,GASlC,OARA9E,IAAgB,SAACJ,GACf,IAAMmF,IAAQnF,EAAKgC,MAAK,SAAClK,GAAD,OAAOA,EAAEuD,KAAOT,EAAIS,MAC5C,OAAI6J,EACKC,EAAQnF,EAAH,CAAWpF,GAAX,mBAAmBoF,IAExBmF,EAAQnF,EAAK+B,QAAO,SAACjK,GAAD,OAAOA,EAAEuD,KAAOT,EAAIS,MAAM2E,MAGlD,GAmEPoF,YAAa,SAACF,EAAqBlF,GAAtB,OAA0CI,GAAgB8E,EAAalF,EAAO,KAC3FqF,MAAO,CAAErJ,gBAAiB,WAC1BsJ,kBAAmBjG,GAAWG,EAAW+E,SAAWC,qBAAmBe,gBAGnEC,GAAmB,uCAAG,4BAAAxE,EAAA,sEAExBnB,EAAa,CAAE9D,OAAO,EAAM4C,QAAS1E,EAAE0F,OAFf,SAGDmF,MAAM,iBAAkB,CAC7CW,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAElD,IAAKnD,EAAWnE,OANjB,cAGlByK,EAHkB,gBAQlBA,EAASC,OARS,OAUpB1G,GACFF,EACEuF,IAAiBC,OAAOC,QAAQ,CAC9BpF,WAAW,2BAAMA,GAAP,IAAmB+E,SAAUC,qBAAmBe,oBAIhE1E,GAAmB5G,EAAE,wBACrB8F,EAAWrB,GAlBa,kDAoBxB+B,GAAiBxG,EAAE,iBApBK,0DAAH,qDA7OwB,8CAoRjD,gCAAA+G,EAAA,yDACOX,GADP,uBAEII,GAAiBxG,EAAE,iBAFvB,+BAMMuF,EAAW+E,SAAWC,qBAAmBe,gBAN/C,uBAOI9E,GAAiBxG,EAAE,iBAPvB,0BAWE4F,EAAa,CAAE9D,OAAO,EAAM4C,QAAS1E,EAAE0F,OACjCqG,EAAQ,6BAA6B1H,cAAcC,MAAM,IAC3DhE,EAAU,EACV0L,EAAqBhG,EAAKD,KAAKxB,KAAI,SAAA5D,GAKrC,OAJIL,IAAY8F,KAAc9F,EAAU,GACxCK,EAAImJ,WAAaiC,EAAMzL,GACvBA,IACA4G,YAAS,CAAEC,KAAMxG,IACVA,KAGTiG,GAAmB5G,EAAE,4BACrBiG,GAAQ,SAACgG,GAAD,MAAe,CAAElG,KAAMiG,EAAS9L,QAAS+L,EAAS/L,YAvB5D,6CApRiD,sBA8SjD,IDtQ4B4D,GCsQtBoI,GAAgBC,KAAKC,MACzBD,KAAKC,OAAOpG,EAAK9F,QAAQoH,OAAS,GAAK,IACf,IAArBtB,EAAKD,KAAKuB,OACP,EACAtB,EAAKD,KAAKoE,QAAO,SAACkC,EAAqBxO,GAAO,IAAD,IAC3C,OAAMA,EAAEmG,UAAYnG,EAAEqG,WAAa,UAACrG,EAAEmG,eAAH,aAAC,EAAW5C,OAAM,UAACvD,EAAEqG,eAAH,aAAC,EAAW9C,IAAYiL,EAAc,EACtFxO,EAAEmG,SAAYnG,EAAEmG,QAAQ5C,IAAOvD,EAAEqG,SAAYrG,EAAEqG,QAAQ9C,GACrDiL,EADgEA,EAAc,KAEpF,KAGLC,GAAiBpG,EAAaoB,QAAU,GAAK/B,EAAW+E,SAAWC,qBAAmBe,eAItFiB,GACJ,eAACtN,EAAA,EAAD,WACE,cAACA,EAAA,EAAWU,QAAZ,UACE,cAACV,EAAA,EAAWM,KAAZ,UAAkBS,EAAE,uBAEtB,cAACwM,EAAA,EAAD,CACE/K,YACEuE,EAAKD,KAAKuB,OAAS,EAAItH,EAAE,gBAAkBA,EAAE,eAAgB,CAAEyM,IAAKN,KAAKC,MAAMpG,EAAKD,KAAKuB,OAAS,KAEpGtK,KAAK,SACL0P,KAAM,EACNnM,IAAK,EACLkM,IAAKN,KAAKC,MAAMpG,EAAKD,KAAKuB,OAAS,GACnCpK,MAAwB,IAAjBkJ,GAAqBA,QAAe/H,EAC3CpB,SAAU,SAAC0P,GAAD,OAA2CtG,GAAgBuG,OAAOD,EAAME,cAAc3P,SAChGC,SACE6I,EAAKD,KAAKuB,OAAS,GACnB/B,EAAW+E,WAAaC,qBAAmBC,QAC3CjF,EAAW+E,WAAaC,qBAAmBuC,SAG/C,cAAC7N,EAAA,EAAWS,OAAZ,UACE,cAACxB,EAAA,EAAD,CACEkC,QAAQ,UACRC,QArVyC,4CAsVzClD,UAAWiJ,IAAgBA,GAAe+F,KAAKC,MAAMpG,EAAKD,KAAKuB,OAAS,IAAMtB,EAAKD,KAAKuB,OAAS,EAHnG,SAKGtH,EAAE,sBAKL+M,GACJ,eAAC9N,EAAA,EAAD,WACE,cAACA,EAAA,EAAWU,QAAZ,UACE,cAACV,EAAA,EAAWM,KAAZ,UAAkBS,EAAE,sBAEtB,cAACwM,EAAA,EAAD,CACErP,SAAU+O,IAAiB,EAC3BlP,KAAK,SACL0P,KAAM,EACNnM,IAAK,EACLkM,IAAKP,GACLzK,YAAayK,IAAiB,EAAIlM,EAAE,gBAAkBA,EAAE,eAAgB,CAAEyM,IAAKP,KAC/EjP,SAAU,SAAC0P,GAAD,OAA2CpG,GAAiBqG,OAAOD,EAAME,cAAc3P,SACjGA,MAAOoJ,IAAiB,KAE1B,eAACrH,EAAA,EAAWS,OAAZ,WACE,cAACxB,EAAA,EAAD,CACEkC,QAAQ,UACRC,QAAS,SAACxC,GAAD,OAAY0I,GAAiB2F,KACtC/O,SAAUmJ,GAAgB4F,GAH5B,SAKGlM,EAAE,gBAEL,cAAC9B,EAAA,EAAD,CAAQkC,QAAQ,UAAUC,QApXiB,4CAoXSlD,UAAWmJ,IAAiBA,GAAgB4F,GAAhG,SACGlM,EAAE,uBAMLgN,GACJ,sBAAKlQ,UAAWmQ,IAAYC,kBAAmBC,UAAQ,eAAvD,UACE,eAACC,EAAA,EAAD,CAAKtQ,UAAWmQ,IAAYD,SAA5B,UACE,cAACK,EAAA,EAAD,UACE,eAACnP,EAAA,EAAD,CAAQkC,QAAQ,YAAYtD,UAAU,0BAA0BuD,QA9JxE,WACE2E,EAAe2C,KAAK,MA6Jd,UACE,cAAC,IAAD,IADF,IACgB3H,EAAE,0BAInBuF,EAAW+E,SAAWC,qBAAmBe,eAAiB,KACzD,cAAC+B,EAAA,EAAD,UACE,eAACnP,EAAA,EAAD,CACEkC,QAAQ,UACRtD,UAAU,eACVuD,QAAS,kBAAMR,MACf1C,SAAU+O,IAAiB,IAAM9G,EAJnC,UAME,cAAC,IAAD,IANF,IAMgBpF,EAAE,qBAIrBuF,EAAW+E,SAAWC,qBAAmBe,eAAiB,KACzD,cAAC+B,EAAA,EAAD,UACE,eAACnP,EAAA,EAAD,CAAQkC,QAAQ,SAAStD,UAAU,eAAeuD,QAlZX,4CAkZ+BlD,SAAUmP,KAAmBlH,EAAnG,UACE,cAAC,IAAD,IADF,IACyC,IAAxBc,EAAaoB,OAAetH,EAAE,mBAAqBA,EAAE,0BAIzEuF,EAAW+E,WAAaC,qBAAmBC,OAAS,KACnD,cAAC6C,EAAA,EAAD,UACE,cAACnP,EAAA,EAAD,CAAQkC,QAAQ,SAAStD,UAAU,eAAeuD,QApJ5D,WACMkF,EAAW+E,SAAWC,qBAAmBC,OAC3ChE,GAAiBxG,EAAE,iBAIrB8F,EAAW,CACTpB,QAAQ,GAAD,OAAK1E,EAAE,4BAAP,MACPK,QAAS,kBAAMkL,MACf+B,OAAQ,kBAAMxH,EAAWrB,IACzBI,MAAM,EACNC,MAAO9E,EAAE,wBAyIsE7C,UAAWiI,EAApF,SACGpF,EAAE,oBAIT,cAACqN,EAAA,EAAD,UACE,eAACnP,EAAA,EAAD,CACEkC,QAAQ,kBACRtD,UAAU,+CACVuD,QAASsJ,GACTxM,UAAWiI,EAJb,UAME,8BAAIpF,EAAE,mBAAN,OANF,IAMiC,cAAC,IAAD,YAIpCoF,GAAWG,EAAW+E,UAAYC,qBAAmBe,eACpD,qCACGiB,GACAQ,MAED,QAIFpJ,GAAS,CACbK,QAAShE,EAAE,sBACXkE,QAASlE,EAAE,sBACXsB,MAAOtB,EAAE,oBACTmE,OAAQnE,EAAE,qBACVuN,MAAOvN,EAAE,oBACTwN,MAAOxN,EAAE,qBAGX,OACE,gCACE,cAAC,aAAD,CAAY0E,QAASmB,EAAQnB,QAASI,MAAOe,EAAQf,MAAOzE,QAASwF,EAAQxF,QAASwE,KAAMgB,EAAQhB,OACpG,cAAC,eAAD,CAAcA,KAAMc,EAAU7D,MAAO4C,QAASiB,EAAUjB,UACxD,eAAC2I,EAAA,EAAD,WACGL,GACD,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKF,UAAQ,aAAb,SAEGnH,EAAKD,MAAQC,EAAK9F,QACjB,cAAC,IAAD,CACNiN,UAAQ,aACAM,YAAU,EACVC,SAAS,KACT1H,KAAMA,EAAKD,KACXrC,QAASA,EAAQ7C,GAAUmF,EAAK9F,QAASyD,IACzCgK,UDnac7J,GCmaUsB,GAAWG,EAAW+E,SAAWC,qBAAmBC,ODla1FoD,IAAgB,CACd5C,KAAMlH,GAAW,QAAU,OAC3B+J,YAAY,EACZC,cAAe,SAACC,EAAUC,EAAUrN,EAAKoC,GAEd,kBAArBA,EAAOa,WAAsD,kBAArBb,EAAOa,WACnD,sBAAC,4BAAAmD,EAAA,sEACwB8D,MAAM,eAAgB,CAC3CW,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUjL,KAJxB,cACOkL,EADP,gBAMOA,EAASC,OANhB,0CAAD,OC6ZUf,UAAWA,GACXkD,iBAAkB,kBAChB,cAAC,EAAD,CAAQlO,WAAYqF,IAAW,EAAOvF,OAAQ,kBAAMA,MAAUC,cAAekG,EAAK9F,QAAQoH,UAE5F4G,QAAS,cAAC,IAAD,IACTC,cAAc,0CACdC,SAAO,EACPC,OAAK,IAEL,mB,oBCngBhBC,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,kBAAoB,kCAAkC,YAAc,8B,iCCDpI,sGACO,IAAMC,EAAsB,yBAGtB9I,EAAuB,iBAGvB+I,EAA0B,qB,gHCyBxBC,IAxByC,WACtD,IAAMnJ,EAAaF,YAAYG,IAAmBC,eAC1CzF,EAAMC,YAAe,CAAC,eAAtBD,EACR,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,oBAAIlD,UAAU,aAAd,SACE,eAAC,IAAD,CAAOsD,QAAQ,OAAf,UACE,iCAAOJ,EAAE,cAAD,OAAeuF,EAAWoJ,OAAS,SAAS,UAA5C,gBAAR,OACA,uCAAUpJ,EAAW1I,KAAKwH,cAA1B,OACA,+BACE,2CACSuK,YAAWrJ,EAAWsJ,MAD/B,KAEE,wCAAW7O,EAAE,uBAAD,OAAwBuF,EAAW+E,cAC4C","file":"static/js/7.2b1c7429.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\ninterface NoDataProps {\n  optionsLength: number;\n  isEditable: boolean;\n  addRow: () => void;\n}\n\n// Componente da mostrare se non sono presenti coppie\nconst NoData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\n  const { t } = useTranslation(['common', 'pair','player']);\n  const MIN_PLAYERS = 8;\n  const players = optionsLength - 1;\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\n  if (!optionsLength) return null;\n  return players >= MIN_PLAYERS ? (\n    <>\n      <p>{`${t('pair:missing.1')}...`}</p>\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\n        {t('pair:add.one')}\n      </Button>\n    </>\n  ) : (\n    <>\n      <p>{t('pair:missing.2', { current: players, min: MIN_PLAYERS })}</p>\n      <p>{`${diff === 1 ? t('pair:missing.3') : t('pair:missing.4', { diff })}...`}</p>\n      <Link to={'/player'}>\n        <Button variant=\"success\">{t('player:add')}</Button>\n      </Link>\n    </>\n  );\n};\n\nexport default NoData;\n","import {PairDTO, PlayerDTO} from '../../@common/dto';\nimport React, { useState } from 'react';\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\n\nexport interface PlayerSelectProps {\n  styles?: Partial<Styles>;\n  options: PlayerDTO[];\n  columnIndex: number;\n  id: number;\n  onUpdate: any;\n  onSelect: any;\n  row: any;\n}\n\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\n\n    const handleChange = (option: ValueType<PlayerDTO, false>, actionMeta: ActionMeta<PlayerDTO>) => {\n      setSelectedOption(option as PlayerDTO);\n      onSelect(option, row.id, columnIndex);\n    };\n\n    return (\n      <Select\n        styles={styles}\n        options={options}\n        onChange={handleChange}\n        getOptionLabel={(option) => option.alias}\n        getOptionValue={(option) => option.id?.toString(10)!}\n        value={selectedOption}\n        placeholder=\"Cerca...\"\n        isSearchable\n        isClearable\n      />\n    );\n  }\n);\n\nexport default PlayerSelection;\n","import { Styles } from 'react-select';\nimport { PairDTO } from '../../@common/dto';\n\nexport const valueFormatter = (selectedOption: PairDTO) =>\n  selectedOption.alias ? `${selectedOption.alias}` : createAlias(selectedOption);\n\nexport function createAlias(selectedOption: PairDTO) {\n  let value = `${selectedOption.rowNumber} : `;\n  const { player1, player2 } = selectedOption;\n  value += player1!.alias ? player1!.alias : player1!.name;\n  value += ' - ' + player2!.alias ? player2!.alias : player2!.name;\n  // value += ` ( ${id} )`;\n  return value;\n}\n\nexport const customStyles: Partial<Styles> | undefined = {\n  // menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'white',\n    color: 'black',\n    '&:hover': {\n      backgroundColor: '#64bd9c',\n      color: 'white',\n    },\n  }),\n  input: (provided) => ({ ...provided, backgroundColor: '#64bd9c' }),\n  control: (provided) => ({ ...provided, height: '3vmin', marginBottom: 'auto' }),\n  singleValue: (provided) => ({ ...provided }),\n  valueContainer: (provided) => ({ ...provided, height: '100%', fontSize: 'larger' }),\n};\n","import React from 'react';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport PlayerSelect from '../Player/select';\nimport { customStyles } from './helper';\n\nimport { ToggleButton, ButtonGroup } from 'react-bootstrap';\n\nconst ALIGN_CENTER = 'center';\nconst YES = 'Si';\nconst NO = 'No';\n\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\n  <PlayerSelect\n    {...editorProps}\n    id={columnIndex}\n    row={row}\n    rowIndex={rowIndex}\n    columnIndex={columnIndex}\n    value={value}\n    onSelect={onSelect}\n    options={options}\n    styles={customStyles}\n  />\n);\n\nconst checkBoxProps = {\n  align: () => ALIGN_CENTER,\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\n  editor: {\n    type: Type.CHECKBOX,\n    value: `${YES}:${NO}`,\n  },\n  formatter: (cell, row, rowIndex, formatExtraData) => (\n    <ButtonGroup toggle className=\"mb-2\">\n      <ToggleButton variant={!!cell ? 'success' : 'danger'} checked={cell} value=\"1\" type=\"checkbox\">\n        {!!cell ? 'Pagato' : 'Non Pagato'}\n      </ToggleButton>\n    </ButtonGroup>\n  ),\n  //style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\n};\n\nexport const columns = (onSelect, options, labels) => [\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\n  {\n    dataField: 'player1.alias',\n    text: labels.player1,\n    align: () => ALIGN_CENTER,\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\n  },\n  {\n    dataField: 'player2.alias',\n    text: labels.player2,\n    align: () => ALIGN_CENTER,\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\n  },\n  { dataField: 'alias', text: labels.alias, headerStyle: (column, colIndex) => ({ width: '25%' }) },\n  {\n    dataField: 'stage1Name',\n    text: labels.stage1,\n    align: () => ALIGN_CENTER,\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\n    editor: {\n      type: Type.SELECT,\n      options: 'abcdefghijklmnopqrstuvwxyz'\n        .toUpperCase()\n        .split('')\n        .map((e) => ({ value: e, label: e })),\n    },\n  },\n  {\n    dataField: 'paid1',\n    text: 'Pagato 1',\n    ...checkBoxProps,\n  },\n  {\n    dataField: 'paid2',\n    text: 'Pagato 2',\n    ...checkBoxProps,\n  },\n];\n\nexport const cellEditProps = (editable) =>\n  cellEditFactory({\n    mode: editable ? 'click' : 'none',\n    blurToSave: true,\n    afterSaveCell: (oldValue, newValue, row, column) => {\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\n      (async () => {\n        const response = await fetch('/api/v1/pair', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(row),\n        });\n        await response.json();\n      })();\n    },\n  });\n","import React, { useState, useEffect } from 'react';\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\nimport { useHistory } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n// Components\nimport NoData from './noData';\n// Core / Helper / Editor\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\nimport { FormEventType } from '../core/types';\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\nimport { cellEditProps, columns } from './editor';\n// Style\nimport './style.css';\nimport commonStyle from '../../common.module.css';\n// Service\nimport { fetchPlayers } from '../../redux/services/player.service';\n// Selector\nimport { AuthSelector } from 'src/redux/selectors/auth.selector';\nimport { TournamentSelector } from 'src/redux/selectors/tournament.selector';\n// Action\nimport { TournamentAction, PairAction } from '../../redux/actions';\nimport TournamentBadge from '../Tournament/badge';\nimport { useTranslation } from 'react-i18next';\n// Models\nimport { PairDTO, PlayerDTO, TournamentProgress } from 'src/@common/dto';\nimport {\n  deletePairs,\n  fetchPairs,\n  findAlias,\n  postPair,\n  updatePair,\n} from 'src/redux/services/pair.service';\nimport { HTTPStatusCode } from 'src/@common/models/HttpStatusCode';\nimport { LABEL_COMMON_LOADING } from 'src/@common/constants/label';\nimport {FetchPairsResponse, FindAliasResponse, getEmptyPair, getEmptyPlayer, SavePairResponse} from '../../@common/models';\n\nconst hideAskUser = {\n  message: '',\n  onClick: () => console.log(''),\n  show: false,\n  title: '',\n};\ninterface PairTableProps {}\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst PairsTable: React.FC<PairTableProps> = () => {\n  // Navigation\n  const currentHistory = useHistory();\n  const dispatch = useDispatch();\n  const { t } = useTranslation(['common', 'pair']);\n\n  const isAdmin = useSelector(AuthSelector.isAdmin);\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n\n  // States\n  // User messages\n  const [isLoading, setIsLoading] = useState({ state: false, message: t(LABEL_COMMON_LOADING) });\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\n\n  // Data\n  const [data, setData] = useState<{ rows: PairDTO[]; players: PlayerDTO[] }>({ rows: [], players: [] });\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\n  // Function params\n  const [stage1Number, setStage1Number] = useState<number>(0);\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\n\n  // Initial Fetch\n  useEffect(() => {\n    if (!tournament) return;\n    (async () => {\n      const { pairsList } = await fetchPairs({ tId: tournament.id }) as FetchPairsResponse;\n      const { playersList } = await fetchPlayers({ addEmpty: true, tId: tournament.id });\n      setData({ rows: pairsList, players: playersList });\n    })();\n  }, [tournament]);\n\n  // User messages\n  function showErrorMessage(message: string) {\n    setIsLoading({ state: false, message });\n    toast.error(message, { autoClose: 10000 });\n  }\n  function showSuccessMessage(message: string) {\n    setIsLoading({ state: false, message });\n    toast.success(message);\n  }\n\n  async function addRow(index?: number) {\n    try {\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\n      const emptyRow:PairDTO = getEmptyPair('',tournament.id || 0);\n      const result = await postPair({ pair: emptyRow }) as SavePairResponse;\n      emptyRow.id = result.pair.id;\n      emptyRow.rowNumber = index || data.rows.length + 1;\n      setData((current) => ({\n        rows: [emptyRow, ...current.rows].map((p, i) => ({...p,rowNumber:i+1})),\n        players: current.players,\n      }));\n      showSuccessMessage(t('pair:success.add'));\n    } catch (error) {\n      showErrorMessage(t('pair:error.19'));\n    }\n  }\n\n  async function addMultipleRows() {\n    let index = data.rows.length + 1;\n    for (let ii = 0; ii < newRowsNumber; ii++) {\n      await addRow(index);\n      index++;\n    }\n    setNewRowsNumber(0);\n  }\n\n  async function deleteRow() {\n    try {\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\n      // Devo ripristinare i giocatori eliminati\n      const players: Array<PlayerDTO> = [];\n      selectedRows.forEach((e) => {\n        if (e.player1 && e.player1.id) players.push(e.player1);\n        if (e.player2 && e.player2.id) players.push(e.player2);\n      });\n\n      await deletePairs({ pairsList: selectedRows });\n      setData((current) => ({\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\n        players: players\n          ? [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\n          : current.players,\n      }));\n\n      showSuccessMessage(t(`pair:success.${selectedRows.length > 1 ? 'deleteMulti' : 'deleteOne'}`));\n    } catch (error) {\n      showErrorMessage(t('pair:error.18'));\n    }\n\n    setSelectedRows([]);\n  }\n\n  // update players list when a player is selected\n  function updateOptions(player: PlayerDTO | undefined, selected: PlayerDTO) {\n    if (player && player.id)\n      if (selected.id)\n        setData((current) => ({\n          rows: current.rows,\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\n            e1.alias.localeCompare(e2.alias)\n          ),\n        }));\n      else\n        setData((current) => ({\n          rows: current.rows,\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\n        }));\n    else if (selected.id)\n      setData((current) => ({\n        rows: current.rows,\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\n      }));\n  }\n  // Aggiorno la colonna con il giocatore selezionato\n  const onSelect = async (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\n    const newRowsElement = await Promise.all(\n      data.rows.map<Promise<PairDTO>>(async (rowElement) => {\n        if (rowElement.id === rowIndex) {\n          let row = rowElement;\n          if (columnIndex === 1) {\n            if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\n              // Devo salvare l'elemnto che sto per sostituire\n              row.player1 = getEmptyPlayer();\n              showErrorMessage(t('pair:error.17'));\n            } else {\n              // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\n              updateOptions(row.player1, selectedElement);\n              row.player1 = selectedElement;\n            }\n          } else {\n            if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\n              row.player2 = getEmptyPlayer();\n              showErrorMessage(t('pair:error.17'));\n            } else {\n              updateOptions(row.player2, selectedElement);\n              row.player2 = selectedElement;\n            }\n          }\n          //\n          if (!row.alias && row.player1 && row.player1.id && row.player2 && row.player2.id) {\n            const result = await findAlias({ player1Id: row.player1.id, player2Id: row.player2.id }) as FindAliasResponse;\n            row.alias = result.code === HTTPStatusCode.OK && result.alias ? result.alias : '';\n          }\n          // update Db. Non aspetto la risposta...\n          updatePair({ pair: row });\n          return row;\n        } else return rowElement;\n      })\n    );\n    setData((current) => ({\n      rows: newRowsElement,\n      players: current.players,\n    }));\n  };\n\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\n    setSelectedRows((rows) => {\n      const found = rows.find((e) => e.id === row.id) ? true : false;\n      if (isSelected) {\n        return found ? rows : [row, ...rows];\n      } else {\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\n      }\n    });\n    return true;\n  };\n\n  const confirmPairs = async () => {\n    if (!tournament.id) {\n      showErrorMessage(`${t('pair:error.16')}...`);\n      setTimeout(() => currentHistory.push('/'), 5000);\n    }\n\n    // Controllo che sia presente almeno una coppia\n    if (data.rows.length < 4) {\n      showErrorMessage(t('pair:error.15'));\n      return;\n    }\n    // Controllo gironi non assegnati\n    const missingStage1Name = data.rows\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\n      .map((e) => e.rowNumber);\n    if (missingStage1Name.length !== 0) {\n      showErrorMessage(t(`pair:error.${missingStage1Name.length === 1 ? '13' : '14'}`, { missingStage1Name }));\n      return;\n    }\n\n    // Controllo coppie non assegnate\n    const missingPairs = data.rows\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\n      .map((e) => e.rowNumber);\n    if (missingPairs.length !== 0) {\n      showErrorMessage(t(`pair:error.${missingPairs.length === 1 ? '11' : '12'}`, { missingPairs }));\n      return;\n    }\n\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\n    const MIN_PAIR_PER_STAGE = 3;\n    let invalidStage = [];\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\n      else allNames[row.stage1Name] = 1;\n      return allNames;\n    }, {});\n    for (let stageName in pairsInStage) {\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\n    }\n    if (invalidStage.length > 0) {\n      showErrorMessage(\n        t(`pair:error.${invalidStage.length === 1 ? '9' : '10'}`, { invalidStage, min: MIN_PAIR_PER_STAGE + 1 })\n      );\n      return;\n    }\n\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\n    // allora aggiorno lo stato del torneo\n    if (isAdmin && tournament.progress < TournamentProgress.Stage1) {\n      tournament.progress = TournamentProgress.Stage1;\n      dispatch(TournamentAction.update.request({ tournament }));\n    }\n    // Go to Stage1\n    dispatch(PairAction.fetch.request({ tId: tournament.id, history:currentHistory }));\n  };\n\n  function goBack() {\n    currentHistory.push('/');\n  }\n\n  const selectRow: SelectRowProps<PairDTO> = {\n    mode: 'checkbox',\n    onSelect: handleSelect,\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\n    style: { backgroundColor: '#c8e6c9' },\n    hideSelectColumn: !isAdmin || tournament.progress > TournamentProgress.PairsSelection,\n  };\n\n  const processDeleteStage1 = async () => {\n    try {\n      setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\n      const response = await fetch('/api/v1/stage1', {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ tId: tournament.id }),\n      });\n      await response.json();\n      // Update tournament progress\n      if (isAdmin) {\n        dispatch(\n          TournamentAction.update.request({\n            tournament: { ...tournament, progress: TournamentProgress.PairsSelection },\n          })\n        );\n      }\n      showSuccessMessage(t('pair:success.delete'));\n      setAskUser(hideAskUser);\n    } catch (error) {\n      showErrorMessage(t('pair:error.8'));\n    }\n  };\n\n  function deleteStage1() {\n    if (tournament.progress > TournamentProgress.Stage1) {\n      showErrorMessage(t('pair:error.7'));\n      return;\n    }\n    // Chiedo conferma all'utente\n    setAskUser({\n      message: `${t('pair:stage1.resetConfirm')} ?`,\n      onClick: () => processDeleteStage1(),\n      onHide: () => setAskUser(hideAskUser),\n      show: true,\n      title: t('pair:stage1.reset'),\n    });\n  }\n\n  async function setStage1Name() {\n    if (!stage1Number) {\n      showErrorMessage(t('pair:error.6'));\n      return;\n    }\n\n    if (tournament.progress > TournamentProgress.PairsSelection) {\n      showErrorMessage(t('pair:error.5'));\n      return;\n    }\n\n    setIsLoading({ state: true, message: t(LABEL_COMMON_LOADING) });\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\n    let current = 0;\n    let newRows: PairDTO[] = data.rows.map(row => {\n      if (current === stage1Number) current = 0;\n      row.stage1Name = names[current];\n      current++;\n      postPair({ pair: row });\n      return row;\n    });\n    //const mapper = data.rows.map(p => ({ id: p.id, stage1Name: p.stage1Name }));\n    showSuccessMessage(t('pair:success.stage1Name'));\n    setData((prevData) => ({ rows: newRows, players: prevData.players }));\n  }\n\n  const availableRows = Math.floor(\n    Math.floor((data.players.length - 1) / 2) -\n      (data.rows.length === 0\n        ? 0\n        : data.rows.reduce((accumulator: number, e) => {\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\n            return accumulator;\n          }, 0))\n  );\n\n  const deleteDisabled = selectedRows.length <= 0 || tournament.progress > TournamentProgress.PairsSelection;\n\n  //console.log('render table : ', players, pairs);\n\n  const assignMatches = (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text>{t('pair:stage1.set')}</InputGroup.Text>\n      </InputGroup.Prepend>\n      <FormControl\n        placeholder={\n          data.rows.length < 4 ? t('pair:error.3') : t('pair:error.4', { max: Math.floor(data.rows.length / 4) })\n        }\n        type=\"number\"\n        step={1}\n        min={0}\n        max={Math.floor(data.rows.length / 4)}\n        value={stage1Number !== 0 ? stage1Number : undefined}\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\n        disabled={\n          data.rows.length < 4 ||\n          tournament.progress === TournamentProgress.Stage1 ||\n          tournament.progress === TournamentProgress.Stage2\n        }\n      />\n      <InputGroup.Append>\n        <Button\n          variant=\"primary\"\n          onClick={setStage1Name}\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\n        >\n          {t('common:exec')}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n  const addPairs =  (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text>{t('pair:add.multi')}</InputGroup.Text>\n      </InputGroup.Prepend>\n      <FormControl\n        disabled={availableRows <= 0}\n        type=\"number\"\n        step={1}\n        min={1}\n        max={availableRows}\n        placeholder={availableRows <= 0 ? t('pair:error.1') : t('pair:error.2', { max: availableRows })}\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\n        value={newRowsNumber || ''}\n      />\n      <InputGroup.Append>\n        <Button\n          variant=\"primary\"\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\n          disabled={newRowsNumber > availableRows}\n        >\n          {t('common:max')}\n        </Button>\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\n          {t('common:exec')}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n\n  const toolsBar =  (\n    <div className={commonStyle.toolsBarContainer} data-cy=\"pair-toolbar\">\n      <Row className={commonStyle.toolsBar}>\n        <Col>\n          <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\n            <HomeIcon /> {t('common:route.home')}\n          </Button>\n        </Col>\n\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\n          <Col>\n            <Button\n              variant=\"success\"\n              className=\"align-middle\"\n              onClick={() => addRow()}\n              disabled={availableRows <= 0 || !isAdmin}\n            >\n              <PlusIcon /> {t('pair:add.one')}\n            </Button>\n          </Col>\n        )}\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\n          <Col>\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteRow} disabled={deleteDisabled || !isAdmin}>\n              <TrashIcon /> {selectedRows.length === 1 ? t('pair:delete.one') : t('pair:delete.multi')}\n            </Button>\n          </Col>\n        )}\n        {tournament.progress !== TournamentProgress.Stage1 ? null : (\n          <Col>\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!isAdmin}>\n              {t('stage1:reset')}\n            </Button>\n          </Col>\n        )}\n        <Col>\n          <Button\n            variant=\"outline-warning\"\n            className=\"default-color-white float-right align-middle\"\n            onClick={confirmPairs}\n            disabled={!isAdmin}\n          >\n            <b>{t('common:continue')} </b> <RightArrowIcon />\n          </Button>\n        </Col>\n      </Row>\n      {isAdmin && tournament.progress <= TournamentProgress.PairsSelection ? (\n        <>\n          {assignMatches}\n          {addPairs}\n        </>\n      ) : null}\n    </div>\n  );\n\n  const labels = {\n    player1: t('pair:field.player1'),\n    player2: t('pair:field.player2'),\n    alias: t('pair:field.alias'),\n    stage1: t('pair:field.stage1'),\n    paid1: t('pair:field.paid1'),\n    paid2: t('pair:field.paid2'),\n  };\n\n  return (\n    <div>\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\n      <Col>\n        {toolsBar}\n        <Row>\n          <Col data-cy=\"pair-table\">\n            { // https://github.com/react-bootstrap-table/react-bootstrap-table2/issues/1451\n            \tdata.rows && data.players ? (\n              <BootstrapTable\n\t\t\t\t\t\t\t\tdata-cy=\"pair-table\"\n                bootstrap4\n                keyField=\"id\"\n                data={data.rows}\n                columns={columns(onSelect, data.players, labels) as ColumnDescription<PairDTO, PairDTO>[]}\n                cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage1)}\n                selectRow={selectRow}\n                noDataIndication={() => (\n                  <NoData isEditable={isAdmin || false} addRow={() => addRow()} optionsLength={data.players.length} />\n                )}\n                caption={<TournamentBadge />}\n                headerClasses=\"default-background default-color-yellow\"\n                striped\n                hover\n              />\n            ) : null}\n          </Col>\n        </Row>\n      </Col>\n    </div>\n  );\n};\n\nexport default withRouter(PairsTable);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","// Auth\nexport const LABEL_AUTH_PASSWORD = 'auth:password.password';\n\n// Common\nexport const LABEL_COMMON_LOADING = 'common:loading';\n\n// Tournament\nexport const LABEL_TOURNAMENT_SELECT = 'tournament:select';\n","import React from 'react';\nimport { TournamentSelector } from '../../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Badge } from 'react-bootstrap';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface TournamentBadgeProps {}\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  const { t } = useTranslation(['tournament']);\n  return (\n    <Row>\n      <Col>\n        <h2 className=\"float-left\">\n          <Badge variant=\"info\">\n            <span>{t(`tournament:${tournament.public ? 'public':'private'}_tournament`)} </span>\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\n            <span>\n              <i>\n                {` - ${formatDate(tournament.date)} `}\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\n                {process.env.NODE_ENV === 'development' ? <strong>{`  --> ( ${tournament.id} )`}</strong>: null}\n              </i>\n            </span>\n          </Badge>\n        </h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TournamentBadge;\n"],"sourceRoot":""}