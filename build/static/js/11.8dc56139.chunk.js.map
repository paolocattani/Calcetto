{"version":3,"sources":["selectors/tournament.selector.ts","selectors/stage1.selector.ts","common.module.css","components/Stage1/header.tsx","components/Stage1/helper.ts","components/Stage1/table.jsx","components/Stage1/editor.js","components/Stage1/handler.tsx","components/core/generic/GenericModal.tsx","components/Stage1/wrapper.tsx"],"names":["TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","Stage1Selector","stage1State","getSelectedRows","selectedRows","getSelectedPairs","selectedPairs","getNeedRefresh","needRefresh","module","exports","tableHeader","title","saved","divStyle","color","undefined","style","comparator","obj1","obj2","total","rowNumber","Stage1Table","editable","rows","columns","tableName","updateCellValue","autoOrder","updatePlacement","dispatch","useDispatch","useState","setSelectedRows","session","useSelector","SessionSelector","getSession","selectRow","mode","onSelect","row","isSelected","console","log","selected","found","find","e","filter","Stage1Action","setSelectedPairs","stageName","onSelectAll","backgroundColor","bootstrap4","keyField","data","cellEdit","isAdmin","cellEditFactory","blurToSave","beforeSaveCell","oldValue","newValue","column","id","startsWith","parseInt","text","value","getOpposite","afterSaveCell","acc","key","sort","e1","e2","forEach","index","noDataIndication","headerClasses","caption","striped","hover","newColumn","dataField","toString","headerStyle","colIndex","width","headerAlign","content","rowIndex","columnIndex","align","cell","editor","type","Type","SELECT","options","label","pairsList","baseColumns","ii","length","push","Stage1Handler","setIsLoading","setIsSaved","map","tId","pair","placement","jj","rowsGenerator","setRows","stage1Name","a","model","fetch","method","headers","body","JSON","stringify","response","json","model1","score","pair1Id","pair2Id","ok","setTimeout","useEffect","result","fetchData","GenericModal","show","onHide","component","size","showWrapper","Modal","centered","Header","closeButton","Title","Body","withRouter","currentHistory","useHistory","setPairsList","hideError","message","showError","setShowError","fetchPairs","ListGroup","Item","className","commonStyle","functionsList","Button","variant","onClick","Stage2Action","delete","request","progress","TournamentProgress","Stage2","TournamentAction","updateTournament","count","fetchStage2","tournamentId","disabled","stage","stageList","localeCompare","element","renderTables"],"mappings":"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","file":"static/js/11.8dc56139.chunk.js","sourcesContent":["import { RootState } from 'models/common.model';\r\nimport { TournamentDTO } from 'models/tournament.model';\r\n\r\n// Get state from store\r\nexport const TournamentSelector = {\r\n  isLoading({ tournamentState: { isLoading } }: RootState): boolean {\r\n    return isLoading;\r\n  },\r\n  // Get selected Tournament\r\n  getTournament({ tournamentState: { tournament } }: RootState): TournamentDTO | null {\r\n    return tournament;\r\n  },\r\n  // Get tournament List\r\n  getTournamentsList({ tournamentState: { tournamentsList } }: RootState): TournamentDTO[] {\r\n    return tournamentsList;\r\n  },\r\n};\r\n","import { RootState, Stage1Row, PairDTO } from 'models';\r\n\r\n// Get state from store\r\nexport const Stage1Selector = {\r\n  isLoading({ stage1State: { isLoading } }: RootState): boolean {\r\n    return isLoading;\r\n  },\r\n  // Get pairs List\r\n  getSelectedRows({ stage1State: { selectedRows } }: RootState): Map<string, Stage1Row[]> | null {\r\n    return selectedRows || null;\r\n  },\r\n  getSelectedPairs({ stage1State: { selectedPairs } }: RootState): PairDTO[] {\r\n    return selectedPairs;\r\n  },\r\n  getNeedRefresh({ stage1State: { needRefresh } }: RootState): boolean {\r\n    return needRefresh;\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\"};","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import { PairDTO, Stage1Row } from 'models';\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value: string | null) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (parseInt(value)) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n\r\n/**\r\n * Questo metodo riceve una lista di coppie PairdDTO e la trasforma in Stage1Row.\r\n * Viene utilizzato da Stage1.handler per costruire la struttura da passare alla tabella\r\n * Inoltre viene passata al BE per salvare i dati sul DB.\r\n *\r\n * @param pairsList PairDTO[] Lista di coppie\r\n *\r\n */\r\nexport const rowsGenerator = (pairsList: PairDTO[]): Stage1Row[] =>\r\n  pairsList.map((e, ii) => {\r\n    const row: Stage1Row = {\r\n      id: `row-${e.tId}-${ii}`,\r\n      rowNumber: ii + 1,\r\n      pair: e,\r\n      total: 0,\r\n      placement: e.placement || 0,\r\n    };\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      row[`col${jj}`] = null;\r\n    }\r\n    return row;\r\n  });\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\n//\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n// style\r\nimport { Stage1Action } from 'actions';\r\n\r\n// TODO: convert this component to ts\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, autoOrder, updatePlacement, saved }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const session = useSelector(SessionSelector.getSession);\r\n\r\n  const cellEditProps = (editable) =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        }\r\n      },\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          updateCellValue(oldValue, newValue, row, column);\r\n\r\n          // Ricalcolo totali riga\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col') && row[key]) acc += parseInt(row[key]);\r\n          rows[row.rowNumber - 1]['total'] = acc ? acc : 0;\r\n          console.log('Row : ', rows[row.rowNumber - 1]);\r\n          //... e riga opposta\r\n          acc = 0;\r\n          for (let key in rows[parseInt(column.text) - 1])\r\n            if (key.startsWith('col') && rows[parseInt(column.text) - 1][key])\r\n              acc += parseInt(rows[parseInt(column.text) - 1][key]);\r\n          rows[parseInt(column.text) - 1]['total'] = acc ? acc : 0;\r\n          console.log('Opposite : ', rows[parseInt(column.text) - 1]);\r\n        }\r\n        // Aggiorno posizione relativa\r\n        if (autoOrder)\r\n          [...rows]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (rows[row.rowNumber - 1]['placement'] = index + 1));\r\n        updatePlacement(rows);\r\n      },\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    console.log('handleOnSelect : ', row);\r\n    const found = selectedRows.find((e) => e.rowNumber === row.rowNumber) ? true : false;\r\n    let selected;\r\n    if (isSelected) {\r\n      selected = found ? selectedRows : [row, ...selectedRows];\r\n    } else {\r\n      selected = found ? selectedRows.filter((e) => e.rowNumber !== row.rowNumber) : selectedRows;\r\n    }\r\n    console.log('Selected : ', selected);\r\n\r\n    setSelectedRows(selected);\r\n    dispatch(\r\n      Stage1Action.setSelectedPairs({\r\n        stageName: tableName,\r\n        rows: selected,\r\n      })\r\n    );\r\n    return true;\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelected, rows) => {\r\n    setSelectedRows(isSelected ? rows : []);\r\n    dispatch(\r\n      Stage1Action.setSelectedPairs({\r\n        stageName: tableName,\r\n        rows: isSelected ? rows : [],\r\n      })\r\n    );\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    style: { backgroundColor: '#c8e6c9' },\r\n  };\r\n\r\n  console.log(' render : ', tableName, rows);\r\n\r\n  return (\r\n    <BootstrapTable\r\n      bootstrap4\r\n      keyField=\"id\"\r\n      data={rows}\r\n      columns={columns}\r\n      selectRow={selectRow}\r\n      cellEdit={cellEditProps(session.isAdmin)}\r\n      noDataIndication=\"Nessun dato reperito\"\r\n      //wrapperClasses=\"player-table\"\r\n      headerClasses=\"default-background default-color-yellow\"\r\n      caption={<TableHeader title={tableName} saved={saved} />}\r\n      striped\r\n      hover\r\n    />\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import { Type } from 'react-bootstrap-table2-editor';\r\n\r\n/*\r\n  non esistono i tipi per react-bootstrap-table2-editor\r\n  quindi lascio tutto quello che riguarda l'edit come .js\r\n*/\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    //type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#343a40' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' },\r\n      ],\r\n    },\r\n  };\r\n};\r\n\r\nexport const columns = (pairsList) => {\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#343a40', color: '#ffc107' };\r\n      },\r\n    },\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'placement',\r\n      dataField: 'placement',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { rowsGenerator, comparator } from './helper';\r\nimport { columns } from './editor';\r\nimport { Stage1Row } from 'models';\r\n\r\nconst Stage1Handler = ({ pairsList, autoOrder }: handlerPropsType): JSX.Element => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState<Stage1Row[]>(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamneto posizione coppia\r\n  const updatePlacement = async (rows: Stage1Row[]) => {\r\n    const model = rows.map((e) => ({ id: e.pair.id, placement: e.placement }));\r\n    // console.log('UpdatePlacement : ', model);\r\n    const response = await fetch('/api/v1/stage1/placement', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ rows: model }),\r\n    });\r\n    await response.json();\r\n  };\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    // console.log('updateCellValue : ', newValue, row, column);\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id,\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1),\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName }),\r\n        });\r\n        const result = await response.json();\r\n        // FIXME: Ordinamento : gestire ordinamento personalizzato\r\n\r\n        if (autoOrder)\r\n          [...result]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (result[row.rowNumber - 1]['placement'] = index + 1));\r\n\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          autoOrder={autoOrder}\r\n          rows={rows}\r\n          columns={columns(pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          updatePlacement={updatePlacement}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ntype propsType = {\r\n  title: string;\r\n  component: JSX.Element;\r\n  show: boolean;\r\n  onHide?: () => void;\r\n  size?: 'sm' | 'lg' | 'xl';\r\n};\r\n\r\n// Modale generico\r\nconst GenericModal: React.FC<propsType> = ({ title, show, onHide, component, size }: propsType) => {\r\n  let showWrapper = show;\r\n  if (!onHide) onHide = () => (showWrapper = false);\r\n  return (\r\n    <Modal show={showWrapper} onHide={onHide} size={size || 'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{component}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GenericModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\nimport { fetchPairs } from 'components/Pair/helper';\r\nimport { PairDTO, TournamentProgress } from 'models';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TournamentSelector } from 'selectors/tournament.selector';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Stage1Selector } from 'selectors/stage1.selector';\r\nimport commonStyle from '../../common.module.css';\r\nimport GenericModal from 'components/core/generic/GenericModal';\r\nimport { Stage2Action, TournamentAction } from 'actions';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\n\r\ninterface ModalProps {\r\n  show: boolean;\r\n  message: string;\r\n}\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // Session\r\n  const session = useSelector(SessionSelector.getSession);\r\n  // Torneo\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  // Sono presenti aggiornamenti\r\n  const needRefresh = useSelector(Stage1Selector.getNeedRefresh);\r\n  // Squadre selezionate\r\n  const selected = useSelector(Stage1Selector.getSelectedPairs);\r\n\r\n  const [pairsList, setPairsList] = useState<PairDTO[]>([]);\r\n  const [autoOrder /*, setAutoOrder*/] = useState<boolean>(true);\r\n  const hideError: ModalProps = { show: false, message: '' };\r\n  const [showError, setShowError] = useState<ModalProps>(hideError);\r\n\r\n  function goBack() {\r\n    currentHistory.push('/tournament');\r\n  }\r\n  function goToStage2() {\r\n    // TODO: eseguire controlli e eventualemente mostrare messaggi utente\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (session.isAdmin && tournament.progress < TournamentProgress.Stage2) {\r\n      tournament.progress = TournamentProgress.Stage2;\r\n      dispatch(TournamentAction.updateTournament.request({ model: tournament }));\r\n    }\r\n\r\n    let count = 0;\r\n    if (pairsList.length > 4) {\r\n      count = pairsList.length - 1;\r\n      while (count % 8 !== 0) count++;\r\n    }\r\n    dispatch(Stage2Action.fetchStage2.request({ tournamentId: tournament.id!, count }));\r\n    currentHistory.push('/stage2');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!pairsList || pairsList.length === 0 || needRefresh) fetchPairs(setPairsList, tournament.id!);\r\n  }, [tournament.id, needRefresh, pairsList]);\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item className={commonStyle.functionsList} key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={() => dispatch(Stage2Action.delete.request({ tId: tournament.id! }))}>\r\n          Reset Fase 2\r\n        </Button>\r\n        {/* FIXME:\r\n          <Form.Check\r\n            custom\r\n            checked={autoOrder}\r\n            type=\"checkbox\"\r\n            id=\"autoOrder\"\r\n            label={`Ordinamento Automatico ${autoOrder}`}\r\n            onChange={() => setAutoOrder(!autoOrder)}\r\n          />\r\n        */}\r\n        <Button\r\n          variant=\"success\"\r\n          className=\"float-right\"\r\n          onClick={goToStage2}\r\n          disabled={selected.length < 4 && tournament.progress < TournamentProgress.Stage2}\r\n        >\r\n          {tournament.progress} - Prosegui\r\n        </Button>\r\n      </ListGroup.Item>\r\n      <GenericModal\r\n        show={showError.show}\r\n        title=\"Errore\"\r\n        onHide={() => setShowError(hideError)}\r\n        component={<p>{showError.message}</p>}\r\n        size=\"xl\"\r\n      />\r\n      {renderTables(pairsList, autoOrder)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Wrapper);\r\n\r\nfunction renderTables(pairsList: PairDTO[], autoOrder: boolean): JSX.Element {\r\n  let stageName = '';\r\n  let stage: PairDTO[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n  // sort pairs by stage1Name\r\n  console.log('PairsList : ', pairsList);\r\n\r\n  pairsList\r\n    .sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name))\r\n    // FIXME: use .reduce  ?\r\n    .forEach((element, index) => {\r\n      // A rottura di stage1Name\r\n      if (stageName === '') stageName = element.stage1Name;\r\n      if (stageName !== element.stage1Name) {\r\n        stageList.push(\r\n          <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n            <Stage1Handler pairsList={stage} autoOrder={autoOrder} />\r\n          </ListGroup.Item>\r\n        );\r\n        stageName = element.stage1Name;\r\n        stage = [];\r\n      }\r\n      stage.push(element);\r\n    });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} autoOrder={autoOrder} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n"],"sourceRoot":""}