{"version":3,"sources":["components/assets/header.jpg","components/core/SessionContext.tsx","components/core/ProtectedRoute.tsx","components/core/utils.ts","components/Tournament/helper.ts","components/Tournament/type.ts","components/Player/helper.js","components/Tournament/Tournament.jsx","components/Player/header.tsx","components/core/Commons.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/core/Routes.ts","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/core/RedirectionControls.tsx","components/Auth/RegisterForm.tsx","components/Auth/Register.tsx","components/Auth/LoginForm.tsx","components/Auth/Login.tsx","components/Auth/Wrapper.tsx","components/Header/Header.tsx","components/App.tsx","serviceWorker.ts","components/core/Auth0.jsx","index.tsx"],"names":["module","exports","initialSession","SessionContext","createContext","useSessionContext","useContext","ProtectedRoute","props","currentLocation","useLocation","redirectPath","redirectPathOnAuthentication","isAuthenticated","setRedirectPathOnAuthentication","pathname","authenticationPath","component","to","render","undefined","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getEmptyTournament","name","progress","id","ownerId","public","label","nameFilter","surnameFilter","aliasFilter","roleFilter","TournamentProgress","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","IndicatorSeparator","innerProps","style","cardStyle","margin","borderColor","borderWidth","FTournament","_","useState","selectedOption","setSelectedOption","tournamentList","setTournamentList","currentHistory","useHistory","useEffect","setterFunction","setterFunction2","a","fetch","method","headers","response","json","result","found","find","e","tmp","sort","handleSubmit","event","preventDefault","body","JSON","stringify","res","push","Card","Header","as","Body","Title","Form","onSubmit","components","value","options","placeholder","isSearchable","isClearable","onChange","onCreateOption","newT","prevList","Button","type","size","variant","disabled","clearAllFilter","dataField","text","editable","headerClasses","autoSelectText","headerStyle","column","colIndex","filter","textFilter","getFilter","selectFilter","Portiere","Attaccante","Master","editor","Type","SELECT","getOptions","hidden","valueFormatter","alias","surname","getEmptyPlayer","role","email","phone","match_played","match_won","total_score","tableHeader","LoadingModal","message","show","onHide","Modal","centered","closeButton","Footer","Spinner","animation","SuccessToast","Toast","className","key","Alert","WarningToast","ErrorToast","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","rows","isLoading","bind","deleteRow","addRow","this","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","Row","Col","keyField","data","columns","exportCSV","ListGroup","horizontal","onClick","wrapperClasses","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","getEmptyRowModel","rowNumber","tId","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","players","tournament","fetchPairs","console","log","createAlias","TableHeader","noData","optionsLength","diff","PairsTable","useParams","setIsLoading","successMessage","setSuccessMessage","allertMessage","setAllertMessage","errorMessage","setErrorMessage","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","emptyRow","length","current","ii","e1","e2","localeCompare","updateOptions","player","selected","handleSelect","names","newRows","availableRows","Math","floor","reduce","accumulator","deleteDisabled","deleteTooltipMessage","md","span","Item","action","missingStage1Name","missingPairs","invalidStage","pairsInStage","allNames","stageName","MIN_PAIR_PER_STAGE","OverlayTrigger","placement","overlay","Tooltip","pointerEvents","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","selectedElement","newRowsElement","rowElement","title","saved","divStyle","color","PairsSelection","pairsList","setPairsList","newColumn","toString","headerAlign","cell","parseInt","baseColumns","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","ok","routes","path","exact","visible","private","Pairs","stage","stageList","element","renderTables","PlayerTable","innerElementStyle","flexDirection","alignItems","innerParentStyle","display","justifyContent","alignContent","thisList","pow","location","RegisterForm","htmlFor","initialValues","password","passwordConfirm","emailConfirm","birthday","validationSchema","yup","shape","Register","Login","LoginForm","AuthWrapper","register","setRegister","sessionContext","updateSessionContext","RigthArrowDefinition","findIconDefinition","prefix","iconName","onSubmitLogin","values","setSubmitting","isValidLogin","status","passwordRegExp","RegExp","phoneRegExp","emailRegExp","formValues","test","onSubmitRegister","buttonString","Icon","icon","Container","fluid","showModal","setShowModal","jumnboStyle","backgroundImage","backgroundSize","padding","nameStyle","Jumbotron","Navbar","sticky","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","route","Link","library","add","fas","far","App","defaultProtectedRouteProps","Boolean","window","hostname","match","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","Auth0Context","createBrowserHistory","ReactDOM","children","onRedirectCallback","initOptions","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","error","Provider","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","domain","config","client_id","clientId","redirect_uri","origin","targetUrl","defaultSessionContext","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6792597d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","import { createContext, useContext, useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean;\r\n  name?: string;\r\n  surname?: string;\r\n  email?: string;\r\n  role?: string;\r\n  redirectPathOnAuthentication?: string;\r\n}\r\n\r\nexport const initialSession: Session = {};\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = ({ children }) => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  return <SessionContext.Provider value={defaultSessionContext}>{children}</SessionContext.Provider>;\r\n};\r\n","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router';\r\n\r\nexport interface ProtectedRouteProps extends RouteProps {\r\n  isAuthenticated: boolean;\r\n  authenticationPath: string;\r\n  redirectPathOnAuthentication: string;\r\n  setRedirectPathOnAuthentication: (path: string) => void;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = props => {\r\n  const currentLocation = useLocation();\r\n  // console.log('Current Location ', currentLocation);\r\n  let redirectPath = props.redirectPathOnAuthentication;\r\n\r\n  // FIXME:\r\n  // console.log('ProtectedRoute....');\r\n  if (process.env.NODE_ENV === 'development') return <Route {...props} />;\r\n\r\n  if (!props.isAuthenticated) {\r\n    // console.log('Not Authenticated');\r\n    props.setRedirectPathOnAuthentication(currentLocation.pathname);\r\n    redirectPath = props.authenticationPath;\r\n  }\r\n\r\n  if (redirectPath !== currentLocation.pathname && !props.isAuthenticated) {\r\n    // console.log('Redirecting to : ' + redirectPath);\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n    return <Route {...props} component={renderComponent} render={undefined} />;\r\n  } else {\r\n    // console.log('Render component', props);\r\n    return <Route {...props} />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n","import { getTodayDate } from '../core/utils';\r\nimport { TournamentModel, TournamentProgressType, selectOptions } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = result.find(e => e.name === getTodayDate());\r\n    let tmp = found ? [found, ...result] : result;\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n\r\nexport function getEmptyTournament(name: string, progress: TournamentProgressType) {\r\n  return {\r\n    id: null,\r\n    name: name || '',\r\n    ownerId: null,\r\n    progress: progress || 'New',\r\n    public: true,\r\n    label: name || ''\r\n  };\r\n}\r\n\r\n// select helper\r\nexport function customFilter(option: selectOptions, searchText: string): boolean {\r\n  console.log('customFilter : ', option, typeof option.data);\r\n  return option.data.name ? option.data.name.toLowerCase().includes(searchText.toLowerCase()) : false;\r\n}\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport type TournamentModel = {\r\n  id: number | null;\r\n  name: string;\r\n  ownerId: number;\r\n  progress: TournamentProgressType;\r\n  public: boolean;\r\n  pairs?: PairModel[];\r\n};\r\n\r\nexport const TournamentProgress = { New: 'new', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n\r\nexport type selectOptions = {\r\n  label: string;\r\n  value: string;\r\n  data: TournamentModel;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns de\r\nexport default [\r\n  { dataField: 'id', text: 'ID', editable: false },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { components } from 'react-select';\r\nimport { Form, Button, Card, Tooltip } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { getTodayDate } from '../core/utils';\r\nimport { fetchTournaments, getEmptyTournament, customFilter } from './helper';\r\nimport { TournamentProgress } from './type';\r\n\r\nconst FTournament = _ => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    let newT = getEmptyTournament(selectedOption);\r\n    setSelectedOption(newT);\r\n    setTournamentList(prevList => [...prevList, newT]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(getEmptyTournament(selectedOption.name, TournamentProgress.PairsSelection))\r\n    });\r\n    const res = await response.json();\r\n    currentHistory.push(`/tournament/${res.id}`);\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Header as=\"h2\">Torneo</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>Scegli un torneo</Card.Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <CreatableSelect\r\n            // TODO:\r\n            //filterOption={customFilter}\r\n            // getOptionValue={option => `${option.label}`}\r\n            //formatCreateLabel={formatNewLabel}\r\n            //formatOptionLabel={formatOptionLabel}\r\n            //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n            //\r\n            components={{ IndicatorSeparator }}\r\n            value={selectedOption}\r\n            options={tournamentList}\r\n            placeholder=\"Crea/Cerca un torneo\"\r\n            isSearchable={true}\r\n            isClearable\r\n            onChange={handleChange}\r\n            onCreateOption={handleCreate}\r\n          />\r\n          <br></br>\r\n          <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n            Continua\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// TODO:\r\n// https://react-select.com/components#components\r\n\r\n// Indicator Separator\r\nconst indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n\r\nconst cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto',\r\n  backgroundColor: 'inherit',\r\n  borderColor: '#ffc107',\r\n  borderWidth: '3px'\r\n};\r\n\r\nconst formatNewLabel = inputString => (\r\n  <strong>\r\n    {inputString}\r\n    <small style={{ color: '#ccc' }}>@ New</small>\r\n  </strong>\r\n);\r\n\r\nconst formatOptionLabel = ({ name, progress, innerProps }) => (\r\n  <strong>\r\n    {name}\r\n    <small style={{ color: '#ccc' }}>@{progress}</small>\r\n  </strong>\r\n);\r\nexport default FTournament;\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\ntype propsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\ntype toastType = {\r\n  message: string;\r\n};\r\nexport const LoadingModal: React.FC<propsType> = ({ message, show, onHide = () => (show = false) }: propsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport const SuccessToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'success-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'success'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const WarningToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'warning-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'warning'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n\r\nexport const ErrorToast: React.FC<toastType> = ({ message }: toastType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2\" key={'error-message'} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={'danger'}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter, ExportCSVButton } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      (async () => {\r\n        // TODO: gestire try-catch\r\n        const response = await fetch('/api/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <LoadingModal show={isLoading} message={'Caricamento'} />\r\n        <Row>\r\n          <Col>\r\n            <ToolkitProvider keyField=\"id\" data={rows} columns={columns} exportCSV>\r\n              {props => (\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    <Button variant=\"success\" onClick={addRow}>\r\n                      Aggiungi giocatore\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={deleteRow}>\r\n                      Calcella giocatore\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n\r\n                  {/* FIXME:\r\n                  <ExportCSVButton {...props.csvProps} />\r\n                  */}\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns}\r\n                    cellEdit={this.cellEditProps}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              )}\r\n            </ToolkitProvider>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = cellEditFactory({\r\n  mode: 'click',\r\n  blurToSave: true,\r\n  afterSaveCell: (oldValue, newValue, row, column) => {\r\n    // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n    if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n    (async () => {\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(row)\r\n      });\r\n      await response.json();\r\n    })();\r\n  }\r\n});\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n          <small> - {tournament?.progress}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, SuccessToast, WarningToast, ErrorToast } from '../core/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\n\r\nconst PairsTable = _ => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [allertMessage, setAllertMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setSuccessMessage(message);\r\n    setTimeout(() => setSuccessMessage(''), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      await response.json();\r\n\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            setAllertMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            setTimeout(() => setAllertMessage(''), 5000);\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = _ => {\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      setErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      setErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n\r\n    if (!tId) {\r\n      setErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n        currentHistory.push('/');\r\n      }, 5000);\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      setErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data.tournament)\r\n    });\r\n\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament)\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      setErrorMessage('Specificare il numero di gironi da assegnare');\r\n      setTimeout(() => setErrorMessage(''), 5000);\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  // console.log('render table : ', data);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n        <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n          <Row>\r\n            <ListGroup>\r\n              <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                Prosegui\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                Home\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action variant=\"success\" onClick={() => addRow()} disabled={availableRows <= 0}>\r\n                Aggiungi Coppia\r\n              </ListGroup.Item>\r\n\r\n              <OverlayTrigger placement=\"right\" key=\"rigth\" overlay={<Tooltip>{deleteTooltipMessage}</Tooltip>}>\r\n                <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                  <ListGroup.Item action variant=\"danger\" style={{ pointerEvents: 'none' }} disabled={deleteDisabled}>\r\n                    Elimina Coppia {deleteDisabled}\r\n                  </ListGroup.Item>\r\n                </span>\r\n              </OverlayTrigger>\r\n\r\n              <ListGroup.Item action variant=\"danger\" onClick={deleteStage1}>\r\n                Reset gironi\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }}>\r\n          <Row>\r\n            <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder={\r\n                  data.rows.length < 4\r\n                    ? 'Inserisci almeno 4 coppie'\r\n                    : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                }\r\n                aria-label=\"Numero di gironi\"\r\n                disabled={data.rows.length < 4}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setStage1Name}\r\n                  disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={availableRows <= 0}\r\n                placeholder={\r\n                  availableRows <= 0\r\n                    ? 'Numero massimo di coppie gia creato sulla base del numero di giocatori disponibili'\r\n                    : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                }\r\n                aria-label=\"Numero di coppie\"\r\n                value={newRowsNumber || ''}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={e => setNewRowsNumber(availableRows)}\r\n                  disabled={newRowsNumber > availableRows}\r\n                >\r\n                  Max\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={addMultipleRows}\r\n                  disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                >\r\n                  Esegui\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n          <Row>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={data.rows}\r\n              columns={columns(onSelect, data.players)}\r\n              cellEdit={cellEditProps}\r\n              selectRow={selectRow}\r\n              noDataIndication={<NoData addRow={() => addRow()} optionsLength={data.players.length} />}\r\n              caption={<TableHeader tournament={data.tournament} />}\r\n              wrapperClasses=\"player-table\"\r\n              headerClasses=\"player-table-header\"\r\n              striped\r\n              hover\r\n            />\r\n          </Row>\r\n        </Col>\r\n        <Col style={{ margin: '10px' }} md={2}>\r\n          <SuccessToast message={successMessage} />\r\n          <WarningToast message={allertMessage} />\r\n          <ErrorToast message={errorMessage} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = cellEditFactory({\r\n    mode: 'click',\r\n    blurToSave: true,\r\n    beforeSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno cella opposta\r\n        rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        // Aggiorno posizione relativa\r\n        [...rows]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n      }\r\n    },\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      if (column.id.startsWith('col')) {\r\n        // Aggiorno dati sul Db\r\n        updateCellValue(oldValue, newValue, row, column);\r\n        let acc = 0;\r\n        for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n        rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n        acc = 0;\r\n        for (let key in rows[parseInt(column.text) - 1])\r\n          if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n        rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BootstrapTable\r\n        bootstrap4\r\n        keyField=\"id\"\r\n        data={rows}\r\n        columns={columns}\r\n        selectRow={selectRow}\r\n        cellEdit={cellEditProps}\r\n        noDataIndication=\"Nessun dato reperito\"\r\n        wrapperClasses=\"player-table\"\r\n        headerClasses=\"player-table-header\"\r\n        caption={<TableHeader title={tableName} saved={saved} />}\r\n        striped\r\n        hover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import FTournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { RedirectionControl } from './RedirectionControls';\r\nimport { OrganizationChartDemo } from '../Stage2/table';\r\n\r\ntype routeType = {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  component: any;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n};\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/', label: 'Home', exact: true, component: FTournament, visible: false, private: true, index: 0 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    component: Pairs,\r\n    visible: false,\r\n    private: true,\r\n    index: 10\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    component: Stage1Wrapper,\r\n    visible: false,\r\n    private: true,\r\n    index: 20\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    component: PlayerTable,\r\n    visible: true,\r\n    private: true,\r\n    index: 30\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    component: Stage2,\r\n    //component: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    private: true,\r\n    index: 40\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'Not Found',\r\n    exact: false,\r\n    component: RedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000\r\n  }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair, wapperPropsType } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC<wapperPropsType> = (props: wapperPropsType): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import { useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst RegisterForm: React.FC = () => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"name\">Nome</label>\r\n        <Field as={FormControl} id=\"name\" name=\"name\" placeholder=\"Nome\" type=\"text\" />\r\n        <ErrorMessage name=\"name\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"surname\">Cognome</label>\r\n        <Field as={FormControl} id=\"surname\" name=\"surname\" placeholder=\"Cognome\" type=\"text\" />\r\n        <ErrorMessage name=\"surname\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={6}>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n        <label htmlFor=\"passwordConfirm\">Conferma Password</label>\r\n\r\n        <Field\r\n          as={FormControl}\r\n          id=\"passwordConfirm\"\r\n          name=\"passwordConfirm\"\r\n          placeholder=\"Conferma Password\"\r\n          type=\"password\"\r\n        />\r\n        <ErrorMessage name=\"passwordConfirm\" />\r\n      </Col>\r\n      <Col\r\n        md={6}\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <Row>\r\n          <strong>La password deve rispettara i sequenti criteri :</strong>\r\n\r\n          <ul>\r\n            <li>Almeno 1 carattere minuscolo</li>\r\n            <li>Almeno 1 carattere maiuscolo</li>\r\n            <li>Almeno 1 carattere numerico</li>\r\n            <li>Almeno 1 carattere speciale</li>\r\n            <li>Tra 8 e 16 caratteri</li>\r\n          </ul>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"emailConfirm\">Conferma Email</label>\r\n        <Field as={FormControl} id=\"emailConfirm\" name=\"emailConfirm\" placeholder=\"Conferma Email\" type=\"email\" />\r\n        <ErrorMessage name=\"emailConfirm\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={12}>\r\n        <label htmlFor=\"phone\">Telefono</label>\r\n        <Field as={FormControl} id=\"phone\" name=\"phone\" placeholder=\"Telefono\" type=\"text\" />\r\n        <ErrorMessage name=\"phone\" />\r\n      </Col>\r\n    </Row>\r\n    {/*\r\n          <label htmlFor=\"birthday\">Data di nascita</label>\r\n          <Field id=\"birthday\" name=\"birthday\" placeholder=\"Data di nascita\" type=\"text\" />\r\n          <ErrorMessage name=\"birthday\" />\r\n            */}\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Conferma</Button>\r\n      </Col>\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import * as React from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport RegisterForm from './RegisterForm';\r\nimport { IRegisterForm, IRegisterFormValue } from './types';\r\n\r\nconst initialValues: IRegisterFormValue = {\r\n  name: '',\r\n  surname: '',\r\n  password: '',\r\n  passwordConfirm: '',\r\n  email: '',\r\n  emailConfirm: '',\r\n  phone: '',\r\n  birthday: new Date()\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string(),\r\n  surname: yup.string(),\r\n  password: yup.string(),\r\n  email: yup.string(),\r\n  phone: yup.string(),\r\n  birthday: yup.date()\r\n});\r\n\r\nconst Register: React.FC<IRegisterForm> = ({ onSubmit }: IRegisterForm) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <RegisterForm />\r\n  </Formik>\r\n);\r\n\r\nexport default Register;\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst RegisterForm: React.FC = () => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Login</Button>\r\n      </Col>\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import * as React from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport LoginForm from './LoginForm';\r\nimport { ILoginFormValue, ILoginForm } from './types';\r\n\r\nconst initialValues: ILoginFormValue = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = yup.object().shape({ password: yup.string(), email: yup.string() });\r\n\r\nconst Login: React.FC<ILoginForm> = ({ onSubmit }: ILoginForm) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <LoginForm />\r\n  </Formik>\r\n);\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useSessionContext } from 'components/core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IRegisterFormValue, ILoginFormValue } from './types';\r\nimport { FormikHelpers } from 'formik';\r\nimport { Modal, Button, Container, Alert } from 'react-bootstrap';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition, findIconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\nconst AuthWrapper = ({ show, onHide }: authType): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const RigthArrowDefinition: IconDefinition = findIconDefinition({\r\n    prefix: 'far',\r\n    iconName: 'arrow-alt-circle-right'\r\n  });\r\n\r\n  const onSubmitLogin = async (values: ILoginFormValue, { setSubmitting }: FormikHelpers<ILoginFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidLogin(values)) return;\r\n      const response = await fetch('/api/v1/auth/authenticate', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      console.log('onSubmitLogin : ', response, result);\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) setErrorMessage('Utente o Password errata');\r\n\r\n        setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})');\r\n  const phoneRegExp = new RegExp('^d{10}$');\r\n  const emailRegExp = new RegExp(\r\n    // eslint-disable-next-line quotes\r\n    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n  );\r\n\r\n  const isValidLogin = (formValues: ILoginFormValue): boolean => {\r\n    setErrorMessage('');\r\n    if (!formValues.email || !emailRegExp.test(formValues.email)) {\r\n      setErrorMessage('Email non valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    if (!formValues.password) {\r\n      setErrorMessage('Inserisci la password');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const isValidRegister = (formValues: IRegisterFormValue): boolean => {\r\n    setErrorMessage('');\r\n    // Nome\r\n    if (!formValues.name) {\r\n      setErrorMessage('Inserisci il nome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    // Telefono\r\n    if (!formValues.surname) {\r\n      setErrorMessage('Inserisci il cognome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test password\r\n    if (\r\n      !formValues.password ||\r\n      !formValues.passwordConfirm ||\r\n      !passwordRegExp.test(formValues.password) ||\r\n      !passwordRegExp.test(formValues.passwordConfirm)\r\n    ) {\r\n      setErrorMessage('La password non rispetta i criteri');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.password !== formValues.passwordConfirm) {\r\n      setErrorMessage('Le password non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test email\r\n    if (\r\n      !formValues.email ||\r\n      !formValues.emailConfirm ||\r\n      !emailRegExp.test(formValues.email) ||\r\n      !emailRegExp.test(formValues.emailConfirm)\r\n    ) {\r\n      setErrorMessage('Inserisci una email valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.email !== formValues.emailConfirm) {\r\n      setErrorMessage('Le email non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Telefono\r\n    if (!(formValues.phone && !phoneRegExp.test(formValues.phone))) {\r\n      setErrorMessage('Il numero di telefono inserito non è valido');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitRegister = async (values: IRegisterFormValue, { setSubmitting }: FormikHelpers<IRegisterFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidRegister(values)) return;\r\n      const response = await fetch('/api/v1/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const title = register ? 'Registrati' : 'Login';\r\n  const body = register ? <Register onSubmit={onSubmitRegister} /> : <Login onSubmit={onSubmitLogin} />;\r\n  const buttonString = register ? 'Login' : 'Registrati';\r\n  const Icon = <FontAwesomeIcon icon={RigthArrowDefinition} />;\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          {errorMessage ? (\r\n            <Alert key={'auth-alert'} variant={'danger'}>\r\n              {errorMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => setRegister(!register)}>\r\n          <div>\r\n            {Icon} <strong>{buttonString}</strong>\r\n          </div>\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport backgroundImage from '../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button } from 'react-bootstrap';\r\nimport routes from '../core/Routes';\r\nimport AuthWrapper from '../Auth/Wrapper';\r\nimport { useSessionContext } from '../core/SessionContext';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\nexport const Header: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const [showModal, setShowModal] = useState(true);\r\n\r\n  const logout = () => {\r\n    updateSessionContext({\r\n      ...sessionContext,\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n      role: '',\r\n      isAuthenticated: false\r\n    });\r\n  };\r\n\r\n  const yellow = '##ffc107';\r\n  const jumnboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px'\r\n  };\r\n\r\n  const nameStyle = { color: yellow, padding: '1vw' };\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumnboStyle}>\r\n        <h1>\r\n          <strong style={{ color: 'white' }}>{applicationName}</strong>\r\n        </h1>\r\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {routes.map(route =>\r\n                route.visible ? (\r\n                  route.private && !sessionContext.isAuthenticated ? null : (\r\n                    <Nav.Link href={route.path}>{route.label}</Nav.Link>\r\n                  )\r\n                ) : null\r\n              )}\r\n            </Nav>\r\n            {sessionContext.isAuthenticated && sessionContext.name ? (\r\n              <>\r\n                <Navbar.Text style={nameStyle}>\r\n                  <strong>{sessionContext.name}</strong>\r\n                </Navbar.Text>\r\n                <Button variant=\"outline-warning\" onClick={logout}>\r\n                  Log out\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"outline-warning\" onClick={() => setShowModal(true)}>\r\n                Log in\r\n              </Button>\r\n            )}\r\n          </Navbar.Collapse>\r\n          <AuthWrapper show={showModal} onHide={() => setShowModal(false)} />\r\n        </Navbar>\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport { useSessionContext } from '../components/core/SessionContext';\r\nimport { ProtectedRoute, ProtectedRouteProps } from '../components/core/ProtectedRoute';\r\nimport './style/App.css';\r\nimport TLogin from './Auth/Register';\r\n// import { useHistory } from 'react-router-dom';\r\nimport routes from '../components/core/Routes';\r\nimport { Header } from './Header/Header';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas, far);\r\n\r\nconst App: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n\r\n  const setRedirectPathOnAuthentication = (path: string) => {\r\n    updateSessionContext({ ...sessionContext, redirectPathOnAuthentication: path });\r\n  };\r\n\r\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\r\n    isAuthenticated: sessionContext.isAuthenticated || false,\r\n    authenticationPath: '/login',\r\n    redirectPathOnAuthentication: sessionContext.redirectPathOnAuthentication || '',\r\n    setRedirectPathOnAuthentication\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/** Header */}\r\n      <Header />\r\n\r\n      <Container fluid>\r\n        <Switch>\r\n          {/*<Route path=\"/login\" component={FLogin} />*/}\r\n          {routes.map(route => (\r\n            <ProtectedRoute {...route} {...defaultProtectedRouteProps} key={route.index} />\r\n          ))}\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = _ => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = _ => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({ children, onRedirectCallback = DEFAULT_REDIRECT_CALLBACK, ...initOptions }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\n// Auth0\r\nimport { Auth0Provider } from './components/core/Auth0';\r\nimport { createBrowserHistory } from 'history';\r\nimport config from './components/core/auth_config.json';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst onRedirectCallback = (appState?: { targetUrl: string }) => {\r\n  history.push(appState && appState.targetUrl ? appState.targetUrl : window.location.pathname);\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <BrowserRouter>\r\n      <SessionContextProvider>\r\n        <App />\r\n      </SessionContextProvider>\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}