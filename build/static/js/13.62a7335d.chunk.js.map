{"version":3,"sources":["components/core/utils.ts","components/core/hooks/InputHook.ts","components/Auth/Register.tsx","components/Auth/Login.tsx","components/Auth/Wrapper.tsx"],"names":["getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","formatDate","date","d","month","day","year","length","join","RegExp","passwordRegExp","emailRegExp","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","currentTarget","playerRoles","label","Register","setErrorMessage","useSessionContext","sessionContext","updateSessionContext","useHistory","username","bindUsername","resetUsername","name","bindName","resetName","surname","bindSurname","resetSurname","email","bindEmail","resetEmail","cEmail","bindCEmail","resetCEmail","password","bindPassword","resetPassword","cPassword","bindCPassword","resetCPassword","phone","bindPhone","resetPhone","birthday","setBirthday","resetBirthday","playerRole","setPlayerRole","resetPlayerRole","showError","message","setTimeout","handleSubmit","evt","a","preventDefault","test","model","fetch","method","body","JSON","stringify","headers","response","json","result","ok","console","log","isAuthenticated","status","error","Form","onSubmit","Row","Col","Group","controlId","Label","Control","required","type","placeholder","md","style","display","alignItems","key","className","dateFormat","selected","val","newValue","options","styles","selectStyles","Text","Button","variant","size","onClick","control","height","input","option","data","isDisabled","isFocused","isSelected","color","singleValue","clearIndicator","indicatorSeparator","Login","currentHistory","push","AuthWrapper","register","setRegister","errorMessage","RigthArrowDefinition","findIconDefinition","prefix","iconName","title","buttonString","Icon","icon","modalStyle","textAlign","width","margin","Card","Header","as","Body","Container","Alert","Footer"],"mappings":"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","file":"static/js/13.62a7335d.chunk.js","sourcesContent":["export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { useState } from 'react';\r\n\r\n// FIXME:\r\n// https://rangle.io/blog/simplifying-controlled-inputs-with-hooks/\r\nexport const useInput = (initialValue: any) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(''),\r\n    bind: {\r\n      value,\r\n      onChange: (event: React.FormEvent<HTMLSelectElement>) => {\r\n        setValue(event.currentTarget.value);\r\n      }\r\n    }\r\n  };\r\n};\r\n","import { useInput } from '../core/hooks/InputHook';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport React, { SetStateAction } from 'react';\r\nimport { useSessionContext } from '../core/routing/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport Select, { StylesConfig } from 'react-select';\r\nimport './style.css';\r\nimport { emailRegExp, passwordRegExp } from '../core/utils';\r\n\r\ntype PropsType = {\r\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst playerRoles = [\r\n  { value: 'No', label: 'Non sono un giocatore' },\r\n  { value: 'Portiere', label: 'Portiere' },\r\n  { value: 'Attaccante', label: 'Attaccante' },\r\n  { value: 'Master', label: 'Master' }\r\n];\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\nconst Register: React.FC<PropsType> = ({ setErrorMessage }): JSX.Element => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const { value: username, bind: bindUsername, reset: resetUsername } = useInput('');\r\n  const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n  const { value: surname, bind: bindSurname, reset: resetSurname } = useInput('');\r\n  const { value: email, bind: bindEmail, reset: resetEmail } = useInput('');\r\n  const { value: cEmail, bind: bindCEmail, reset: resetCEmail } = useInput('');\r\n  const { value: password, bind: bindPassword, reset: resetPassword } = useInput('');\r\n  const { value: cPassword, bind: bindCPassword, reset: resetCPassword } = useInput('');\r\n  const { value: phone, bind: bindPhone, reset: resetPhone } = useInput('');\r\n  const { value: birthday, setValue: setBirthday, /*bind: bindBirthday, */ reset: resetBirthday } = useInput('');\r\n  const { value: playerRole, setValue: setPlayerRole, /*bind: bindPlayerRole, */ reset: resetPlayerRole } = useInput({\r\n    value: 'No',\r\n    label: 'Non sono un giocatore'\r\n  });\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const reset = () => {\r\n    resetUsername();\r\n    resetName();\r\n    resetSurname();\r\n    resetEmail();\r\n    resetCEmail();\r\n    resetPassword();\r\n    resetCPassword();\r\n    resetPhone();\r\n    resetBirthday();\r\n    resetPlayerRole();\r\n  };\r\n\r\n  const isValid = () => {\r\n    if (!username) {\r\n      showError('Scegli uno username');\r\n      return false;\r\n    }\r\n    if (!name) {\r\n      showError('Inserire il nome');\r\n      return false;\r\n    }\r\n    if (!surname) {\r\n      showError('Inserire il cognome');\r\n      return false;\r\n    }\r\n    if (!email) {\r\n      showError('Inserire una email');\r\n      return false;\r\n    }\r\n    if (!emailRegExp.test(email)) {\r\n      showError('Inserire una email valida');\r\n      return false;\r\n    }\r\n\r\n    if (!cEmail) {\r\n      showError('Inserire la conferma email');\r\n      return false;\r\n    }\r\n    if (!emailRegExp.test(cEmail)) {\r\n      showError('Inserire una email valida');\r\n      return false;\r\n    }\r\n    if (email !== cEmail) {\r\n      showError('Le email non corrispondono');\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      showError('Inserire una password');\r\n      return false;\r\n    }\r\n    if (!passwordRegExp.test(password)) {\r\n      showError('La password non rispetta i criteri');\r\n      return false;\r\n    }\r\n    if (!cPassword) {\r\n      showError('Inserire la conferma password');\r\n      return false;\r\n    }\r\n    if (!passwordRegExp.test(cPassword)) {\r\n      showError('La password non rispetta i criteri');\r\n      return false;\r\n    }\r\n    if (password !== cPassword) {\r\n      showError('Le password non corrispondono');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (evt: React.SyntheticEvent) => {\r\n    evt.preventDefault();\r\n    if (!isValid()) return;\r\n    const model = {\r\n      username,\r\n      name,\r\n      surname,\r\n      email,\r\n      cEmail,\r\n      password,\r\n      cPassword,\r\n      phone,\r\n      birthday,\r\n      playerRole\r\n    };\r\n    try {\r\n      const response = await fetch('/api/v1/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(model),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        console.log('before register : ', result);\r\n        console.log('before register : ', { ...sessionContext, ...result, isAuthenticated: true });\r\n        console.log('before register : ', { ...result, isAuthenticated: true });\r\n        updateSessionContext({ ...sessionContext, ...result, isAuthenticated: true });\r\n        console.log('after register : ', sessionContext);\r\n        // currentHistory.push('/');\r\n      } else {\r\n        switch (response.status) {\r\n          case 401:\r\n            showError('Utente o Password errata');\r\n            break;\r\n          case 403:\r\n            showError('Utente o Email gia registrati');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {/* Username - Name - Surname */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"username\" {...bindUsername} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nome</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Nome\" {...bindName} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"surname\">\r\n            <Form.Label>Cognome</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Cognome\" {...bindSurname} />\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n      {/* Email - Conferma Email */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Email\" {...bindEmail} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"cemail\">\r\n            <Form.Label>Conferma Email</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Conferma Email\" {...bindCEmail} />\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n      {/* Password - Conferma Password */}\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"cpassword\">\r\n            <Form.Label>Conferma Password</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Conferma Password\" {...bindCPassword} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={6} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <ul>\r\n            <strong>La password deve rispettare i sequenti criteri :</strong>\r\n            <li key={'pass-1'}>Almeno 1 carattere minuscolo</li>\r\n            <li key={'pass-2'}>Almeno 1 carattere maiuscolo</li>\r\n            <li key={'pass-3'}>Almeno 1 carattere numerico</li>\r\n            <li key={'pass-5'}>Tra 8 e 16 caratteri</li>\r\n          </ul>\r\n        </Col>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Col md={3}>\r\n          <Form.Group controlId=\"phone\">\r\n            <Form.Label>Telefono</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Telefono\" {...bindPhone} />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group controlId=\"birthday\">\r\n            <Form.Label>Data di nascita</Form.Label>\r\n            <DatePicker\r\n              className=\"datepicker\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              required\r\n              selected={birthday}\r\n              onChange={val => setBirthday(val)}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Form.Group>\r\n            <Form.Label>Ruolo</Form.Label>\r\n            <Select\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              value={playerRole}\r\n              onChange={newValue => setPlayerRole(newValue)}\r\n              options={playerRoles}\r\n              styles={selectStyles}\r\n            />\r\n            <Form.Text className=\"text-muted default-color-green\">\r\n              Sei un giocatore? Assegna qui il tuo ruolo.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Row>\r\n\r\n      <Button variant=\"outline-success\" type=\"submit\" size=\"lg\">\r\n        Registrati\r\n      </Button>\r\n\r\n      <Button variant=\"outline-danger\" className=\"float-right\" onClick={reset} type=\"submit\" size=\"lg\">\r\n        Reset\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst selectStyles: StylesConfig = {\r\n  control: styles => ({ ...styles, height: '38px' }),\r\n  input: styles => ({ ...styles, height: '38px' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({ ...styles, color: 'black' }),\r\n  placeholder: styles => ({ ...styles, height: '38px' }),\r\n  singleValue: (styles, { data }: any) => ({ ...styles, height: '38px' }),\r\n  clearIndicator: styles => ({ ...styles, height: '38px' }),\r\n  indicatorSeparator: styles => ({ ...styles })\r\n};\r\n","import { useInput } from '../core/hooks/InputHook';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { SetStateAction } from 'react';\r\nimport { useSessionContext } from '../core/routing/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\nconst Login: React.FC<PropsType> = ({ setErrorMessage }): JSX.Element => {\r\n  const currentHistory = useHistory();\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n\r\n  const { value: username, bind: bindUsername /*reset: resetUsername*/ } = useInput('');\r\n  const { value: password, bind: bindPassword /*reset: resetPassword*/ } = useInput('');\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (evt: React.SyntheticEvent) => {\r\n    evt.preventDefault();\r\n    if (!username || username === '') {\r\n      showError('Inserire username o password');\r\n      return;\r\n    }\r\n    if (!password || password === '') {\r\n      showError('Inserire la password');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/api/v1/auth/authenticate', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ username, password }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({ ...sessionContext, ...result, isAuthenticated: true });\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) showError('Utente o Password errata');\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"username\">\r\n        <Form.Label>Username o Email</Form.Label>\r\n        <Form.Control required type=\"text\" placeholder=\"username o email\" {...bindUsername} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control required type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n      </Form.Group>\r\n      <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, CSSProperties } from 'react';\r\nimport { Button, Container, Alert, Card } from 'react-bootstrap';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition, findIconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst AuthWrapper: React.FC = (): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const RigthArrowDefinition: IconDefinition = findIconDefinition({\r\n    prefix: 'far',\r\n    iconName: 'arrow-alt-circle-right'\r\n  });\r\n\r\n  const title = register ? 'Registrati' : 'Login';\r\n  const body = register ? <Register setErrorMessage={setErrorMessage} /> : <Login setErrorMessage={setErrorMessage} />;\r\n  const buttonString = register ? 'Login' : 'Registrati';\r\n  const Icon = <FontAwesomeIcon icon={RigthArrowDefinition} />;\r\n  const modalStyle: CSSProperties = {\r\n    textAlign: 'left',\r\n    width: register ? '50vw' : '40vw',\r\n    height: 'auto',\r\n    margin: 'auto',\r\n    color: 'white'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={modalStyle} className=\"default-background\">\r\n        <Card.Header as=\"h2\">{title}</Card.Header>\r\n        <Card.Body>\r\n          <Container>\r\n            {errorMessage ? (\r\n              <Alert key={'auth-alert'} variant={'danger'}>\r\n                {errorMessage}\r\n              </Alert>\r\n            ) : null}\r\n            {body}\r\n          </Container>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"outline-warning\" onClick={() => setRegister(!register)}>\r\n            <div>\r\n              {Icon} <strong>{buttonString}</strong>\r\n            </div>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n"],"sourceRoot":""}