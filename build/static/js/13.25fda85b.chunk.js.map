{"version":3,"sources":["components/Player/helper.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Player/header.tsx","components/Player/table.jsx"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","clearAllFilter","playerColumns","isEditable","dataField","text","editable","headerStyle","column","colIndex","width","headerClasses","autoSelectText","filter","textFilter","placeholder","getFilter","selectFilter","options","PlayerRole","GoalKeeper","Striker","Master","editor","type","Type","SELECT","getOptions","_","value","label","hidden","valueFormatter","selectedOption","alias","surname","name","defaultProps","variant","undefined","active","disabled","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","className","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","tableHeader","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","found","find","e","id","cellEditProps","editabile","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","a","fetch","method","headers","body","JSON","stringify","response","json","rows","isLoading","bind","deleteRow","addRow","this","result","map","i","getEmptyPlayer","selectedRow","selectRow","nonSelectable","onSelect","onSelectAll","forEach","style","backgroundColor","hideSelectAll","selectColumnStyle","checked","rowIndex","rowKey","show","message","Row","Col","Button","length","wrapperClasses","keyField","data","columns","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","Component","connect","sessionState","isAdmin"],"mappings":"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","file":"static/js/13.25fda85b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\nimport { PlayerRole } from '../../models/player.model';\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\nlet emailFilter;\r\nlet phoneFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n  emailFilter('');\r\n  phoneFilter('');\r\n}\r\n\r\n// Columns default\r\nconst playerColumns = (isEditable) => [\r\n  { dataField: 'id', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (nameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '16%' : '25%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (surnameFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: isEditable ? '17%' : '25%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (aliasFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: `${isEditable ? '11' : '15'}%` }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: {\r\n        [PlayerRole.GoalKeeper]: PlayerRole.GoalKeeper,\r\n        [PlayerRole.Striker]: PlayerRole.Striker,\r\n        [PlayerRole.Master]: PlayerRole.Master,\r\n      },\r\n      getFilter: (filter) => (roleFilter = filter),\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: (_) => {\r\n        return [\r\n          { value: PlayerRole.GoalKeeper, label: PlayerRole.GoalKeeper },\r\n          { value: PlayerRole.Striker, label: PlayerRole.Striker },\r\n          { value: PlayerRole.Master, label: PlayerRole.Master },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (emailFilter = filter),\r\n    }),\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    hidden: !isEditable,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: (filter) => (phoneFilter = filter),\r\n    }),\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\r\n];\r\n\r\nexport default playerColumns;\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = (props) => (\r\n  <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n    Esporta in CSV\r\n  </Button>\r\n);\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey || null, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/generic/Commons';\r\nimport { getEmptyPlayer } from 'services/player.service';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false,\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const result = await response.json();\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result.map((e, i) => ({ ...e, id: i + 1 })),\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState((state) => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter((e) => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer()),\r\n        });\r\n        const result = await response.json();\r\n        this.setState((state) => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false,\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        fetch('/api/v1/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows),\r\n        });\r\n        this.setState((state) => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false,\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = (editabile) =>\r\n    cellEditFactory({\r\n      mode: editabile ? 'click' : 'none',\r\n      blurToSave: true,\r\n      autoSelectText: true,\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        (async () => {\r\n          // TODO: gestire try-catch\r\n          const response = await fetch('/api/v1/player', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row),\r\n          });\r\n          await response.json();\r\n        })();\r\n      },\r\n    });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter((e) => !e.editable).map((e) => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach((row) => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      hideSelectAll: !rows.find((e) => e.editable),\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? {} : { backgroundColor: '#dc3545' },\r\n    };\r\n\r\n    const {\r\n      state: { selectedRows } = [],\r\n      props: { isEditable },\r\n    } = this;\r\n\r\n    return (\r\n      <>\r\n        <LoadingModal show={isLoading} message={'Caricamento'} />\r\n        <Row>\r\n          <Col>\r\n            <>\r\n              <ListGroup horizontal>\r\n                {isEditable ? (\r\n                  <Button variant=\"success\" onClick={addRow}>\r\n                    Aggiungi giocatore\r\n                  </Button>\r\n                ) : null}\r\n                {isEditable ? (\r\n                  <Button variant=\"danger\" onClick={deleteRow} disabled={selectedRows.length === 0}>\r\n                    {selectedRows.length > 1 ? 'Elimina giocatori' : 'Elimina giocatore'}\r\n                  </Button>\r\n                ) : null}\r\n                <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                  Pulisci Filtri\r\n                </Button>\r\n              </ListGroup>\r\n              <BootstrapTable\r\n                wrapperClasses=\"player-table\"\r\n                keyField=\"id\"\r\n                data={rows}\r\n                columns={columns(isEditable)}\r\n                cellEdit={this.cellEditProps(isEditable)}\r\n                selectRow={selectRow}\r\n                caption={<TableHeader />}\r\n                filter={filterFactory()}\r\n                headerClasses=\"default-background default-color-white\"\r\n                noDataIndication=\"Nessun dato reperito\"\r\n                striped\r\n                hover\r\n                bootstrap4\r\n              />\r\n            </>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  isEditable: state.sessionState.isAdmin,\r\n}))(Player);\r\n"],"sourceRoot":""}