{"version":3,"sources":["components/core/utils.ts","common.module.css","components/Tournament/badge.tsx","../node_modules/react-bootstrap/esm/ToggleButton.js","components/Stage1/header.tsx","components/Stage1/editor.js","components/Stage1/table.jsx","components/Stage1/wrapper.tsx"],"names":["translateTournamentProgress","value","TournamentProgress","New","PairsSelection","Stage1","Stage2","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","RegExp","passwordRegExp","emailRegExp","getBaseLog","x","y","Math","log","module","exports","TournamentBadge","tournament","useSelector","TournamentSelector","getTournament","className","variant","name","toUpperCase","progress","noop","ToggleButton","React","forwardRef","_ref","ref","children","checked","type","onChange","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","tableHeader","title","saved","divStyle","color","style","headerAlign","align","newColumn","index","rowNumber","id","dataField","text","toString","headerStyle","column","colIndex","width","editable","content","row","rowIndex","columnIndex","backgroundColor","parseInt","editor","Type","SELECT","options","label","columns","pairsList","baseColumns","ii","push","Stage1Table","autoOrder","dispatch","useDispatch","isAdmin","SessionSelector","selectedRows","setSelectedRows","isLoading","setIsLoading","setIsSaved","rowsGenerator","rows","setRows","stageName","stage1Name","useEffect","a","fetch","method","headers","body","JSON","stringify","response","json","result","sort","e1","e2","comparator","forEach","fetchData","selectRow","mode","onSelect","isSelected","selected","found","find","filter","console","Stage1Action","updateSelectedPairs","request","onSelectAll","hideSelectColumn","key","bootstrap4","keyField","data","cellEdit","cellEditFactory","blurToSave","beforeSaveCell","oldValue","newValue","startsWith","getOpposite","afterSaveCell","newRows","tId","pair","tableName","score","pair1Id","pair2Id","ok","setTimeout","acc","thisRowIndex","thisRow","total","oppositeRowIndex","oppositeRow","splice","updatePlacement","map","placement","noDataIndication","headerClasses","caption","striped","hover","withRouter","currentHistory","useHistory","session","getSession","prev","curr","needRefresh","Stage1Selector","getNeedRefresh","getSelectedPairs","PairSelector","getPairsList","toolsBar","commonStyle","toolsBarContainer","Row","toolsBarRow","Col","onClick","Stage2Action","delete","TournamentAction","updateTournament","model","count","fetchStage2","tournamentId","ButtonGroup","toggle","currentTarget","stage","stageList","obj1","obj2","localeCompare","element","renderTables"],"mappings":"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","file":"static/js/12.97b00111.chunk.js","sourcesContent":["import { TournamentProgress } from '../../redux/models/tournament.model';\r\n\r\nexport const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function translateTournamentProgress(value: string) {\r\n  switch (value) {\r\n    case TournamentProgress.New:\r\n      return 'Nuovo';\r\n    case TournamentProgress.PairsSelection:\r\n      return 'Selezione Coppie';\r\n    case TournamentProgress.Stage1:\r\n      return 'Fase 1';\r\n    case TournamentProgress.Stage2:\r\n      return 'Fase 2';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\r\nexport const justADate = (initDate?: Date | string) => {\r\n  let utcMidnightDateObj: Date;\r\n  // if no date supplied, use Now.\r\n  if (!initDate) initDate = new Date();\r\n\r\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\r\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\r\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\r\n  } else {\r\n    // if init date is not already a date object, feed it to the date constructor.\r\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\r\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\r\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\r\n  }\r\n\r\n  return {\r\n    toISOString: () => utcMidnightDateObj.toISOString(),\r\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\r\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\r\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\r\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\r\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\r\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\r\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\r\n    addDays: (days: number) => {\r\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\r\n    },\r\n    toString: () => utcMidnightDateObj.toString(),\r\n    toLocaleDateString: (\r\n      locales?: string | string[] | undefined,\r\n      options?: Intl.DateTimeFormatOptions | undefined\r\n    ): string => {\r\n      const option = options || {};\r\n      option.timeZone = 'UTC';\r\n      const locale = locales || 'it-IT';\r\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\r\n    },\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate, translateTournamentProgress } from 'components/core/utils';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>Torneo </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React from 'react';\r\n\r\ninterface Stage1HeaderProps {\r\n  title: string;\r\n  saved: boolean;\r\n}\r\n\r\nconst tableHeader: React.FC<Stage1HeaderProps> = ({ title, saved }) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined,\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import { Type } from 'react-bootstrap-table2-editor';\r\n\r\n/*\r\n  non esistono i tipi per react-bootstrap-table2-editor\r\n  quindi lascio tutto quello che riguarda l'edit come .js\r\n*/\r\n\r\nconst headerAlign = { headerAlign: 'center' };\r\nconst align = { align: 'center' };\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    //type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    ...headerAlign,\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    ...align,\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#343a40' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' },\r\n      ],\r\n    },\r\n  };\r\n};\r\n\r\nexport const columns = (pairsList) => {\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      ...align,\r\n      ...headerAlign,\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      ...headerAlign,\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#343a40', color: '#ffc107' };\r\n      },\r\n    },\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      ...headerAlign,\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'placement',\r\n      dataField: 'placement',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      ...headerAlign,\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator, rowsGenerator } from './helper';\r\nimport { columns } from './editor';\r\n//\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\n// style\r\nimport { Stage1Action } from 'redux/actions';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { TournamentProgress } from 'redux/models';\r\n\r\n// TODO: convert this component to ts\r\nconst Stage1Table = ({ pairsList, autoOrder }) => {\r\n  const dispatch = useDispatch();\r\n  // From store\r\n  const isAdmin = useSelector(SessionSelector.isAdmin);\r\n  const tournament = useSelector(TournamentSelector.getTournament);\r\n  // State\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  // Const\r\n  const stageName = pairsList[0].stage1Name;\r\n\r\n  // Effects\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName }),\r\n        });\r\n        const result = await response.json();\r\n        // FIXME: Ordinamento : gestire ordinamento personalizzato\r\n        if (!!autoOrder)\r\n          [...result]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (result[row.rowNumber - 1]['placement'] = index + 1));\r\n\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const cellEditProps = (editable) =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n        }\r\n      },\r\n      afterSaveCell: async (oldValue, newValue, row, column) => {\r\n        const newRows = [...rows];\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          const response = await fetch('/api/v1/stage1/cell', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              tId: row.pair.tId,\r\n              tableName: stageName,\r\n              score: newValue,\r\n              pair1Id: row.pair.id,\r\n              pair2Id: rows[parseInt(column.text) - 1].pair.id,\r\n            }),\r\n          });\r\n          await response.json();\r\n          if (response.ok) {\r\n            setIsSaved(true);\r\n            setTimeout(() => setIsSaved(false), 3000);\r\n          }\r\n\r\n          // Ricalcolo totali riga\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col') && row[key]) acc += parseInt(row[key]);\r\n          const thisRowIndex = row.rowNumber - 1;\r\n          const thisRow = newRows[thisRowIndex];\r\n          thisRow.total = acc ? acc : 0;\r\n\r\n          //... e riga opposta\r\n          acc = 0;\r\n          const oppositeRowIndex = parseInt(column.text) - 1;\r\n          for (let key in newRows[oppositeRowIndex])\r\n            if (key.startsWith('col') && newRows[oppositeRowIndex][key])\r\n              acc += parseInt(newRows[oppositeRowIndex][key]);\r\n          const oppositeRow = newRows[oppositeRowIndex];\r\n          oppositeRow.total = acc ? acc : 0;\r\n\r\n          newRows.splice(thisRowIndex, 1, thisRow);\r\n          newRows.splice(oppositeRowIndex, 1, oppositeRow);\r\n        }\r\n        // Aggiorno posizione relativa\r\n        if (autoOrder)\r\n          [...newRows]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (newRows[row.rowNumber - 1]['placement'] = index + 1));\r\n\r\n        // Aggiornamento\r\n        setRows(newRows);\r\n        dispatch(\r\n          Stage1Action.updatePlacement.request({ rows: rows.map((e) => ({ id: e.pair.id, placement: e.placement })) })\r\n        );\r\n      },\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    const found = selectedRows.find((e) => e.rowNumber === row.rowNumber) ? true : false;\r\n    let selected;\r\n    if (isSelected) {\r\n      selected = found ? selectedRows : [row, ...selectedRows];\r\n    } else {\r\n      selected = found ? selectedRows.filter((e) => e.rowNumber !== row.rowNumber) : selectedRows;\r\n    }\r\n\r\n    console.log('handleOnSelect : ');\r\n    setSelectedRows(selected);\r\n    dispatch(\r\n      Stage1Action.updateSelectedPairs.request({\r\n        stageName,\r\n        rows: selected,\r\n      })\r\n    );\r\n    return true;\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelected, rows) => {\r\n    setSelectedRows(isSelected ? rows : []);\r\n    dispatch(\r\n      Stage1Action.updateSelectedPairs.request({\r\n        stageName,\r\n        rows: isSelected ? rows : [],\r\n      })\r\n    );\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: !isAdmin || tournament.progress >= TournamentProgress.Stage2,\r\n  };\r\n\r\n  // console.log(' render : ', stageName, rows);\r\n\r\n  return isLoading ? (\r\n    <h3>\r\n      Caricamento girone <b>{stageName}</b> in corso....\r\n    </h3>\r\n  ) : (\r\n    <BootstrapTable\r\n      key={`Stege1-${stageName}`}\r\n      bootstrap4\r\n      keyField=\"id\"\r\n      data={rows}\r\n      columns={columns(pairsList)}\r\n      selectRow={selectRow}\r\n      cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage2)}\r\n      noDataIndication=\"Nessun dato reperito\"\r\n      headerClasses=\"default-background default-color-yellow\"\r\n      caption={<TableHeader title={stageName} saved={saved} />}\r\n      striped\r\n      hover\r\n    />\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","// React, Router, Redux\r\nimport { useHistory } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// Models\r\nimport { PairDTO, TournamentProgress } from '../../redux/models';\r\n// Style\r\nimport commonStyle from '../../common.module.css';\r\nimport { RightArrowIcon, TrashIcon, LeftArrowIcon } from '../core/icons';\r\nimport { Button, Col, Row, ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n// Actions, Selectors\r\nimport { Stage2Action, TournamentAction } from '../../redux/actions';\r\nimport { SessionSelector, TournamentSelector, Stage1Selector, PairSelector } from 'redux/selectors';\r\nimport Stage1Table from './table';\r\nimport TournamentBadge from '../Tournament/badge';\r\n\r\ninterface ModalProps {\r\n  show: boolean;\r\n  message: string;\r\n}\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // Session\r\n  const session = useSelector(SessionSelector.getSession);\r\n  // Torneo\r\n  const tournament = useSelector(TournamentSelector.getTournament, (prev, curr) => prev?.progress !== curr?.progress)!;\r\n  // Sono presenti aggiornamenti\r\n  const needRefresh = useSelector(Stage1Selector.getNeedRefresh);\r\n  // Squadre selezionate\r\n  const selected = useSelector(Stage1Selector.getSelectedPairs);\r\n  // Lista coppie\r\n  const pairsList = useSelector(PairSelector.getPairsList);\r\n\r\n  function goBack() {\r\n    currentHistory.push(session.isAdmin ? '/tournament' : '/');\r\n  }\r\n  function goToStage2() {\r\n    // TODO: eseguire controlli e eventualemente mostrare messaggi utente\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (session.isAdmin && tournament.progress < TournamentProgress.Stage2) {\r\n      tournament.progress = TournamentProgress.Stage2;\r\n      dispatch(TournamentAction.updateTournament.request({ model: tournament }));\r\n    }\r\n\r\n    let count = 8;\r\n    if (selected && selected.length >= 4) {\r\n      count = selected.length - 1;\r\n      while (count % 8 !== 0) count++;\r\n    }\r\n    dispatch(Stage2Action.fetchStage2.request({ tournamentId: tournament.id!, count }));\r\n    currentHistory.push('/stage2');\r\n  }\r\n\r\n  console.log('Refreshing : ', needRefresh);\r\n  const toolsBar = (\r\n    <div className={commonStyle.toolsBarContainer}>\r\n      <Row className={commonStyle.toolsBarRow}>\r\n        <Col>\r\n          <Button variant=\"secondary\" onClick={goBack} className=\"float-left\">\r\n            <LeftArrowIcon /> Indietro\r\n          </Button>\r\n        </Col>\r\n        {tournament.progress > TournamentProgress.Stage1 ? (\r\n          <Col>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => dispatch(Stage2Action.delete.request({ tId: tournament.id! }))}\r\n              disabled={!session.isAdmin || (session.isAdmin && tournament.progress < TournamentProgress.Stage2)}\r\n            >\r\n              <TrashIcon /> Reset Fase 2\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            className=\"default-color-white float-right\"\r\n            onClick={goToStage2}\r\n            disabled={selected.length < 4 && tournament.progress < TournamentProgress.Stage2}\r\n          >\r\n            <b>Prosegui </b> <RightArrowIcon />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <ButtonGroup toggle className=\"mb-2\">\r\n            <ToggleButton\r\n              type=\"checkbox\"\r\n              variant={!!tournament.autoOrder ? 'success' : 'danger'}\r\n              checked={tournament.autoOrder}\r\n              value=\"1\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  TournamentAction.updateTournament.request({\r\n                    model: { ...tournament, autoOrder: e.currentTarget.checked },\r\n                  })\r\n                )\r\n              }\r\n            >\r\n              {`Ordinamento automatico : ${!!tournament.autoOrder ? 'Attivato ' : ' Disattivato'}`}\r\n            </ToggleButton>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      {toolsBar}\r\n      <TournamentBadge />\r\n      {pairsList ? renderTables(pairsList, tournament.autoOrder) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Wrapper);\r\n\r\nfunction renderTables(pairsList: PairDTO[], autoOrder: boolean): JSX.Element[] {\r\n  let stageName = '';\r\n  let stage: PairDTO[] = [];\r\n  let stageList: Array<JSX.Element> = [];\r\n  // sort pairs by stage1Name\r\n  pairsList\r\n    .sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name))\r\n    // FIXME: use .reduce  ?\r\n    .forEach((element, index) => {\r\n      // A rottura di stage1Name\r\n      if (stageName === '') stageName = element.stage1Name;\r\n      if (stageName !== element.stage1Name) {\r\n        stageList.push(<Stage1Table key={`Stage1-${stageName}`} pairsList={stage} autoOrder={autoOrder} />);\r\n        stageName = element.stage1Name;\r\n        stage = [];\r\n      }\r\n      stage.push(element);\r\n    });\r\n  if (stage.length > 0) {\r\n    stageList.push(<Stage1Table key={`Stage1-${stageName}`} pairsList={stage} autoOrder={autoOrder} />);\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return stageList;\r\n}\r\n"],"sourceRoot":""}