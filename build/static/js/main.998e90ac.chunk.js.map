{"version":3,"sources":["components/assets/header.jpg","components/core/ProtectedRoute.tsx","components/core/utils.ts","components/core/SessionContext.tsx","components/Tournament/helper.ts","components/Tournament/type.ts","components/Player/helper.js","components/Tournament/Tournament.jsx","components/Player/header.tsx","components/core/Commons.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/core/Routes.ts","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/core/RedirectionControls.tsx","components/Auth/RegisterForm.tsx","components/Auth/Register.tsx","components/Auth/LoginForm.tsx","components/Auth/Login.tsx","components/Auth/Wrapper.tsx","components/Header/Header.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ProtectedRoute","props","ComponentToRender","render","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","initialSession","SessionContext","createContext","useSessionContext","useContext","isEditable","sessionContext","isAuthenticated","role","getEmptyTournament","name","progress","id","ownerId","public","label","nameFilter","surnameFilter","aliasFilter","roleFilter","TournamentProgress","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","IndicatorSeparator","innerProps","style","cardStyle","margin","borderColor","borderWidth","FTournament","useState","selectedOption","setSelectedOption","tournamentList","setTournamentList","currentHistory","useHistory","useEffect","setterFunction","setterFunction2","a","fetch","method","headers","response","json","result","found","find","e","tmp","sort","handleChange","handleCreate","newT","prevList","handleSubmit","event","preventDefault","body","JSON","stringify","res","push","Row","Col","Card","Header","as","Body","Title","Form","onSubmit","Consumer","components","value","options","placeholder","isSearchable","isClearable","onChange","onCreateOption","createOptionPosition","Button","type","size","variant","disabled","clearAllFilter","dataField","text","editable","headerClasses","autoSelectText","headerStyle","column","colIndex","filter","textFilter","getFilter","selectFilter","Portiere","Attaccante","Master","editor","Type","SELECT","getOptions","_","hidden","fetchPlayers","tId","model","getEmptyPlayer","console","log","valueFormatter","alias","surname","email","phone","match_played","match_won","total_score","tableHeader","LoadingModal","message","show","onHide","Modal","centered","closeButton","Footer","Spinner","animation","GenericToast","Toast","className","key","Alert","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","rows","isLoading","bind","deleteRow","addRow","this","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","ListGroup","horizontal","onClick","wrapperClasses","keyField","data","columns","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","getEmptyRowModel","rowNumber","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","players","tournament","fetchPairs","createAlias","TableHeader","noData","optionsLength","diff","to","PairsTable","useParams","setIsLoading","messageInitialState","setMessage","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","setTimeout","showSuccessMessage","index","emptyRow","length","current","addMultipleRows","ii","e1","e2","localeCompare","updateOptions","player","selected","selectedElement","newRowsElement","rowElement","handleSelect","confirmPairs","missingStage1Name","missingPairs","invalidStage","pairsInStage","reduce","allNames","stageName","MIN_PAIR_PER_STAGE","goBack","deleteStage1","setStage1Name","names","newRows","error","availableRows","Math","floor","accumulator","deleteDisabled","deleteTooltipMessage","md","span","Item","action","OverlayTrigger","placement","overlay","Tooltip","pointerEvents","display","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","title","saved","divStyle","color","undefined","PairsSelection","pairsList","setPairsList","newColumn","toString","headerAlign","cell","parseInt","baseColumns","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","ok","routes","path","exact","visible","private","Pairs","stage","stageList","element","renderTables","PlayerTable","innerElementStyle","flexDirection","alignItems","innerParentStyle","justifyContent","alignContent","thisList","pow","location","useLocation","pathname","RegisterForm","playerList","htmlFor","PlayerSelect","initialValues","password","passwordConfirm","emailConfirm","birthday","validationSchema","yup","shape","Register","setPlayerList","Login","LoginForm","AuthWrapper","register","setRegister","errorMessage","setErrorMessage","updateSessionContext","RigthArrowDefinition","findIconDefinition","prefix","iconName","onSubmitLogin","values","setSubmitting","isValidLogin","status","passwordRegExp","RegExp","phoneRegExp","emailRegExp","formValues","test","onSubmitRegister","buttonString","Icon","icon","Container","fluid","showModal","setShowModal","logout","jumnboStyle","backgroundImage","backgroundSize","padding","nameStyle","Jumbotron","Navbar","sticky","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","route","Link","library","add","fas","far","App","Boolean","window","hostname","match","ReactDOM","children","sessionState","setSessionState","defaultSessionContext","user","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.998e90ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\n\r\nexport const ProtectedRoute: React.FC<any> = props => {\r\n  /**\r\n   *\r\n   * Per ora non voglio obbligare l'utente a fare la login.\r\n   * Gestisco nelle singole pagine che se l'utente non è autenticato non può modificare\r\n   */\r\n  const { ComponentToRender } = props;\r\n\r\n  return <Route {...props} render={() => <ComponentToRender />} />;\r\n\r\n  /*\r\n  const currentLocation = useLocation();\r\n  // console.log('Current Location ', currentLocation);\r\n  let redirectPath = props.redirectPathOnAuthentication;\r\n\r\n\r\n\r\n\r\n  // FIXME:\r\n  // console.log('ProtectedRoute....');\r\n  if (process.env.NODE_ENV === 'development') return <Route {...props} />;\r\n\r\n  if (!props.isAuthenticated) {\r\n    // console.log('Not Authenticated');\r\n    props.setRedirectPathOnAuthentication(currentLocation.pathname);\r\n    redirectPath = props.authenticationPath;\r\n  }\r\n\r\n  if (redirectPath !== currentLocation.pathname && !props.isAuthenticated) {\r\n    // console.log('Redirecting to : ' + redirectPath);\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n    return <Route {...props} component={renderComponent} render={undefined} />;\r\n  } else {\r\n    // console.log('Render component', props);\r\n    return <Route {...props} />;\r\n  }\r\n  */\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n","import { createContext, useContext, useState, useEffect } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean;\r\n  name?: string;\r\n  surname?: string;\r\n  email?: string;\r\n  role?: string;\r\n  redirectPathOnAuthentication?: string;\r\n}\r\n\r\n// https://stackoverflow.com/questions/59422159/redirecting-a-user-to-the-page-they-requested-after-successful-authentication-wi\r\n// https://github.com/openscript/react-example-authentication-redirection\r\n\r\n// https://www.freecodecamp.org/news/react-context-in-5-minutes/\r\nexport const initialSession: Session = {};\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = ({ children }) => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch('/api/v1/auth/');\r\n        const user = await response.json();\r\n        if (user && response.ok) setSessionState({ isAuthenticated: true, ...user });\r\n      } catch (error) {\r\n        console.error('SessionContext.error :', error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return <SessionContext.Provider value={defaultSessionContext}>{children}</SessionContext.Provider>;\r\n};\r\n\r\nexport const isEditable = (sessionContext: Session): boolean =>\r\n  !sessionContext || !sessionContext.isAuthenticated || !sessionContext.role\r\n    ? false\r\n    : sessionContext.isAuthenticated && sessionContext.role === 'Admin';\r\n","import { getTodayDate } from '../core/utils';\r\nimport { TournamentModel, TournamentProgressType, selectOptions } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = result.find(e => e.name === getTodayDate());\r\n    let tmp = found ? [found, ...result] : result;\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n\r\nexport function getEmptyTournament(name: string, progress: TournamentProgressType) {\r\n  return {\r\n    id: null,\r\n    name: name || '',\r\n    ownerId: null,\r\n    progress: progress || 'New',\r\n    public: true,\r\n    label: name || ''\r\n  };\r\n}\r\n\r\n// select helper\r\nexport function customFilter(option: selectOptions, searchText: string): boolean {\r\n  console.log('customFilter : ', option, typeof option.data);\r\n  return option.data.name ? option.data.name.toLowerCase().includes(searchText.toLowerCase()) : false;\r\n}\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport type TournamentModel = {\r\n  id: number | null;\r\n  name: string;\r\n  ownerId: number;\r\n  progress: TournamentProgressType;\r\n  public: boolean;\r\n  pairs?: PairModel[];\r\n};\r\n\r\nexport const TournamentProgress = { New: 'new', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n\r\nexport type selectOptions = {\r\n  label: string;\r\n  value: string;\r\n  data: TournamentModel;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns default\r\nexport default [\r\n  { dataField: 'id', text: 'ID', editable: false },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// React-Select\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\n// Bootstrap\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\n// Core\r\nimport { getTodayDate } from '../core/utils';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n// Helper\r\nimport { fetchTournaments, getEmptyTournament } from './helper';\r\n// Types\r\nimport { TournamentProgress } from './type';\r\n\r\nconst FTournament = () => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    let newT = getEmptyTournament(selectedOption);\r\n    setSelectedOption(newT);\r\n    setTournamentList(prevList => [...prevList, newT]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(getEmptyTournament(selectedOption.name, TournamentProgress.PairsSelection))\r\n    });\r\n    const res = await response.json();\r\n    currentHistory.push(`/tournament/${res.id}`);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Card style={cardStyle}>\r\n          <Card.Header as=\"h2\">Torneo</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Scegli un torneo</Card.Title>\r\n            <Form onSubmit={handleSubmit}>\r\n              <SessionContext.Consumer>\r\n                {sessionContext =>\r\n                  isEditable(sessionContext[0]) ? (\r\n                    <CreatableSelect\r\n                      // TODO:\r\n                      //filterOption={customFilter}\r\n                      // getOptionValue={option => `${option.label}`}\r\n                      //formatCreateLabel={formatNewLabel}\r\n                      //formatOptionLabel={formatOptionLabel}\r\n                      //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n                      //\r\n                      components={{ IndicatorSeparator }}\r\n                      value={selectedOption}\r\n                      options={tournamentList}\r\n                      placeholder=\"Crea/Cerca un torneo\"\r\n                      isSearchable={true}\r\n                      isClearable\r\n                      onChange={handleChange}\r\n                      onCreateOption={handleCreate}\r\n                      createOptionPosition={'first'}\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      // TODO:\r\n                      //filterOption={customFilter}\r\n                      // getOptionValue={option => `${option.label}`}\r\n                      //formatCreateLabel={formatNewLabel}\r\n                      //formatOptionLabel={formatOptionLabel}\r\n                      //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n                      //\r\n                      components={{ IndicatorSeparator }}\r\n                      value={selectedOption}\r\n                      options={tournamentList}\r\n                      placeholder=\"Cerca un torneo\"\r\n                      isSearchable={true}\r\n                      isClearable\r\n                      onChange={handleChange}\r\n                    />\r\n                  )\r\n                }\r\n              </SessionContext.Consumer>\r\n              <br></br>\r\n              <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n                Continua\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n// TODO:\r\n// https://react-select.com/components#components\r\n\r\n// Indicator Separator\r\nconst indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n\r\nconst cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto',\r\n  backgroundColor: 'inherit',\r\n  borderColor: '#ffc107',\r\n  borderWidth: '3px'\r\n};\r\n\r\n/*\r\nconst formatNewLabel = inputString => (\r\n  <strong>\r\n    {inputString}\r\n    <small style={{ color: '#ccc' }}>@ New</small>\r\n  </strong>\r\n);\r\n\r\nconst formatOptionLabel = ({ name, progress, innerProps }) => (\r\n  <strong>\r\n    {name}\r\n    <small style={{ color: '#ccc' }}>@{progress}</small>\r\n  </strong>\r\n);\r\n\r\n*/\r\nexport default FTournament;\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\n// Loading Modal\r\ntype loadingModalPropsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\nexport const LoadingModal: React.FC<loadingModalPropsType> = ({\r\n  message,\r\n  show,\r\n  onHide = () => (show = false)\r\n}: loadingModalPropsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\ntype toastPropsType = {\r\n  message: string;\r\n  type?: 'success' | 'warning' | 'danger';\r\n};\r\n\r\nexport const GenericToast: React.FC<toastPropsType> = ({ message, type }: toastPropsType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        fetch('/api/v1/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = cellEditFactory({\r\n    mode: this.props.isAuthenticated && this.props.role === 'Admin' ? 'click' : 'none',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      (async () => {\r\n        // TODO: gestire try-catch\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    // console.log('Render player : ', { ...this.props });\r\n\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {sessionContext => (\r\n          <>\r\n            <LoadingModal show={isLoading} message={'Caricamento'} />\r\n            <Row>\r\n              <Col>\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    <Button variant=\"success\" onClick={addRow} disabled={!isEditable(sessionContext[0])}>\r\n                      Aggiungi giocatore\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={deleteRow} disabled={!isEditable(sessionContext[0])}>\r\n                      Calcella giocatore\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns}\r\n                    cellEdit={this.cellEditProps}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = editable =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n          <small> - {tournament?.progress}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast } from '../core/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\nconst PairsTable = () => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  console.log('render pairs table : ', tId);\r\n\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      await response.json();\r\n\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = _ => {\r\n    if (!tId) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data.tournament)\r\n    });\r\n\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament)\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  // console.log('render table : ', data);\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {sessionContext => (\r\n        <Row>\r\n          <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n          <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n            <Row>\r\n              <ListGroup>\r\n                <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                  Prosegui\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                  Home\r\n                </ListGroup.Item>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"success\"\r\n                  onClick={() => addRow()}\r\n                  disabled={availableRows <= 0 || !isEditable(sessionContext[0])}\r\n                >\r\n                  Aggiungi Coppia\r\n                </ListGroup.Item>\r\n\r\n                <OverlayTrigger placement=\"right\" key=\"right\" overlay={<Tooltip>{deleteTooltipMessage}</Tooltip>}>\r\n                  <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                    <ListGroup.Item\r\n                      action\r\n                      variant=\"danger\"\r\n                      style={{ pointerEvents: 'none' }}\r\n                      disabled={deleteDisabled || !isEditable(sessionContext[0])}\r\n                    >\r\n                      Elimina Coppia {deleteDisabled}\r\n                    </ListGroup.Item>\r\n                  </span>\r\n                </OverlayTrigger>\r\n\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"danger\"\r\n                  onClick={deleteStage1}\r\n                  disabled={!isEditable(sessionContext[0])}\r\n                >\r\n                  Reset gironi\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }}>\r\n            <Row style={{ display: isEditable(sessionContext[0]) ? 'flex' : 'none' }}>\r\n              <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder={\r\n                    data.rows.length < 4\r\n                      ? 'Inserisci almeno 4 coppie'\r\n                      : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                  }\r\n                  aria-label=\"Numero di gironi\"\r\n                  disabled={data.rows.length < 4}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={setStage1Name}\r\n                    disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  disabled={availableRows <= 0}\r\n                  placeholder={\r\n                    availableRows <= 0\r\n                      ? 'Numero massimo di coppie gia creato sulla base del numero di giocatori disponibili'\r\n                      : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                  }\r\n                  aria-label=\"Numero di coppie\"\r\n                  value={newRowsNumber || ''}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={e => setNewRowsNumber(availableRows)}\r\n                    disabled={newRowsNumber > availableRows}\r\n                  >\r\n                    Max\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={addMultipleRows}\r\n                    disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Row>\r\n            <Row>\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players)}\r\n                cellEdit={cellEditProps(isEditable(sessionContext[0]))}\r\n                selectRow={selectRow}\r\n                noDataIndication={<NoData addRow={() => addRow()} optionsLength={data.players.length} />}\r\n                caption={<TableHeader tournament={data.tournament} />}\r\n                wrapperClasses=\"player-table\"\r\n                headerClasses=\"player-table-header\"\r\n                striped\r\n                hover\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }} md={2}>\r\n            <GenericToast message={message.message} type={message.type} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = editable =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n          // Aggiorno posizione relativa\r\n          [...rows]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n        }\r\n      },\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          updateCellValue(oldValue, newValue, row, column);\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n          rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n          acc = 0;\r\n          for (let key in rows[parseInt(column.text) - 1])\r\n            if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n          rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {sessionContext => (\r\n        <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={rows}\r\n          columns={columns}\r\n          selectRow={selectRow}\r\n          cellEdit={cellEditProps(isEditable(sessionContext[0]))}\r\n          noDataIndication=\"Nessun dato reperito\"\r\n          wrapperClasses=\"player-table\"\r\n          headerClasses=\"player-table-header\"\r\n          caption={<TableHeader title={tableName} saved={saved} />}\r\n          striped\r\n          hover\r\n        />\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import FTournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { RedirectionControl } from './RedirectionControls';\r\n// import { OrganizationChartDemo } from '../Stage2/table';\r\n\r\nexport type routeType = {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  ComponentToRender: React.ReactNode;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n};\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/', label: 'Home', exact: true, ComponentToRender: FTournament, visible: false, private: true, index: 0 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    ComponentToRender: Pairs,\r\n    visible: false,\r\n    private: false,\r\n    index: 10\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    ComponentToRender: Stage1Wrapper,\r\n    visible: false,\r\n    private: true,\r\n    index: 20\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    ComponentToRender: PlayerTable,\r\n    visible: true,\r\n    private: true,\r\n    index: 30\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    ComponentToRender: Stage2,\r\n    //ComponentToRender: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    private: true,\r\n    index: 40\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'Not Found',\r\n    exact: false,\r\n    ComponentToRender: RedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000\r\n  }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import { useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\nimport PlayerSelect from '../Player/select';\r\n\r\nconst RegisterForm: React.FC<any> = (playerList: any) => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"name\">Nome</label>\r\n        <Field as={FormControl} id=\"name\" name=\"name\" placeholder=\"Nome\" type=\"text\" />\r\n        <ErrorMessage name=\"name\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"surname\">Cognome</label>\r\n        <Field as={FormControl} id=\"surname\" name=\"surname\" placeholder=\"Cognome\" type=\"text\" />\r\n        <ErrorMessage name=\"surname\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={6}>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n        <label htmlFor=\"passwordConfirm\">Conferma Password</label>\r\n\r\n        <Field\r\n          as={FormControl}\r\n          id=\"passwordConfirm\"\r\n          name=\"passwordConfirm\"\r\n          placeholder=\"Conferma Password\"\r\n          type=\"password\"\r\n        />\r\n        <ErrorMessage name=\"passwordConfirm\" />\r\n      </Col>\r\n      <Col\r\n        md={6}\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <Row>\r\n          <strong>La password deve rispettara i sequenti criteri :</strong>\r\n\r\n          <ul>\r\n            <li key={'pass-1'}>Almeno 1 carattere minuscolo</li>\r\n            <li key={'pass-2'}>Almeno 1 carattere maiuscolo</li>\r\n            <li key={'pass-3'}>Almeno 1 carattere numerico</li>\r\n            <li key={'pass-4'}>Almeno 1 carattere speciale</li>\r\n            <li key={'pass-5'}>Tra 8 e 16 caratteri</li>\r\n          </ul>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"emailConfirm\">Conferma Email</label>\r\n        <Field as={FormControl} id=\"emailConfirm\" name=\"emailConfirm\" placeholder=\"Conferma Email\" type=\"email\" />\r\n        <ErrorMessage name=\"emailConfirm\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={6}>\r\n        <label htmlFor=\"phone\">Telefono</label>\r\n        <Field as={FormControl} id=\"phone\" name=\"phone\" placeholder=\"Telefono\" type=\"text\" />\r\n        <ErrorMessage name=\"phone\" />\r\n      </Col>\r\n      <Col md={6}>\r\n        <label htmlFor=\"player\">Giocatore</label>\r\n        <Field as={PlayerSelect} id=\"player\" name=\"player\" placeholder=\"Seleziona Giocatore\" type=\"text\" />\r\n        <ErrorMessage name=\"player\" />\r\n      </Col>\r\n    </Row>\r\n    {/*\r\n          <label htmlFor=\"birthday\">Data di nascita</label>\r\n          <Field id=\"birthday\" name=\"birthday\" placeholder=\"Data di nascita\" type=\"text\" />\r\n          <ErrorMessage name=\"birthday\" />\r\n            */}\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Conferma</Button>\r\n      </Col>\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport RegisterForm from './RegisterForm';\r\nimport { IRegisterForm, IRegisterFormValue } from './types';\r\nimport { fetchPlayers } from '../Player/helper';\r\n\r\nconst initialValues: IRegisterFormValue = {\r\n  name: '',\r\n  surname: '',\r\n  password: '',\r\n  passwordConfirm: '',\r\n  email: '',\r\n  emailConfirm: '',\r\n  phone: '',\r\n  birthday: new Date()\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string(),\r\n  surname: yup.string(),\r\n  password: yup.string(),\r\n  email: yup.string(),\r\n  phone: yup.string(),\r\n  birthday: yup.date()\r\n});\r\n\r\nconst Register: React.FC<IRegisterForm> = ({ onSubmit }: IRegisterForm) => {\r\n  const [playerList, setPlayerList] = useState([]);\r\n  useEffect(() => {\r\n    (async () => fetchPlayers(setPlayerList, null))();\r\n  });\r\n  return (\r\n    <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n      <RegisterForm playerList={playerList} />\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst RegisterForm: React.FC = () => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Login</Button>\r\n      </Col>\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import * as React from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport LoginForm from './LoginForm';\r\nimport { ILoginFormValue, ILoginForm } from './types';\r\n\r\nconst initialValues: ILoginFormValue = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = yup.object().shape({ password: yup.string(), email: yup.string() });\r\n\r\nconst Login: React.FC<ILoginForm> = ({ onSubmit }: ILoginForm) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <LoginForm />\r\n  </Formik>\r\n);\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useSessionContext } from 'components/core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IRegisterFormValue, ILoginFormValue } from './types';\r\nimport { FormikHelpers } from 'formik';\r\nimport { Modal, Button, Container, Alert } from 'react-bootstrap';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition, findIconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\n\r\nconst AuthWrapper = ({ show, onHide }: authType): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const RigthArrowDefinition: IconDefinition = findIconDefinition({\r\n    prefix: 'far',\r\n    iconName: 'arrow-alt-circle-right'\r\n  });\r\n\r\n  const onSubmitLogin = async (values: ILoginFormValue, { setSubmitting }: FormikHelpers<ILoginFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidLogin(values)) return;\r\n      const response = await fetch('/api/v1/auth/authenticate', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      console.log('onSubmitLogin : ', response, result);\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) setErrorMessage('Utente o Password errata');\r\n\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})');\r\n  const phoneRegExp = new RegExp('^d{10}$');\r\n  const emailRegExp = new RegExp(\r\n    // eslint-disable-next-line quotes\r\n    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n  );\r\n\r\n  const isValidLogin = (formValues: ILoginFormValue): boolean => {\r\n    setErrorMessage('');\r\n    if (!formValues.email || !emailRegExp.test(formValues.email)) {\r\n      setErrorMessage('Email non valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    if (!formValues.password) {\r\n      setErrorMessage('Inserisci la password');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const isValidRegister = (formValues: IRegisterFormValue): boolean => {\r\n    setErrorMessage('');\r\n    // Nome\r\n    if (!formValues.name) {\r\n      setErrorMessage('Inserisci il nome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    // Telefono\r\n    if (!formValues.surname) {\r\n      setErrorMessage('Inserisci il cognome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test password\r\n    if (\r\n      !formValues.password ||\r\n      !formValues.passwordConfirm ||\r\n      !passwordRegExp.test(formValues.password) ||\r\n      !passwordRegExp.test(formValues.passwordConfirm)\r\n    ) {\r\n      setErrorMessage('La password non rispetta i criteri');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.password !== formValues.passwordConfirm) {\r\n      setErrorMessage('Le password non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test email\r\n    if (\r\n      !formValues.email ||\r\n      !formValues.emailConfirm ||\r\n      !emailRegExp.test(formValues.email) ||\r\n      !emailRegExp.test(formValues.emailConfirm)\r\n    ) {\r\n      setErrorMessage('Inserisci una email valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.email !== formValues.emailConfirm) {\r\n      setErrorMessage('Le email non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Telefono\r\n    if (!(formValues.phone && !phoneRegExp.test(formValues.phone))) {\r\n      setErrorMessage('Il numero di telefono inserito non è valido');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitRegister = async (values: IRegisterFormValue, { setSubmitting }: FormikHelpers<IRegisterFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidRegister(values)) return;\r\n      const response = await fetch('/api/v1/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const title = register ? 'Registrati' : 'Login';\r\n  const body = register ? <Register onSubmit={onSubmitRegister} /> : <Login onSubmit={onSubmitLogin} />;\r\n  const buttonString = register ? 'Login' : 'Registrati';\r\n  const Icon = <FontAwesomeIcon icon={RigthArrowDefinition} />;\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          {errorMessage ? (\r\n            <Alert key={'auth-alert'} variant={'danger'}>\r\n              {errorMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => setRegister(!register)}>\r\n          <div>\r\n            {Icon} <strong>{buttonString}</strong>\r\n          </div>\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport backgroundImage from '../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button } from 'react-bootstrap';\r\nimport routes from '../core/Routes';\r\nimport AuthWrapper from '../Auth/Wrapper';\r\nimport { useSessionContext } from '../core/SessionContext';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\nexport const Header: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const logout = async () => {\r\n    const response = await fetch('/api/v1/auth/logout');\r\n    if (response.ok)\r\n      updateSessionContext({\r\n        ...sessionContext,\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        role: '',\r\n        isAuthenticated: false\r\n      });\r\n  };\r\n\r\n  const yellow = '##ffc107';\r\n  const jumnboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px'\r\n  };\r\n\r\n  const nameStyle = { color: yellow, padding: '1vw' };\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumnboStyle}>\r\n        <h1>\r\n          <strong style={{ color: 'white' }}>{applicationName}</strong>\r\n        </h1>\r\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {routes.map(route =>\r\n                route.visible ? (\r\n                  route.private && !sessionContext.isAuthenticated ? null : (\r\n                    <Nav.Link key={route.index} href={route.path}>\r\n                      {route.label}\r\n                    </Nav.Link>\r\n                  )\r\n                ) : null\r\n              )}\r\n            </Nav>\r\n            {sessionContext.isAuthenticated && sessionContext.name ? (\r\n              <>\r\n                <Navbar.Text style={nameStyle}>\r\n                  <strong>{sessionContext.name}</strong>\r\n                </Navbar.Text>\r\n                <Button variant=\"outline-warning\" onClick={logout}>\r\n                  Log out\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"outline-warning\" onClick={() => setShowModal(true)}>\r\n                Log in\r\n              </Button>\r\n            )}\r\n          </Navbar.Collapse>\r\n          <AuthWrapper show={showModal} onHide={() => setShowModal(false)} />\r\n        </Navbar>\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch } from 'react-router';\r\nimport { ProtectedRoute } from '../components/core/ProtectedRoute';\r\nimport './style/App.css';\r\nimport routes from '../components/core/Routes';\r\nimport { Header } from './Header/Header';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas, far);\r\n\r\nconst App: React.FC = _ => (\r\n  <div className=\"App\">\r\n    <Header />\r\n\r\n    <Container fluid>\r\n      <Switch>\r\n        {/*<Route path=\"/login\" component={FLogin} />*/}\r\n        {routes.map(route => (\r\n          <ProtectedRoute {...route} key={route.index} />\r\n        ))}\r\n      </Switch>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = _ => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = _ => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\n\r\nReactDOM.render(\r\n  <SessionContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </SessionContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}