{"version":3,"sources":["components/Auth/Delete.tsx"],"names":["Delete","show","onHide","dispatch","useDispatch","currentHistory","useHistory","session","useSelector","SessionSelector","getSession","useState","errorMessage","setErrorMessage","useInput","password","value","bindPassword","bind","showError","message","setTimeout","handleSubmit","evt","email","username","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","result","ok","SessionAction","logout","request","push","status","console","log","error","key","variant","onSubmit","e","user","Group","as","Row","controlId","Label","column","sm","Control","style","fontSize","fontWeight","className","plaintext","readOnly","defaultValue","type","placeholder","size","onClick","centered","Header","backgroundColor","color","closeButton","Title","Body","fluid"],"mappings":"mRA2IeA,UA7HA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAChBC,EAAWC,cACXC,EAAiBC,cAEjBC,EAAUC,YAAYC,IAAgBC,YAJc,EAKlBC,mBAAS,IALS,mBAKnDC,EALmD,KAKrCC,EALqC,OAOVC,YAAiB,IAAlDC,EAP2C,EAOlDC,MAAuBC,EAP2B,EAOjCC,KAGnBC,EAAY,SAACC,GACjBP,EAAgBO,GAChBC,YAAW,kBAAMR,EAAgB,MAAK,MAGlCS,EAAY,uCAAG,WACnBC,EACAC,EACAC,GAHmB,iBAAAC,EAAA,6DAKnBH,EAAII,iBALe,kBAOMC,MAAM,gBAAiB,CAC5CC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAET,QAAOC,WAAUV,eAVzB,cAOXmB,EAPW,gBAYIA,EAASC,OAZb,OAYXC,EAZW,OAabF,EAASG,IAAMD,GACjBjC,EAASmC,IAAcC,OAAOC,QAAQ,KACtCtC,IACAG,EAAeoC,KAAK,MAEI,MAApBP,EAASQ,OAAgBvB,EAAU,4BAClCA,EAAU,oEAnBA,kDAsBjBwB,QAAQC,IAAI,mBAAZ,MACAzB,EAAU,oEAvBO,0DAAH,0DA2BZ0B,EAAQjC,EACZ,kBAAC,IAAD,CAAOkC,IAAK,aAAcC,QAAS,UAChCnC,EAAc,KAEf,KAEEmB,EACJ,kBAAC,IAAD,CACEiB,SAAU,SAACC,GAAD,OACR3B,EAAa2B,EAAG1C,EAAQ2C,KAAM1B,MAAOjB,EAAQ2C,KAAMzB,YAGrD,kBAAC,IAAK0B,MAAN,CAAYC,GAAIC,IAAKC,UAAU,eAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,CACEC,MAAO,CAAEC,SAAU,SAAUC,WAAY,UACzCC,UAAU,sBACVC,WAAS,EACTC,UAAQ,EACRC,aAAc1D,EAAQ2C,KAAM1B,UAIlC,kBAAC,IAAK2B,MAAN,CAAYC,GAAIC,IAAKC,UAAU,kBAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,CACEC,MAAO,CAAEC,SAAU,SAAUC,WAAY,UACzCC,UAAU,sBACVC,WAAS,EACTC,UAAQ,EACRC,aAAc1D,EAAQ2C,KAAMzB,aAIlC,kBAAC,IAAK0B,MAAN,CAAYC,GAAIC,IAAKC,UAAU,YAC7B,kBAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YAGA,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAKC,QAAN,eAAcQ,KAAK,WAAWC,YAAY,YAAelD,MAG7D,kBAAC,IAAD,CAAQmD,KAAK,KAAKN,UAAU,aAAaO,QAASnE,EAAQ6C,QAAQ,kBAAkBmB,KAAK,UAAzF,WAGA,kBAAC,IAAD,CAAQE,KAAK,KAAKN,UAAU,cAAcf,QAAQ,iBAAiBmB,KAAK,UACtE,kBAAC,IAAD,MADF,cAMJ,OACE,kBAAC,IAAD,CAAOjE,KAAMA,EAAMC,OAAQA,EAAQkE,KAAM,KAAME,UAAQ,GACrD,kBAAC,IAAMC,OAAP,CACEZ,MAAO,CACLa,gBAAiB,UACjBC,MAAO,SAETC,aAAW,GAEX,kBAAC,IAAMC,MAAP,CAAab,UAAU,qBAAvB,mBAEF,kBAAC,IAAMc,KAAP,CACEjB,MAAO,CACLa,gBAAiB,UACjBC,MAAO,UAGT,kBAAC,IAAD,CAAWI,OAAK,GACbhC,EACAd","file":"static/js/15.e21f2bf9.chunk.js","sourcesContent":["import React, { useState, SetStateAction } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Container, Alert, Form, Col, Row, Button } from 'react-bootstrap';\r\nimport { useInput } from '../core/hooks/InputHook';\r\nimport { TrashIcon } from '../core/icons';\r\nimport { SessionSelector } from 'redux/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionAction } from 'redux/actions';\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\n// Componente per cancellazione utente\r\nconst Delete = ({ show, onHide }: authType): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const currentHistory = useHistory();\r\n  // Dati utente\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  // Hook gestione campo password\r\n  const { value: password, bind: bindPassword } = useInput<string>('');\r\n\r\n  // Util per mostrare messaggi all'utente\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (\r\n    evt: React.SyntheticEvent<Element, Event>,\r\n    email: string | null | undefined,\r\n    username: string | null | undefined\r\n  ) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/v1/auth/', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, username, password }),\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        dispatch(SessionAction.logout.request({}));\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) showError('Utente o Password errata');\r\n        else showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      showError('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n    }\r\n  };\r\n\r\n  const error = errorMessage ? (\r\n    <Alert key={'auth-alert'} variant={'danger'}>\r\n      {errorMessage}{' '}\r\n    </Alert>\r\n  ) : null;\r\n\r\n  const body = (\r\n    <Form\r\n      onSubmit={(e: React.SyntheticEvent<Element, Event>) =>\r\n        handleSubmit(e, session.user!.email, session.user!.username)\r\n      }\r\n    >\r\n      <Form.Group as={Row} controlId=\"emailDelete\">\r\n        <Form.Label column sm=\"2\">\r\n          Email\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n            className=\"default-color-white\"\r\n            plaintext\r\n            readOnly\r\n            defaultValue={session.user!.email}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group as={Row} controlId=\"usernameDelete\">\r\n        <Form.Label column sm=\"2\">\r\n          Username\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n            className=\"default-color-white\"\r\n            plaintext\r\n            readOnly\r\n            defaultValue={session.user!.username}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group as={Row} controlId=\"password\">\r\n        <Form.Label column sm=\"2\">\r\n          Password\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} />\r\n        </Col>\r\n      </Form.Group>\r\n      <Button size=\"lg\" className=\"float-left\" onClick={onHide} variant=\"outline-success\" type=\"button\">\r\n        Annulla\r\n      </Button>\r\n      <Button size=\"lg\" className=\"float-right\" variant=\"outline-danger\" type=\"submit\">\r\n        <TrashIcon /> Conferma\r\n      </Button>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#343A40',\r\n          color: 'white',\r\n        }}\r\n        closeButton\r\n      >\r\n        <Modal.Title className=\"default-color-red\">Elimina Utente</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body\r\n        style={{\r\n          backgroundColor: '#343A40',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          {error}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n"],"sourceRoot":""}