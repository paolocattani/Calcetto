{"version":3,"sources":["components/assets/header.jpg","components/core/ProtectedRoute.tsx","components/core/utils.ts","components/core/SessionContext.tsx","components/core/Commons.tsx","components/Tournament/helper.ts","components/Tournament/type.ts","components/Player/helper.js","components/Tournament/Tournament.jsx","components/Player/header.tsx","components/Player/table.jsx","components/Player/select.jsx","components/Pair/helper.js","components/Pair/header.tsx","components/Pair/noData.tsx","components/Pair/table.jsx","components/Stage1/header.tsx","components/Pair/select.jsx","components/Stage1/helper.js","components/Stage1/table.jsx","components/Stage1/handler.tsx","components/core/Routes.ts","components/Stage1/wrapper.tsx","components/Stage2/model.tsx","components/core/RedirectionControls.tsx","components/Auth/Register/RegisterForm.tsx","components/Auth/Register/Register.tsx","components/Auth/Login/LoginForm.tsx","components/Auth/Login/Login.tsx","components/Auth/Wrapper.tsx","components/Auth/Delete/form.tsx","components/Auth/Delete/modal.tsx","components/Header/Header.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ProtectedRoute","props","ComponentToRender","render","getTodayDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","phoneRegExp","RegExp","passwordRegExp","emailRegExp","initialSession","SessionContext","createContext","useSessionContext","useContext","isEditable","sessionContext","isAuthenticated","role","LoadingModal","message","show","onHide","Modal","size","centered","Header","closeButton","Title","Body","Footer","Spinner","animation","variant","GenericToast","type","Toast","className","key","Alert","getEmptyTournament","name","progress","id","ownerId","public","label","nameFilter","surnameFilter","aliasFilter","roleFilter","TournamentProgress","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRigth","width","IndicatorSeparator","innerProps","style","cardStyle","margin","borderColor","borderWidth","FTournament","useState","selectedOption","setSelectedOption","tournamentList","setTournamentList","messageInitialState","setMessage","currentHistory","useHistory","useEffect","setterFunction","setterFunction2","a","fetch","method","headers","response","json","result","found","find","e","tmp","sort","handleChange","handleCreate","newT","prevList","handleSubmit","event","preventDefault","body","JSON","stringify","ok","push","status","setTimeout","Row","Col","Card","as","Form","onSubmit","Consumer","components","value","options","placeholder","isSearchable","isClearable","onChange","onCreateOption","createOptionPosition","Button","disabled","clearAllFilter","dataField","text","editable","headerClasses","autoSelectText","headerStyle","column","colIndex","filter","textFilter","getFilter","selectFilter","Portiere","Attaccante","Master","editor","Type","SELECT","getOptions","_","hidden","valueFormatter","alias","surname","getEmptyPlayer","email","phone","match_played","match_won","total_score","tableHeader","Player","handleOnSelect","row","isSelected","setState","state","selectedRows","cellEditProps","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","rows","isLoading","bind","deleteRow","addRow","this","selectedRow","selectRow","nonSelectable","map","onSelect","onSelectAll","forEach","selectColumnStyle","checked","rowIndex","rowKey","ListGroup","horizontal","onClick","wrapperClasses","keyField","data","columns","cellEdit","caption","filterFactory","noDataIndication","striped","hover","bootstrap4","React","Component","animatedComponents","makeAnimated","PlayerSelection","forwardRef","ref","columnIndex","onUpdate","pairId","align","editorRenderer","editorProps","toUpperCase","split","CHECKBOX","content","getEmptyRowModel","rowNumber","tId","player1","player2","pairAlias","stage1Name","paid1","paid2","fetchData","players","tournament","fetchPairs","console","log","createAlias","TableHeader","noData","optionsLength","diff","to","PairsTable","useParams","setIsLoading","setData","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","showSuccessMessage","index","emptyRow","length","current","addMultipleRows","ii","e1","e2","localeCompare","updateOptions","player","selected","selectedElement","newRowsElement","rowElement","handleSelect","confirmPairs","missingStage1Name","missingPairs","invalidStage","pairsInStage","reduce","allNames","stageName","MIN_PAIR_PER_STAGE","goBack","deleteStage1","setStage1Name","names","newRows","error","availableRows","Math","floor","accumulator","deleteDisabled","deleteTooltipMessage","md","span","Item","action","OverlayTrigger","placement","overlay","Tooltip","pointerEvents","display","InputGroup","target","Prepend","Text","FormControl","aria-label","Append","title","saved","divStyle","color","undefined","PairsSelection","pairsList","setPairsList","newColumn","toString","headerAlign","cell","parseInt","baseColumns","comparator","obj1","obj2","total","Stage1Table","tableName","updateCellValue","beforeSaveCell","startsWith","getOpposite","acc","Stage1Handler","setIsSaved","pair","jj","rowsGenerator","setRows","model1","score","pair1Id","pair2Id","routes","path","exact","visible","private","Pairs","stage","stageList","element","renderTables","PlayerTable","innerElementStyle","flexDirection","alignItems","innerParentStyle","justifyContent","alignContent","thisList","pow","location","useLocation","pathname","RegisterForm","htmlFor","initialValues","password","passwordConfirm","emailConfirm","birthday","validationSchema","yup","shape","Register","LoginForm","responseFacebook","responseGoogle","Login","AuthWrapper","register","setRegister","errorMessage","setErrorMessage","updateSessionContext","RigthArrowDefinition","findIconDefinition","prefix","iconName","onSubmitLogin","values","setSubmitting","isValidLogin","formValues","test","onSubmitRegister","buttonString","Icon","icon","Container","fluid","Delete","va","onSubmitDelete","isValid","showModalAuth","setShowModalAuth","showModalDelete","setShowModalDelete","logout","jumnboStyle","backgroundImage","backgroundSize","padding","nameStyle","Jumbotron","Navbar","sticky","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","route","Link","library","add","fas","far","App","Boolean","window","hostname","match","ReactDOM","children","sessionState","setSessionState","defaultSessionContext","user","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caef3245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.7774471e.jpg\";","// https://github.com/openscript/react-example-authentication-redirection\r\n\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\n\r\nexport const ProtectedRoute: React.FC<any> = props => {\r\n  /**\r\n   *\r\n   * Per ora non voglio obbligare l'utente a fare la login.\r\n   * Gestisco nelle singole pagine che se l'utente non è autenticato non può modificare\r\n   */\r\n  const { ComponentToRender } = props;\r\n\r\n  return <Route {...props} render={() => <ComponentToRender />} />;\r\n\r\n  /*\r\n  const currentLocation = useLocation();\r\n  // console.log('Current Location ', currentLocation);\r\n  let redirectPath = props.redirectPathOnAuthentication;\r\n\r\n\r\n\r\n\r\n  // FIXME:\r\n  // console.log('ProtectedRoute....');\r\n  if (process.env.NODE_ENV === 'development') return <Route {...props} />;\r\n\r\n  if (!props.isAuthenticated) {\r\n    // console.log('Not Authenticated');\r\n    props.setRedirectPathOnAuthentication(currentLocation.pathname);\r\n    redirectPath = props.authenticationPath;\r\n  }\r\n\r\n  if (redirectPath !== currentLocation.pathname && !props.isAuthenticated) {\r\n    // console.log('Redirecting to : ' + redirectPath);\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n    return <Route {...props} component={renderComponent} render={undefined} />;\r\n  } else {\r\n    // console.log('Render component', props);\r\n    return <Route {...props} />;\r\n  }\r\n  */\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export function getTodayDate(): string {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n","import { createContext, useContext, useState, useEffect } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Session {\r\n  isAuthenticated?: boolean;\r\n  name?: string;\r\n  surname?: string;\r\n  email?: string;\r\n  role?: string;\r\n  redirectPathOnAuthentication?: string;\r\n}\r\n\r\n// https://stackoverflow.com/questions/59422159/redirecting-a-user-to-the-page-they-requested-after-successful-authentication-wi\r\n// https://github.com/openscript/react-example-authentication-redirection\r\n\r\n// https://www.freecodecamp.org/news/react-context-in-5-minutes/\r\nexport const initialSession: Session = {};\r\n\r\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\r\nexport const useSessionContext = () => useContext(SessionContext);\r\n\r\nexport const SessionContextProvider: React.FC = ({ children }) => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [sessionState, setSessionState];\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch('/api/v1/auth/');\r\n        const user = await response.json();\r\n        if (user && response.ok) setSessionState({ isAuthenticated: true, ...user });\r\n        //console.log('session context : ', { isAuthenticated: true, ...user });\r\n      } catch (error) {\r\n        console.error('SessionContext.error :', error);\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return <SessionContext.Provider value={defaultSessionContext}>{children}</SessionContext.Provider>;\r\n};\r\n\r\nexport const isEditable = (sessionContext: Session): boolean =>\r\n  !sessionContext || !sessionContext.isAuthenticated || !sessionContext.role\r\n    ? false\r\n    : sessionContext.isAuthenticated && sessionContext.role === 'Admin';\r\n","import React from 'react';\r\nimport { Modal, Spinner, Toast, Alert } from 'react-bootstrap';\r\n\r\n// Loading Modal\r\ntype loadingModalPropsType = {\r\n  show: boolean;\r\n  message: string;\r\n  onHide?: () => void;\r\n};\r\n\r\nexport const LoadingModal: React.FC<loadingModalPropsType> = ({\r\n  message,\r\n  show,\r\n  onHide = () => (show = false)\r\n}: loadingModalPropsType) => (\r\n  <Modal show={show} onHide={onHide} size=\"xl\" centered>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Caricamento....</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{message}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Spinner animation=\"border\" variant=\"light\" />\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\n// Toasts\r\ntype toastPropsType = {\r\n  message: string;\r\n  type?: 'success' | 'warning' | 'danger';\r\n};\r\n\r\nexport const GenericToast: React.FC<toastPropsType> = ({ message, type }: toastPropsType) =>\r\n  message && message !== '' ? (\r\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\r\n      <Toast.Header closeButton={false}>\r\n        <strong>Operazione completata !</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Alert variant={type}>{message}</Alert>\r\n      </Toast.Body>\r\n    </Toast>\r\n  ) : null;\r\n","import { getTodayDate } from '../core/utils';\r\nimport { TournamentModel, TournamentProgressType, selectOptions } from './type';\r\nimport { useState } from 'react';\r\n\r\nexport function fetchTournaments(setterFunction: typeof useState, setterFunction2: typeof useState): void {\r\n  (async () => {\r\n    const response = await fetch('/api/v1/tournament/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel[] = await response.json();\r\n    let found = result.find(e => e.name === getTodayDate());\r\n    let tmp = found ? [found, ...result] : result;\r\n    tmp.sort();\r\n    setterFunction(tmp);\r\n    if (setterFunction2) setterFunction2(tmp[0]);\r\n  })();\r\n}\r\n\r\nexport function fetchTournament(setterFunction: typeof useState, tId: number): void {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result: TournamentModel = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n}\r\n\r\nexport async function getTournament(tId: number): Promise<TournamentModel | null> {\r\n  const response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result: TournamentModel = await response.json();\r\n  return response.ok ? result : null;\r\n}\r\n\r\nexport function getEmptyTournament(name: string, progress: TournamentProgressType) {\r\n  return {\r\n    id: null,\r\n    name: name || '',\r\n    ownerId: null,\r\n    progress: progress || 'New',\r\n    public: true,\r\n    label: name || ''\r\n  };\r\n}\r\n\r\n// select helper\r\nexport function customFilter(option: selectOptions, searchText: string): boolean {\r\n  console.log('customFilter : ', option, typeof option.data);\r\n  return option.data.name ? option.data.name.toLowerCase().includes(searchText.toLowerCase()) : false;\r\n}\r\n","import { PairModel } from '../Pair/type';\r\n\r\nexport type TournamentProgressType = 'New' | 'PairsSelection' | 'Stage1' | 'Stage2';\r\n\r\nexport type TournamentModel = {\r\n  id: number | null;\r\n  name: string;\r\n  ownerId: number;\r\n  progress: TournamentProgressType;\r\n  public: boolean;\r\n  pairs?: PairModel[];\r\n};\r\n\r\nexport const TournamentProgress = { New: 'new', PairsSelection: 'PairsSelection', Stage1: 'Stage1', Stage2: 'Stage2' };\r\n\r\nexport type selectOptions = {\r\n  label: string;\r\n  value: string;\r\n  data: TournamentModel;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\n// options for role column\r\nconst selectOptions = {\r\n  Portiere: 'Portiere',\r\n  Attaccante: 'Attaccante',\r\n  Master: 'Master'\r\n};\r\n\r\n// Filter\r\nlet nameFilter;\r\nlet surnameFilter;\r\nlet aliasFilter;\r\nlet roleFilter;\r\n\r\nexport function clearAllFilter() {\r\n  nameFilter('');\r\n  surnameFilter('');\r\n  aliasFilter('');\r\n  roleFilter('');\r\n}\r\n\r\n// Columns default\r\nexport default [\r\n  { dataField: 'id', text: 'ID', editable: false },\r\n  {\r\n    dataField: 'name',\r\n    text: 'Nome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (nameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'surname',\r\n    text: 'Cognome',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true,\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (surnameFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'alias',\r\n    text: 'Alias',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    autoSelectText: true,\r\n    filter: textFilter({\r\n      placeholder: 'Filtra...',\r\n      getFilter: filter => (aliasFilter = filter)\r\n    })\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Roulo',\r\n    headerClasses: 'player-table-header-element',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    filter: selectFilter({\r\n      placeholder: 'Filtra...',\r\n      options: selectOptions,\r\n      getFilter: filter => (roleFilter = filter)\r\n    }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      getOptions: _ => {\r\n        return [\r\n          { value: 'Portiere', label: 'Portiere' },\r\n          { value: 'Attaccante', label: 'Attaccante' },\r\n          { value: 'Master', label: 'Master' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  {\r\n    dataField: 'phone',\r\n    headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n    text: 'Telefono',\r\n    headerClasses: 'player-table-header-element',\r\n    autoSelectText: true\r\n  },\r\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\r\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\r\n  { dataField: 'total_score', text: 'Punteggio', hidden: true }\r\n];\r\n\r\n// Custom export button\r\nexport const ExportCSVButton = props => {\r\n  return (\r\n    <Button disabled className=\"btn btn-success\" onClick={() => props.onExport()}>\r\n      Esporta in CSV\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const fetchPlayers = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    const model = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n    console.log('fetchPlayers.result : ', model);\r\n    setterFunction(model);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  let value = '';\r\n  if (!selectedOption) return '';\r\n  if (selectedOption.alias) {\r\n    value = selectedOption.alias;\r\n  } else {\r\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getEmptyPlayer(label) {\r\n  return {\r\n    id: null,\r\n    name: '',\r\n    surname: '',\r\n    alias: '',\r\n    label: label || '',\r\n    role: 'Portiere',\r\n    email: '',\r\n    phone: '',\r\n    match_played: 0,\r\n    match_won: 0,\r\n    total_score: 0,\r\n    editable: false\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// React-Select\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\n// Bootstrap\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\n// Core\r\nimport { getTodayDate } from '../core/utils';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\nimport { GenericToast } from '../core/Commons';\r\n// Helper\r\nimport { fetchTournaments, getEmptyTournament } from './helper';\r\n// Types\r\nimport { TournamentProgress } from './type';\r\n\r\nconst FTournament = () => {\r\n  // State definition\r\n  const [selectedOption, setSelectedOption] = useState(getTodayDate());\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  let currentHistory = useHistory();\r\n\r\n  useEffect(() => fetchTournaments(setTournamentList, setSelectedOption), []);\r\n\r\n  const handleChange = selectedOption => setSelectedOption(selectedOption);\r\n  const handleCreate = selectedOption => {\r\n    let newT = getEmptyTournament(selectedOption);\r\n    setSelectedOption(newT);\r\n    setTournamentList(prevList => [...prevList, newT]);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const response = await fetch('/api/v1/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(getEmptyTournament(selectedOption.name, TournamentProgress.PairsSelection))\r\n    });\r\n    const result = await response.json();\r\n    if (response.ok) currentHistory.push(`/tournament/${result.id}`);\r\n    else {\r\n      if (response.status === 401) setMessage({ message: 'Non sei autorizzato', type: 'danger' });\r\n      else if (result.message) setMessage({ message: result.message, type: 'danger' });\r\n      else setMessage({ message: 'Errore interno. Riprovare piu tardi...', type: 'danger' });\r\n\r\n      setTimeout(() => setMessage(messageInitialState), 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <GenericToast message={message.message} type={message.type} />\r\n\r\n        <Card style={cardStyle}>\r\n          <Card.Header as=\"h2\">Torneo</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Scegli un torneo</Card.Title>\r\n            <Form onSubmit={handleSubmit}>\r\n              <SessionContext.Consumer>\r\n                {sessionContext =>\r\n                  isEditable(sessionContext[0]) ? (\r\n                    <CreatableSelect\r\n                      // TODO:\r\n                      //filterOption={customFilter}\r\n                      // getOptionValue={option => `${option.label}`}\r\n                      //formatCreateLabel={formatNewLabel}\r\n                      //formatOptionLabel={formatOptionLabel}\r\n                      //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n                      //\r\n                      components={{ IndicatorSeparator }}\r\n                      value={selectedOption}\r\n                      options={tournamentList}\r\n                      placeholder=\"Crea/Cerca un torneo\"\r\n                      isSearchable={true}\r\n                      isClearable\r\n                      onChange={handleChange}\r\n                      onCreateOption={handleCreate}\r\n                      createOptionPosition={'first'}\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      // TODO:\r\n                      //filterOption={customFilter}\r\n                      // getOptionValue={option => `${option.label}`}\r\n                      //formatCreateLabel={formatNewLabel}\r\n                      //formatOptionLabel={formatOptionLabel}\r\n                      //getOptionLabel={option => `${option.name} @ ${option.progress}`}\r\n                      //\r\n                      components={{ IndicatorSeparator }}\r\n                      value={selectedOption}\r\n                      options={tournamentList}\r\n                      placeholder=\"Cerca un torneo\"\r\n                      isSearchable={true}\r\n                      isClearable\r\n                      onChange={handleChange}\r\n                    />\r\n                  )\r\n                }\r\n              </SessionContext.Consumer>\r\n              <br></br>\r\n              <Button type=\"submit\" size=\"lg\" variant=\"outline-warning\" disabled={!selectedOption}>\r\n                Continua\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n// TODO:\r\n// https://react-select.com/components#components\r\n\r\n// Indicator Separator\r\nconst indicatorSeparatorStyle = {\r\n  alignSelf: 'stretch',\r\n  backgroundColor: 'green',\r\n  marginBottom: 8,\r\n  marginTop: 8,\r\n  marginRigth: 10,\r\n  width: 1\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n\r\nconst cardStyle = {\r\n  width: '50%',\r\n  margin: 'auto',\r\n  backgroundColor: 'inherit',\r\n  borderColor: '#ffc107',\r\n  borderWidth: '3px'\r\n};\r\n\r\n/*\r\nconst formatNewLabel = inputString => (\r\n  <strong>\r\n    {inputString}\r\n    <small style={{ color: '#ccc' }}>@ New</small>\r\n  </strong>\r\n);\r\n\r\nconst formatOptionLabel = ({ name, progress, innerProps }) => (\r\n  <strong>\r\n    {name}\r\n    <small style={{ color: '#ccc' }}>@{progress}</small>\r\n  </strong>\r\n);\r\n\r\n*/\r\nexport default FTournament;\r\n","import React from 'react';\r\n\r\n// FIXME: change to tounament name\r\n//const tableHeader: React.FC<{ saved: string }> = saved => {\r\nconst tableHeader: React.FC = _ => {\r\n  return (\r\n    <h3>\r\n      <b>Gestione giocatori</b>\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React from 'react';\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap';\r\n// react-bootstrap-table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper/ style\r\nimport './style.css';\r\nimport columns, { clearAllFilter } from './helper';\r\nimport TableHeader from './header';\r\nimport { LoadingModal } from '../core/Commons';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\nexport default class Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      selectedRows: [],\r\n      isLoading: false\r\n    };\r\n    this.handleOnSelect = this.handleOnSelect.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.addRow = this.addRow.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player/list', {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        this.setState({\r\n          isLoading: false,\r\n          rows: result\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  handleOnSelect = (row, isSelected) => {\r\n    this.setState(state => {\r\n      const { selectedRows } = state;\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? { selectedRows: selectedRows } : { selectedRows: [row, ...selectedRows] };\r\n      } else {\r\n        return found ? { selectedRows: selectedRows.filter(e => e.id !== row.id) } : { selectedRows: selectedRows };\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  addRow() {\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(getEmptyPlayer())\r\n        });\r\n        const result = await response.json();\r\n        this.setState(state => {\r\n          return {\r\n            rows: [result, ...state.rows],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  deleteRow() {\r\n    const { selectedRows } = this.state;\r\n    if (!selectedRows) return;\r\n    this.setState({ isLoading: true }, () =>\r\n      (async () => {\r\n        fetch('/api/v1/player', {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(selectedRows)\r\n        });\r\n        this.setState(state => {\r\n          return {\r\n            // Se la riga che sto analizzando è contenuta in quelle selezionata allora non la voglio\r\n            rows: state.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n            selectedRows: [],\r\n            isLoading: false\r\n          };\r\n        });\r\n      })()\r\n    );\r\n  }\r\n\r\n  cellEditProps = cellEditFactory({\r\n    mode: this.props.isAuthenticated && this.props.role === 'Admin' ? 'click' : 'none',\r\n    blurToSave: true,\r\n    autoSelectText: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      (async () => {\r\n        // TODO: gestire try-catch\r\n        const response = await fetch('/api/v1/player', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { state, deleteRow, addRow } = this;\r\n    const { rows, isLoading } = state;\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      nonSelectable: rows.filter(e => (e.editable ? false : true)).map(e => e.id),\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: (isSelected, rows) => rows.forEach(row => this.handleOnSelect(row, isSelected)),\r\n      style: { backgroundColor: '#c8e6c9' },\r\n      selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\r\n        rows[rowIndex].editable ? { backgroundColor: '#28a745' } : { backgroundColor: '#dc3545' }\r\n    };\r\n\r\n    // console.log('Render player : ', { ...this.props });\r\n\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {sessionContext => (\r\n          <>\r\n            <LoadingModal show={isLoading} message={'Caricamento'} />\r\n            <Row>\r\n              <Col>\r\n                <>\r\n                  <ListGroup horizontal>\r\n                    <Button variant=\"success\" onClick={addRow} disabled={!isEditable(sessionContext[0])}>\r\n                      Aggiungi giocatore\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={deleteRow} disabled={!isEditable(sessionContext[0])}>\r\n                      Calcella giocatore\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={clearAllFilter.bind(this)}>\r\n                      Pulisci Filtri\r\n                    </Button>\r\n                  </ListGroup>\r\n                  <BootstrapTable\r\n                    wrapperClasses=\"player-table\"\r\n                    keyField=\"id\"\r\n                    data={rows}\r\n                    columns={columns}\r\n                    cellEdit={this.cellEditProps}\r\n                    selectRow={selectRow}\r\n                    caption={<TableHeader />}\r\n                    filter={filterFactory()}\r\n                    headerClasses=\"player-table-header\"\r\n                    noDataIndication=\"Nessun dato reperito\"\r\n                    striped\r\n                    hover\r\n                    bootstrap4\r\n                  />\r\n                </>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { valueFormatter } from './helper';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst PlayerSelection = React.forwardRef((props, ref) => {\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, options } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={animatedComponents}\r\n      options={options}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => 'center' },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => 'center' },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => 'center',\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n      <PlayerSelect\r\n        {...editorProps}\r\n        id={columnIndex}\r\n        row={row}\r\n        rowIndex={rowIndex}\r\n        columnIndex={columnIndex}\r\n        value={value}\r\n        onSelect={onSelect}\r\n        options={options}\r\n      />\r\n    ),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' })\r\n  },\r\n  { dataField: 'pairAlias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map(e => {\r\n          return { value: e, label: e };\r\n        })\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    align: () => 'center',\r\n    headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n    editor: {\r\n      type: Type.CHECKBOX,\r\n      value: 'Si:No'\r\n    },\r\n    /*\r\n    formatter: (cell, row, rowIndex) => {\r\n      console.log(cell);\r\n      return (\r\n        <InputGroup>\r\n          <InputGroup.Checkbox style={{ margin: 'auto' }} onCancechecked={cell}></InputGroup.Checkbox>\r\n        </InputGroup>\r\n      );\r\n    },*/\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (content !== 'Si') return { backgroundColor: '#ffbf47' };\r\n    }\r\n  }\r\n];\r\n\r\nexport const cellEditProps = editable =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        await response.json();\r\n      })();\r\n    }\r\n  });\r\n\r\nexport function getEmptyRowModel() {\r\n  return {\r\n    id: null,\r\n    rowNumber: null,\r\n    tId: null,\r\n    player1: getEmptyPlayer(),\r\n    player2: getEmptyPlayer(),\r\n    pairAlias: '',\r\n    stage1Name: '',\r\n    paid1: 'No',\r\n    paid2: 'No'\r\n  };\r\n}\r\n\r\nexport const fetchData = async tId => {\r\n  // Fetch Pairs\r\n  let response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const rows = await response.json();\r\n\r\n  response = await fetch(tId ? `/api/v1/player/list/${tId}` : '/api/v1/player/list', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const result = await response.json();\r\n  const players = [...result, getEmptyPlayer('Nessun Giocatore')];\r\n\r\n  // Fetch Tournament\r\n  response = await fetch(`/api/v1/tournament/${tId}`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const tournament = await response.json();\r\n\r\n  return { rows, players, tournament };\r\n};\r\n\r\nexport const fetchPairs = (setterFunction, tId) => {\r\n  (async () => {\r\n    const response = await fetch(`/api/v1/pair/list/?tId=${tId}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const result = await response.json();\r\n    setterFunction(result);\r\n  })();\r\n};\r\n\r\nexport function valueFormatter(selectedOption) {\r\n  console.log('valueFormatter : ', selectedOption);\r\n  if (selectedOption.pairAlias && selectedOption.pairAlias !== '')\r\n    return `${selectedOption.pairAlias} ( ${selectedOption.id} )`;\r\n  return createAlias(selectedOption);\r\n}\r\n\r\nexport function createAlias(selectedOption) {\r\n  console.log('createAlias : ', selectedOption);\r\n  let value = `${selectedOption.rowNumber} : `;\r\n  const { player1, player2, id } = selectedOption;\r\n  value += player1.alias ? player1.alias : player1.name;\r\n  value += ' - ' + player2.alias ? player2.alias : player2.name;\r\n  value += ` ( ${id} )`;\r\n  return value;\r\n}\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst TableHeader: React.FC<headerPropsType> = ({ tournament }: headerPropsType) => {\r\n  return tournament ? (\r\n    <h3>\r\n      <p>\r\n        <b>\r\n          Torneo \"<strong>{tournament?.name.toUpperCase()}</strong>\" ( {tournament?.id} )\r\n          <small> - {tournament?.progress}</small>\r\n        </b>\r\n      </p>\r\n    </h3>\r\n  ) : null;\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { noDataPropsType } from './type';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// FIXME: change to tounament name\r\nconst noData: React.FC<noDataPropsType> = ({ addRow, optionsLength }: noDataPropsType) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, InputGroup, FormControl, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { fetchData, columns, cellEditProps, getEmptyRowModel } from './helper';\r\nimport { getEmptyPlayer } from '../Player/helper';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport TableHeader from './header';\r\nimport NoData from './noData';\r\nimport { LoadingModal, GenericToast } from '../core/Commons';\r\nimport './style.css';\r\nimport { TournamentProgress } from '../Tournament/type';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\nconst PairsTable = () => {\r\n  // Navigation\r\n  const { tId } = useParams();\r\n  console.log('render pairs table : ', tId);\r\n\r\n  let currentHistory = useHistory();\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const messageInitialState = { message: '', type: 'success' };\r\n  const [message, setMessage] = useState(messageInitialState);\r\n  // Data\r\n  const [data, setData] = useState({ tournament: null, rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    (async () => setData(await fetchData(tId)))();\r\n  }, [tId]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'danger' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n  function showSuccessMessage(message) {\r\n    setIsLoading({ state: false, message });\r\n    setMessage({ message, type: 'success' });\r\n    setTimeout(() => setMessage(messageInitialState), 5000);\r\n  }\r\n\r\n  async function addRow(index) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tId;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow)\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso'\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players = [];\r\n      selectedRows.forEach(e => {\r\n        if (e.player1.id) players.push(e.player1);\r\n        if (e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows)\r\n      });\r\n      await response.json();\r\n\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows.filter(row => !selectedRows.find(selectedRow => selectedRow.id === row.id)),\r\n        players: current.players\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player, selected) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players.filter(e => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          )\r\n        }));\r\n      else\r\n        setData(current => ({\r\n          tournament: current.tournament,\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias))\r\n        }));\r\n    else if (selected.id)\r\n      setData(current => ({\r\n        tournament: current.tournament,\r\n        rows: current.rows,\r\n        players: current.players.filter(e => e.id !== selected.id)\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = (selectedElement, rowIndex, columnIndex) => {\r\n    const newRowsElement = data.rows.map(rowElement => {\r\n      if (rowElement.id === rowIndex) {\r\n        let row = rowElement;\r\n        if (columnIndex === 1) {\r\n          if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n            // Devo salvare l'elemnto che sto per sostituire\r\n            row.player1 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n            updateOptions(row.player1, selectedElement);\r\n            row.player1 = selectedElement;\r\n          }\r\n        } else {\r\n          if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n            row.player2 = getEmptyPlayer();\r\n            showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n          } else {\r\n            updateOptions(row.player2, selectedElement);\r\n            row.player2 = selectedElement;\r\n          }\r\n        }\r\n        // update Db. Non aspetto la risposta...\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        return row;\r\n      } else return rowElement;\r\n    });\r\n    setData(current => ({\r\n      tournament: current.tournament,\r\n      rows: newRowsElement,\r\n      players: current.players\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row, isSelected) => {\r\n    setSelectedRows(selectedRows => {\r\n      const found = selectedRows.find(e => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = _ => {\r\n    if (!tId) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows.filter(e => !e.stage1Name || e.stage1Name === '').map(e => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows.filter(e => e.player1.id === null || e.player2.id === null).map(e => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames, row) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update tournament progress\r\n    data.tournament.progress = TournamentProgress.Stage1;\r\n    fetch('/api/tournament', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data.tournament)\r\n    });\r\n\r\n    // Go to Stage1\r\n    currentHistory.push(`/stage1/${tId}`);\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  async function deleteStage1() {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId })\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      data.tournament.progress = TournamentProgress.PairsSelection;\r\n      fetch('/api/tournament', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data.tournament)\r\n      });\r\n      showSuccessMessage('Cancellazione completata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row)\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData(current => ({ tournament: current.tournament, rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows =\r\n    Math.floor(\r\n      data.players.length -\r\n        1 -\r\n        data.rows.reduce((accumulator, e) => {\r\n          if (!e.player1 && !e.player2) return accumulator + 2;\r\n          if (!e.player1 || !e.player2) return accumulator + 1;\r\n          if (!e.player1.id && !e.player2.id) return accumulator + 2;\r\n          if (!e.player1.id || !e.player2.id) return accumulator + 1;\r\n          return accumulator;\r\n        }, 0)\r\n    ) / 2;\r\n\r\n  const deleteDisabled =\r\n    !(selectedRows.length > 0) || data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2';\r\n\r\n  let deleteTooltipMessage = '';\r\n  if (!(selectedRows.length > 0)) deleteTooltipMessage = 'Seleziona almeno una riga';\r\n  else if (data.tournament.progress === 'Stage1' || data.tournament.progress === 'Stage2')\r\n    deleteTooltipMessage = 'Devi prima resettare i gironi per poter cancellare delle coppie';\r\n  else deleteTooltipMessage = 'Cancella le coppie selezionate';\r\n\r\n  // console.log('render table : ', data);\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {sessionContext => (\r\n        <Row>\r\n          <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n          <Col style={{ margin: '10px' }} md={{ span: 1 }}>\r\n            <Row>\r\n              <ListGroup>\r\n                <ListGroup.Item action variant=\"primary\" onClick={confirmPairs}>\r\n                  Prosegui\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"secondary\" onClick={goBack}>\r\n                  Home\r\n                </ListGroup.Item>\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"success\"\r\n                  onClick={() => addRow()}\r\n                  disabled={availableRows <= 0 || !isEditable(sessionContext[0])}\r\n                >\r\n                  Aggiungi Coppia\r\n                </ListGroup.Item>\r\n\r\n                <OverlayTrigger placement=\"right\" key=\"right\" overlay={<Tooltip>{deleteTooltipMessage}</Tooltip>}>\r\n                  <span className=\"d-inline-block\" onClick={deleteRow}>\r\n                    <ListGroup.Item\r\n                      action\r\n                      variant=\"danger\"\r\n                      style={{ pointerEvents: 'none' }}\r\n                      disabled={deleteDisabled || !isEditable(sessionContext[0])}\r\n                    >\r\n                      Elimina Coppia {deleteDisabled}\r\n                    </ListGroup.Item>\r\n                  </span>\r\n                </OverlayTrigger>\r\n\r\n                <ListGroup.Item\r\n                  action\r\n                  variant=\"danger\"\r\n                  onClick={deleteStage1}\r\n                  disabled={!isEditable(sessionContext[0])}\r\n                >\r\n                  Reset gironi\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }}>\r\n            <Row style={{ display: isEditable(sessionContext[0]) ? 'flex' : 'none' }}>\r\n              <InputGroup onChange={e => setStage1Number(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Assegna gironi automaticamente</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder={\r\n                    data.rows.length < 4\r\n                      ? 'Inserisci almeno 4 coppie'\r\n                      : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n                  }\r\n                  aria-label=\"Numero di gironi\"\r\n                  disabled={data.rows.length < 4}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={setStage1Name}\r\n                    disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <InputGroup onChange={e => setNewRowsNumber(e.target.value)}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Aggiunti N nuove coppie</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  disabled={availableRows <= 0}\r\n                  placeholder={\r\n                    availableRows <= 0\r\n                      ? 'Numero massimo di coppie gia creato sulla base del numero di giocatori disponibili'\r\n                      : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n                  }\r\n                  aria-label=\"Numero di coppie\"\r\n                  value={newRowsNumber || ''}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={e => setNewRowsNumber(availableRows)}\r\n                    disabled={newRowsNumber > availableRows}\r\n                  >\r\n                    Max\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={addMultipleRows}\r\n                    disabled={!newRowsNumber || newRowsNumber > availableRows}\r\n                  >\r\n                    Esegui\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Row>\r\n            <Row>\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players)}\r\n                cellEdit={cellEditProps(isEditable(sessionContext[0]))}\r\n                selectRow={selectRow}\r\n                noDataIndication={<NoData addRow={() => addRow()} optionsLength={data.players.length} />}\r\n                caption={<TableHeader tournament={data.tournament} />}\r\n                wrapperClasses=\"player-table\"\r\n                headerClasses=\"player-table-header\"\r\n                striped\r\n                hover\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col style={{ margin: '10px' }} md={2}>\r\n            <GenericToast message={message.message} type={message.type} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PairsTable;\r\n","import React from 'react';\r\nimport { headerPropsType } from './type';\r\n\r\nconst tableHeader: React.FC<headerPropsType> = ({ title, saved }: headerPropsType) => {\r\n  const divStyle = {\r\n    color: saved ? '#4feb34' : undefined\r\n  };\r\n  return (\r\n    <h3>\r\n      <b style={divStyle}>\r\n        Girone - <strong>{title}</strong>\r\n      </b>\r\n      {saved ? <small> - Salvataggio in corso...</small> : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default tableHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { fetchPairs, valueFormatter } from './helper';\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\nconst PairsSelection = React.forwardRef((props, ref) => {\r\n  const [pairsList, setPairsList] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const { row, columnIndex, id, onUpdate, onSelect, tId } = props;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  function getValue() {\r\n    return valueFormatter(selectedOption);\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    selectedOption.pairId = id;\r\n    setSelectedOption(selectedOption);\r\n    // vedi il campo label sul manager\r\n    const value = valueFormatter(selectedOption);\r\n    onUpdate(value);\r\n    onSelect(selectedOption, row.id, columnIndex);\r\n  };\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n\r\n  return (\r\n    <Select\r\n      options={pairsList}\r\n      onChange={handleChange}\r\n      value={selectedOption}\r\n      placeholder=\"Cerca...\"\r\n      isSearchable\r\n      isClearable\r\n    />\r\n  );\r\n});\r\n\r\nexport default PairsSelection;\r\n","import React from 'react';\r\nimport PairSelect from '../Pair/select';\r\nimport { Type } from 'react-bootstrap-table2-editor';\r\n\r\nconst newColumn = (index, rowNumber) => {\r\n  return {\r\n    id: `col${index}`,\r\n    dataField: `col${index}`,\r\n    text: index.toString(),\r\n    type: 'number',\r\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\r\n    headerAlign: (column, colIndex) => 'center',\r\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\r\n    align: (cell, row, rowIndex, colIndex) => 'center',\r\n    style: (content, row, rowIndex, columnIndex) => {\r\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#6d706e' };\r\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\r\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\r\n      return null;\r\n    },\r\n    /* TODO:\r\n    editorStyle: (cell, row, rowIndex, colIndex) => {\r\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\r\n      return { width: '100%', height: 'auto' };\r\n    }, */\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: [\r\n        { value: '3', label: '3' },\r\n        { value: '2', label: '2' },\r\n        { value: '1', label: '1' },\r\n        { value: '0', label: '0' },\r\n        { value: null, label: '' }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\nexport function rowsGenerator(pairsList) {\r\n  let rows = [];\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    rows.push({ pair: pairsList[ii], rowNumber: ii + 1 });\r\n    for (let jj = 1; jj <= pairsList.length; jj++) {\r\n      rows[ii][`col${jj}`] = null;\r\n    }\r\n    rows[ii]['total'] = 0;\r\n    rows[ii]['place'] = 0;\r\n    rows[ii]['id'] = `row-${pairsList[0].tId}-${ii}`;\r\n  }\r\n  //console.log(rows);\r\n  return rows;\r\n}\r\n\r\nexport const columns = (onSelect, pairsList) => {\r\n  /**\r\n   * TODO: aggiungere id su tutte le colonne\r\n   *\r\n   *     id: 'punteggio',\r\n   *     dataField: 'punteggio',\r\n   *     text: 'Punteggio',\r\n   *\r\n   *\r\n   */\r\n  let baseColumns = [\r\n    {\r\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\r\n      id: 'pairLabel',\r\n      dataField: 'pair.label',\r\n      text: 'Nome Coppia',\r\n      editable: false,\r\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\r\n      align: (cell, row, rowIndex, colIndex) => 'center',\r\n      headerAlign: (column, colIndex) => 'center',\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <PairSelect\r\n          {...editorProps}\r\n          id={columnIndex}\r\n          row={row}\r\n          rowIndex={rowIndex}\r\n          columnIndex={columnIndex}\r\n          value={value}\r\n          onSelect={onSelect}\r\n          tId={pairsList[0].tId}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      // Numbero riga per riferimento visivo\r\n      id: 'rowNumber',\r\n      dataField: 'rowNumber',\r\n      text: 'ID',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center',\r\n      style: (content, row, rowIndex, columnIndex) => {\r\n        return { backgroundColor: '#f9ffdb' };\r\n      }\r\n    }\r\n  ];\r\n\r\n  // generazione dinamica colonne intermedie\r\n  for (let ii = 0; ii < pairsList.length; ii++) {\r\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\r\n  }\r\n\r\n  baseColumns.push(\r\n    {\r\n      // Totale coppia\r\n      id: 'totale',\r\n      dataField: 'total',\r\n      text: 'Totale',\r\n      editable: false,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    },\r\n    {\r\n      // Posizionamento coppia\r\n      id: 'place',\r\n      dataField: 'place',\r\n      text: 'Posizione',\r\n      editable: true,\r\n      type: 'number',\r\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\r\n      headerAlign: (column, colIndex) => 'center'\r\n    }\r\n  );\r\n  return baseColumns;\r\n};\r\n\r\n/**\r\n *\r\n * @param value il valore di partenza\r\n * @returns il valore opposto a quello di partenze\r\n *\r\n *  3->0 , 2->1 , 1->2 , 0->3\r\n */\r\nexport function getOpposite(value) {\r\n  /*\r\n   * Attenzione :\r\n   *  !0 = true\r\n   *  !''  = true\r\n   *  !null   = true\r\n   *  !undefined  = true\r\n   */\r\n  if (value === null) return null;\r\n  switch (value) {\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return 1;\r\n    case 1:\r\n      return 2;\r\n    case 0:\r\n      return 3;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} obj1\r\n * @param {*} obj2\r\n */\r\nexport function comparator(obj1, obj2) {\r\n  // in caso di parità valuto scontro diretto\r\n  if (obj1.total === obj2.total) {\r\n    if (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  return obj2.total - obj1.total;\r\n}\r\n","import React, { useState } from 'react';\r\n// table\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n// helper\r\n\r\nimport TableHeader from './header';\r\nimport { getOpposite, comparator } from './helper';\r\nimport { SessionContext, isEditable } from '../core/SessionContext';\r\n\r\n// style\r\nimport './style.css';\r\n\r\nconst Stage1Table = ({ rows, columns, tableName, updateCellValue, saved }) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const cellEditProps = editable =>\r\n    cellEditFactory({\r\n      mode: editable ? 'click' : 'none',\r\n      blurToSave: true,\r\n      beforeSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno cella opposta\r\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\r\n          // Aggiorno posizione relativa\r\n          [...rows]\r\n            .sort((e1, e2) => comparator(e1, e2))\r\n            .forEach((row, index) => (rows[row.rowNumber - 1]['place'] = index + 1));\r\n        }\r\n      },\r\n      afterSaveCell: (oldValue, newValue, row, column) => {\r\n        if (column.id.startsWith('col')) {\r\n          // Aggiorno dati sul Db\r\n          updateCellValue(oldValue, newValue, row, column);\r\n          let acc = 0;\r\n          for (let key in row) if (key.startsWith('col')) acc += row[key];\r\n          rows[row.rowNumber - 1]['total'] = acc ? acc : null;\r\n\r\n          acc = 0;\r\n          for (let key in rows[parseInt(column.text) - 1])\r\n            if (key.startsWith('col')) acc += rows[parseInt(column.text) - 1][key];\r\n          rows[parseInt(column.text) - 1]['total'] = acc ? acc : null;\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleOnSelect = (row, isSelected) => {\r\n    setSelectedRows(() => {\r\n      const found = selectedRows.find(e => e.rowNumber === row.rowNumber) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter(e => e.rowNumber !== row.rowNumber) : selectedRows;\r\n      }\r\n    });\r\n    // return true or dont return to approve current select action\r\n    return true;\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: (isSelected, rows) => rows.forEach(row => handleOnSelect(row, isSelected)),\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Consumer>\r\n      {sessionContext => (\r\n        <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={rows}\r\n          columns={columns}\r\n          selectRow={selectRow}\r\n          cellEdit={cellEditProps(isEditable(sessionContext[0]))}\r\n          noDataIndication=\"Nessun dato reperito\"\r\n          wrapperClasses=\"player-table\"\r\n          headerClasses=\"player-table-header\"\r\n          caption={<TableHeader title={tableName} saved={saved} />}\r\n          striped\r\n          hover\r\n        />\r\n      )}\r\n    </SessionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Stage1Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Stage1Table from './table';\r\nimport { handlerPropsType } from './type';\r\nimport { columns, rowsGenerator, comparator } from './helper';\r\n\r\nconst Stage1Handler = (props: handlerPropsType): JSX.Element => {\r\n  const { pairsList } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [rows, setRows] = useState(rowsGenerator(pairsList));\r\n  const tableName = pairsList[0]?.stage1Name ?? 'Not found';\r\n\r\n  // Aggiornamento dati\r\n  const updateCellValue = async (oldValue: any, newValue: any, row: any, column: any) => {\r\n    const model1 = {\r\n      tId: row.pair.tId,\r\n      tableName,\r\n      score: newValue,\r\n      pair1Id: row.pair.id,\r\n      pair2Id: rows[parseInt(column.text) - 1].pair.id\r\n    };\r\n    const response = await fetch('/api/v1/stage1/cell', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(model1)\r\n    });\r\n    await response.json();\r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setTimeout(() => setIsSaved(false), 3000);\r\n    }\r\n  };\r\n\r\n  // Reperimento dati dal db\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/v1/stage1', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ rows, stageName: tableName })\r\n        });\r\n        const result = await response.json();\r\n        // Ordinamento\r\n        [...result]\r\n          .sort((e1, e2) => comparator(e1, e2))\r\n          .forEach((row, index) => (result[row.rowNumber - 1]['place'] = index + 1));\r\n        setRows(result);\r\n        setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onSelect = () => {\r\n    if (tableName === '1') console.log('onSelect ');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*saved ? <p>Salvato....</p> : null*/}\r\n      {isLoading ? (\r\n        <h3>\r\n          Caricamento girone <b>{tableName}</b> in corso....\r\n        </h3>\r\n      ) : (\r\n        <Stage1Table\r\n          rows={rows}\r\n          columns={columns(onSelect, pairsList)}\r\n          tableName={tableName}\r\n          updateCellValue={updateCellValue}\r\n          saved={saved}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stage1Handler;\r\n","import FTournament from '../Tournament/Tournament';\r\nimport PlayerTable from '../Player/table';\r\nimport Pairs from '../Pair/table';\r\nimport Stage1Wrapper from '../Stage1/wrapper';\r\nimport Stage2 from '../Stage2/model';\r\nimport { RedirectionControl } from './RedirectionControls';\r\n// import { OrganizationChartDemo } from '../Stage2/table';\r\n\r\nexport type routeType = {\r\n  path: string;\r\n  label: string;\r\n  exact: boolean;\r\n  ComponentToRender: React.ReactNode;\r\n  visible: boolean;\r\n  index: number;\r\n  private: boolean;\r\n};\r\n\r\n// Mappatura route\r\nexport const routes: routeType[] = [\r\n  { path: '/', label: 'Home', exact: true, ComponentToRender: FTournament, visible: false, private: true, index: 0 },\r\n  {\r\n    path: '/tournament/:tId',\r\n    label: 'Selezione Coppie',\r\n    exact: true,\r\n    ComponentToRender: Pairs,\r\n    visible: false,\r\n    private: false,\r\n    index: 10\r\n  },\r\n  {\r\n    path: '/stage1/:tId',\r\n    label: 'Torneo fase 1',\r\n    exact: true,\r\n    ComponentToRender: Stage1Wrapper,\r\n    visible: false,\r\n    private: true,\r\n    index: 20\r\n  },\r\n\r\n  {\r\n    path: '/player',\r\n    label: 'Gestione Giocatori',\r\n    exact: true,\r\n    ComponentToRender: PlayerTable,\r\n    visible: true,\r\n    private: true,\r\n    index: 30\r\n  },\r\n  {\r\n    path: '/stage2/:tId',\r\n    label: 'Torneo fase 2',\r\n    exact: true,\r\n    ComponentToRender: Stage2,\r\n    //ComponentToRender: OrganizationChartDemo,\r\n    visible: !(process.env.NODE_ENV === 'production'),\r\n    private: true,\r\n    index: 40\r\n  },\r\n  // TODO: creare pagina per route not found\r\n  {\r\n    path: '*',\r\n    label: 'Not Found',\r\n    exact: false,\r\n    ComponentToRender: RedirectionControl,\r\n    visible: false,\r\n    private: true,\r\n    index: 1000\r\n  }\r\n];\r\nexport default routes;\r\n\r\nexport function getLabelByPathname(pathName: string): string {\r\n  const element = routes.find(e => e.path === pathName);\r\n  return element ? element.label : `route ${pathName} not found!`;\r\n}\r\n\r\nexport function getRouteByPathname(pathName: string): routeType | undefined {\r\n  return routes.find(e => e.path === pathName);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { fetchPairs } from '../Pair/helper';\r\nimport { Pair } from './type';\r\nimport Stage1Handler from './handler';\r\nimport { ListGroup, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Wraps multiple table components\r\n */\r\nconst Wrapper: React.FC = (): JSX.Element => {\r\n  const { tId } = useParams();\r\n  const [pairsList, setPairsList] = useState<Pair[]>([]);\r\n\r\n  let currentHistory = useHistory();\r\n  function goBack() {\r\n    currentHistory.push(`/tournament/${tId}`);\r\n  }\r\n\r\n  useEffect(() => fetchPairs(setPairsList, tId), [tId]);\r\n  // sort pairs by stage1Name\r\n  pairsList.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name));\r\n  return (\r\n    <>\r\n      <ListGroup.Item className={'inherit-background'} key={'stage-button'}>\r\n        <Button variant=\"secondary\" onClick={goBack}>\r\n          Gestione Coppie\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {renderTables(pairsList, tId)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n\r\nfunction renderTables(pairsList: Pair[], tId: string | undefined): JSX.Element {\r\n  let stageName = '';\r\n  let stage: Pair[] = [];\r\n  let stageList: JSX.Element[] = [];\r\n\r\n  pairsList.forEach((element, index) => {\r\n    // A rottura di stage1Name\r\n    if (stageName === '') stageName = element.stage1Name;\r\n    if (stageName !== element.stage1Name) {\r\n      stageList.push(\r\n        <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n          <Stage1Handler pairsList={stage} />\r\n        </ListGroup.Item>\r\n      );\r\n      // console.log(`stages ${stageName} :`, stage, stage.length);\r\n      stageName = element.stage1Name;\r\n      stage = [];\r\n    }\r\n    stage.push(element);\r\n  });\r\n  if (stage.length > 0) {\r\n    stageList.push(\r\n      <ListGroup.Item className={'inherit-background'} key={`stage-${stageName}`}>\r\n        <Stage1Handler pairsList={stage} />\r\n      </ListGroup.Item>\r\n    );\r\n    // console.log(`stages ${stageName} :`, stage);\r\n  }\r\n\r\n  return <ListGroup variant=\"flush\">{stageList}</ListGroup>;\r\n}\r\n","import React, { CSSProperties } from 'react';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Model: React.FC = _ => {\r\n  const STAGE_NUMBER = 4;\r\n\r\n  const outerStyle: CSSProperties = {\r\n    flexDirection: 'row-reverse'\r\n  };\r\n\r\n  const innerElementStyle: CSSProperties = {\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  };\r\n\r\n  const innerParentStyle: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'space-around'\r\n  };\r\n\r\n  let element = [];\r\n  for (let ii = 0; ii <= STAGE_NUMBER; ii++) {\r\n    let thisList = [];\r\n    for (let jj = 0; jj < Math.pow(2, ii); jj++) {\r\n      thisList.push(\r\n        <ListGroup.Item key={`item-${ii}-${jj}`} style={innerElementStyle}>\r\n          <InputGroup>\r\n            <FormControl placeholder={`${ii}-${jj}`} />\r\n          </InputGroup>\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n    element.push(\r\n      <ListGroup.Item key={`col-${ii}`} style={innerParentStyle}>\r\n        <ListGroup variant=\"flush\">{thisList}</ListGroup>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n  return (\r\n    <ListGroup variant=\"flush\" id=\"outer-container\" style={outerStyle}>\r\n      {element}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import { useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport function RedirectionControl(props: any): JSX.Element {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Current Ruote : <code>{location.pathname}</code>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst RegisterForm: React.FC = _ => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"name\">Nome</label>\r\n        <Field as={FormControl} id=\"name\" name=\"name\" placeholder=\"Nome\" type=\"text\" />\r\n        <ErrorMessage name=\"name\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"surname\">Cognome</label>\r\n        <Field as={FormControl} id=\"surname\" name=\"surname\" placeholder=\"Cognome\" type=\"text\" />\r\n        <ErrorMessage name=\"surname\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={6}>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n        <label htmlFor=\"passwordConfirm\">Conferma Password</label>\r\n\r\n        <Field\r\n          as={FormControl}\r\n          id=\"passwordConfirm\"\r\n          name=\"passwordConfirm\"\r\n          placeholder=\"Conferma Password\"\r\n          type=\"password\"\r\n        />\r\n        <ErrorMessage name=\"passwordConfirm\" />\r\n      </Col>\r\n      <Col\r\n        md={6}\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <Row>\r\n          <strong>La password deve rispettara i sequenti criteri :</strong>\r\n\r\n          <ul>\r\n            <li key={'pass-1'}>Almeno 1 carattere minuscolo</li>\r\n            <li key={'pass-2'}>Almeno 1 carattere maiuscolo</li>\r\n            <li key={'pass-3'}>Almeno 1 carattere numerico</li>\r\n            <li key={'pass-4'}>Almeno 1 carattere speciale</li>\r\n            <li key={'pass-5'}>Tra 8 e 16 caratteri</li>\r\n          </ul>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n      <Col>\r\n        <label htmlFor=\"emailConfirm\">Conferma Email</label>\r\n        <Field as={FormControl} id=\"emailConfirm\" name=\"emailConfirm\" placeholder=\"Conferma Email\" type=\"email\" />\r\n        <ErrorMessage name=\"emailConfirm\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={12}>\r\n        <label htmlFor=\"phone\">Telefono</label>\r\n        <Field as={FormControl} id=\"phone\" name=\"phone\" placeholder=\"Telefono\" type=\"text\" />\r\n        <ErrorMessage name=\"phone\" />\r\n      </Col>\r\n    </Row>\r\n    {/*\r\n          <label htmlFor=\"birthday\">Data di nascita</label>\r\n          <Field id=\"birthday\" name=\"birthday\" placeholder=\"Data di nascita\" type=\"text\" />\r\n          <ErrorMessage name=\"birthday\" />\r\n            */}\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Conferma</Button>\r\n      </Col>\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport RegisterForm from './RegisterForm';\r\nimport { IRegisterForm, IRegisterFormValue } from '../types';\r\n\r\nconst initialValues: IRegisterFormValue = {\r\n  name: '',\r\n  surname: '',\r\n  password: '',\r\n  passwordConfirm: '',\r\n  email: '',\r\n  emailConfirm: '',\r\n  phone: '',\r\n  birthday: new Date()\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string(),\r\n  surname: yup.string(),\r\n  password: yup.string(),\r\n  email: yup.string(),\r\n  phone: yup.string(),\r\n  birthday: yup.date()\r\n});\r\n\r\nconst Register: React.FC<IRegisterForm> = ({ onSubmit }: IRegisterForm) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <RegisterForm />\r\n  </Formik>\r\n);\r\n\r\nexport default Register;\r\n","import * as React from 'react';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\r\nimport { ILoginForm } from '../types';\r\n\r\nconst LoginForm: React.FC<ILoginForm> = ({ responseFacebook, responseGoogle }) => (\r\n  <Form>\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        <ErrorMessage name=\"password\" />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Button type=\"submit\">Login</Button>\r\n      </Col>\r\n      {/*\r\n      https://developers.facebook.com/docs/graph-api/reference/user/\r\n      https://medium.com/recraftrelic/login-with-facebook-and-google-in-reactjs-990d818d5dab\r\n\r\n      <Col>\r\n\r\n        <FacebookLogin\r\n          appId=\"231770158218948\"\r\n          fields=\"name, email,picture,birthday,first_name,last_name,middle_name,gender,hometown\"\r\n          callback={responseFacebook}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <GoogleLogin\r\n          clientId=\"\" //CLIENTID NOT CREATED YET\r\n          buttonText=\"LOGIN WITH GOOGLE\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n        />\r\n      </Col>\r\n      */}\r\n    </Row>\r\n  </Form>\r\n);\r\n\r\nexport default LoginForm;\r\n","import * as React from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport LoginForm from './LoginForm';\r\nimport { ILoginFormValue, ILoginForm } from '../types';\r\n\r\nconst initialValues: ILoginFormValue = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = yup.object().shape({ password: yup.string(), email: yup.string() });\r\n\r\nconst Login: React.FC<ILoginForm> = ({ onSubmit, responseFacebook, responseGoogle }) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <LoginForm responseFacebook={responseFacebook} responseGoogle={responseGoogle} onSubmit={onSubmit} />\r\n  </Formik>\r\n);\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useSessionContext } from 'components/core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IRegisterFormValue, ILoginFormValue } from './types';\r\nimport { FormikHelpers } from 'formik';\r\nimport { Modal, Button, Container, Alert } from 'react-bootstrap';\r\nimport Register from './Register/Register';\r\nimport Login from './Login/Login';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition, findIconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { emailRegExp, passwordRegExp, phoneRegExp } from '../core/utils';\r\nimport { ReactFacebookLoginInfo } from 'react-facebook-login';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\n\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\n// https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0#6563\r\n\r\nconst AuthWrapper = ({ show, onHide }: authType): JSX.Element => {\r\n  // State\r\n  const [register, setRegister] = useState(false); // Mostra form registrazione/login\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const RigthArrowDefinition: IconDefinition = findIconDefinition({\r\n    prefix: 'far',\r\n    iconName: 'arrow-alt-circle-right'\r\n  });\r\n\r\n  const onSubmitLogin = async (values: ILoginFormValue, { setSubmitting }: FormikHelpers<ILoginFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidLogin(values)) return;\r\n      const response = await fetch('/api/v1/auth/authenticate', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      console.log('onSubmitLogin : ', response, result);\r\n      if (response.ok && result) {\r\n        updateSessionContext({\r\n          ...sessionContext,\r\n          name: result.name,\r\n          surname: result.surname,\r\n          email: result.email,\r\n          role: result.role,\r\n          isAuthenticated: true\r\n        });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) setErrorMessage('Utente o Password errata');\r\n\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const isValidLogin = (formValues: ILoginFormValue): boolean => {\r\n    setErrorMessage('');\r\n    if (!formValues.email || !emailRegExp.test(formValues.email)) {\r\n      setErrorMessage('Email non valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    if (!formValues.password) {\r\n      setErrorMessage('Inserisci la password');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const isValidRegister = (formValues: IRegisterFormValue): boolean => {\r\n    setErrorMessage('');\r\n    // Nome\r\n    if (!formValues.name) {\r\n      setErrorMessage('Inserisci il nome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    // Telefono\r\n    if (!formValues.surname) {\r\n      setErrorMessage('Inserisci il cognome');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test password\r\n    if (\r\n      !formValues.password ||\r\n      !formValues.passwordConfirm ||\r\n      !passwordRegExp.test(formValues.password) ||\r\n      !passwordRegExp.test(formValues.passwordConfirm)\r\n    ) {\r\n      setErrorMessage('La password non rispetta i criteri');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.password !== formValues.passwordConfirm) {\r\n      setErrorMessage('Le password non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Test email\r\n    if (\r\n      !formValues.email ||\r\n      !formValues.emailConfirm ||\r\n      !emailRegExp.test(formValues.email) ||\r\n      !emailRegExp.test(formValues.emailConfirm)\r\n    ) {\r\n      setErrorMessage('Inserisci una email valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    if (formValues.email !== formValues.emailConfirm) {\r\n      setErrorMessage('Le email non corrispondono');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    // Telefono\r\n\r\n    if (!(formValues.phone && !phoneRegExp.test(formValues.phone))) {\r\n      setErrorMessage('Il numero di telefono inserito non è valido');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitRegister = async (values: IRegisterFormValue, { setSubmitting }: FormikHelpers<IRegisterFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValidRegister(values)) return;\r\n      const response = await fetch('/api/v1/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result) {\r\n        updateSessionContext({ ...result, isAuthenticated: true });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (result.message) setErrorMessage(result.message);\r\n        else setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const responseFacebook = (response: ReactFacebookLoginInfo) => {\r\n    console.log(response);\r\n  };\r\n\r\n  const responseGoogle = (response: GoogleLoginResponse) => {\r\n    console.log(response);\r\n  };\r\n\r\n  const title = register ? 'Registrati' : 'Login';\r\n  const body = register ? (\r\n    <Register onSubmit={onSubmitRegister} />\r\n  ) : (\r\n    <Login onSubmit={onSubmitLogin} responseFacebook={responseFacebook} responseGoogle={responseGoogle} />\r\n  );\r\n  const buttonString = register ? 'Login' : 'Registrati';\r\n  const Icon = <FontAwesomeIcon icon={RigthArrowDefinition} />;\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          {errorMessage ? (\r\n            <Alert key={'auth-alert'} variant={'danger'}>\r\n              {errorMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {body}\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => setRegister(!register)}>\r\n          <div>\r\n            {Icon} <strong>{buttonString}</strong>\r\n          </div>\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import * as React from 'react';\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { IDeleteFormValue, IDeleteForm } from '../types';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst initialValues: IDeleteFormValue = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = yup.object().shape({ password: yup.string(), email: yup.string() });\r\n\r\nconst Delete: React.FC<IDeleteForm> = ({ onSubmit, email }: IDeleteForm) => (\r\n  <Formik validationSchema={validationSchema} initialValues={initialValues} onSubmit={onSubmit}>\r\n    <Form>\r\n      <Row>\r\n        <Col>\r\n          <label htmlFor=\"email\">Conferma Email</label>\r\n          <Field as={FormControl} id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" disabled va value={email} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <label htmlFor=\"password\">Conferma Password</label>\r\n          <Field as={FormControl} id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Button type=\"submit\" variant=\"danger\">\r\n            Cancella Utente\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  </Formik>\r\n);\r\n\r\nexport default Delete;\r\n","import React, { useState } from 'react';\r\nimport { useSessionContext } from 'components/core/SessionContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IDeleteFormValue } from '../types';\r\nimport { FormikHelpers } from 'formik';\r\nimport { Modal, Container, Alert } from 'react-bootstrap';\r\nimport { emailRegExp } from '../../core/utils';\r\nimport Delete from './form';\r\n\r\ntype authType = {\r\n  show: boolean;\r\n  onHide: () => void;\r\n};\r\n\r\nconst AuthWrapper = ({ show, onHide }: authType): JSX.Element => {\r\n  // State\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const currentHistory = useHistory();\r\n\r\n  const onSubmitDelete = async (values: IDeleteFormValue, { setSubmitting }: FormikHelpers<IDeleteFormValue>) => {\r\n    setSubmitting(true);\r\n    try {\r\n      if (!isValid(values)) return;\r\n      const response = await fetch('/api/v1/auth/', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: sessionContext.email, password: values.password })\r\n      });\r\n      const result = await response.json();\r\n      console.log('onSubmitLogin : ', response, result);\r\n      if (response.ok && result) {\r\n        updateSessionContext({ ...sessionContext, name: '', surname: '', email: '', role: '', isAuthenticated: false });\r\n        onHide();\r\n        currentHistory.push('/');\r\n      } else {\r\n        if (response.status === 401) setErrorMessage('Utente o Password errata');\r\n        else setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n        setTimeout(() => setErrorMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.log('onSubmitLogin : ', error);\r\n      setErrorMessage('Errore durante il processo di registrazione. Riprovare piu tardi');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const isValid = (formValues: IDeleteFormValue): boolean => {\r\n    setErrorMessage('');\r\n    console.log('isVaild : ', formValues);\r\n    if (formValues.email !== sessionContext.email) {\r\n      setErrorMessage('Ci hai provato... Ma ti ho scoperto. Quindi ti elimino.');\r\n      return true;\r\n    }\r\n    if (!formValues.email || !emailRegExp.test(formValues.email)) {\r\n      setErrorMessage('Email non valida');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n    if (!formValues.password) {\r\n      setErrorMessage('Inserisci la password');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size={'lg'} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Elimina Utente</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          {errorMessage ? (\r\n            <Alert key={'auth-alert'} variant={'danger'}>\r\n              {errorMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {sessionContext.email ? (\r\n            <Delete email={sessionContext.email} onSubmit={onSubmitDelete} />\r\n          ) : (\r\n            'Eliminazione non possibile'\r\n          )}{' '}\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport backgroundImage from '../assets/header.jpg';\r\nimport { Jumbotron, Navbar, Nav, Button } from 'react-bootstrap';\r\nimport routes from '../core/Routes';\r\nimport AuthWrapper from '../Auth/Wrapper';\r\nimport DeleteModal from '../Auth/Delete/modal';\r\nimport { useSessionContext } from '../core/SessionContext';\r\n\r\nconst applicationName = 'Calcetto C.S.M';\r\nexport const Header: React.FC = _ => {\r\n  const [sessionContext, updateSessionContext] = useSessionContext();\r\n  const [showModalAuth, setShowModalAuth] = useState(false);\r\n  const [showModalDelete, setShowModalDelete] = useState(false);\r\n\r\n  const logout = async () => {\r\n    const response = await fetch('/api/v1/auth/logout');\r\n    if (response.ok)\r\n      updateSessionContext({\r\n        ...sessionContext,\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        role: '',\r\n        isAuthenticated: false\r\n      });\r\n  };\r\n\r\n  const yellow = '##ffc107';\r\n  const jumnboStyle: CSSProperties = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    padding: '60px 0px 10px 0px'\r\n  };\r\n\r\n  const nameStyle = { color: yellow, padding: '1vw' };\r\n\r\n  return (\r\n    <header>\r\n      <Jumbotron style={jumnboStyle}>\r\n        <h1>\r\n          <strong style={{ color: 'white' }}>{applicationName}</strong>\r\n        </h1>\r\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {routes.map(route =>\r\n                route.visible ? (\r\n                  route.private && !sessionContext.isAuthenticated ? null : (\r\n                    <Nav.Link key={route.index} href={route.path}>\r\n                      {route.label}\r\n                    </Nav.Link>\r\n                  )\r\n                ) : null\r\n              )}\r\n            </Nav>\r\n            {sessionContext.isAuthenticated && sessionContext.name ? (\r\n              <>\r\n                <Navbar.Text style={nameStyle}>\r\n                  <strong>{sessionContext.name}</strong>\r\n                </Navbar.Text>\r\n                <>\r\n                  <Button variant=\"outline-warning\" onClick={logout}>\r\n                    Log out\r\n                  </Button>\r\n                  {/* FIXME:\r\n                  <Button variant=\"outline-danger\" onClick={() => setShowModalDelete(true)}>\r\n                    Elimina Utente\r\n                  </Button>\r\n                  */}\r\n                </>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"outline-warning\" onClick={() => setShowModalAuth(true)}>\r\n                Log in\r\n              </Button>\r\n            )}\r\n          </Navbar.Collapse>\r\n          <AuthWrapper show={showModalAuth} onHide={() => setShowModalAuth(false)} />\r\n          <DeleteModal show={showModalDelete} onHide={() => setShowModalDelete(false)} />\r\n        </Navbar>\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch } from 'react-router';\r\nimport { ProtectedRoute } from '../components/core/ProtectedRoute';\r\nimport './style/App.css';\r\nimport routes from '../components/core/Routes';\r\nimport { Header } from './Header/Header';\r\nimport { Container } from 'react-bootstrap';\r\nimport UserSelect from './Auth/select';\r\n// FontAwesome 5\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas, far);\r\n\r\nconst App: React.FC = _ => (\r\n  <div className=\"App\">\r\n    <Header />\r\n\r\n    <Container fluid>\r\n      {/*<UserSelect />*/}\r\n      <Switch>\r\n        {/*<Route path=\"/login\" component={FLogin} />*/}\r\n        {routes.map(route => (\r\n          <ProtectedRoute {...route} key={route.index} />\r\n        ))}\r\n      </Switch>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = _ => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = _ => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SessionContextProvider } from './components/core/SessionContext';\r\n\r\nReactDOM.render(\r\n  <SessionContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </SessionContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}