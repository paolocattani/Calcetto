{"version":3,"sources":["common.module.css","components/Tournament/badge.tsx","../node_modules/react-bootstrap/esm/InputGroup.js","components/Pair/noData.tsx","components/Player/select.tsx","components/Pair/editor.js","components/Pair/table.tsx"],"names":["module","exports","TournamentBadge","tournament","useSelector","TournamentSelector","getTournament","className","variant","name","toUpperCase","formatDate","date","translateTournamentProgress","progress","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","noData","addRow","optionsLength","isEditable","players","diff","Button","onClick","disabled","to","PlayerSelection","styles","row","columnIndex","onSelect","onUpdate","options","useState","selectedOption","setSelectedOption","onChange","actionMeta","id","getOptionLabel","option","alias","getOptionValue","toString","value","placeholder","isSearchable","isClearable","playerSelection","editorProps","rowIndex","customStyles","checkBoxProps","align","headerStyle","column","colIndex","width","editor","Type","CHECKBOX","style","content","backgroundColor","columns","dataField","text","editable","hidden","editorRenderer","SELECT","split","map","e","label","hideAskUser","message","console","log","show","title","withRouter","currentHistory","useHistory","dispatch","useDispatch","isAdmin","SessionSelector","state","isLoading","setIsLoading","askUser","setAskUser","rows","data","setData","selectedRows","setSelectedRows","stage1Number","setStage1Number","newRowsNumber","setNewRowsNumber","showErrorMessage","toast","error","autoClose","showSuccessMessage","success","index","a","emptyRow","getEmptyRowModel","tId","fetch","method","headers","body","JSON","stringify","response","json","result","rowNumber","length","current","addMultipleRows","ii","deleteRow","forEach","player1","push","player2","sort","e1","e2","localeCompare","filter","find","selectedRow","updateOptions","player","selected","useEffect","fetchData","selectedElement","Promise","all","rowElement","getEmptyPlayer","encodeURIComponent","ok","newRowsElement","confirmPairs","setTimeout","missingStage1Name","stage1Name","missingPairs","stageName","invalidStage","pairsInStage","reduce","allNames","MIN_PAIR_PER_STAGE","TournamentProgress","Stage1","TournamentAction","updateTournament","request","model","PairAction","fetchPairs","goBack","selectRow","mode","isSelected","found","onSelectAll","hideSelectColumn","PairsSelection","processDeleteStage1","deleteStage1","onHide","setStage1Name","names","newRows","availableRows","Math","floor","accumulator","deleteDisabled","Col","commonStyle","toolsBarContainer","Row","toolsBar","FormControl","aria-label","step","min","max","undefined","event","Number","currentTarget","Stage2","bootstrap4","keyField","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","noDataIndication","caption","headerClasses","striped","hover"],"mappings":"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","file":"static/js/8.7085cc4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate, translateTournamentProgress } from 'components/core/utils';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>Torneo </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface NoDataProps {\r\n  optionsLength: number;\r\n  isEditable: boolean;\r\n  addRow: () => void;\r\n}\r\n\r\n// Componente da mostrare se non sono presenti coppie\r\nconst noData: React.FC<NoDataProps> = ({ addRow, optionsLength, isEditable }) => {\r\n  const MIN_PLAYERS = 8;\r\n  const players = optionsLength - 1;\r\n  const diff = players < MIN_PLAYERS ? MIN_PLAYERS - players : 0;\r\n  if (!optionsLength) return null;\r\n  return players >= MIN_PLAYERS ? (\r\n    <>\r\n      <p> Aggiungi le coppie per questo torneo...</p>\r\n      <Button variant=\"success\" onClick={addRow} disabled={!isEditable}>\r\n        Aggiungi Coppia\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <p>Ci sono solo {players} giocatori definiti ma devono essercene almeno 8 per poter formare un torneo.</p>\r\n      <p>{diff === 1 ? 'Devi creare un altro giocatore...' : `Devi creare almeno altri ${diff}`}</p>\r\n      <Link to={'/player'}>\r\n        <Button variant=\"success\">Gestione Giocatori</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default noData;\r\n","import React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta } from 'react-select';\r\nimport { PlayerDTO } from 'redux/models';\r\n\r\nexport interface PlayerSelectProps {\r\n  styles?: Partial<Styles>;\r\n  options: PlayerDTO[];\r\n  columnIndex: number;\r\n  id: number;\r\n  onUpdate: any;\r\n  onSelect: any;\r\n  row: any;\r\n}\r\n\r\nconst PlayerSelection: React.FC<PlayerSelectProps> = React.forwardRef(\r\n  ({ styles, row, columnIndex, /*id,*/ onUpdate, onSelect, options }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PlayerDTO>();\r\n\r\n    const handleChange = (selectedOption: ValueType<PlayerDTO>, actionMeta: ActionMeta<PlayerDTO>) => {\r\n      setSelectedOption(selectedOption as PlayerDTO);\r\n      onSelect(selectedOption, row.id, columnIndex);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={(option) => option.alias}\r\n        getOptionValue={(option) => option.id?.toString(10)!}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PlayerSelection;\r\n","import React from 'react';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport PlayerSelect from '../Player/select';\r\nimport { customStyles } from './helper';\r\n\r\nconst ALIGN_CENTER = 'center';\r\nconst YES = 'Si';\r\nconst NO = 'No';\r\n\r\nconst playerSelection = (editorProps, value, row, rowIndex, columnIndex, onSelect, options) => (\r\n  <PlayerSelect\r\n    {...editorProps}\r\n    id={columnIndex}\r\n    row={row}\r\n    rowIndex={rowIndex}\r\n    columnIndex={columnIndex}\r\n    value={value}\r\n    onSelect={onSelect}\r\n    options={options}\r\n    styles={customStyles}\r\n  />\r\n);\r\n\r\nconst checkBoxProps = {\r\n  align: () => ALIGN_CENTER,\r\n  headerStyle: (column, colIndex) => ({ width: '7,5%' }),\r\n  editor: {\r\n    type: Type.CHECKBOX,\r\n    value: `${YES}:${NO}`,\r\n  },\r\n  style: (content, row, rowIndex, columnIndex) => (content !== NO ? { backgroundColor: '#ffbf47' } : null),\r\n};\r\n\r\nexport const columns = (onSelect, options) => [\r\n  { dataField: 'id', text: 'ID', editable: false, hidden: true, align: () => ALIGN_CENTER },\r\n  { dataField: 'rowNumber', text: 'ID', editable: false, align: () => ALIGN_CENTER },\r\n  {\r\n    dataField: 'player1.alias',\r\n    text: 'Giocatore 1',\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  {\r\n    dataField: 'player2.alias',\r\n    text: 'Giocatore 2',\r\n    align: () => ALIGN_CENTER,\r\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) =>\r\n      playerSelection(editorProps, value, row, rowIndex, columnIndex, onSelect, options),\r\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\r\n  },\r\n  { dataField: 'alias', text: 'Alias Coppia', headerStyle: (column, colIndex) => ({ width: '25%' }) },\r\n  {\r\n    dataField: 'stage1Name',\r\n    text: 'Nome girone',\r\n    align: () => ALIGN_CENTER,\r\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\r\n    editor: {\r\n      type: Type.SELECT,\r\n      options: 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('')\r\n        .map((e) => ({ value: e, label: e })),\r\n    },\r\n  },\r\n  {\r\n    dataField: 'paid1',\r\n    text: 'Pagato 1',\r\n    ...checkBoxProps,\r\n  },\r\n  {\r\n    dataField: 'paid2',\r\n    text: 'Pagato 2',\r\n    ...checkBoxProps,\r\n  },\r\n];\r\n\r\nexport const cellEditProps = (editable) =>\r\n  cellEditFactory({\r\n    mode: editable ? 'click' : 'none',\r\n    blurToSave: true,\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n      // Aggiornamento per queste due colonne viene eseguito dalla funzione onSelect\r\n      if (column.dataField === 'player1.alias' || column.dataField === 'player2.alias') return;\r\n      (async () => {\r\n        const response = await fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        await response.json();\r\n      })();\r\n    },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport BootstrapTable, { SelectRowProps, ColumnDescription } from 'react-bootstrap-table-next';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n// Components\r\nimport NoData from './noData';\r\n// Core / Helper / Editor\r\nimport { LoadingModal, YesNoModal, YesNoModalProps } from '../core/generic/Commons';\r\nimport { FormEventType } from '../core/generic/CommonTypes';\r\nimport { RightArrowIcon, TrashIcon, PlusIcon, HomeIcon } from '../core/icons';\r\nimport { cellEditProps, columns } from './editor';\r\nimport { fetchData, getEmptyRowModel } from './helper';\r\n// Style\r\nimport './style.css';\r\nimport commonStyle from '../../common.module.css';\r\n// Service\r\nimport { getEmptyPlayer } from 'redux/services/player.service';\r\n// Selector\r\nimport { SessionSelector } from 'redux/selectors/session.selector';\r\nimport { TournamentSelector } from 'redux/selectors/tournament.selector';\r\n// Models\r\nimport { PairDTO, PlayerDTO } from '../../redux/models';\r\nimport { TournamentProgress } from '../../redux/models/tournament.model';\r\n// Action\r\nimport { TournamentAction, PairAction } from '../../redux/actions';\r\nimport TournamentBadge from '../Tournament/badge';\r\n\r\nconst hideAskUser = {\r\n  message: '',\r\n  onClick: () => console.log(''),\r\n  show: false,\r\n  title: '',\r\n};\r\ninterface PairTableProps {}\r\nconst PairsTable: React.FC<PairTableProps> = () => {\r\n  // Navigation\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isAdmin = useSelector(SessionSelector.isAdmin);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  // States\r\n  // User messages\r\n  const [isLoading, setIsLoading] = useState({ state: false, message: 'Caricamento' });\r\n  const [askUser, setAskUser] = useState<YesNoModalProps>(hideAskUser);\r\n\r\n  // Data\r\n  const [data, setData] = useState<{ rows: PairDTO[]; players: PlayerDTO[] }>({ rows: [], players: [] });\r\n  const [selectedRows, setSelectedRows] = useState<PairDTO[]>([]);\r\n  // Function params\r\n  const [stage1Number, setStage1Number] = useState<number>(0);\r\n  const [newRowsNumber, setNewRowsNumber] = useState<number>(0);\r\n\r\n  // Initial Fetch\r\n  useEffect(() => {\r\n    if (!tournament) return;\r\n    (async () => setData(await fetchData(tournament.id!)))();\r\n  }, [tournament]);\r\n\r\n  // User messages\r\n  function showErrorMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.error(message, { autoClose: 10000 });\r\n  }\r\n  function showSuccessMessage(message: string) {\r\n    setIsLoading({ state: false, message });\r\n    toast.success(message);\r\n  }\r\n\r\n  async function addRow(index?: number) {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Aggiunta riga in corso' });\r\n      const emptyRow = getEmptyRowModel();\r\n      emptyRow.tId = tournament.id || 0;\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emptyRow),\r\n      });\r\n      const result = await response.json();\r\n      emptyRow.id = result.id;\r\n      emptyRow.rowNumber = index || data.rows.length + 1;\r\n      setData((current) => ({\r\n        rows: [emptyRow, ...current.rows],\r\n        players: current.players,\r\n      }));\r\n      showSuccessMessage('Riga aggiunta');\r\n    } catch (error) {\r\n      showErrorMessage('Errore aggiunta riga');\r\n    }\r\n  }\r\n\r\n  async function addMultipleRows() {\r\n    let index = data.rows.length + 1;\r\n    for (let ii = 0; ii < newRowsNumber; ii++) {\r\n      await addRow(index);\r\n      index++;\r\n    }\r\n    setNewRowsNumber(0);\r\n  }\r\n\r\n  async function deleteRow() {\r\n    try {\r\n      setIsLoading({\r\n        state: true,\r\n        message: selectedRows.length > 1 ? 'Cancellazione righe in corso' : 'Cancellazione riga in corso',\r\n      });\r\n      // Devo ripristinare i giocatori eliminati\r\n      let players: PlayerDTO[] = [];\r\n      selectedRows.forEach((e) => {\r\n        if (e.player1 && e.player1.id) players.push(e.player1);\r\n        if (e.player2 && e.player2.id) players.push(e.player2);\r\n      });\r\n      if (players)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...players, ...current.players].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n\r\n      const response = await fetch('/api/v1/pair', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(selectedRows),\r\n      });\r\n      await response.json();\r\n\r\n      setData((current) => ({\r\n        rows: current.rows.filter((row) => !selectedRows.find((selectedRow) => selectedRow.id === row.id)),\r\n        players: current.players,\r\n      }));\r\n\r\n      showSuccessMessage(selectedRows.length > 1 ? 'Righe cancellate' : 'Riga cancellata');\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione riga');\r\n    }\r\n\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  // update players list when a player is selected\r\n  function updateOptions(player: PlayerDTO | undefined, selected: PlayerDTO) {\r\n    if (player && player.id)\r\n      if (selected.id)\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players.filter((e) => e.id !== selected.id), player].sort((e1, e2) =>\r\n            e1.alias.localeCompare(e2.alias)\r\n          ),\r\n        }));\r\n      else\r\n        setData((current) => ({\r\n          rows: current.rows,\r\n          players: [...current.players, player].sort((e1, e2) => e1.alias.localeCompare(e2.alias)),\r\n        }));\r\n    else if (selected.id)\r\n      setData((current) => ({\r\n        rows: current.rows,\r\n        players: current.players.filter((e: { id: any }) => e.id !== selected.id),\r\n      }));\r\n  }\r\n  // Aggiorno la colonna con il giocatore selezionato\r\n  const onSelect = async (selectedElement: PlayerDTO, rowIndex: number, columnIndex: number) => {\r\n    const newRowsElement = await Promise.all(\r\n      data.rows.map<Promise<PairDTO>>(async (rowElement) => {\r\n        if (rowElement.id === rowIndex) {\r\n          let row = rowElement;\r\n          if (columnIndex === 1) {\r\n            if (selectedElement.id && row.player2 && row.player2.id === selectedElement.id) {\r\n              // Devo salvare l'elemnto che sto per sostituire\r\n              row.player1 = getEmptyPlayer();\r\n              showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            } else {\r\n              // Aggiorno la lista dei giocatori disponibili prima di aggiornare i dati\r\n              updateOptions(row.player1, selectedElement);\r\n              row.player1 = selectedElement;\r\n            }\r\n          } else {\r\n            if (selectedElement.id && row.player1 && row.player1.id === selectedElement.id) {\r\n              row.player2 = getEmptyPlayer();\r\n              showErrorMessage('Attenzione : Non puoi selezionare lo stesso giocare ! ');\r\n            } else {\r\n              updateOptions(row.player2, selectedElement);\r\n              row.player2 = selectedElement;\r\n            }\r\n          }\r\n          //\r\n          if (!row.alias && row.player1 && row.player1.id && row.player2 && row.player2.id) {\r\n            const response = await fetch(\r\n              `/api/v1/pair/alias?player1Id=${encodeURIComponent(row.player1.id)}&player2Id=${encodeURIComponent(\r\n                row.player2.id\r\n              )}`\r\n            );\r\n            const result = await response.json();\r\n            if (response.ok && result.alias) {\r\n              row.alias = result.alias;\r\n            } else {\r\n              row.alias = '';\r\n            }\r\n          }\r\n          // update Db. Non aspetto la risposta...\r\n          fetch('/api/v1/pair', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row),\r\n          });\r\n          return row;\r\n        } else return rowElement;\r\n      })\r\n    );\r\n    setData((current) => ({\r\n      rows: newRowsElement,\r\n      players: current.players,\r\n    }));\r\n  };\r\n\r\n  const handleSelect = (row: PairDTO, isSelected: boolean) => {\r\n    setSelectedRows((selectedRows) => {\r\n      const found = selectedRows.find((e) => e.id === row.id) ? true : false;\r\n      if (isSelected) {\r\n        return found ? selectedRows : [row, ...selectedRows];\r\n      } else {\r\n        return found ? selectedRows.filter((e) => e.id !== row.id) : selectedRows;\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmPairs = async () => {\r\n    if (!tournament.id) {\r\n      showErrorMessage('Id torneo mancante. Verrai inviato alla Home tra 5 secondi....');\r\n      setTimeout(() => currentHistory.push('/'), 5000);\r\n    }\r\n\r\n    // Controllo che sia presente almeno una coppia\r\n    if (data.rows.length < 4) {\r\n      showErrorMessage('Numero di coppie insufficente. Devi formare almeno 4 coppie');\r\n      return;\r\n    }\r\n    // Controllo gironi non assegnati\r\n    const missingStage1Name = data.rows\r\n      .filter((e: { stage1Name: string }) => !e.stage1Name || e.stage1Name === '')\r\n      .map((e) => e.rowNumber);\r\n    if (missingStage1Name.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  ${\r\n          missingStage1Name.length === 1 ? 'la riga ' : 'le righe '\r\n        } ${missingStage1Name} ad un girone per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo coppie non assegnate\r\n    const missingPairs = data.rows\r\n      .filter((e) => !e.player1 || !e.player1.id || !e.player2 || !e.player2.id)\r\n      .map((e) => e.rowNumber);\r\n    if (missingPairs.length !== 0) {\r\n      showErrorMessage(\r\n        `Assegna  i giocatori ${\r\n          missingPairs.length === 1 ? 'alla riga ' : 'alle righe '\r\n        } ${missingPairs} per procedere `\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Controllo che non ci siano gironi con meno di 1 coppia ( meglio spostare 3 )\r\n    const MIN_PAIR_PER_STAGE = 3;\r\n    let invalidStage = [];\r\n    const pairsInStage = data.rows.reduce((allNames: { [x: string]: number }, row: { stage1Name: string }) => {\r\n      if (row.stage1Name in allNames) allNames[row.stage1Name]++;\r\n      else allNames[row.stage1Name] = 1;\r\n      return allNames;\r\n    }, {});\r\n    for (let stageName in pairsInStage) {\r\n      if (pairsInStage[stageName] <= MIN_PAIR_PER_STAGE) invalidStage.push(stageName);\r\n    }\r\n    if (invalidStage.length > 0) {\r\n      showErrorMessage(\r\n        invalidStage.length === 1\r\n          ? `Il torneo ${invalidStage} deve contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n          : `I torneI ${invalidStage} devono contenere almeno ${MIN_PAIR_PER_STAGE + 1} coppie`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\r\n    // allora aggiorno lo stato del torneo\r\n    if (isAdmin && tournament.progress < TournamentProgress.Stage1) {\r\n      tournament.progress = TournamentProgress.Stage1;\r\n      dispatch(TournamentAction.updateTournament.request({ model: tournament }));\r\n    }\r\n    // Go to Stage1\r\n    dispatch(PairAction.fetchPairs.request({ tId: tournament.id! }));\r\n    currentHistory.push('/stage1');\r\n  };\r\n\r\n  function goBack() {\r\n    currentHistory.push('/');\r\n  }\r\n\r\n  const selectRow: SelectRowProps<PairDTO> = {\r\n    mode: 'checkbox',\r\n    onSelect: handleSelect,\r\n    onSelectAll: (isSelected: boolean, rows: PairDTO[]) => setSelectedRows(isSelected ? rows : []),\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: !isAdmin || tournament.progress > TournamentProgress.PairsSelection,\r\n  };\r\n\r\n  const processDeleteStage1 = async () => {\r\n    try {\r\n      setIsLoading({ state: true, message: 'Cancellazione in corso' });\r\n      const response = await fetch('/api/v1/stage1', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ tId: tournament.id }),\r\n      });\r\n      await response.json();\r\n      // Update tournament progress\r\n      if (isAdmin) {\r\n        dispatch(\r\n          TournamentAction.updateTournament.request({\r\n            model: { ...tournament, progress: TournamentProgress.PairsSelection },\r\n          })\r\n        );\r\n      }\r\n      showSuccessMessage('Cancellazione completata');\r\n      setAskUser(hideAskUser);\r\n    } catch (error) {\r\n      showErrorMessage('Errore cancellazione Fase 1');\r\n    }\r\n  };\r\n\r\n  function deleteStage1() {\r\n    if (tournament.progress > TournamentProgress.Stage1) {\r\n      showErrorMessage('Non è possibile cancellare in quanto il torneo è gia alla fase 2');\r\n      return;\r\n    }\r\n    // Chiedo conferma all'utente\r\n    setAskUser({\r\n      message: 'Vuoi resettare i gironi ? ',\r\n      onClick: () => processDeleteStage1(),\r\n      onHide: () => setAskUser(hideAskUser),\r\n      show: true,\r\n      title: 'Reset Gironi',\r\n    });\r\n  }\r\n\r\n  async function setStage1Name() {\r\n    if (!stage1Number) {\r\n      showErrorMessage('Specificare il numero di gironi da assegnare');\r\n      return;\r\n    }\r\n\r\n    if (tournament.progress > TournamentProgress.PairsSelection) {\r\n      showErrorMessage('Non riassegnare i gironi in quanto le coppie sono gia state confermate per la fase successiva');\r\n      return;\r\n    }\r\n\r\n    setIsLoading({ state: true, message: 'Aggiornamento in corso ' });\r\n    let current = 0;\r\n    const names = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\n    let newRows: any[] = [];\r\n    for (let index in data.rows) {\r\n      let row = data.rows[index];\r\n      // FIXME: if (current === stage1Number) QUESTO NON FUNZIONA ===\r\n      // eslint-disable-next-line eqeqeq\r\n      if (current == stage1Number) current = 0;\r\n      row['stage1Name'] = names[current];\r\n      current++;\r\n      try {\r\n        fetch('/api/v1/pair', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(row),\r\n        });\r\n        newRows.push(row);\r\n      } catch (error) {\r\n        showErrorMessage('Errore');\r\n        newRows.push(row);\r\n      }\r\n    }\r\n    showSuccessMessage('Gironi assegnati correttamente');\r\n    setData((current) => ({ rows: newRows, players: current.players }));\r\n  }\r\n\r\n  const availableRows = Math.floor(\r\n    Math.floor((data.players.length - 1) / 2) -\r\n      (data.rows.length === 0\r\n        ? 0\r\n        : data.rows.reduce((accumulator: number, e) => {\r\n            if ((!e.player1 && !e.player2) || (!e.player1?.id && !e.player2?.id)) return accumulator + 1;\r\n            if (!e.player1 || !e.player1.id || !e.player2 || !e.player2.id) return accumulator + 0.5;\r\n            return accumulator;\r\n          }, 0))\r\n  );\r\n\r\n  const deleteDisabled = !(selectedRows.length > 0) || tournament.progress > TournamentProgress.PairsSelection;\r\n\r\n  //console.log('render table : ', players, pairs);\r\n\r\n  const assignMatches = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>Assegna gironi</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder={\r\n          data.rows.length < 4\r\n            ? 'Inserisci almeno 4 coppie'\r\n            : `Numero di gironi ( max ${Math.floor(data.rows.length / 4)} )`\r\n        }\r\n        aria-label=\"Numero di gironi\"\r\n        type=\"number\"\r\n        step={1}\r\n        min={0}\r\n        max={Math.floor(data.rows.length / 4)}\r\n        value={stage1Number !== 0 ? stage1Number : undefined}\r\n        onChange={(event: React.FormEvent<FormEventType>) => setStage1Number(Number(event.currentTarget.value))}\r\n        disabled={\r\n          data.rows.length < 4 ||\r\n          tournament.progress === TournamentProgress.Stage1 ||\r\n          tournament.progress === TournamentProgress.Stage2\r\n        }\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={setStage1Name}\r\n          disabled={!stage1Number || stage1Number > Math.floor(data.rows.length / 4) || data.rows.length < 4}\r\n        >\r\n          Esegui\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const addPairs = () => (\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>Aggiungi coppie</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        disabled={availableRows <= 0}\r\n        type=\"number\"\r\n        step={1}\r\n        min={1}\r\n        max={availableRows}\r\n        placeholder={\r\n          availableRows <= 0\r\n            ? 'Numero massimo di coppie gia creato'\r\n            : `Numero di coppie da aggiungere ( max ${availableRows} )`\r\n        }\r\n        aria-label=\"Numero di coppie\"\r\n        onChange={(event: React.FormEvent<FormEventType>) => setNewRowsNumber(Number(event.currentTarget.value))}\r\n        value={newRowsNumber || ''}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={(e: any) => setNewRowsNumber(availableRows)}\r\n          disabled={newRowsNumber > availableRows}\r\n        >\r\n          Max\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addMultipleRows} disabled={!newRowsNumber || newRowsNumber > availableRows}>\r\n          Esegui\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n  const toolsBar = () => (\r\n    <div className={commonStyle.toolsBarContainer}>\r\n      <Row className={commonStyle.toolsBar}>\r\n        <Col>\r\n          <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\r\n            <HomeIcon /> Home\r\n          </Button>\r\n        </Col>\r\n\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"align-middle\"\r\n              onClick={() => addRow()}\r\n              disabled={availableRows <= 0 || !isAdmin}\r\n            >\r\n              <PlusIcon /> Aggiungi Coppia\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress > TournamentProgress.PairsSelection ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteRow} disabled={deleteDisabled || !isAdmin}>\r\n              <TrashIcon /> {selectedRows.length === 1 ? 'Elimina coppia' : 'Elimina coppie'}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {tournament.progress !== TournamentProgress.Stage1 ? null : (\r\n          <Col>\r\n            <Button variant=\"danger\" className=\"align-middle\" onClick={deleteStage1} disabled={!isAdmin}>\r\n              Reset gironi\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            className=\"default-color-white float-right align-middle\"\r\n            onClick={confirmPairs}\r\n            disabled={!isAdmin}\r\n          >\r\n            <b>Prosegui </b> <RightArrowIcon />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isAdmin && tournament.progress < TournamentProgress.PairsSelection ? (\r\n        <>\r\n          {assignMatches()}\r\n          {addPairs()}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  console.log(\r\n    'Pairs : ',\r\n    tournament.progress > TournamentProgress.PairsSelection,\r\n    tournament.progress,\r\n    TournamentProgress.PairsSelection\r\n  );\r\n  return (\r\n    <div>\r\n      <YesNoModal message={askUser.message} title={askUser.title} onClick={askUser.onClick} show={askUser.show} />\r\n      <LoadingModal show={isLoading.state} message={isLoading.message} />\r\n      <Col>\r\n        {toolsBar()}\r\n        <Row>\r\n          <Col>\r\n            {data.rows && data.players ? (\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={data.rows}\r\n                columns={columns(onSelect, data.players) as ColumnDescription<PairDTO, PairDTO>[]}\r\n                cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage1)}\r\n                selectRow={selectRow}\r\n                noDataIndication={() => (\r\n                  <NoData isEditable={isAdmin || false} addRow={() => addRow()} optionsLength={data.players.length} />\r\n                )}\r\n                caption={<TournamentBadge />}\r\n                headerClasses=\"default-background default-color-yellow\"\r\n                striped\r\n                hover\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PairsTable);\r\n"],"sourceRoot":""}