{"version":3,"sources":["components/core/utils.ts","common.module.css","components/Tournament/badge.tsx","components/Stage2/style.module.css","../node_modules/react-bootstrap/esm/InputGroup.js","components/Stage2/cell.tsx","components/Pair/select.tsx","components/Stage2/table.tsx","components/Stage2/helper.tsx","components/Stage2/handler.tsx"],"names":["translateTournamentProgress","value","TournamentProgress","New","PairsSelection","Stage1","Stage2","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","RegExp","passwordRegExp","emailRegExp","getBaseLog","x","y","Math","log","module","exports","TournamentBadge","tournament","useSelector","TournamentSelector","getTournament","className","variant","name","toUpperCase","progress","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","Cell","icon","onClick","isWinner","span","rowIndex","colIndex","pair","buttonDisabled","isLast","renderCustomComponent","color","rowSpan","style","cell","borderBottom","container","prepend","FormControl","placeholder","player1","player2","aria-label","aria-describedby","readOnly","Button","disabled","append","e","PairsSelect","getOptionLabel","styles","options","onChange","defaultValue","useState","selectedOption","setSelectedOption","components","actionMeta","isSearchable","isClearable","elements","pairsSelect","rowNumber","onSelectPair","colNumber","bRows","rows","counter","Array","fill","index","pairsNumber","indexes","NaN","currentMax","ii","growFactor","pow","jj","getIndexes","provided","flex","option","zIndex","menuList","height","console","id","placement","stage1Name","alias","row","matchId","cellRowIndex","cellColIndex","parentId","push","undefined","key","isButtonDisabled","getTableBodyRows","hElem","tds","headerCell","width","getTableHeaderElements","table","body","withRouter","currentHistory","useHistory","dispatch","useDispatch","cells","Stage2Selector","getCells","getRowsNumber","isLoading","pairsList","setPairsList","useEffect","a","Stage2Action","setLoading","fetchPairsStage2","result","pairs","Col","commonStyle","toolsBarContainer","Row","toolsBarRow","event","current1","current2","next","updateCell","request","cell1","cell2","setCells","newPair","prevPair","filter","show"],"mappings":"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","file":"static/js/7.8fadf449.chunk.js","sourcesContent":["import { TournamentProgress } from '../../redux/models/tournament.model';\r\n\r\nexport const getTodayDate = () => formatDate(new Date());\r\n\r\nexport function translateTournamentProgress(value: string) {\r\n  switch (value) {\r\n    case TournamentProgress.New:\r\n      return 'Nuovo';\r\n    case TournamentProgress.PairsSelection:\r\n      return 'Selezione Coppie';\r\n    case TournamentProgress.Stage1:\r\n      return 'Fase 1';\r\n    case TournamentProgress.Stage2:\r\n      return 'Fase 2';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('/');\r\n}\r\n\r\nexport function getRandomIntInclusive(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nexport const phoneRegExp = new RegExp('^d{10}$');\r\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\r\nexport const emailRegExp = new RegExp(\r\n  // eslint-disable-next-line quotes\r\n  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n);\r\n\r\nexport function getBaseLog(x: number, y: number) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\r\nexport const justADate = (initDate?: Date | string) => {\r\n  let utcMidnightDateObj: Date;\r\n  // if no date supplied, use Now.\r\n  if (!initDate) initDate = new Date();\r\n\r\n  // if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\r\n  if (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\r\n    utcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\r\n  } else {\r\n    // if init date is not already a date object, feed it to the date constructor.\r\n    if (!(initDate instanceof Date)) initDate = new Date(initDate);\r\n    // Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\r\n    utcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\r\n  }\r\n\r\n  return {\r\n    toISOString: () => utcMidnightDateObj.toISOString(),\r\n    getUTCDate: () => utcMidnightDateObj.getUTCDate(),\r\n    getUTCDay: () => utcMidnightDateObj.getUTCDay(),\r\n    getUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\r\n    getUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\r\n    setUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\r\n    setUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\r\n    setUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\r\n    addDays: (days: number) => {\r\n      utcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\r\n    },\r\n    toString: () => utcMidnightDateObj.toString(),\r\n    toLocaleDateString: (\r\n      locales?: string | string[] | undefined,\r\n      options?: Intl.DateTimeFormatOptions | undefined\r\n    ): string => {\r\n      const option = options || {};\r\n      option.timeZone = 'UTC';\r\n      const locale = locales || 'it-IT';\r\n      return utcMidnightDateObj.toLocaleDateString(locale, option);\r\n    },\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\r\nimport { TournamentSelector } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Badge } from 'react-bootstrap';\r\nimport { formatDate, translateTournamentProgress } from 'components/core/utils';\r\n\r\ninterface TournamentBadgeProps {}\r\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2 className=\"float-left\">\r\n          <Badge variant=\"info\">\r\n            <span>Torneo </span>\r\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\r\n            <span>\r\n              <i>\r\n                {` - ${formatDate(tournament.date)} `}\r\n                <small> @ {translateTournamentProgress(tournament!.progress)}</small>\r\n              </i>\r\n            </span>\r\n          </Badge>\r\n        </h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TournamentBadge;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2Kzbq\",\"cell\":\"style_cell__1Tgmm\",\"borderBottom\":\"style_borderBottom__2eMt1\",\"headerCell\":\"style_headerCell__2Jwbq\",\"container\":\"style_container__3mFJG\",\"row\":\"style_row__3YvC9\",\"prepend\":\"style_prepend__1aYFO\",\"append\":\"style_append__1Z8QN\",\"center\":\"style_center__3xWH5\"};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\r\nimport style from './style.module.css';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { DoubleRightIcon, BanIcon, TrophyIcon } from 'components/core/icons';\r\nimport { ICell } from 'redux/models/stage2.model';\r\nimport { PairDTO } from 'redux/models';\r\n\r\ninterface NodeElement extends ICell {\r\n  span: number;\r\n  renderCustomComponent?: (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => JSX.Element;\r\n  onClick: (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    rowIndex: number,\r\n    colIndex: number,\r\n    winner: boolean\r\n  ) => void;\r\n  rowIndex: number;\r\n  colIndex: number;\r\n  buttonDisabled: boolean;\r\n  isLast: boolean;\r\n}\r\n\r\nconst Cell: React.FC<NodeElement> = ({\r\n  onClick,\r\n  name,\r\n  isWinner,\r\n  span,\r\n  rowIndex,\r\n  colIndex,\r\n  pair,\r\n  buttonDisabled,\r\n  isLast,\r\n  renderCustomComponent,\r\n}) => {\r\n  let icon: JSX.Element;\r\n  if (isLast) icon = <TrophyIcon size=\"lg\" color=\"gold\" />;\r\n  else icon = isWinner ? <DoubleRightIcon size=\"lg\" color=\"green\" /> : <BanIcon size=\"1x\" color=\"red\" />;\r\n\r\n  return (\r\n    <td rowSpan={span} className={rowIndex % 2 === 0 ? [style.cell, style.borderBottom].join(' ') : style.cell}>\r\n      <InputGroup className={style.container}>\r\n        <InputGroup.Prepend className={style.prepend}>\r\n          <InputGroup.Text>{rowIndex}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        {renderCustomComponent ? (\r\n          renderCustomComponent(rowIndex, colIndex, isLast, pair)\r\n        ) : (\r\n          <FormControl\r\n            placeholder={'Username' + colIndex}\r\n            value={pair ? `${pair.player1?.name} - ${pair.player2?.name}` : name}\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"Username\"\r\n            readOnly={colIndex > 1}\r\n            size=\"lg\"\r\n          />\r\n        )}\r\n        <InputGroup.Append>\r\n          <Button\r\n            disabled={buttonDisabled}\r\n            className={style.append}\r\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => onClick(e, rowIndex, colIndex, !isWinner)}\r\n          >\r\n            {icon}\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useState } from 'react';\r\nimport Select, { Styles, ValueType, ActionMeta, components } from 'react-select';\r\nimport { PairDTO } from 'redux/models';\r\nimport { SelectComponents } from 'react-select/src/components';\r\n\r\ninterface PairSelectProps {\r\n  // indice riga ( Stage2 )\r\n  rowIndex: number;\r\n  // stili\r\n  styles?: Partial<Styles>;\r\n  // opzioni della lista\r\n  options: PairDTO[];\r\n  // Callback per formattare le opzioni della lista\r\n  getOptionLabel?: (option: PairDTO) => string;\r\n  // Callback onChange\r\n  onChange?: (value: ValueType<PairDTO>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\r\n  components?: Partial<SelectComponents<PairDTO>>;\r\n  defaultValue?: PairDTO;\r\n}\r\n\r\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\r\n// TODO: Si potrebbe generalizzare questo componente tramite i generics\r\nconst PairsSelect: React.FC<PairSelectProps> = React.forwardRef(\r\n  ({ getOptionLabel, styles, rowIndex, options, onChange, defaultValue }, ref) => {\r\n    const [selectedOption, setSelectedOption] = useState<PairDTO>();\r\n\r\n    const handleChange = (value: ValueType<PairDTO>, actionMeta: ActionMeta<PairDTO>) => {\r\n      setSelectedOption(value as PairDTO);\r\n      if (onChange) onChange(value, rowIndex, actionMeta);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        defaultValue={defaultValue}\r\n        components={components}\r\n        styles={styles}\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={getOptionLabel}\r\n        value={selectedOption}\r\n        placeholder=\"Cerca...\"\r\n        isSearchable\r\n        isClearable\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default PairsSelect;\r\n","import React from 'react';\r\nimport style from './style.module.css';\r\nimport { getIndexes, getEmptyCell, onClickCallback, onSelectCallback } from './helper';\r\nimport Cell from './cell';\r\nimport { getBaseLog } from 'components/core/utils';\r\nimport { ICell, PairDTO } from 'redux/models';\r\nimport PairsSelect from 'components/Pair/select';\r\nimport { Styles } from 'react-select';\r\n// import { valueFormatter } from 'components/Pair/helper';\r\n\r\n// https://www.kodbiro.com/blog/rorgchart-react-module-for-displaying-and-editing-data-in-org-chart/\r\n\r\ninterface Stage2Props {\r\n  pairsSelect: PairDTO[];\r\n  elements: ICell[][];\r\n  rowNumber: number;\r\n  onClick: onClickCallback;\r\n  onSelectPair: onSelectCallback;\r\n}\r\n\r\nconst Stage2: React.FC<Stage2Props> = ({ onClick, elements, pairsSelect, rowNumber = 64, onSelectPair }) => {\r\n  /*\r\n   * Calcolo il numero di colonne in funzione del numero di righe\r\n   * in quanto l'oggetto che ricevo protrebbe essere solo un parziale\r\n   */\r\n  const colNumber = getBaseLog(2, rowNumber) + 1;\r\n  const bRows = getTableBodyRows(elements, rowNumber, colNumber, onClick, pairsSelect, onSelectPair);\r\n  const hElem = getTableHeaderElements(colNumber);\r\n\r\n  return (\r\n    <table className={style.table}>\r\n      <thead>\r\n        <tr>{hElem}</tr>\r\n      </thead>\r\n      <tbody className={style.body}>{bRows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Stage2;\r\n\r\nfunction getTableHeaderElements(colNumber: number): JSX.Element[] {\r\n  const tds: JSX.Element[] = [];\r\n  for (let ii = 1; ii <= colNumber; ii++) {\r\n    tds.push(\r\n      <td\r\n        key={`header ${ii}`}\r\n        className={style.headerCell}\r\n        style={{\r\n          width: `${100 / colNumber}%`,\r\n        }}\r\n      >\r\n        <strong>{`Stage-${ii}`}</strong>\r\n      </td>\r\n    );\r\n  }\r\n  return tds;\r\n}\r\n\r\nfunction getTableBodyRows(\r\n  elements: ICell[][],\r\n  rowNumber: number,\r\n  colNumber: number,\r\n  onClick: onClickCallback,\r\n  pairsSelect: PairDTO[],\r\n  onSelectPair: onSelectCallback\r\n): JSX.Element[] {\r\n  // Conterrà tutte le righe della tabella\r\n  const rows: JSX.Element[] = [];\r\n  // Indice di riga progressivo\r\n  const counter = new Array<number>(colNumber).fill(0);\r\n  // Sequenza numero di elementi da aggiungere alla riga\r\n  const index: number[] = getIndexes(rowNumber);\r\n\r\n  const renderCustomComponent = (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => {\r\n    const styles: Partial<Styles> = {\r\n      container: (provided) => ({\r\n        ...provided,\r\n        flex: '1 1 auto',\r\n      }),\r\n      option: (provided) => ({ ...provided, zIndex: 6 }),\r\n      menuList: (provided) => ({\r\n        ...provided,\r\n        flex: '1 1 auto',\r\n        zIndex: 5,\r\n        height: 'auto',\r\n      }),\r\n    };\r\n    const getOptionLabel = (option: PairDTO) =>\r\n      option.id\r\n        ? `${option.placement}${option.stage1Name} : ${\r\n            option.alias ? option.alias : `${option.player1?.name} - ${option.player2?.name} `\r\n          }`\r\n        : '-';\r\n    /* TODO:\r\n    const CustomOption = ({ innerRef, innerProps, data }: OptionProps<PairDTO>) => (\r\n      <div ref={innerRef} {...innerProps}>\r\n        {data.placement}\r\n      </div>\r\n    );\r\n    */\r\n    console.log('Render stage2 select :', rowIndex, colIndex, isLast, pair);\r\n    return (\r\n      <PairsSelect\r\n        //components={{ Option: CustomOption }}\r\n        styles={styles}\r\n        defaultValue={pair}\r\n        options={pairsSelect}\r\n        rowIndex={rowIndex}\r\n        onChange={onSelectPair}\r\n        getOptionLabel={getOptionLabel}\r\n      />\r\n    );\r\n  };\r\n\r\n  for (let ii = 1; ii <= rowNumber; ii++) {\r\n    const row: JSX.Element[] = [];\r\n    for (let jj = 0; jj < index[ii]; jj++) {\r\n      counter[jj] += 1;\r\n      const cell = elements[jj] ? elements[jj][counter[jj] - 1] : getEmptyCell();\r\n      row.push(\r\n        <Cell\r\n          renderCustomComponent={jj === 0 ? renderCustomComponent : undefined}\r\n          key={`cell : ${jj}-${counter[jj] - 1}`}\r\n          span={Math.pow(2, jj)}\r\n          rowIndex={counter[jj]}\r\n          colIndex={jj + 1}\r\n          onClick={onClick}\r\n          buttonDisabled={isButtonDisabled(counter[jj], jj, elements)}\r\n          isLast={elements[jj].length === 1}\r\n          {...cell}\r\n        />\r\n      );\r\n    }\r\n    rows.push(\r\n      <tr key={`row : ${ii}`} className={style.row}>\r\n        {row}\r\n      </tr>\r\n    );\r\n  }\r\n  return rows;\r\n}\r\n\r\n/*\r\n  Il button per impostare la coppia vincente è abilitato solo se entrambe le cell hanno una coppia assegnata\r\n*/\r\nconst isButtonDisabled = (rowIndex: number, colIndex: number, elements: ICell[][]) =>\r\n  elements[colIndex].length === 1 ||\r\n  (rowIndex % 2 !== 0\r\n    ? !elements[colIndex][rowIndex - 1].pair || (elements[colIndex][rowIndex] && !elements![colIndex][rowIndex].pair)\r\n    : !elements[colIndex][rowIndex - 1].pair ||\r\n      (elements[colIndex][rowIndex - 2] && !elements[colIndex][rowIndex - 2].pair));\r\n","import { getBaseLog } from '../core/utils';\r\nimport { ICell } from 'redux/models/stage2.model';\r\nimport { ValueType, ActionMeta } from 'react-select';\r\nimport { PairDTO } from 'redux/models';\r\n\r\nexport type onClickCallback = (\r\n  event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n  rowIndex: number,\r\n  colIndex: number,\r\n  isWinner: boolean\r\n) => void;\r\n\r\nexport type onSelectCallback = (value: ValueType<PairDTO>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\r\nexport const getIndexes = (pairsNumber: number): number[] => {\r\n  const N = getBaseLog(2, pairsNumber) + 1; // Numero massimo di elementi td\r\n  /*\r\n   * Array per mappare numero riga a numero di elementi td\r\n   * Inizializzo come primo NaN solo per avere un placeholder all'index 0  e iniziare l'analisi da 1\r\n   */\r\n  let indexes = [NaN, N];\r\n  let currentMax = 1;\r\n  for (let ii = 1; ii <= pairsNumber; ii++) {\r\n    if (!indexes[ii]) {\r\n      indexes[ii] = currentMax;\r\n      let growFactor = Math.pow(2, currentMax);\r\n      for (let jj = 1; ii + growFactor * jj < pairsNumber + 1; jj++) indexes[ii + growFactor * jj] = currentMax;\r\n      currentMax++;\r\n    }\r\n  }\r\n  return indexes;\r\n};\r\n\r\nexport const getEmptyCell = (name?: string): ICell => ({\r\n  name: '',\r\n  isWinner: false,\r\n  matchId: 0,\r\n  cellRowIndex: 0,\r\n  cellColIndex: 0,\r\n  parentId: 0,\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, RouteComponentProps, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Stage2 from './table';\r\n// FIXME:\r\nimport { ICell, PairDTO } from 'redux/models';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport commonStyle from '../../common.module.css';\r\nimport { Stage2Selector, TournamentSelector } from 'redux/selectors';\r\nimport { Stage2Action } from 'redux/actions';\r\nimport { LoadingModal } from 'components/core/generic/Commons';\r\nimport { LeftArrowIcon } from 'components/core/icons';\r\nimport TournamentBadge from 'components/Tournament/badge';\r\nimport { fetchPairsStage2 } from 'redux/services/stage2.service';\r\nimport { onClickCallback, onSelectCallback } from './helper';\r\n\r\n// import template from './template';\r\n\r\ninterface Stage2HandlerProps extends RouteComponentProps {}\r\n\r\nconst Stage2Handler: React.FC<Stage2HandlerProps> = () => {\r\n  const currentHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const cells = useSelector(Stage2Selector.getCells);\r\n  const rowNumber = useSelector(Stage2Selector.getRowsNumber);\r\n  const isLoading = useSelector(Stage2Selector.isLoading);\r\n  const tournament = useSelector(TournamentSelector.getTournament)!;\r\n  // const pairsListFromStore = useSelector(Stage1Selector.getSelectedPairs);\r\n  const [pairsList, setPairsList] = useState<PairDTO[]>();\r\n\r\n  function goBack() {\r\n    currentHistory.push('/stage1');\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      dispatch(Stage2Action.setLoading(true));\r\n      const result = await fetchPairsStage2(tournament.id!);\r\n      setPairsList(result.pairs);\r\n      dispatch(Stage2Action.setLoading(false));\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tournament.id]);\r\n\r\n  // Callback tasto vittoria/sconfitta coppia : Sposta la coppia alla fase successiva\r\n  const onClick: onClickCallback = (event, rowIndex, colIndex, isWinner) => {\r\n    const elements = [...cells!];\r\n    // Coppia 1 e 2 dell'incontro corrente\r\n    let current1: ICell | null = null;\r\n    let current2: ICell | null = null;\r\n    // Element Incontro successivo\r\n    let next: ICell | null = null;\r\n    if (rowIndex % 2 !== 0) {\r\n      current1 = elements[colIndex - 1][rowIndex - 1];\r\n      current2 = elements[colIndex - 1][rowIndex];\r\n    } else {\r\n      current1 = elements[colIndex - 1][rowIndex - 1];\r\n      current2 = elements[colIndex - 1][rowIndex - 2];\r\n    }\r\n    next = elements[colIndex][current1.matchId - 1];\r\n    console.log(' onClick : ', current1, current2, next);\r\n\r\n    current1.isWinner = isWinner;\r\n    current2.isWinner = !isWinner;\r\n    if (next) next.pair = isWinner ? current1.pair : current2.pair;\r\n    dispatch(Stage2Action.updateCell.request({ cell1: current1, cell2: current2 }));\r\n    dispatch(Stage2Action.setCells(elements));\r\n    if (elements[colIndex].length === 1) {\r\n      dispatch(Stage2Action.updateCell.request({ cell1: next, cell2: null }));\r\n    }\r\n  };\r\n\r\n  // Questa funzione viene richiamata quando viene selezionata una coppia nella prima colonna\r\n  const onSelectPair: onSelectCallback = (value, rowIndex, actionMeta) => {\r\n    if (!pairsList) {\r\n      return;\r\n    }\r\n    const elements = [...cells!];\r\n    const newPair = value as PairDTO;\r\n    const prevPair = elements[0][rowIndex - 1].pair;\r\n    let pairs: PairDTO[] = [...pairsList];\r\n\r\n    // Se ho selezionato una coppia la elimino dalla lista ( questa condizione esclude il placeholder )\r\n    if (newPair && newPair.id) {\r\n      pairs = pairs.filter((e) => e.id !== newPair.id);\r\n    }\r\n    // Se nella celle era gia presente una coppia la ripristino\r\n    if (prevPair && prevPair.id) {\r\n      pairs = [...pairs!, prevPair];\r\n    }\r\n    setPairsList(pairs);\r\n    elements[0][rowIndex - 1].pair = newPair;\r\n    dispatch(Stage2Action.setCells(elements));\r\n    dispatch(Stage2Action.updateCell.request({ cell1: elements[0][rowIndex - 1], cell2: null }));\r\n  };\r\n\r\n  //console.log('render stage2 :', cells, pairsList, rowNumber);\r\n  return cells && pairsList && rowNumber ? (\r\n    <>\r\n      <Col className={commonStyle.toolsBarContainer}>\r\n        <Row className={commonStyle.toolsBarRow}>\r\n          <Col>\r\n            <Button variant=\"secondary\" className=\"float-left\" onClick={goBack}>\r\n              <LeftArrowIcon /> Indietro\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <TournamentBadge />\r\n\r\n      <Stage2\r\n        pairsSelect={pairsList}\r\n        onClick={onClick}\r\n        rowNumber={rowNumber}\r\n        elements={cells}\r\n        onSelectPair={onSelectPair}\r\n      />\r\n    </>\r\n  ) : (\r\n    <LoadingModal show={isLoading} />\r\n  );\r\n};\r\n\r\nexport default withRouter(Stage2Handler);\r\n"],"sourceRoot":""}