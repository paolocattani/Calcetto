{"version":3,"sources":["components/core/icons.tsx","components/core/hooks/InputHook.ts","components/Auth/Edit.tsx"],"names":["Icon","size","prefix","iconName","color","icon","findIconDefinition","TrashIcon","SaveIcon","RightArrowIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","TrophyIcon","DoubleRightIcon","BanIcon","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","currentTarget","Delete","lazy","EditUser","dispatch","useDispatch","history","useHistory","session","useSelector","SessionSelector","getSession","showModalDelete","setShowModalDelete","user","name","bindName","surname","bindSurname","phone","bindPhone","birthday","setBirthday","errorMessage","setErrorMessage","successMessage","setSuccessMessage","showError","message","setTimeout","onSubmit","a","preventDefault","model","fetch","method","headers","body","JSON","stringify","response","json","ok","SessionAction","updateSession","push","md","span","offset","sm","style","textAlign","width","height","margin","className","Header","as","variant","onClick","Body","key","Group","Row","controlId","Label","column","Control","plaintext","username","readOnly","fontSize","fontWeight","email","role","required","type","placeholder","selected","Date","locale","dateFormat","newValue","Footer","show","onHide"],"mappings":"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","file":"static/js/14.15c27c25.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\n\r\ninterface IconProps {\r\n  color?: string;\r\n  size?: SizeProp;\r\n}\r\n\r\ninterface AbstractIconProps extends IconProps {\r\n  prefix: IconPrefix;\r\n  iconName: IconName;\r\n}\r\n\r\nconst SOLID = 'fas';\r\nconst REGULAR = 'far';\r\n\r\n// Wrapper per icone FontAwesome\r\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\r\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\r\n);\r\n\r\n// Regular\r\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\r\n);\r\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\r\n);\r\n\r\n// Solid\r\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\r\n);\r\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\r\n);\r\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\r\n);\r\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\r\n);\r\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\r\n);\r\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\r\n);\r\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\r\n);\r\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\r\n);\r\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\r\n  <Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\r\n);\r\n","import { useState } from 'react';\r\nimport { FormEventType } from '../generic/CommonTypes';\r\n\r\n// Hook per facilitare la gestione dei campi di una form nei componenti funzionali\r\n// https://rangle.io/blog/simplifying-controlled-inputs-with-hooks/\r\nexport const useInput = <T extends any>(initialValue: T) => {\r\n  const [value, setValue] = useState<T>(initialValue);\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(initialValue),\r\n    bind: {\r\n      value,\r\n      onChange: (event: React.ChangeEvent<FormEventType>) => setValue(event.currentTarget.value as T),\r\n    },\r\n  };\r\n};\r\n","import React, { FormEvent, SetStateAction, useState, CSSProperties, lazy } from 'react';\r\nimport { Card, Container, Alert, Form, Button, Col, Row } from 'react-bootstrap';\r\nimport { useInput } from '../core/hooks/InputHook';\r\nimport DatePicker from 'react-datepicker';\r\nimport { TrashIcon, SaveIcon, TimesIcon } from '../core/icons';\r\nimport { SessionSelector } from 'selectors/session.selector';\r\nimport { SessionAction } from 'actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst Delete = lazy(() => import('./Delete'));\r\n\r\nconst EditUser: React.FC<{}> = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const session = useSelector(SessionSelector.getSession);\r\n  const [showModalDelete, setShowModalDelete] = useState(false);\r\n\r\n  const { value: name, bind: bindName } = useInput<string>(session.user!.name);\r\n  const { value: surname, bind: bindSurname } = useInput<string>(session.user!.surname);\r\n  const { value: phone, bind: bindPhone } = useInput<string>(session.user!.phone);\r\n  const { value: birthday, setValue: setBirthday } = useInput<Date>(session.user!.birthday);\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const showError = (message: SetStateAction<string>) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(''), 3000);\r\n  };\r\n  const showSuccess = (message: SetStateAction<string>) => {\r\n    setSuccessMessage(message);\r\n    setTimeout(() => setSuccessMessage(''), 3000);\r\n  };\r\n\r\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { user } = session;\r\n      const model = {\r\n        ...user!,\r\n        name,\r\n        surname,\r\n        phone,\r\n        birthday,\r\n      };\r\n      const response = await fetch('/api/v1/auth/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(model),\r\n      });\r\n      await response.json();\r\n      if (response.ok) {\r\n        dispatch(SessionAction.updateSession({ user: model }));\r\n        showSuccess('Aggiornamento effettuato ... ');\r\n        setTimeout(() => history.push('/'), 3000);\r\n      } else showError('Errore durante aggiornamento dati');\r\n    } catch (error) {\r\n      showError('Errore durante aggiornamento dati');\r\n    }\r\n  };\r\n\r\n  const modalStyle: CSSProperties = {\r\n    textAlign: 'left',\r\n    width: '100%',\r\n    height: 'auto',\r\n    margin: 'auto',\r\n    color: 'white',\r\n  };\r\n\r\n  return (\r\n    <Col md={{ span: '6', offset: '3' }} sm=\"12\">\r\n      <Card style={modalStyle} className=\"default-background\">\r\n        <Form onSubmit={onSubmit}>\r\n          <Card.Header as=\"h2\">\r\n            <Row>\r\n              <Col md=\"9\">Gestione dati utente</Col>\r\n              <Col md=\"3\">\r\n                <Button variant=\"outline-warning\" className=\"float-right\" onClick={() => history.push('/')}>\r\n                  <TimesIcon /> Chiudi\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Container>\r\n              {errorMessage ? (\r\n                <Alert key={'auth-alert-error'} variant={'danger'}>\r\n                  {errorMessage}\r\n                </Alert>\r\n              ) : null}\r\n              {successMessage ? (\r\n                <Alert key={'auth-alert-success'} variant={'success'}>\r\n                  {successMessage}\r\n                </Alert>\r\n              ) : null}\r\n              <Form.Group as={Row} controlId=\"username\">\r\n                <Form.Label column>Username</Form.Label>\r\n                <Col sm=\"9\">\r\n                  <Form.Control\r\n                    plaintext\r\n                    value={session.user!.username!}\r\n                    readOnly\r\n                    style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n                    className=\"default-color-white \"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"email\">\r\n                <Form.Label column>Email</Form.Label>\r\n                <Col sm=\"9\">\r\n                  <Form.Control\r\n                    plaintext\r\n                    value={session.user!.email!}\r\n                    readOnly\r\n                    style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n                    className=\"default-color-white\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"role\">\r\n                <Form.Label column>Ruolo</Form.Label>\r\n                <Col sm=\"9\">\r\n                  <Form.Control\r\n                    plaintext\r\n                    value={session.user!.role}\r\n                    readOnly\r\n                    style={{ fontSize: 'larger', fontWeight: 'bolder' }}\r\n                    className=\"default-color-white\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"name\">\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Nome\" {...bindName} />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group controlId=\"surname\">\r\n                    <Form.Label>Cognome</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Cognome\" {...bindSurname} />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"phone\">\r\n                    <Form.Label>Telefono</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Telefono\" {...bindPhone} />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group controlId=\"birthday\">\r\n                    <Form.Label>Data di Nascita</Form.Label>\r\n                    <Form.Control\r\n                      as={() => (\r\n                        <DatePicker\r\n                          selected={new Date(birthday)}\r\n                          locale=\"it-IT\"\r\n                          dateFormat=\"dd/MM/yyyy\"\r\n                          onChange={(newValue) => setBirthday(newValue ? newValue : new Date())}\r\n                        />\r\n                      )}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Form.Row>\r\n            </Container>\r\n          </Card.Body>\r\n          <Card.Footer style={{ height: '10vh' }}>\r\n            <Button variant=\"outline-success\" type=\"submit\" className=\"float-right\">\r\n              <SaveIcon /> Salva\r\n            </Button>\r\n            <Button variant=\"outline-danger\" className=\"float-left\" onClick={() => setShowModalDelete(true)}>\r\n              <TrashIcon /> Elimina Utente\r\n            </Button>\r\n          </Card.Footer>\r\n        </Form>\r\n        <Delete show={showModalDelete} onHide={() => setShowModalDelete(false)} />\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n"],"sourceRoot":""}