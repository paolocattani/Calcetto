{"version":3,"sources":["components/Player/helper.js","components/core/generic/TableHeader.tsx","components/Player/table.tsx","common.module.css"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","filterFactory","filterTableFactory","playerColumns","isAdmin","labels","addEdit","dataField","text","editable","headerStyle","column","colIndex","width","name","autoSelectText","filter","textFilter","placeholder","getFilter","surname","alias","role","selectFilter","options","PlayerRole","GoalKeeper","goalKeeper","Striker","striker","Master","master","editor","type","Type","SELECT","getOptions","value","label","email","hidden","phone","isDummyField","formatter","cell","row","Button","variant","onClick","Header","title","saved","divStyle","color","undefined","t","useTranslation","style","withRouter","dispatch","useDispatch","currentHistory","useHistory","isLoading","useSelector","PlayerSelector","AuthSelector","playersList","getPlayersList","isSaving","useState","selectedRows","setSelectedRows","useEffect","PlayerAction","fetchPlayers","request","handleOnSelect","isSelected","rows","found","find","e","id","selectRow","mode","nonSelectable","map","onSelect","onSelectAll","forEach","backgroundColor","hideSelectAll","hideSelectColumn","selectColumnStyle","checked","disabled","rowIndex","rowKey","player","getEmptyPlayer","console","log","setPlayer","push","deleteRow","deletePlayers","players","goBack","fieldLabels","edit","show","message","Col","Row","className","commonStyle","toolsBarContainer","toolsBar","clearAllFilter","length","bootstrap4","keyField","data","columns","caption","TableHeader","headerClasses","noDataIndication","striped","hover","module","exports"],"mappings":"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","file":"static/js/17.e1e51ba4.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport filterTableFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport { PlayerRole } from '../../@common/dto';\nimport { EditIcon } from '../core/icons';\n// Filter\nlet nameFilter;\nlet surnameFilter;\nlet aliasFilter;\nlet roleFilter;\nlet emailFilter;\nlet phoneFilter;\n\nexport function clearAllFilter(isAdmin) {\n  nameFilter('');\n  surnameFilter('');\n  aliasFilter('');\n  roleFilter('');\n  if (isAdmin) {\n    emailFilter('');\n    phoneFilter('');\n  }\n}\n\nexport const filterFactory = filterTableFactory();\n\n// Columns default\nconst playerColumns = (isAdmin, labels, addEdit) => [\n  { dataField: 'rowNumber', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\n  {\n    dataField: 'name',\n    text: labels.name,\n    autoSelectText: true,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (nameFilter = filter),\n    }),\n  },\n  {\n    dataField: 'surname',\n    text: labels.surname,\n    autoSelectText: true,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (surnameFilter = filter),\n    }),\n  },\n  {\n    dataField: 'alias',\n    text: labels.alias,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '17%' : '25%' }),\n    autoSelectText: true,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (aliasFilter = filter),\n    }),\n  },\n  {\n    dataField: 'role',\n    text: labels.role,\n    headerStyle: (column, colIndex) => ({ width: `${isAdmin ? '11' : '15'}%` }),\n    filter: selectFilter({\n      placeholder: `${labels.filter}...`,\n      options: {\n        [PlayerRole.GoalKeeper]: labels.goalKeeper,\n        [PlayerRole.Striker]: labels.striker,\n        [PlayerRole.Master]: labels.master,\n      },\n      getFilter: (filter) => (roleFilter = filter),\n    }),\n    editor: {\n      type: Type.SELECT,\n      getOptions: () => {\n        return [\n          { value: PlayerRole.GoalKeeper, label: labels.goalKeeper },\n          { value: PlayerRole.Striker, label: labels.striker },\n          { value: PlayerRole.Master, label: labels.master },\n        ];\n      },\n    },\n  },\n  {\n    dataField: 'email',\n    text: labels.email,\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\n    autoSelectText: true,\n    hidden: !isAdmin,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (emailFilter = filter),\n    }),\n  },\n  {\n    dataField: 'phone',\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\n    text: labels.phone,\n    autoSelectText: true,\n    hidden: !isAdmin,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (phoneFilter = filter),\n    }),\n  },\n  // https://github.com/react-bootstrap-table/react-bootstrap-table2/blob/master/docs/columns.md#isDummyField\n  {\n    dataField: 'actions',\n    isDummyField: true,\n    text: 'Azioni',\n    hidden: !isAdmin,\n    formatter: (cell, row) => (\n      <Button variant=\"success\" onClick={() => addEdit(row)}>\n        <EditIcon />\n      </Button>\n    ),\n  },\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\n];\n\nexport default playerColumns;\n\nexport function valueFormatter(selectedOption) {\n  let value = '';\n  if (!selectedOption) return '';\n  if (selectedOption.alias) {\n    value = selectedOption.alias;\n  } else {\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\n  }\n  return value;\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface HeaderProps {\n  title: React.Component | string;\n  saved: boolean;\n}\nconst Header: React.FC<HeaderProps> = ({ title, saved }) => {\n  const divStyle = {\n    color: saved ? '#4feb34' : undefined,\n  };\n  const { t } = useTranslation(['common']);\n  return (\n    <h3>\n      <b style={divStyle}>{typeof title === 'string' ? t(title) : title}</b>\n      {saved ? <small> {`- ${t('common:saving')}...`} </small> : null}\n    </h3>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BootstrapTable, { ColumnDescription, SelectRowProps } from 'react-bootstrap-table-next';\n// style\nimport { Button, Row, Col } from 'react-bootstrap';\nimport commonStyle from '../../common.module.css';\n//\nimport columns, { clearAllFilter, filterFactory } from './helper';\nimport TableHeader from '../core/generic/TableHeader';\nimport { LoadingModal } from '../core/generic/Commons';\n\nimport { PlayerAction } from '../../redux/actions';\nimport { PlayerSelector, AuthSelector } from '../../redux/selectors';\nimport { TrashIcon, PlusIcon, BroomIcon, HomeIcon } from '../core/icons';\nimport { useTranslation } from 'react-i18next';\nimport { PlayerDTO } from '../../@common/dto';\nimport { getEmptyPlayer } from '../../@common/models';\n\ninterface PlayerProps {}\nconst PlayerTable: React.FC<PlayerProps> = () => {\n  const dispatch = useDispatch();\n  const currentHistory = useHistory();\n  const { t } = useTranslation(['common', 'player']);\n  // From Store\n  const isLoading = useSelector(PlayerSelector.isLoading);\n  const isAdmin = useSelector(AuthSelector.isAdmin);\n  const playersList = useSelector(PlayerSelector.getPlayersList);\n  const isSaving = useSelector(PlayerSelector.isSaving);\n  // Component State\n  const [selectedRows, setSelectedRows] = useState<PlayerDTO[]>([]);\n\n  // Effetcs\n  useEffect(() => {\n    dispatch(PlayerAction.fetchPlayers.request({}));\n  }, [dispatch]);\n\n  const toolsBar = () => (\n    <Col className={commonStyle.toolsBarContainer}>\n      <div className={commonStyle.toolsBar}>\n        <Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\n          <HomeIcon />\n          <span> {t('common:route.home')}</span>\n        </Button>\n        {isAdmin ? (\n          <Button variant=\"success\" onClick={() => addEdit()}>\n            <PlusIcon />\n            <span>{t('player:add')}</span>\n          </Button>\n        ) : null}\n        <Button variant=\"dark\" onClick={() => clearAllFilter(isAdmin)}>\n          <BroomIcon />\n          <span> {t('player:filter')}</span>\n        </Button>\n        {isAdmin ? (\n          <Button variant=\"danger\" className=\"float-right\" onClick={deleteRow} disabled={selectedRows.length === 0}>\n            <TrashIcon /> {selectedRows.length > 1 ? t('player:delete.multi') : t('player:delete.one')}\n          </Button>\n        ) : null}\n      </div>\n    </Col>\n  );\n\n  const handleOnSelect = (row: PlayerDTO, isSelected: boolean) => {\n    setSelectedRows((rows) => {\n      const found = !!rows.find((e) => e.id === row.id);\n      if (isSelected) {\n        return found ? rows : [row, ...rows];\n      } else {\n        return found ? rows.filter((e) => e.id !== row.id) : rows;\n      }\n    });\n    return true;\n  };\n\n  const selectRow: SelectRowProps<PlayerDTO> = {\n    mode: 'checkbox',\n    nonSelectable: playersList.filter((e) => e.id && !e.editable).map((e) => e.id!),\n    onSelect: handleOnSelect,\n    onSelectAll: (isSelected, rows) => rows.forEach((row) => handleOnSelect(row, isSelected)),\n    style: { backgroundColor: '#c8e6c9' },\n    hideSelectAll: !playersList.find((e) => e.editable),\n    hideSelectColumn: !playersList.find((e) => e.editable) || !isAdmin,\n    selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\n      playersList[rowIndex].editable ? {} : { backgroundColor: '#dc3545' },\n  };\n\n  const addEdit = (player: PlayerDTO = getEmptyPlayer()) => {\n   \tconsole.log('addEdit : ', player);\n    dispatch(PlayerAction.setPlayer(player));\n    currentHistory.push('/player/edit');\n  };\n\n  const deleteRow = () => {\n    if (!selectedRows) return;\n    dispatch(PlayerAction.deletePlayers.request({ players: selectedRows }));\n    setSelectedRows([]);\n  };\n\n  function goBack() {\n    currentHistory.push('/');\n  }\n\n  const fieldLabels = {\n    name: t('player:field.name'),\n    surname: t('player:field.surname'),\n    alias: t('player:field.alias'),\n    role: t('player:field.role'),\n    email: t('player:field.email'),\n    phone: t('player:field.phone'),\n    filter: t('player:field.filter'),\n    goalKeeper: t('player:role.goalKeeper'),\n    striker: t('player:role.striker'),\n    master: t('player:role.master'),\n    edit: t('common:edit'),\n  };\n\n  return (\n    <>\n      <LoadingModal show={isLoading} message={t('common:loading')} />\n      <Col>\n        <Row>{toolsBar()}</Row>\n        <Row>\n          <Col>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={playersList}\n              columns={columns(isAdmin, fieldLabels, addEdit) as ColumnDescription<PlayerDTO, PlayerDTO>[]}\n              selectRow={selectRow}\n              caption={<TableHeader title={'common:route.player'} saved={isSaving} />}\n              filter={filterFactory}\n              headerClasses=\"default-background default-color-yellow\"\n              noDataIndication={() => isAdmin ?\n\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={()=> addEdit()}>\n\t\t\t\t\t\t\t\t\t{t('player:add')}\n\t\t\t\t\t\t\t\t</Button> :\n\t\t\t\t\t\t\t\t<p>{t('player:no_data')}</p>\n              }\n              striped\n              hover\n            />\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default withRouter(PlayerTable);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};"],"sourceRoot":""}