{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","components/Stage1/header.tsx","components/Stage1/editor.js","components/Stage1/table.jsx","components/Stage1/wrapper.tsx","common.module.css","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/Tournament/badge.tsx"],"names":["noop","ToggleButton","React","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","tableHeader","title","saved","divStyle","color","style","headerAlign","align","newColumn","index","rowNumber","id","dataField","text","toString","headerStyle","column","colIndex","width","editable","content","row","rowIndex","columnIndex","backgroundColor","parseInt","editor","Type","SELECT","options","label","columns","pairsList","baseColumns","ii","length","push","Stage1Table","autoOrder","stageName","dispatch","useDispatch","toogleRefresh","useSelector","Stage1Selector","getToogleRefresh","isAdmin","AuthSelector","tournament","TournamentSelector","getTournament","selectedRows","setSelectedRows","isLoading","setIsLoading","setIsSaved","rows","setRows","useEffect","a","fetchStage1","result","sort","e1","e2","comparator","forEach","selectRow","mode","onSelect","isSelected","selected","found","find","filter","Stage1Action","updateSelectedPairs","request","stage1Name","stage1Rows","onSelectAll","s1Rows","hideSelectColumn","progress","TournamentProgress","Stage2","console","log","bootstrap4","keyField","data","cellEdit","cellEditFactory","blurToSave","beforeSaveCell","oldValue","newValue","startsWith","getOpposite","afterSaveCell","newRows","updateCellStage1","tId","pair","tournamentId","score","pair1Id","pair2Id","key","ok","setTimeout","acc","thisRowIndex","thisRow","total","oppositeRowIndex","oppositeRow","splice","s1Row","updatePlacement","map","placement","noDataIndication","headerClasses","caption","striped","hover","Wrapper","currentHistory","useHistory","session","getSession","getSelectedPairs","PairSelector","getPairsList","toolsBar","commonStyle","toolsBarContainer","Row","toolsBarRow","Col","variant","onClick","Stage1","Stage2Action","delete","resetPairs","TournamentAction","update","count","fetchStage2","ButtonGroup","toggle","currentTarget","renderTables","stage","stageList","obj1","obj2","localeCompare","element","module","exports","_assertThisInitialized","self","ReferenceError","TournamentBadge","t","useTranslation","public","toUpperCase","formatDate","date"],"mappings":"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","file":"static/js/13.fbdf197a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React from 'react';\n\ninterface Stage1HeaderProps {\n  title: string;\n  saved: boolean;\n}\n\nconst tableHeader: React.FC<Stage1HeaderProps> = ({ title, saved }) => {\n  const divStyle = {\n    color: saved ? '#4feb34' : undefined,\n  };\n  return (\n    <h3>\n      <b style={divStyle}>\n        Girone - <strong>{title}</strong>\n      </b>\n      {saved ? <small> - Salvataggio in corso...</small> : null}\n    </h3>\n  );\n};\n\nexport default tableHeader;\n","import { Type } from 'react-bootstrap-table2-editor';\n\n/*\n  non esistono i tipi per react-bootstrap-table2-editor\n  quindi lascio tutto quello che riguarda l'edit come .js\n*/\n\nconst headerAlign = { headerAlign: 'center' };\nconst align = { align: 'center' };\nconst newColumn = (index, rowNumber) => {\n  return {\n    id: `col${index}`,\n    dataField: `col${index}`,\n    text: index.toString(),\n    //type: 'number',\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\n    ...headerAlign,\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\n    ...align,\n    style: (content, row, rowIndex, columnIndex) => {\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#343a40' };\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\n      return null;\n    },\n    /* TODO:\n    editorStyle: (cell, row, rowIndex, colIndex) => {\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\n      return { width: '100%', height: 'auto' };\n    }, */\n    editor: {\n      type: Type.SELECT,\n      options: [\n        { value: '3', label: '3' },\n        { value: '2', label: '2' },\n        { value: '1', label: '1' },\n        { value: '0', label: '0' },\n        { value: null, label: '' },\n      ],\n    },\n  };\n};\n\nexport const columns = (pairsList) => {\n  let baseColumns = [\n    {\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\n      id: 'pairLabel',\n      dataField: 'pair.label',\n      text: 'Nome Coppia',\n      editable: false,\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\n      ...align,\n      ...headerAlign,\n    },\n    {\n      // Numbero riga per riferimento visivo\n      id: 'rowNumber',\n      dataField: 'rowNumber',\n      text: 'ID',\n      editable: false,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n      style: (content, row, rowIndex, columnIndex) => {\n        return { backgroundColor: '#343a40', color: '#ffc107' };\n      },\n    },\n  ];\n\n  // generazione dinamica colonne intermedie\n  for (let ii = 0; ii < pairsList.length; ii++) {\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\n  }\n\n  baseColumns.push(\n    {\n      // Totale coppia\n      id: 'totale',\n      dataField: 'total',\n      text: 'Totale',\n      editable: false,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n    },\n    {\n      // Posizionamento coppia\n      id: 'placement',\n      dataField: 'placement',\n      text: 'Posizione',\n      editable: true,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n    }\n  );\n  return baseColumns;\n};\n","import React, { useState, useEffect } from 'react';\n// table\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n// helper\nimport TableHeader from './header';\nimport { getOpposite, comparator } from './helper';\nimport { columns } from './editor';\n//\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\n// style\nimport { Stage1Action } from '../../redux/actions';\nimport { TournamentSelector,Stage1Selector } from '../../redux/selectors';\nimport { TournamentProgress } from '../../@common/dto';\nimport { fetchStage1, updateCellStage1 } from '../../redux/services/stage1.service';\n\n// TODO: convert this component to ts\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Stage1Table = ({ pairsList, autoOrder, stageName }) => {\n  const dispatch = useDispatch();\n  // Sono presenti aggiornamenti\n  const toogleRefresh = useSelector(Stage1Selector.getToogleRefresh);\n  // From store\n  const isAdmin = useSelector(AuthSelector.isAdmin);\n  const tournament = useSelector(TournamentSelector.getTournament);\n  // State\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [saved, setIsSaved] = useState(false);\n  const [rows, setRows] = useState([]);\n\n  // Effects\n  useEffect(\n    () => {\n      (async () => {\n        setIsLoading(true);\n        const result = await fetchStage1({pairsList,stageName});\n        if (!!autoOrder)\n          [...result]\n            .sort((e1, e2) => comparator(e1, e2))\n            .forEach((row, index) => (result[row.rowNumber - 1]['placement'] = index + 1));\n        setRows(result);\n        setIsLoading(false);\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [pairsList,toogleRefresh]\n  );\n\n  const cellEditProps = (editable) =>\n    cellEditFactory({\n      mode: editable ? 'click' : 'none',\n      blurToSave: true,\n      beforeSaveCell: (oldValue, newValue, row, column) => {\n        if (column.id.startsWith('col')) {\n          // Aggiorno cella opposta\n          rows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\n        }\n      },\n      afterSaveCell: async (oldValue, newValue, row, column) => {\n        const newRows = [...rows];\n        if (column.id.startsWith('col')) {\n          // Aggiorno dati sul Db\n          const response = await updateCellStage1({\n            tId: row.pair.tournamentId,\n            stageName,\n            score: newValue,\n            pair1Id: row.pair.id,\n            pair2Id: rows[parseInt(column.text) - 1].pair.id,\n          });\n          if (response.ok) {\n            setIsSaved(true);\n            setTimeout(() => setIsSaved(false), 3000);\n          }\n\n          // Ricalcolo totali riga\n          let acc = 0;\n          for (let key in row) if (key.startsWith('col') && row[key]) acc += parseInt(row[key]);\n          const thisRowIndex = row.rowNumber - 1;\n          const thisRow = newRows[thisRowIndex];\n          thisRow.total = acc ? acc : 0;\n\n          //... e riga opposta\n          acc = 0;\n          const oppositeRowIndex = parseInt(column.text) - 1;\n          for (let key in newRows[oppositeRowIndex])\n            if (key.startsWith('col') && newRows[oppositeRowIndex][key])\n              acc += parseInt(newRows[oppositeRowIndex][key]);\n          const oppositeRow = newRows[oppositeRowIndex];\n          oppositeRow.total = acc ? acc : 0;\n\n          newRows.splice(thisRowIndex, 1, thisRow);\n          newRows.splice(oppositeRowIndex, 1, oppositeRow);\n        }\n        // Aggiorno posizione relativa\n        if (autoOrder)\n          [...newRows]\n            .sort((e1, e2) => comparator(e1, e2))\n            .forEach((s1Row, index) => (newRows[s1Row.rowNumber - 1]['placement'] = index + 1));\n\n        // Aggiornamento\n        setRows(newRows);\n        dispatch(\n          Stage1Action.updatePlacement.request({ rows: rows.map((e) => ({ id: e.pair.id, placement: e.placement })) })\n        );\n      },\n    });\n\n  const handleOnSelect = (row, isSelected) => {\n    const found = selectedRows.find((e) => e.rowNumber === row.rowNumber) ? true : false;\n    let selected;\n    if (isSelected) {\n      selected = found ? selectedRows : [...selectedRows, row];\n    } else {\n      selected = found ? selectedRows.filter((e) => e.rowNumber !== row.rowNumber) : selectedRows;\n    }\n\n    // console.log( 'handleOnSelect : ', isSelected, found, selectedRows, selected );\n    setSelectedRows(selected);\n    dispatch(\n      Stage1Action.updateSelectedPairs.request({\n\t\t\t\tstage1Name: stageName,\n\t\t\t\tstage1Rows: selected,\n      })\n    );\n    return true;\n  };\n\n  const handleOnSelectAll = (isSelected, s1Rows) => {\n    // console.log( 'handleOnSelectAll : ', isSelected, s1Rows );\n    setSelectedRows(isSelected ? s1Rows : []);\n    dispatch(\n      Stage1Action.updateSelectedPairs.request({\n\t\t\t\tstage1Name:stageName,\n\t\t\t\tstage1Rows: isSelected ? s1Rows : [],\n      })\n    );\n  };\n\n  const selectRow = {\n    mode: 'checkbox',\n    onSelect: handleOnSelect,\n    onSelectAll: handleOnSelectAll,\n    style: { backgroundColor: '#c8e6c9' },\n    hideSelectColumn: !isAdmin || tournament.progress >= TournamentProgress.Stage2,\n  };\n\n  console.log('Refreshing : ', toogleRefresh);\n  return isLoading ? (\n    <h3>\n      Caricamento girone <b>{stageName}</b> in corso....\n    </h3>\n  ) : (\n    <BootstrapTable\n      key={`Stege1-${stageName}`}\n      bootstrap4\n      keyField=\"id\"\n      data={rows}\n      columns={columns(pairsList)}\n      selectRow={selectRow}\n      cellEdit={cellEditProps(isAdmin && tournament.progress < TournamentProgress.Stage2)}\n      noDataIndication=\"Nessun dato reperito\"\n      headerClasses=\"default-background default-color-yellow\"\n      caption={<TableHeader title={stageName} saved={saved} />}\n      striped\n      hover\n    />\n  );\n};\n\nexport default Stage1Table;\n","// React, Router, Redux\nimport { useHistory } from 'react-router';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// Style\nimport commonStyle from '../../common.module.css';\nimport { RightArrowIcon, TrashIcon, LeftArrowIcon } from '../core/icons';\nimport { Button, Col, Row, ButtonGroup, ToggleButton } from 'react-bootstrap';\n// Actions, Selectors\nimport { Stage1Action, Stage2Action, TournamentAction } from '../../redux/actions';\nimport { AuthSelector, TournamentSelector, Stage1Selector, PairSelector } from '../../redux/selectors';\nimport Stage1Table from './table';\nimport TournamentBadge from '../Tournament/badge';\n// Models\nimport { PairDTO, TournamentProgress } from '../../@common/dto';\n\n/**\n * Wraps multiple table components\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Wrapper: React.FC = (): JSX.Element => {\n  const currentHistory = useHistory();\n  const dispatch = useDispatch();\n\n  // Session\n  const session = useSelector(AuthSelector.getSession);\n  // Torneo\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  // Sono presenti aggiornamenti\n  // const toogleRefresh = useSelector(Stage1Selector.getToogleRefresh);\n  // Pairs selected : don't want to refresh conmponent so \"... , () => true);\"\"\n  const selected = useSelector(Stage1Selector.getSelectedPairs, () => true);\n  // Lista coppie\n  const pairsList = useSelector(PairSelector.getPairsList);\n\n  function goBack() {\n    currentHistory.push(session.isAdmin ? '/tournament' : '/');\n  }\n  function goToStage2() {\n    // TODO: eseguire controlli e eventualemente mostrare messaggi utente\n\n    // Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\n    // allora aggiorno lo stato del torneo\n    if (session.isAdmin && tournament.progress < TournamentProgress.Stage2) {\n      tournament.progress = TournamentProgress.Stage2;\n      dispatch(TournamentAction.update.request({ tournament }));\n    }\n\n    let count = 8;\n    if (selected && selected.length >= 4) {\n      count = selected.length - 1;\n      while (count % 8 !== 0) count++;\n    }\n    dispatch(Stage2Action.fetchStage2.request({ tournamentId: tournament.id, count }));\n    currentHistory.push('/stage2');\n  }\n\n  function resetStage2() {\n    dispatch(Stage2Action.delete.request({ tId: tournament.id }));\n    dispatch(Stage1Action.resetPairs({}));\n  }\n\n  //console.log('Refreshing : ', toogleRefresh);\n  const toolsBar = (\n    <div className={commonStyle.toolsBarContainer}>\n      <Row className={commonStyle.toolsBarRow}>\n        <Col>\n          <Button variant=\"secondary\" onClick={goBack} className=\"float-left\">\n            <LeftArrowIcon /> Indietro\n          </Button>\n        </Col>\n        {tournament.progress > TournamentProgress.Stage1 && session.isAdmin? (\n          <Col>\n            <Button\n              variant=\"danger\"\n              onClick={resetStage2}\n              disabled={!session.isAdmin || (session.isAdmin && tournament.progress < TournamentProgress.Stage2)}\n            >\n              <TrashIcon /> Reset Fase 2\n            </Button>\n          </Col>\n        ) : null}\n        <Col>\n          <Button\n            variant=\"outline-warning\"\n             className=\"default-color-white float-right\"\n            onClick={goToStage2}\n            disabled={selected.length < 4 && tournament.progress < TournamentProgress.Stage2}\n          >\n            <b>Prosegui </b> <RightArrowIcon />\n          </Button>\n        </Col>\n      </Row>\n\t\t\t{tournament.progress <= TournamentProgress.Stage1 && session.isAdmin ? (\n      <Row>\n        <Col>\n          <ButtonGroup toggle className=\"mb-2\">\n            <ToggleButton\n              type=\"checkbox\"\n              variant={!!tournament.autoOrder ? 'success' : 'danger'}\n              checked={tournament.autoOrder}\n              value=\"1\"\n              onChange={(e) =>\n                dispatch(\n                  TournamentAction.update.request({\n                    tournament: { ...tournament, autoOrder: e.currentTarget.checked },\n                  })\n                )\n              }\n            >\n              {`Ordinamento automatico : ${!!tournament.autoOrder ? 'Attivato ' : ' Disattivato'}`}\n            </ToggleButton>\n          </ButtonGroup>\n        </Col>\n      </Row>) : null}\n    </div>\n  );\n\n  return (\n    <>\n      {toolsBar}\n      <TournamentBadge />\n      {pairsList ? renderTables(pairsList, tournament.autoOrder) : null}\n    </>\n  );\n};\n\nexport default Wrapper;\n\nfunction renderTables(pairsList: PairDTO[], autoOrder: boolean): JSX.Element[] {\n  let stageName = '';\n  let stage: PairDTO[] = [];\n  let stageList: Array<JSX.Element> = [];\n  // sort pairs by stage1Name\n  [...pairsList]\n    .sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name))\n    // FIXME: use .reduce  ?\n    .forEach((element, index) => {\n      // A rottura di stage1Name\n      if (stageName === '') stageName = element.stage1Name;\n      if (stageName !== element.stage1Name) {\n        stageList.push(<Stage1Table key={`Stage1-${stageName}`} stageName={stageName} pairsList={stage} autoOrder={autoOrder} />);\n        stageName = element.stage1Name;\n        stage = [];\n      }\n      stage.push(element);\n    });\n  if (stage.length > 0) {\n    stageList.push(<Stage1Table key={`Stage1-${stageName}`} stageName={stageName} pairsList={stage} autoOrder={autoOrder} />);\n    // console.log(`stages ${stageName} :`, stage);\n  }\n\n  return stageList;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\nimport { TournamentSelector } from '../../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Badge } from 'react-bootstrap';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface TournamentBadgeProps {}\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\n  const tournament = useSelector(TournamentSelector.getTournament)!;\n  const { t } = useTranslation(['tournament']);\n  return (\n    <Row>\n      <Col>\n        <h2 className=\"float-left\">\n          <Badge variant=\"info\">\n            <span>{t(`tournament:${tournament.public ? 'public':'private'}_tournament`)} </span>\n            <strong>\"{tournament.name.toUpperCase()}\"</strong>\n            <span>\n              <i>\n                {` - ${formatDate(tournament.date)} `}\n                <small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\n                {process.env.NODE_ENV === 'development' ? <strong>{`  --> ( ${tournament.id} )`}</strong>: null}\n              </i>\n            </span>\n          </Badge>\n        </h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TournamentBadge;\n"],"sourceRoot":""}