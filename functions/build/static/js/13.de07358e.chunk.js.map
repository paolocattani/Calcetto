{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","components/Stage1/header.component.tsx","components/Stage1/helper.ts","components/Stage1/editor.js","components/Stage1/table.component.tsx","components/Stage1/wrapper.component.tsx","common.module.css","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/Tournament/badge.component.tsx"],"names":["noop","ToggleButton","React","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_objectWithoutPropertiesLoose","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","createElement","Button","_extends","classNames","undefined","active","as","autoComplete","onFocus","onBlur","displayName","tableHeader","title","saved","divStyle","color","style","comparator","obj1","obj2","total","rowNumber","cellEditProps","editable","stageName","autoOrder","rows","setRows","updatePlacement","setIsSaved","cellEditFactory","mode","blurToSave","beforeSaveCell","oldValue","newValue","row","column","id","startsWith","parseInt","text","getOpposite","afterSaveCell","newRows","updateCellStage1","tId","pair","tournamentId","score","pair1Id","pair2Id","then","response","SuccessCodes","includes","code","setTimeout","acc","key","thisRowIndex","thisRow","oppositeRowIndex","oppositeRow","splice","sort","e1","e2","forEach","s1Row","index","map","placement","headerAlign","align","newColumn","dataField","toString","headerStyle","colIndex","width","content","rowIndex","columnIndex","backgroundColor","editor","Type","SELECT","options","label","columns","pairsList","baseColumns","ii","length","push","Stage1Table","dispatch","useDispatch","toogleRefresh","useSelector","Stage1Selector","getToogleRefresh","isAdmin","AuthSelector","tournament","TournamentSelector","getTournament","selectedRows","state","getSelectedRows","isLoading","setIsLoading","useEffect","a","fetchStage1","result","selectRow","selected","r","onSelect","isSelected","found","find","filter","Stage1Action","updateSelectedPairs","request","stage1Name","stage1Rows","onSelectAll","s1Rows","hideSelectColumn","progress","TournamentProgress","Stage2","console","log","bootstrap4","keyField","data","cellEdit","noDataIndication","headerClasses","caption","striped","hover","Wrapper","currentHistory","useHistory","session","getSession","getSelectedPairs","PairSelector","getPairsList","toolsBar","commonStyle","toolsBarContainer","Row","toolsBarRow","Col","variant","onClick","Stage1","Stage2Action","delete","resetPairs","TournamentAction","update","count","fetchStage2","ButtonGroup","toggle","currentTarget","renderTables","stage","stageList","localeCompare","element","module","exports","_assertThisInitialized","self","ReferenceError","TournamentBadge","t","useTranslation","public","toUpperCase","formatDate","date"],"mappings":"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","file":"static/js/13.de07358e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React from 'react';\n\ninterface Stage1HeaderProps {\n  title: string;\n  saved: boolean;\n}\n\nconst tableHeader: React.FC<Stage1HeaderProps> = ({ title, saved }) => {\n  const divStyle = {\n    color: saved ? '#4feb34' : undefined,\n  };\n  return (\n    <h3>\n      <b style={divStyle}>\n        Girone - <strong>{title}</strong>\n      </b>\n      {saved ? <small> - Salvataggio in corso...</small> : null}\n    </h3>\n  );\n};\n\nexport default tableHeader;\n","import { PairDTO, Stage1Row } from '../../@common/dto';\n\n/**\n *\n * @param value il valore di partenza\n * @returns il valore opposto a quello di partenze\n *\n *  3->0 , 2->1 , 1->2 , 0->3\n */\nexport function getOpposite(value: string | null) {\n\t/*\n\t * Attenzione :\n\t *  !0 = true\n\t *  !''  = true\n\t *  !null   = true\n\t *  !undefined  = true\n\t */\n\tif (value === null) return null;\n\tswitch (parseInt(value)) {\n\t\tcase 3:\n\t\t\treturn 0;\n\t\tcase 2:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn 2;\n\t\tcase 0:\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n/**\n * @param {*} obj1\n * @param {*} obj2\n */\nexport function comparator(obj1: Stage1Row, obj2: Stage1Row) {\n\t// in caso di parità valuto scontro diretto\n\tif (obj1.total === obj2.total) {\n\t\tif (obj1[`col${obj2.rowNumber}`] === 3 || obj1[`col${obj2.rowNumber}`] === 2) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn obj2.total - obj1.total;\n}\n","import cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport { getOpposite } from './helper';\nimport { updateCellStage1 } from '../../redux/services/stage1.service';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { comparator } from './helper';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const cellEditProps = (editable, stageName,autoOrder,rows,setRows,updatePlacement,setIsSaved) => cellEditFactory({\n\t\t\tmode: editable ? 'click' : 'none',\n\t\t\tblurToSave: true,\n      beforeSaveCell: (oldValue, newValue, row, column) => {\n\t\t\t\tif (column.id.startsWith('col')) {\n\t\t\t\t\t// Aggiorno cella opposta\n\t\t\t\t\trows[parseInt(column.text) - 1][`col${row.rowNumber}`] = getOpposite(newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t\tafterSaveCell: ( oldValue, newValue, row, column) => {\n\t\t\t\tconst newRows = [...rows];\n\t\t\t\tif (column.id.startsWith('col')) {\n\t\t\t\t\t// Aggiorno dati sul Db\n          updateCellStage1({\n            tId: row.pair.tournamentId,\n            stageName,\n            score: newValue,\n            pair1Id: row.pair.id,\n            pair2Id: rows[parseInt(column.text) - 1].pair.id,\n          }).then(response => {\n            if (SuccessCodes.includes(response.code)) {\n              setIsSaved(true);\n              setTimeout(() => setIsSaved(false), 3000);\n            }\n          });\n\t\t\t\t\t// Ricalcolo totali riga\n\t\t\t\t\tlet acc = 0;\n\t\t\t\t\tfor (let key in row) {\n\t\t\t\t\t\tif (key.startsWith('col') && row[key]) {\n\t\t\t\t\t\t\tacc += parseInt(row[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst thisRowIndex = row.rowNumber - 1;\n\t\t\t\t\tconst thisRow = newRows[thisRowIndex];\n\t\t\t\t\tthisRow.total = acc ? acc : 0;\n\n\t\t\t\t\t//... e riga opposta\n\t\t\t\t\tacc = 0;\n\t\t\t\t\tconst oppositeRowIndex = parseInt(column.text) - 1;\n\t\t\t\t\tfor (let key in newRows[oppositeRowIndex]) {\n\t\t\t\t\t\tif (key.startsWith('col') && newRows[oppositeRowIndex][key]) {\n\t\t\t\t\t\t\tacc += parseInt(newRows[oppositeRowIndex][key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst oppositeRow = newRows[oppositeRowIndex];\n\t\t\t\t\toppositeRow.total = acc ? acc : 0;\n\n\t\t\t\t\tnewRows.splice(thisRowIndex, 1, thisRow);\n\t\t\t\t\tnewRows.splice(oppositeRowIndex, 1, oppositeRow);\n\t\t\t\t}\n\t\t\t\t// Aggiorno posizione relativa\n        if (autoOrder) {\n          [...newRows]\n            .sort((e1, e2) => comparator(e1, e2))\n            .forEach((s1Row, index) => (newRows[s1Row.rowNumber - 1]['placement'] = index + 1));\n        }\n\t\t\t\t// Aggiornamento\n        setRows(newRows);\n        updatePlacement({ rows: rows.map((e) => ({ id: e.pair.id, placement: e.placement })) });\n\t\t\t},\n\t\t});\n\n\n\n/*\n  non esistono i tipi per react-bootstrap-table2-editor\n  quindi lascio tutto quello che riguarda l'edit come .js\n*/\n\nconst headerAlign = { headerAlign: 'center' };\nconst align = { align: 'center' };\nconst newColumn = (index, rowNumber) => {\n  return {\n    id: `col${index}`,\n    dataField: `col${index}`,\n    text: index.toString(),\n    //type: 'number',\n    headerStyle: (column, colIndex) => ({ width: `${75 / rowNumber}%` }),\n    ...headerAlign,\n    editable: (content, row, rowIndex, columnIndex) => rowIndex !== columnIndex - 2,\n    ...align,\n    style: (content, row, rowIndex, columnIndex) => {\n      if (rowIndex === columnIndex - 2) return { backgroundColor: '#343a40' };\n      if (parseInt(content, 10) === 3 || parseInt(content, 10) === 2) return { backgroundColor: 'rgb(196, 247, 160)' };\n      if (parseInt(content, 10) === 1 || parseInt(content, 10) === 0) return { backgroundColor: 'rgb(255, 147, 147)' };\n      return null;\n    },\n    /* TODO:\n    editorStyle: (cell, row, rowIndex, colIndex) => {\n      console.log('editorStyle : ', cell, row, rowIndex, colIndex);\n      return { width: '100%', height: 'auto' };\n    }, */\n    editor: {\n      type: Type.SELECT,\n      options: [\n        { value: '3', label: '3' },\n        { value: '2', label: '2' },\n        { value: '1', label: '1' },\n        { value: '0', label: '0' },\n        { value: null, label: '' },\n      ],\n    },\n  };\n};\n\nexport const columns = (pairsList) => {\n  let baseColumns = [\n    {\n      // Nome Coppia ( In realta contiene un oggetto di tipo Pair)\n      id: 'pairLabel',\n      dataField: 'pair.label',\n      text: 'Nome Coppia',\n      editable: false,\n      headerStyle: (column, colIndex) => ({ width: '15%' }),\n      ...align,\n      ...headerAlign,\n    },\n    {\n      // Numbero riga per riferimento visivo\n      id: 'rowNumber',\n      dataField: 'rowNumber',\n      text: 'ID',\n      editable: false,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n      style: (content, row, rowIndex, columnIndex) => {\n        return { backgroundColor: '#343a40', color: '#ffc107' };\n      },\n    },\n  ];\n\n  // generazione dinamica colonne intermedie\n  for (let ii = 0; ii < pairsList.length; ii++) {\n    baseColumns.push(newColumn(ii + 1, pairsList.length));\n  }\n\n  baseColumns.push(\n    {\n      // Totale coppia\n      id: 'totale',\n      dataField: 'total',\n      text: 'Totale',\n      editable: false,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n    },\n    {\n      // Posizionamento coppia\n      id: 'placement',\n      dataField: 'placement',\n      text: 'Posizione',\n      editable: true,\n      type: 'number',\n      headerStyle: (column, colIndex) => ({ width: '5%' }),\n      ...headerAlign,\n    }\n  );\n  return baseColumns;\n};\n","import React, { useState, useEffect } from 'react';\n// table\nimport BootstrapTable, { ColumnDescription, SelectRowProps } from 'react-bootstrap-table-next';\n// helper\nimport TableHeader from './header.component';\nimport { columns } from './editor';\n//\nimport { useSelector } from '../core/types';\nimport { useDispatch } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\n// style\nimport { Stage1Action } from '../../redux/actions';\nimport { TournamentSelector, Stage1Selector } from '../../redux/selectors';\nimport { PairDTO, Stage1Row, TournamentProgress } from '../../@common/dto';\nimport { fetchStage1 } from '../../redux/services/stage1.service';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { FetchStage1Response, UpdatePlacementRequest } from '../../@common/models';\nimport { comparator } from './helper';\nimport { cellEditProps } from './editor';\n\ninterface Stage1TableProps {\n\tpairsList: Array<PairDTO>;\n\tstageName: string;\n\tautoOrder: boolean;\n}\n// TODO: convert this component to ts\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Stage1Table: React.FC<Stage1TableProps> = ({ pairsList, autoOrder, stageName }) => {\n\tconst dispatch = useDispatch();\n\t// Sono presenti aggiornamenti\n\tconst toogleRefresh = useSelector(Stage1Selector.getToogleRefresh);\n\t// From store\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\tconst selectedRows = useSelector((state) => Stage1Selector.getSelectedRows(stageName, state));\n\t// State\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [saved, setIsSaved] = useState(false);\n\tconst [rows, setRows] = useState<Array<Stage1Row>>([]);\n\n\t// Effects\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\tconst response = await fetchStage1({ pairsList, stageName });\n\t\t\t\tif (SuccessCodes.includes(response.code)) {\n\t\t\t\t\tconst result = response as FetchStage1Response;\n\t\t\t\t\tif (!!autoOrder)\n\t\t\t\t\t\t[...result.rows]\n\t\t\t\t\t\t\t.sort((e1, e2) => comparator(e1, e2))\n\t\t\t\t\t\t\t.forEach((row, index) => (result.rows[row.rowNumber - 1]['placement'] = index + 1));\n\t\t\t\t\tsetRows(result.rows);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t})();\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[pairsList, toogleRefresh]\n\t);\n\n\tconst selectRow: SelectRowProps<Stage1Row> = {\n\t\tmode: 'checkbox',\n\t\tselected: selectedRows.map((r) => r.id),\n\t\tonSelect: (row, isSelected) => {\n\t\t\tconst found = selectedRows.find((e) => e.rowNumber === row.rowNumber) ? true : false;\n\t\t\tlet selected: Array<Stage1Row>;\n\t\t\tif (isSelected) {\n\t\t\t\tselected = found ? selectedRows : [...selectedRows, row];\n\t\t\t} else {\n\t\t\t\tselected = found ? selectedRows.filter((e) => e.rowNumber !== row.rowNumber) : selectedRows;\n\t\t\t}\n\t\t\tdispatch(\n\t\t\t\tStage1Action.updateSelectedPairs.request({\n\t\t\t\t\tstage1Name: stageName,\n\t\t\t\t\tstage1Rows: selected,\n\t\t\t\t\ttournamentId: tournament.id,\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn true;\n\t\t},\n\t\tonSelectAll: (isSelected, s1Rows) => {\n\t\t\t// console.log( 'handleOnSelectAll : ', isSelected, s1Rows );\n\t\t\tdispatch(\n\t\t\t\tStage1Action.updateSelectedPairs.request({\n\t\t\t\t\tstage1Name: stageName,\n\t\t\t\t\tstage1Rows: isSelected ? s1Rows : [],\n\t\t\t\t\ttournamentId: tournament.id,\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\tstyle: { backgroundColor: '#c8e6c9' },\n\t\thideSelectColumn: !isAdmin || tournament.progress >= TournamentProgress.Stage2,\n\t};\n\n\tconsole.log('Refreshing : ', toogleRefresh);\n\treturn isLoading ? (\n\t\t<h3>\n\t\t\tCaricamento girone <b>{stageName}</b> in corso....\n\t\t</h3>\n\t) : (\n\t\t<BootstrapTable\n\t\t\tkey={`Stege1-${stageName}`}\n\t\t\tbootstrap4\n\t\t\tkeyField=\"id\"\n\t\t\tdata={rows}\n\t\t\tcolumns={columns(pairsList) as ColumnDescription<Stage1Row, Stage1Row>[]}\n\t\t\tselectRow={selectRow}\n\t\t\tcellEdit={cellEditProps(\n\t\t\t\tisAdmin && tournament.progress < TournamentProgress.Stage2,\n\t\t\t\tstageName,\n\t\t\t\tautoOrder,\n\t\t\t\trows,\n\t\t\t\tsetRows,\n\t\t\t\t(request: UpdatePlacementRequest) => dispatch(Stage1Action.updatePlacement.request(request)),\n\t\t\t\tsetIsSaved\n\t\t\t)}\n\t\t\tnoDataIndication=\"Nessun dato reperito\"\n\t\t\theaderClasses=\"default-background default-color-yellow\"\n\t\t\tcaption={<TableHeader title={stageName} saved={saved} />}\n\t\t\tstriped\n\t\t\thover\n\t\t/>\n\t);\n};\n\nexport default Stage1Table;\n","// React, Router, Redux\nimport { useHistory } from 'react-router';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n// Style\nimport commonStyle from '../../common.module.css';\nimport { RightArrowIcon, TrashIcon, LeftArrowIcon } from '../core/icons';\nimport { Button, Col, Row, ButtonGroup, ToggleButton } from 'react-bootstrap';\n// Actions, Selectors\nimport { Stage1Action, Stage2Action, TournamentAction } from '../../redux/actions';\nimport { AuthSelector, TournamentSelector, Stage1Selector, PairSelector } from '../../redux/selectors';\nimport Stage1Table from './table.component';\nimport TournamentBadge from '../Tournament/badge.component';\n// Models\nimport { PairDTO, TournamentProgress } from '../../@common/dto';\nimport { useSelector } from '../core/types';\n\n/**\n * Wraps multiple table components\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Wrapper: React.FC = (): JSX.Element => {\n\tconst currentHistory = useHistory();\n\tconst dispatch = useDispatch();\n\n\t// Session\n\tconst session = useSelector(AuthSelector.getSession);\n\t// Torneo\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\t// Sono presenti aggiornamenti\n\t// const toogleRefresh = useSelector(Stage1Selector.getToogleRefresh);\n\t// Pairs selected : don't want to refresh conmponent so \"... , () => true);\"\"\n\tconst selected = useSelector(Stage1Selector.getSelectedPairs);\n\t// Lista coppie\n\tconst pairsList = useSelector(PairSelector.getPairsList);\n\n\tfunction goBack() {\n\t\tcurrentHistory.push(session.isAdmin ? '/tournament' : '/');\n\t}\n\tfunction goToStage2() {\n\t\t// TODO: eseguire controlli e eventualemente mostrare messaggi utente\n\n\t\t// Se sono un utente che puo modificare e il torneo è in una fase minore ( vedi ordinamento Enum ) di quella attuale\n\t\t// allora aggiorno lo stato del torneo\n\t\tif (session.isAdmin && tournament.progress < TournamentProgress.Stage2) {\n\t\t\ttournament.progress = TournamentProgress.Stage2;\n\t\t\tdispatch(TournamentAction.update.request({ tournament }));\n\t\t}\n\n\t\tlet count = 8;\n\t\tif (selected && selected.length >= 4) {\n\t\t\tcount = selected.length - 1;\n\t\t\twhile (count % 8 !== 0) count++;\n\t\t}\n\t\tdispatch(Stage2Action.fetchStage2.request({ tournamentId: tournament.id, count }));\n\t\tcurrentHistory.push('/stage2');\n\t}\n\n\tfunction resetStage2() {\n\t\tdispatch(Stage2Action.delete.request({ tId: tournament.id }));\n\t\tdispatch(Stage1Action.resetPairs({}));\n\t}\n\n\tconsole.log('selected : ', selected);\n\tconst toolsBar = (\n\t\t<div className={commonStyle.toolsBarContainer}>\n\t\t\t<Row className={commonStyle.toolsBarRow}>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={goBack} className=\"float-left\">\n\t\t\t\t\t\t<LeftArrowIcon /> Indietro\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t{tournament.progress > TournamentProgress.Stage1 && session.isAdmin ? (\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\t\tonClick={resetStage2}\n\t\t\t\t\t\t\tdisabled={!session.isAdmin || (session.isAdmin && tournament.progress < TournamentProgress.Stage2)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TrashIcon /> Reset Fase 2\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t) : null}\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-warning\"\n\t\t\t\t\t\tclassName=\"default-color-white float-right\"\n\t\t\t\t\t\tonClick={goToStage2}\n\t\t\t\t\t\tdisabled={selected.length < 4 && tournament.progress < TournamentProgress.Stage2}\n\t\t\t\t\t>\n\t\t\t\t\t\t<b>Prosegui </b> <RightArrowIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{tournament.progress <= TournamentProgress.Stage1 && session.isAdmin ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonGroup toggle className=\"mb-2\">\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tvariant={!!tournament.autoOrder ? 'success' : 'danger'}\n\t\t\t\t\t\t\t\tchecked={tournament.autoOrder}\n\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\tTournamentAction.update.request({\n\t\t\t\t\t\t\t\t\t\t\ttournament: { ...tournament, autoOrder: e.currentTarget.checked },\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{`Ordinamento automatico : ${!!tournament.autoOrder ? 'Attivato ' : ' Disattivato'}`}\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t) : null}\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{toolsBar}\n\t\t\t<TournamentBadge />\n\t\t\t{pairsList ? renderTables(pairsList, tournament.autoOrder) : null}\n\t\t</>\n\t);\n};\n\nexport default Wrapper;\n\nfunction renderTables(pairsList: PairDTO[], autoOrder: boolean): JSX.Element[] {\n\tlet stageName = '';\n\tlet stage: Array<PairDTO> = [];\n\tlet stageList: Array<JSX.Element> = [];\n\t// sort pairs by stage1Name\n\t[...pairsList]\n\t\t.sort((obj1, obj2) => obj1.stage1Name.localeCompare(obj2.stage1Name))\n\t\t// FIXME: use .reduce  ?\n\t\t.forEach((element, index) => {\n\t\t\t// A rottura di stage1Name\n\t\t\tif (stageName === '') stageName = element.stage1Name;\n\t\t\tif (stageName !== element.stage1Name) {\n\t\t\t\tstageList.push(\n\t\t\t\t\t<Stage1Table key={`Stage1-${stageName}`} stageName={stageName} pairsList={stage} autoOrder={autoOrder} />\n\t\t\t\t);\n\t\t\t\tstageName = element.stage1Name;\n\t\t\t\tstage = [];\n\t\t\t}\n\t\t\tstage.push(element);\n\t\t});\n\tif (stage.length > 0) {\n\t\tstageList.push(\n\t\t\t<Stage1Table key={`Stage1-${stageName}`} stageName={stageName} pairsList={stage} autoOrder={autoOrder} />\n\t\t);\n\t\t// console.log(`stages ${stageName} :`, stage);\n\t}\n\n\treturn stageList;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\nimport { TournamentSelector } from '../../redux/selectors';\nimport { useSelector } from '../core/types';\nimport { Row, Col, Badge } from 'react-bootstrap';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface TournamentBadgeProps {}\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\tconst { t } = useTranslation(['tournament']);\n\treturn (\n\t\t<Row>\n\t\t\t<Col>\n\t\t\t\t<h2 className=\"float-left\">\n\t\t\t\t\t<Badge variant=\"info\">\n\t\t\t\t\t\t<span>{t(`tournament:${tournament.public ? 'public' : 'private'}_tournament`)} </span>\n\t\t\t\t\t\t<strong>\"{tournament.name.toUpperCase()}\"</strong>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t{` - ${formatDate(tournament.date)} `}\n\t\t\t\t\t\t\t\t<small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\n\t\t\t\t\t\t\t\t{process.env.NODE_ENV === 'development' ? <strong>{`  --> ( ${tournament.id} )`}</strong> : null}\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Badge>\n\t\t\t\t</h2>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default TournamentBadge;\n"],"sourceRoot":""}