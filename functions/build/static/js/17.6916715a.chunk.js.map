{"version":3,"sources":["components/Tournament/helper.tsx","components/Tournament/new.component.tsx","components/Tournament/select.component.tsx","components/Tournament/stats.component.tsx","components/Tournament/wrapper.component.tsx","@common/constants/label.ts","test/commons.ts"],"names":["getLabel","player","alias","name","surname","getEmptyTournament","id","ownerId","date","Date","progress","TournamentProgress","New","public","autoOrder","label","IndicatorSeparator","innerProps","style","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","marginRight","width","cardStyle","margin","borderColor","borderWidth","textAlign","NewTournament","currentHistory","useHistory","dispatch","useDispatch","t","useTranslation","useState","setName","setDate","visible","setVisible","handleSubmit","evt","a","preventDefault","toast","error","tournament","TournamentAction","save","request","history","Form","onSubmit","Row","Col","md","Group","controlId","Label","Control","data-cy","type","required","placeholder","maxLength","value","onChange","event","currentTarget","as","highlightDates","locale","selected","dateFormat","newValue","Button","disabled","size","variant","className","fontSize","fontWeight","customStyles","option","provided","color","control","height","singleValue","valueContainer","alignItems","justifyContent","SelectTournament","isAdmin","useSelector","AuthSelector","TournamentSelector","getTournament","PairAction","reset","Stage1Action","Stage2Action","push","console","log","fetch","tId","htmlFor","LABEL_TOURNAMENT_SELECT","aria-label","components","styles","options","tournamentsList","isSearchable","getOptionLabel","formatDate","isClearable","setTournament","padding","StatsSummary","loaded","setLoaded","stats","setStats","index","setIndex","useEffect","fetchStatsSummary","players","pairs","getStats","pairStats","key","span","offset","filter","v","i","length","sort","p1","p2","roundNumber","totwin","totMatch","map","p","ii","float","player1","player2","Carousel","touch","activeIndex","onSelect","selectedIndex","prevIcon","nextIcon","Object","keys","s1","s2","Item","opacity","interval","FTournament","getTournamentsList","newTournament","setNewTournament","sm","Card","Header","Body","Footer","onClick","LABEL_AUTH_PASSWORD","LABEL_COMMON_LOADING","Stage2","UserRole","Admin","User"],"mappings":"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","file":"static/js/17.6916715a.chunk.js","sourcesContent":["import { PlayerDTO, TournamentDTO, TournamentProgress } from '../../@common/dto';\nimport React, { CSSProperties } from 'react';\n\nexport const getLabel = (player: PlayerDTO) => (player.alias ? player.alias : `${player.name} ${player.surname}`);\n\nexport function getEmptyTournament(name: string): TournamentDTO {\n\treturn {\n\t\tid: 0,\n\t\tname: name || '',\n\t\townerId: 0,\n\t\tdate: new Date(),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: true,\n\t\tlabel: name || '',\n\t};\n}\n\n// -------------------------------------------------\n// https://react-select.com/components#components\n// Indicator Separator\n\nexport const IndicatorSeparator = ({ innerProps }: any) => <span style={indicatorSeparatorStyle} {...innerProps} />;\nexport const indicatorSeparatorStyle: CSSProperties = {\n\talignSelf: 'stretch',\n\tbackgroundColor: 'green',\n\tmarginBottom: 8,\n\tmarginTop: 8,\n\tmarginRight: 10,\n\twidth: 1,\n};\nexport const cardStyle: CSSProperties = {\n\twidth: '100%',\n\tmargin: 'auto',\n\tbackgroundColor: 'inherit',\n\tborderColor: '#ffc107',\n\tborderWidth: '3px',\n\ttextAlign: 'left',\n};\n/*\nconst formatNewLabel = inputString => (\n  <strong>\n    {inputString}\n    <small style={{ color: '#ccc' }}>@ New</small>\n  </strong>\n);\n\nconst formatOptionLabel = ({ name, progress, innerProps }) => (\n  <strong>\n    {name}\n    <small style={{ color: '#ccc' }}>@{progress}</small>\n  </strong>\n);\n\n*/\n","import React, { useState } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\n\n// Date picker\nimport DatePicker from 'react-datepicker';\nimport { getEmptyTournament } from './helper';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { TournamentAction } from '../../redux/actions/tournament.action';\nimport { toast } from 'react-toastify';\nimport { FormEventType } from '../core/types';\nimport { useTranslation } from 'react-i18next';\n\ninterface NewTournamentProps {}\n\nconst NewTournament: React.FC<NewTournamentProps> = () => {\n  const currentHistory = useHistory();\n  const dispatch = useDispatch();\n  const { t } = useTranslation(['common', 'tournament']);\n\n  const [name, setName] = useState<string>('');\n  const [date, setDate] = useState<Date>(new Date());\n  const [visible, setVisible] = useState<boolean>(true);\n\n  const handleSubmit = async (evt: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    evt.preventDefault();\n    if (!name) {\n      toast.error(t('tournament:error.name'));\n      return;\n    }\n\n    const tournament = getEmptyTournament(name);\n    tournament.date = date;\n    tournament.public = visible;\n    dispatch(TournamentAction.save.request({ tournament, history: currentHistory }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Row>\n        <Col md={6}>\n          {/* FIXME: use <Input /> element */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>{t('tournament:name')}</Form.Label>\n            <Form.Control\n\t\t\t\t\t\t\tdata-cy=\"new-name\"\n              type=\"text\"\n              required\n              placeholder={t('tournament:name')}\n              maxLength={30}\n              value={name}\n              onChange={(event: React.FormEvent<FormEventType>) => setName(event.currentTarget.value)}\n            />\n          </Form.Group>\n        </Col>\n        <Col md={3}>\n          <Form.Group>\n            <Form.Label>{t('tournament:date')}</Form.Label>\n            <Form.Control\n\t\t\t\t\t\t\tdata-cy=\"new-date\"\n              as={() => (\n                <DatePicker\n                  highlightDates={[new Date()]}\n                  locale=\"it\"\n                  selected={date}\n                  dateFormat=\"dd/MM/yyyy\"\n                  onChange={(newValue) => setDate(newValue ? newValue : new Date())}\n                />\n              )}\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n\n        <Col md={3}>\n          <Form.Group controlId=\"visible\">\n            <Form.Label>{t('tournament:visibility')} </Form.Label>\n            <Form.Control as=\"select\" onChange={() => setVisible(!visible)} data-cy=\"new-visibility\">\n              <option>{t('tournament:public')}</option>\n              <option>{t('tournament:private')}</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Button\n\t\t\t\t\t\t\tdisabled={!name}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\tvariant=\"outline-warning\"\n\t\t\t\t\t\t\tdata-cy=\"new-submit\"\n\t\t\t\t\t\t\tclassName=\"float-right default-color-white\">\n            <span style={{ fontSize: 'larger', fontWeight: 'bolder' }}>{t('common:continue')}</span>\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default NewTournament;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Select, { Styles } from 'react-select';\nimport { toast } from 'react-toastify';\nimport { LABEL_TOURNAMENT_SELECT } from '../../@common/constants/label';\nimport { TournamentDTO } from '../../@common/dto';\nimport { formatDate } from '../../@common/utils';\nimport { PairAction, Stage1Action, Stage2Action, TournamentAction } from 'src/redux/actions';\nimport { AuthSelector, TournamentSelector } from '../../redux/selectors';\nimport { tournamentsList } from '../../test/commons';\nimport { RightArrowIcon } from '../core/icons';\nimport { IndicatorSeparator } from './helper';\nimport { useTranslation } from 'react-i18next';\n\ninterface SelectTournamentProps {}\n\nconst SelectTournament: React.FC<SelectTournamentProps> = () => {\n\tconst dispatch = useDispatch();\n\tconst currentHistory = useHistory();\n\tconst { t } = useTranslation(['common', 'tournament']);\n\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\tconst tournament = useSelector(TournamentSelector.getTournament);\n\n\tconst handleSubmit = async (event: React.FormEvent<HTMLElement>): Promise<void> => {\n\t\tevent.preventDefault();\n\t\tif (tournament) {\n\t\t\tif (isAdmin) {\n\t\t\t\t// Reset all\n\t\t\t\tdispatch(PairAction.reset({}));\n\t\t\t\tdispatch(Stage1Action.reset({}));\n\t\t\t\tdispatch(Stage2Action.reset({}));\n\t\t\t\tdispatch(PairAction.reset({}));\n\t\t\t\tcurrentHistory.push('/tournament');\n\t\t\t} else {\n\t\t\t\tconsole.log('Fetching pairs for tournament : ', tournament.id);\n\t\t\t\tdispatch(PairAction.fetch.request({ tId: tournament.id, history: currentHistory }));\n\t\t\t}\n\t\t} else toast.error(t('common:error.generic'));\n\t};\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<label htmlFor=\"tournamentSelect\">{t(LABEL_TOURNAMENT_SELECT)}</label>\n\t\t\t<Select\n\t\t\t\tid=\"tournamentSelect\"\n\t\t\t\taria-label={t(LABEL_TOURNAMENT_SELECT)}\n\t\t\t\tcomponents={{ IndicatorSeparator }}\n\t\t\t\tstyles={customStyles}\n\t\t\t\tvalue={tournament}\n\t\t\t\toptions={tournamentsList}\n\t\t\t\tplaceholder={t('tournament:search')}\n\t\t\t\tisSearchable\n\t\t\t\tgetOptionLabel={({ name, date, progress }) =>\n\t\t\t\t\t`${name} - ${formatDate(date)} @ ${t(`tournament:progress.${progress}`)}`\n\t\t\t\t}\n\t\t\t\tisClearable\n\t\t\t\tonChange={(selected) => dispatch(TournamentAction.setTournament(selected as TournamentDTO))}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdata-cy=\"select-submit\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\tsize=\"lg\"\n\t\t\t\tvariant=\"outline-warning\"\n\t\t\t\tclassName=\"float-right default-color-white\"\n\t\t\t\tdisabled={!tournament}\n\t\t\t>\n\t\t\t\t<span style={{ fontSize: 'larger', fontWeight: 'bolder', padding: '1vw' }}>{t('continue')}</span>\n\t\t\t\t<RightArrowIcon size=\"lg\" />\n\t\t\t</Button>\n\t\t</Form>\n\t);\n};\n\nconst customStyles: Partial<Styles> | undefined = {\n\t// menuList: (provided, state) => ({ ...provided, border: '1px solid #ffc107' }),\n\toption: (provided) => ({\n\t\t...provided,\n\t\tbackgroundColor: 'white',\n\t\tcolor: 'black',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#64bd9c',\n\t\t\tcolor: 'white',\n\t\t},\n\t}),\n\tcontrol: (provided) => ({ ...provided, height: '3vmin', marginBottom: '40px' }),\n\tsingleValue: (provided) => ({ ...provided }),\n\n\tvalueContainer: (provided) => ({\n\t\t...provided,\n\t\theight: '100%',\n\t\tfontSize: 'larger',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t\t'&:active': {\n\t\t\theight: '100%',\n\t\t\tfontSize: 'larger',\n\t\t\tjustifyContent: 'flex-start',\n\t\t\talignItems: 'center',\n\t\t},\n\t}),\n};\n\nexport default SelectTournament;\n","import React, { useEffect, useState } from 'react';\nimport { Carousel, Col, Row } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { StatsPairDTO, StatsPlayerDTO } from 'src/@common/dto';\nimport { OmitGeneric, StatsSummaryResponse } from 'src/@common/models';\nimport { roundNumber } from 'src/@common/utils';\nimport { fetchStatsSummary } from 'src/redux/services/stats.service';\nimport { LeftAngleIcon, RightAngleIcon } from '../core/icons';\nimport { getLabel } from './helper';\n\ninterface StatsSummaryProps {}\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst StatsSummary: React.FC<StatsSummaryProps> = () => {\n\tconst MAX_RESULT = 4;\n\tconst { t } = useTranslation(['stats']);\n\tconst [loaded, setLoaded] = useState<boolean>(false);\n\tconst [stats, setStats] = useState<OmitGeneric<StatsSummaryResponse>>();\n\tconst [index, setIndex] = useState(0);\n\tconst handleSelect = (selectedIndex: number, event: Record<string, unknown> | null) => {\n\t\tsetIndex(selectedIndex);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!loaded) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { players, pairs } = (await fetchStatsSummary({})) as StatsSummaryResponse;\n\t\t\t\t\tsetStats({ players, pairs });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log('Error');\n\t\t\t\t} finally {\n\t\t\t\t\tsetLoaded(true);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}, [loaded]);\n\n\t// https://www.w3schools.com/howto/howto_css_user_rating.asp\n\tconst getStats = (pairStats: Array<StatsPairDTO | StatsPlayerDTO>, key: string, type: string) =>\n\t\tpairStats ? (\n\t\t\t<>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={{ span: 2, offset: 2 }} style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t{t(`stats:${type}`)}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md=\"4\" style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t{t('stats:win_percentage')} ( {t(`stats:${key}`)} )\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{pairStats\n\t\t\t\t\t// just pick the first MAX_RESULT stats\n\t\t\t\t\t.filter((v, i) => (pairStats.length >= MAX_RESULT ? i < MAX_RESULT : i > -1))\n\t\t\t\t\t// Sort by winnnings percentage\n\t\t\t\t\t.sort(\n\t\t\t\t\t\t(p1, p2) =>\n\t\t\t\t\t\t\troundNumber((p2.totwin / p2.totMatch) * 100, 1) - roundNumber((p1.totwin / p1.totMatch) * 100, 1)\n\t\t\t\t\t)\n\t\t\t\t\t.map((p, ii) => (\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{/* 1st col : Pair/Player name */}\n\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\tmd={{ span: 2, offset: 2 }}\n\t\t\t\t\t\t\t\tstyle={{ textAlign: 'right', float: 'left', width: '15%', marginTop: '10px', fontSize: 'large' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t{type === 'pairs'\n\t\t\t\t\t\t\t\t\t\t\t? `${getLabel((p as StatsPairDTO).player1)} - ${getLabel((p as StatsPairDTO).player2)}`\n\t\t\t\t\t\t\t\t\t\t\t: getLabel((p as StatsPlayerDTO).player)}\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t{/* 2nd col : winnings percentage ( rappresentation ) */}\n\t\t\t\t\t\t\t<Col md=\"4\" style={{ marginTop: '10px', float: 'left', width: '70%' }}>\n\t\t\t\t\t\t\t\t<div style={{ width: '100%', backgroundColor: '#f1f1f1', textAlign: 'center', color: 'white' }}>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\twidth: `${roundNumber((p.totwin / p.totMatch) * 100, 1)}%`,\n\t\t\t\t\t\t\t\t\t\t\theight: '18px',\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#ffc107',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t{/* 3rd col : winnings percentage ( number ) */}\n\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\tmd={{ span: 2 }}\n\t\t\t\t\t\t\t\tstyle={{ textAlign: 'left', float: 'left', width: '15%', marginTop: '10px', fontSize: 'large' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{roundNumber((p.totwin / p.totMatch) * 100, 1)}%\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\t\t\t</>\n\t\t) : null;\n\n\treturn stats && (stats.pairs || stats.players) ? (\n\t\t<Carousel\n\t\t\ttouch\n\t\t\tactiveIndex={index}\n\t\t\tonSelect={handleSelect}\n\t\t\tclassName=\"mt-3\"\n\t\t\tprevIcon={<LeftAngleIcon size=\"3x\" color=\"#343a40\" />}\n\t\t\tnextIcon={<RightAngleIcon size=\"3x\" color=\"#343a40\" />}\n\t\t>\n\t\t\t{Object.keys(stats).map((type, ii) => {\n\t\t\t\tconst s1 = stats[type as 'pairs' | 'players'];\n\t\t\t\treturn Object.keys(s1).map((key) => {\n\t\t\t\t\tconst s2 = s1[key as 'ever' | 'month' | 'week'];\n\t\t\t\t\treturn s2.length > 0 ? (\n\t\t\t\t\t\t<Carousel.Item style={{ opacity: 1 }} className=\"mb-5\" key={`${key}-${ii * 18}`} interval={5000}>\n\t\t\t\t\t\t\t{getStats(s2, key, type)}\n\t\t\t\t\t\t</Carousel.Item>\n\t\t\t\t\t) : null;\n\t\t\t\t});\n\t\t\t})}\n\t\t</Carousel>\n\t) : null;\n};\n\nexport default StatsSummary;\n","import React, { useState } from 'react';\n// Bootstrap\nimport { Button, Card, Col, Row } from 'react-bootstrap';\n// Helper\nimport { cardStyle } from './helper';\nimport NewTournament from './new.component';\nimport SelectTournament from './select.component';\n\nimport { useSelector } from '../core/types';\nimport { useDispatch } from 'react-redux';\nimport { TournamentSelector } from '../../redux/selectors/tournament.selector';\nimport { TournamentAction } from '../../redux/actions';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\nimport { useTranslation } from 'react-i18next';\nimport { LABEL_TOURNAMENT_SELECT } from '../../@common/constants/label';\nimport StatsSummary from './stats.component';\n\nconst FTournament: React.FC = () => {\n\t// Redux\n\tconst dispatch = useDispatch();\n\tconst { t } = useTranslation(['common', 'tournament']);\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\t// Tournament list from Db\n\tconst tournamentsList = useSelector(TournamentSelector.getTournamentsList);\n\n\t// State definition\n\tconst [newTournament, setNewTournament] = useState(false);\n\n\tconst onNewTournament = (value: React.SetStateAction<boolean>) => {\n\t\tdispatch(TournamentAction.setTournament(null));\n\t\tsetNewTournament(value);\n\t};\n\n\tconst cardBody = () => {\n\t\t// Nessun torneo presente\n\t\tif ((!tournamentsList || tournamentsList.length === 0) && !isAdmin) {\n\t\t\treturn (\n\t\t\t\t<p className=\"text-white text-justify font-italic lead\">\n\t\t\t\t\t<strong> {t('tournament:error.none')}</strong>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t\treturn isAdmin && newTournament ? <NewTournament /> : <SelectTournament />;\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Col md={{ span: '6', offset: '3' }} sm=\"12\">\n\t\t\t\t\t<Card style={cardStyle} data-cy=\"tournament-form\">\n\t\t\t\t\t\t<Card.Header as=\"h2\">{t('tournament:tournament')}</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Col>{cardBody()}</Col>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t{isAdmin ? (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tdata-cy={newTournament ? 'select-tournament' : 'new-tournament'}\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\n\t\t\t\t\t\t\t\t\tclassName=\"float-left default-color-white\"\n\t\t\t\t\t\t\t\t\tonClick={() => onNewTournament(!newTournament)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{t(newTournament ? LABEL_TOURNAMENT_SELECT : 'tournament:new')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"mt-2\">\n\t\t\t\t<Col>\n\t\t\t\t\t<StatsSummary />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default FTournament;\n","// Auth\nexport const LABEL_AUTH_PASSWORD = 'auth:password.password';\n\n// Common\nexport const LABEL_COMMON_LOADING = 'common:loading';\n\n// Tournament\nexport const LABEL_TOURNAMENT_SELECT = 'tournament:select';\n","import { TournamentProgress, UserRole } from '../@common/dto';\nimport { RootState, initialState } from '../@common/models';\n\nexport const performAdminLogin = (): RootState => {\n\tinitialState.authState = adminSession;\n\tinitialState.tournamentState = {\n\t\t...initialState.tournamentState,\n\t\ttournament,\n\t\ttournamentsList,\n\t};\n\treturn initialState;\n};\n\nexport const performUserLogin = (): RootState => {\n\tinitialState.authState = userSession;\n\tinitialState.tournamentState = {\n\t\t...initialState.tournamentState,\n\t\ttournament,\n\t\ttournamentsList,\n\t};\n\treturn initialState;\n};\n\nexport const tournamentsList = [\n\t{\n\t\tid: 12,\n\t\tname: 'hFarm2',\n\t\tdate: new Date('2020-09-05T08:53:36.000Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: true,\n\t\tlabel: 'hFarm2 @ New',\n\t\townerId: 1,\n\t},\n\t{\n\t\tid: 10,\n\t\tname: '10',\n\t\tdate: new Date('2020-08-26T13:43:08.795Z'),\n\t\tprogress: TournamentProgress.Stage2,\n\t\tpublic: true,\n\t\tautoOrder: true,\n\t\tlabel: '10 @ Stage2',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 9,\n\t\tname: '9',\n\t\tdate: new Date('2020-08-26T13:43:08.789Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '9 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 8,\n\t\tname: '8',\n\t\tdate: new Date('2020-08-26T13:43:08.785Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '8 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 7,\n\t\tname: '7',\n\t\tdate: new Date('2020-08-26T13:43:08.780Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '7 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 6,\n\t\tname: '6',\n\t\tdate: new Date('2020-08-26T13:43:08.776Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '6 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 5,\n\t\tname: '5',\n\t\tdate: new Date('2020-08-26T13:43:08.770Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '5 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 4,\n\t\tname: '4',\n\t\tdate: new Date('2020-08-26T13:43:08.766Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '4 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 3,\n\t\tname: '3',\n\t\tdate: new Date('2020-08-26T13:43:08.759Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '3 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 2,\n\t\tname: '2',\n\t\tdate: new Date('2020-08-26T13:43:08.750Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '2 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 1,\n\t\tname: '1',\n\t\tdate: new Date('2020-08-26T13:43:08.703Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: false,\n\t\tlabel: '1 @ New',\n\t\townerId: 0,\n\t},\n\t{\n\t\tid: 11,\n\t\tname: 'hFarm',\n\t\tdate: new Date('2020-08-20T08:49:50.000Z'),\n\t\tprogress: TournamentProgress.New,\n\t\tpublic: true,\n\t\tautoOrder: true,\n\t\tlabel: 'hFarm @ New',\n\t\townerId: 1,\n\t},\n];\n\nexport const tournament = {\n\tid: 12,\n\tname: 'hFarm2',\n\tdate: new Date('2020-09-05T08:53:36.000Z'),\n\tprogress: TournamentProgress.New,\n\tpublic: true,\n\tautoOrder: true,\n\tlabel: 'hFarm2 @ New',\n\townerId: 1,\n};\n\nexport const adminSession = {\n\tuser: {\n\t\tid: 1,\n\t\tusername: 'Admin',\n\t\tname: 'Admin',\n\t\tsurname: 'Admin',\n\t\temail: 'admin@admin.it',\n\t\tphone: '3472545771',\n\t\tbirthday: new Date('2020-08-26T14:00:27.743Z'),\n\t\tlabel: 'Admin Admin',\n\t\trole: UserRole.Admin,\n\t},\n\tisAuthenticated: true,\n\tisAdmin: true,\n\tisLoading: false,\n};\n\nexport const userSession = {\n\tuser: {\n\t\tid: 1,\n\t\tusername: 'User',\n\t\tname: 'User',\n\t\tsurname: 'User',\n\t\temail: 'user@user.it',\n\t\tphone: '3472545770',\n\t\tbirthday: new Date('2020-08-26T14:00:27.743Z'),\n\t\tlabel: 'User user',\n\t\trole: UserRole.User,\n\t},\n\tisAuthenticated: true,\n\tisAdmin: false,\n\tisLoading: false,\n};\n"],"sourceRoot":""}