{"version":3,"sources":["components/Player/helper.js","components/core/generic/TableHeader.tsx","components/Player/toolsbar.component.tsx","components/Player/expand.manager.tsx","components/Player/table.component.tsx","@common/constants/label.ts","common.module.css","components/Stats/table.component.tsx"],"names":["nameFilter","surnameFilter","aliasFilter","roleFilter","emailFilter","phoneFilter","filterFactory","filterTableFactory","playerColumns","isAdmin","labels","addEdit","dataField","text","editable","headerStyle","column","colIndex","width","name","autoSelectText","filter","textFilter","placeholder","getFilter","surname","alias","role","selectFilter","options","PlayerRole","GoalKeeper","goalKeeper","Striker","striker","Master","master","editor","type","Type","SELECT","getOptions","value","label","email","hidden","phone","isDummyField","formatter","cell","row","Button","variant","onClick","Header","title","saved","divStyle","color","undefined","t","useTranslation","style","Toolsbar","selectedLength","goBack","deleteRow","useSelector","AuthSelector","Row","Col","className","commonStyle","toolsBarContainer","toolsBar","clearAllFilter","disabled","expandManager","stats","setStats","expandedRows","setExpandedRows","isLoading","setIsLoading","expandByColumnOnly","showExpandColumn","expanded","expandHeaderColumnRenderer","isAnyExpands","size","expandColumnRenderer","renderer","id","i18next","LABEL_COMMON_LOADING","onExpand","isExpand","rowIndex","e","fetchPlayerStats","players","then","result","SuccessCodes","includes","code","statistics","ex","x","onExpandAll","isExpandAll","rows","ids","r","map","withRouter","dispatch","useDispatch","currentHistory","useHistory","isLoadingStore","PlayerSelector","useState","playersList","getPlayersList","isSaving","selectedRows","setSelectedRows","useEffect","PlayerAction","fetchPlayers","request","handleOnSelect","isSelected","found","find","selectRow","mode","nonSelectable","onSelect","onSelectAll","forEach","backgroundColor","hideSelectAll","hideSelectColumn","selectColumnStyle","checked","rowKey","player","getEmptyPlayer","console","log","setPlayer","push","fieldLabels","edit","show","message","length","deletePlayers","bootstrap4","keyField","data","columns","expandRow","caption","TableHeader","headerClasses","noDataIndication","striped","hover","LABEL_AUTH_PASSWORD","LABEL_TOURNAMENT_SELECT","module","exports","StatsComponent","stage1","stage2","tot","darkBackGround","bordered","s1win","s2win","totwin","winS1Percentage","winS2Percentage","winPercentage","s1def","s2def","totdef","defS1Percentage","defS2Percentage","defPercentage","totS1","totS2","totMatch","ratioS1","ratioS2","ratioTot"],"mappings":"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","file":"static/js/15.a0d666f5.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport filterTableFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport { PlayerRole } from '../../@common/dto';\nimport { EditIcon } from '../core/icons';\n// Filter\nlet nameFilter;\nlet surnameFilter;\nlet aliasFilter;\nlet roleFilter;\nlet emailFilter;\nlet phoneFilter;\n\nexport function clearAllFilter(isAdmin) {\n  nameFilter('');\n  surnameFilter('');\n  aliasFilter('');\n  roleFilter('');\n  if (isAdmin) {\n    emailFilter('');\n    phoneFilter('');\n  }\n}\n\nexport const filterFactory = filterTableFactory();\n\n// Columns default\nconst playerColumns = (isAdmin, labels, addEdit) => [\n  { dataField: 'rowNumber', text: 'ID', editable: false, headerStyle: (column, colIndex) => ({ width: '3%' }) },\n  {\n    dataField: 'name',\n    text: labels.name,\n    autoSelectText: true,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (nameFilter = filter),\n    }),\n  },\n  {\n    dataField: 'surname',\n    text: labels.surname,\n    autoSelectText: true,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '16%' : '25%' }),\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (surnameFilter = filter),\n    }),\n  },\n  {\n    dataField: 'alias',\n    text: labels.alias,\n    headerStyle: (column, colIndex) => ({ width: isAdmin ? '17%' : '25%' }),\n    autoSelectText: true,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (aliasFilter = filter),\n    }),\n  },\n  {\n    dataField: 'role',\n    text: labels.role,\n    headerStyle: (column, colIndex) => ({ width: `${isAdmin ? '11' : '15'}%` }),\n    filter: selectFilter({\n      placeholder: `${labels.filter}...`,\n      options: {\n        [PlayerRole.GoalKeeper]: labels.goalKeeper,\n        [PlayerRole.Striker]: labels.striker,\n        [PlayerRole.Master]: labels.master,\n      },\n      getFilter: (filter) => (roleFilter = filter),\n    }),\n    editor: {\n      type: Type.SELECT,\n      getOptions: () => {\n        return [\n          { value: PlayerRole.GoalKeeper, label: labels.goalKeeper },\n          { value: PlayerRole.Striker, label: labels.striker },\n          { value: PlayerRole.Master, label: labels.master },\n        ];\n      },\n    },\n  },\n  {\n    dataField: 'email',\n    text: labels.email,\n    headerStyle: (column, colIndex) => ({ width: '20%' }),\n    autoSelectText: true,\n    hidden: !isAdmin,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (emailFilter = filter),\n    }),\n  },\n  {\n    dataField: 'phone',\n    headerStyle: (column, colIndex) => ({ width: '10%' }),\n    text: labels.phone,\n    autoSelectText: true,\n    hidden: !isAdmin,\n    filter: textFilter({\n      placeholder: `${labels.filter}...`,\n      getFilter: (filter) => (phoneFilter = filter),\n    }),\n  },\n  // https://github.com/react-bootstrap-table/react-bootstrap-table2/blob/master/docs/columns.md#isDummyField\n  {\n    dataField: 'actions',\n    isDummyField: true,\n    text: 'Azioni',\n    hidden: !isAdmin,\n    formatter: (cell, row) => (\n      <Button variant=\"success\" onClick={() => addEdit(row)}>\n        <EditIcon />\n      </Button>\n    ),\n  },\n  { dataField: 'match_played', text: 'Partite Giocate', hidden: true },\n  { dataField: 'match_won', text: 'Vittorie', hidden: true },\n  { dataField: 'total_score', text: 'Punteggio', hidden: true },\n];\n\nexport default playerColumns;\n\nexport function valueFormatter(selectedOption) {\n  let value = '';\n  if (!selectedOption) return '';\n  if (selectedOption.alias) {\n    value = selectedOption.alias;\n  } else {\n    value = selectedOption.surname ? `${selectedOption.name} - ${selectedOption.surname}` : selectedOption.name;\n  }\n  return value;\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface HeaderProps {\n  title: React.Component | string;\n  saved: boolean;\n}\nconst Header: React.FC<HeaderProps> = ({ title, saved }) => {\n  const divStyle = {\n    color: saved ? '#4feb34' : undefined,\n  };\n  const { t } = useTranslation(['common']);\n  return (\n    <h3>\n      <b style={divStyle}>{typeof title === 'string' ? t(title) : title}</b>\n      {saved ? <small> {`- ${t('common:saving')}...`} </small> : null}\n    </h3>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from '../core/types';\nimport { AuthSelector } from '../../redux/selectors';\nimport commonStyle from '../../common.module.css';\nimport { HomeIcon, PlusIcon, BroomIcon, TrashIcon } from '../core/icons';\nimport { clearAllFilter } from './helper';\nimport { PlayerDTO } from '../../@common/dto';\n\ninterface ToolsbarProps {\n\tselectedLength: number;\n\tgoBack: () => void;\n\taddEdit: (player?: PlayerDTO) => void;\n\tdeleteRow: () => void;\n}\n\nconst Toolsbar: React.FC<ToolsbarProps> = ({ selectedLength, goBack, addEdit, deleteRow }) => {\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\n\tconst { t } = useTranslation(['common', 'pair']);\n\n\treturn (\n\t\t<Row>\n\t\t\t<Col className={commonStyle.toolsBarContainer}>\n\t\t\t\t<div className={commonStyle.toolsBar}>\n\t\t\t\t\t<Button variant=\"secondary\" className=\"float-left align-middle\" onClick={goBack}>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t\t<span> {t('common:route.home')}</span>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{isAdmin ? (\n\t\t\t\t\t\t<Button variant=\"success\" onClick={() => addEdit()}>\n\t\t\t\t\t\t\t<PlusIcon />\n\t\t\t\t\t\t\t<span>{t('player:add')}</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Button variant=\"dark\" onClick={() => clearAllFilter(isAdmin)}>\n\t\t\t\t\t\t<BroomIcon />\n\t\t\t\t\t\t<span> {t('player:filter')}</span>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{isAdmin ? (\n\t\t\t\t\t\t<Button variant=\"danger\" className=\"float-right\" onClick={deleteRow} disabled={selectedLength === 0}>\n\t\t\t\t\t\t\t<TrashIcon /> {selectedLength > 1 ? t('player:delete.multi') : t('player:delete.one')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default Toolsbar;\n","import React from 'react';\nimport { SyntheticEvent } from 'react';\nimport { ExpandRowProps } from 'react-bootstrap-table-next';\nimport { LABEL_COMMON_LOADING } from 'src/@common/constants/label';\nimport { PlayerDTO } from 'src/@common/dto';\nimport { SuccessCodes } from 'src/@common/models/HttpStatusCode';\nimport { StatsPlayerMap, StatsPlayerResponse } from 'src/@common/models/stats.model';\nimport { fetchPlayerStats } from 'src/redux/services/stats.service';\nimport { MinusIcon, PlusIcon, ChartIcon } from '../core/icons';\nimport i18next from '../../i18n/i18n';\nimport Stats from '../Stats/table.component';\n\nconst expandManager = (\n\tstats: StatsPlayerMap,\n\tsetStats: (value: React.SetStateAction<StatsPlayerMap>) => void,\n\texpandedRows: number[],\n\tsetExpandedRows: (value: React.SetStateAction<number[]>) => void,\n\tisLoading: boolean,\n\tsetIsLoading: (value: React.SetStateAction<boolean>) => void\n): ExpandRowProps<PlayerDTO, number> => ({\n\texpandByColumnOnly: true,\n\tshowExpandColumn: true,\n\texpanded: expandedRows,\n\texpandHeaderColumnRenderer: ({ isAnyExpands }) => (\n\t\t<>\n\t\t\t{isAnyExpands ? <MinusIcon size=\"sm\" /> : <PlusIcon size=\"sm\" />}\n\t\t\t<ChartIcon size=\"lg\" />\n\t\t</>\n\t),\n\texpandColumnRenderer: ({ expanded }) => (\n\t\t<>\n\t\t\t{expanded ? <MinusIcon size=\"sm\" /> : <PlusIcon size=\"sm\" />}\n\t\t\t<ChartIcon size=\"lg\" />\n\t\t</>\n\t),\n\trenderer: (row: PlayerDTO) => {\n\t\t// This scenario doesn't exists\n\t\tif (!row.id) {\n\t\t\treturn <p>{i18next.t('stats:new_player')}</p>;\n\t\t}\n\t\tif (isLoading) {\n\t\t\treturn <p>{i18next.t(LABEL_COMMON_LOADING)}</p>;\n\t\t}\n\t\treturn stats[row.id] ? <Stats stats={stats[row.id]!} /> : <div>{i18next.t('stats:new_player')}</div>;\n\t},\n\tonExpand: (row: PlayerDTO, isExpand: boolean, rowIndex: number, e: SyntheticEvent) => {\n\t\tif (row.id) {\n\t\t\tif (isExpand) {\n\t\t\t\t// Cache results\n\t\t\t\tif (stats[row.id]) {\n\t\t\t\t\tsetExpandedRows([...expandedRows, row.id]);\n\t\t\t\t} else {\n\t\t\t\t\tsetIsLoading(true);\n\t\t\t\t\tfetchPlayerStats({ players: [row.id] }).then((result) => {\n\t\t\t\t\t\tif (row.id && SuccessCodes.includes(result.code)) {\n\t\t\t\t\t\t\tconst { stats: statistics } = result as StatsPlayerResponse;\n\t\t\t\t\t\t\tstats[row.id] = statistics[row.id];\n\t\t\t\t\t\t\tsetStats(stats);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\tsetExpandedRows([...expandedRows, row.id!]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetExpandedRows((ex) => ex.filter((x) => x !== row.id));\n\t\t\t}\n\t\t}\n\t},\n\tonExpandAll: (isExpandAll: boolean, rows: Array<PlayerDTO>, e: SyntheticEvent) => {\n\t\tif (isExpandAll) {\n\t\t\tconst ids = rows.filter((r) => !!r.id).map((r) => r.id!);\n\t\t\tsetIsLoading(true);\n\t\t\tfetchPlayerStats({ players: ids }).then((result) => {\n\t\t\t\tif (SuccessCodes.includes(result.code)) {\n\t\t\t\t\tconst { stats: statistics } = result as StatsPlayerResponse;\n\t\t\t\t\tsetStats(statistics);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetExpandedRows(ids);\n\t\t\t});\n\t\t} else {\n\t\t\tsetExpandedRows([]);\n\t\t}\n\t},\n});\n\nexport default expandManager;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { useSelector } from '../core/types';\nimport { useDispatch } from 'react-redux';\nimport BootstrapTable, { ColumnDescription, SelectRowProps } from 'react-bootstrap-table-next';\n// style\nimport { Button, Row, Col } from 'react-bootstrap';\n\n//\nimport columns, { filterFactory } from './helper';\nimport TableHeader from '../core/generic/TableHeader';\nimport { LoadingModal } from '../core/generic/Commons';\n\nimport { PlayerAction } from '../../redux/actions';\nimport { PlayerSelector, AuthSelector } from '../../redux/selectors';\nimport { useTranslation } from 'react-i18next';\nimport { PlayerDTO } from '../../@common/dto';\nimport { getEmptyPlayer } from '../../@common/models';\nimport Toolsbar from './toolsbar.component';\nimport { StatsPlayerMap } from 'src/@common/models/stats.model';\nimport expandManager from './expand.manager';\n\ninterface PlayerProps {}\nconst PlayerTable: React.FC<PlayerProps> = () => {\n\tconst dispatch = useDispatch();\n\tconst currentHistory = useHistory();\n\tconst { t } = useTranslation(['common', 'player']);\n\t// From Store\n\tconst isLoadingStore = useSelector(PlayerSelector.isLoading);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\tconst playersList = useSelector(PlayerSelector.getPlayersList);\n\tconst isSaving = useSelector(PlayerSelector.isSaving);\n\t// Component State\n\tconst [selectedRows, setSelectedRows] = useState<PlayerDTO[]>([]);\n\tconst [stats, setStats] = useState<StatsPlayerMap>({});\n\tconst [expandedRows, setExpandedRows] = useState<Array<number>>([]);\n\n\t// Effetcs\n\tuseEffect(() => {\n\t\tdispatch(PlayerAction.fetchPlayers.request({}));\n\t}, [dispatch]);\n\n\tconst handleOnSelect = (row: PlayerDTO, isSelected: boolean) => {\n\t\tsetSelectedRows((rows) => {\n\t\t\tconst found = !!rows.find((e) => e.id === row.id);\n\t\t\tif (isSelected) {\n\t\t\t\treturn found ? rows : [row, ...rows];\n\t\t\t} else {\n\t\t\t\treturn found ? rows.filter((e) => e.id !== row.id) : rows;\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t};\n\n\tconst selectRow: SelectRowProps<PlayerDTO> = {\n\t\tmode: 'checkbox',\n\t\tnonSelectable: playersList.filter((e) => e.id && !e.editable).map((e) => e.id!),\n\t\tonSelect: handleOnSelect,\n\t\tonSelectAll: (isSelected, rows) => rows.forEach((row) => handleOnSelect(row, isSelected)),\n\t\tstyle: { backgroundColor: '#c8e6c9' },\n\t\thideSelectAll: !playersList.find((e) => e.editable),\n\t\thideSelectColumn: !playersList.find((e) => e.editable) || !isAdmin,\n\t\tselectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) =>\n\t\t\tplayersList[rowIndex].editable ? {} : { backgroundColor: '#dc3545' },\n\t};\n\n\tconst addEdit = (player: PlayerDTO = getEmptyPlayer()) => {\n\t\tconsole.log('addEdit : ', player);\n\t\tdispatch(PlayerAction.setPlayer(player));\n\t\tcurrentHistory.push('/player/edit');\n\t};\n\n\tconst deleteRow = () => {\n\t\tif (!selectedRows) return;\n\t\tdispatch(PlayerAction.deletePlayers.request({ players: selectedRows }));\n\t\tsetSelectedRows([]);\n\t};\n\n\tfunction goBack() {\n\t\tcurrentHistory.push('/');\n\t}\n\n\tconst fieldLabels = {\n\t\tname: t('player:field.name'),\n\t\tsurname: t('player:field.surname'),\n\t\talias: t('player:field.alias'),\n\t\trole: t('player:field.role'),\n\t\temail: t('player:field.email'),\n\t\tphone: t('player:field.phone'),\n\t\tfilter: t('player:field.filter'),\n\t\tgoalKeeper: t('player:role.goalKeeper'),\n\t\tstriker: t('player:role.striker'),\n\t\tmaster: t('player:role.master'),\n\t\tedit: t('common:edit'),\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<LoadingModal show={isLoadingStore || isLoading} message={t('common:loading')} />\n\t\t\t<Col>\n\t\t\t\t<Toolsbar selectedLength={selectedRows.length} goBack={goBack} addEdit={addEdit} deleteRow={deleteRow} />\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BootstrapTable\n\t\t\t\t\t\t\tbootstrap4\n\t\t\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\t\t\tdata={playersList}\n\t\t\t\t\t\t\tcolumns={columns(isAdmin, fieldLabels, addEdit) as ColumnDescription<PlayerDTO, PlayerDTO>[]}\n\t\t\t\t\t\t\tselectRow={selectRow}\n\t\t\t\t\t\t\texpandRow={expandManager(stats, setStats, expandedRows, setExpandedRows, isLoading, setIsLoading)}\n\t\t\t\t\t\t\tcaption={<TableHeader title={'common:route.player'} saved={isSaving} />}\n\t\t\t\t\t\t\tfilter={filterFactory}\n\t\t\t\t\t\t\theaderClasses=\"default-background default-color-yellow\"\n\t\t\t\t\t\t\tnoDataIndication={() =>\n\t\t\t\t\t\t\t\tisAdmin ? (\n\t\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={() => addEdit()}>\n\t\t\t\t\t\t\t\t\t\t{t('player:add')}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p>{t('player:no_data')}</p>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\thover\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Col>\n\t\t</>\n\t);\n};\n\nexport default withRouter(PlayerTable);\n","// Auth\nexport const LABEL_AUTH_PASSWORD = 'auth:password.password';\n\n// Common\nexport const LABEL_COMMON_LOADING = 'common:loading';\n\n// Tournament\nexport const LABEL_TOURNAMENT_SELECT = 'tournament:select';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React, { CSSProperties } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Stats } from '../../@common/dto/stats/stats.dto';\n\ninterface StatsProps<T> {\n\tstats: T;\n}\n\nexport default function StatsComponent<T extends Stats>({ stats }: StatsProps<T>) {\n\tconst { t } = useTranslation(['stats']);\n\tconst stage1 = t('stats:stage1');\n\tconst stage2 = t('stats:stage2');\n\tconst tot = t('stats:tot');\n\n\t//console.log('StatsPair : ', stats);\n\tconst darkBackGround: CSSProperties = {\n\t\tbackgroundColor: 'var(--default-black)',\n\t\tcolor: 'whitesmoke',\n\t};\n\treturn (\n\t\t<Table striped bordered hover>\n\t\t\t<thead>\n\t\t\t\t<tr\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: 'cadetblue',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<td>#</td>\n\t\t\t\t\t<td>{stage1}</td>\n\t\t\t\t\t<td>{stage2}</td>\n\t\t\t\t\t<td>{tot}</td>\n\t\t\t\t\t<td>% {stage1}</td>\n\t\t\t\t\t<td>% {stage2}</td>\n\t\t\t\t\t<td>% {tot}</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr style={darkBackGround}>\n\t\t\t\t\t<td>{t('stats:winnings')}</td>\n\t\t\t\t\t<td>{stats.s1win}</td>\n\t\t\t\t\t<td>{stats.s2win}</td>\n\t\t\t\t\t<td>{stats.totwin}</td>\n\t\t\t\t\t<td>{stats.winS1Percentage}</td>\n\t\t\t\t\t<td>{stats.winS2Percentage}</td>\n\t\t\t\t\t<td>{stats.winPercentage}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr style={darkBackGround}>\n\t\t\t\t\t<td>{t('stats:defeats')}</td>\n\t\t\t\t\t<td>{stats.s1def}</td>\n\t\t\t\t\t<td>{stats.s2def}</td>\n\t\t\t\t\t<td>{stats.totdef}</td>\n\t\t\t\t\t<td>{stats.defS1Percentage}</td>\n\t\t\t\t\t<td>{stats.defS2Percentage}</td>\n\t\t\t\t\t<td>{stats.defPercentage}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr style={darkBackGround}>\n\t\t\t\t\t<td>{t('stats:tots')}</td>\n\t\t\t\t\t<td>{stats.totS1}</td>\n\t\t\t\t\t<td>{stats.totS2}</td>\n\t\t\t\t\t<td>{stats.totMatch}</td>\n\t\t\t\t\t<td>{stats.ratioS1}</td>\n\t\t\t\t\t<td>{stats.ratioS2}</td>\n\t\t\t\t\t<td>{stats.ratioTot}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n}\n"],"sourceRoot":""}