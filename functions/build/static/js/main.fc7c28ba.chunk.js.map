{"version":3,"sources":["redux/actions/pair.action.ts","redux/actions/stage1.action.ts","redux/actions/stage2.action.ts","redux/actions/stats.action.ts","components/core/types.ts","@common/utils/date.utils.ts","redux/services/pair.service.ts","redux/services/stage1.service.ts","redux/services/stage2.service.ts","redux/services/stats.service.ts","redux/selectors/tournament.selector.ts","@common/utils/math.utils.ts","@common/dto/player.dto.ts","@common/dto/tournament.dto.ts","@common/dto/user.dto.ts","@common/models/pair.model.ts","redux/actions/constants.ts","redux/actions/auth.action.ts","@common/utils/fetch.utils.ts","redux/actions/tournament.action.ts","redux/actions/player.action.ts","@common/models/common.models.ts","serviceWorker.ts","redux/reducers/tournament.reducer.ts","redux/reducers/player.reducer.ts","redux/reducers/pair.reducer.ts","redux/reducers/auth.reducer.ts","redux/reducers/stage1.reducer.ts","redux/reducers/stage2.reducer.ts","redux/reducers/stats.reducer.ts","redux/services/tournament.service.ts","redux/sagas/utils.ts","redux/sagas/tournament.saga.ts","redux/sagas/player.saga.ts","redux/sagas/pair.saga.ts","redux/sagas/stage1.saga.ts","redux/sagas/stage2.saga.ts","redux/services/auth.service.ts","redux/sagas/auth.saga.ts","redux/sagas/stats.saga.ts","redux/store.ts","assets/header.jpg","components/core/routing/Routes.ts","components/Header/Header.tsx","components/core/routing/ProtectedRoute.tsx","components/core/errorBoundary.tsx","components/App/badge.tsx","components/App/App.tsx","components/App/Entry.tsx","index.tsx","components/core/icons.tsx","@common/models/index.ts","@common/dto/index.ts","i18n/i18n.ts","@common/utils/index.ts","redux/selectors/pair.selector.ts","redux/selectors/player.selector.ts","redux/selectors/stage1.selector.ts","redux/selectors/stage2.selector.ts","redux/selectors/auth.selector.ts","@common/models/HttpStatusCode.ts","components/core/generic/Commons.tsx","@common/models/player.model.ts","redux/services/player.service.ts"],"names":["actionName","PairAction","fetch","createAsyncAction","defaultAsyncParams","reset","createAction","defaultParam","purge","PURGE_STORE_ACTION","Stage1Action","updateSelectedPairs","fetchStage1","updateCellStage1","updatePlacement","reloadFromServer","resetPairs","Stage2Action","fetchStage2","updateCell","delete","setCells","setLoading","StatsAction","fetchBestPlayers","fetchBestPairs","useSelector","createSelectorHook","formatDate","date","delimiter","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","fetchPairs","tId","getWrapper","encodeURIComponent","findAlias","player1Id","player2Id","selectPairs","request","putWrapper","postPair","postWrapper","updatePair","deletePairs","deleteWrapper","pairsList","stageName","deleteStage2","updateCells","fetchPairsStage2","tournamentId","response","pairs","getEmptyPair","fetchPlayerStats","fetchPairStats","from","fetchStatsSummary","TournamentSelector","isLoading","tournamentState","getTournament","tournament","getTournamentsList","tournamentsList","getBaseLog","x","y","Math","log","roundNumber","num","decimal","round","Number","EPSILON","passwordRegExp","RegExp","emailRegExp","PlayerRole","TournamentProgress","UserRole","label","id","rowNumber","player1","getEmptyPlayer","player2","alias","stage1Name","placement","paid1","paid2","name","AuthAction","unsubscribe","registration","login","logout","update","checkAuthentication","sessionControl","updateSession","default_headers","url","afterResponse","fetchWrapper","undefined","body","method","a","console","JSON","stringify","headers","json","result","group","error","groupEnd","toast","UnexpectedServerError","TournamentAction","reload","setTournament","save","PlayerAction","setPlayer","fetchPlayers","savePlayer","updatePlayer","deletePlayers","SessionStatus","Environment","UserMessageType","code","HTTPStatusCode","InternalServerError","message","userMessage","type","Danger","Unauthorized","user","initialState","statsState","playerState","playersList","isSaving","pairState","authState","isAuthenticated","isAdmin","stage1State","toogleRefresh","selectedPairs","surname","role","GoalKeeper","email","phone","match_played","match_won","total_score","editable","stages","stage2State","Boolean","window","location","hostname","match","initialTournamentState","TournamentReducer","createReducer","handleAction","state","failure","success","payload","includes","initialPlayerState","PlayerReducer","player","filter","row","find","selectedRow","map","e","i","initialPairState","PairReducer","initialSessionState","SessionReducer","Admin","emptyPair","initialStage1State","Stage1Reducer","rows","currentStage","s","newStage","autoOrder","stage1Rows","selected","selectedRows","size","Map","set","pair","initialStage2State","Stage2Reducer","cells","count","initialStatsState","StatsReducer","stats","players","reloadTournament","fetchTournaments","postTournament","updateTournament","execCallBack","entityLifeCycle","GeneratorFunction","constructor","AsyncFunction","callBack","genFunction","asyncFunction","getMessage","i18n","t","options","getToast","alert","Success","Warning","warn","action","onSuccess","onFailure","showMessage","call","messageText","SuccessCodes","successRes","put","failureRes","fetchTournamentsSaga","reloadTournamentSaga","saveTournamentSaga","updateTournamentSaga","onSuccessRedirect","redirect","history","push","path","TournamentSagas","takeEvery","getPlayersSaga","deletePlayersSaga","savePlayerSaga","updatePlayerSaga","back","PlayersSagas","getPairsSaga","PairsSagas","fetchSaga","updateCellSaga","updatePlacementSaga","updateSelectedPairsSaga","Stage1Sagas","deleteStage2Saga","fetchStage2Saga","updateCellsSaga","select","progress","Stage1","Stage2Sagas","updateUser","updateUserRequest","deleteUser","deleteUserRequest","loginRequest","logoutRequest","registrationRequest","createSessionChannel","channel","eventChannel","emitter","openListener","event","messageListener","messageEvent","parse","data","status","SESSION_EXPIRED","closeConnection","errorListener","END","addEventListener","removeEventListener","close","buffers","expanding","checkAuthenticationSaga","watchSessionSaga","logoutSaga","loginSaga","registrationSaga","unsubscribeSaga","updateUserSaga","deleteUserSaga","i18next","EventSource","take","TOURNAMENT_NEW","TOURNAMENT_UPDATE","STAGE1_UPDATE","STAGE1_DELETE","STAGE2_UPDATE","STAGE2_DELETE","delay","persistor","SessionSagas","takeLatest","process","getBestPairs","getBestPlayers","StatsSagas","rootSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","rootReducers","store","createStore","persistReducer","key","storage","localForage","combineReducers","applyMiddleware","persistStore","all","Cypress","run","lazySwagger","lazy","lazyPlayer","lazyPlayerEdit","lazyTournament","lazyPairs","lazyStage1","lazyStage2","lazyLogin","lazyUser","lazyRedirectionControl","then","module","default","RedirectionControl","routes","exact","componentToRender","visible","private","index","icon","MaleIcon","FileMedicalIcon","Header","dispatch","useDispatch","currentHistory","useHistory","useTranslation","AuthSelector","getSession","jumboStyle","backgroundImage","backgroundSize","padding","minHeight","otherLang","getOtherLang","Jumbotron","style","margin","color","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","route","Dropdown","alignRight","ButtonGroup","Button","opacity","disabled","fontSize","data-cy","username","split","Menu","Item","eventKey","onClick","changeLanguage","Divider","borderTopColor","ProtectedRoute","props","render","innerProps","pathname","pathName","element","getLabelByPathname","connect","ErrorBoundary","errorInfo","this","setState","children","React","Component","AppBadge","position","top","right","Badge","loadIcons","App","_","useEffect","Container","fluid","autoClose","buttonText","cookieName","background","buttonStyle","expires","overlay","Application","loading","show","Entry","fallback","setDefaultLocale","registerLocale","it","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","forEach","library","add","faTrashAlt","faSave","faAngleLeft","faAngleRight","faChartBar","faSignOutAlt","faUser","faMale","faLanguage","faHome","faBroom","faArrowAltCircleRight","faArrowAltCircleLeft","faTimes","faToggleOff","faToggleOn","faPlus","faMinus","faTrophy","faAngleDoubleRight","faBan","faFileMedicalAlt","faEdit","SOLID","Icon","prefix","iconName","findIconDefinition","TrashIcon","SaveIcon","ChartIcon","EditIcon","LogoutIcon","UserIcon","LanguageIcon","HomeIcon","BroomIcon","RightArrowIcon","LeftAngleIcon","RightAngleIcon","LeftArrowIcon","TimesIcon","ToggleOn","ToggleOff","PlusIcon","MinusIcon","TrophyIcon","DoubleRightIcon","BanIcon","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","supportedLngs","fallbackLng","ns","defaultNS","fallbackNS","preload","load","interpolation","escapeValue","backend","loadPath","language","PairSelector","getPairsList","PlayerSelector","getPlayersList","getPlayer","Stage1Selector","getSelectedRows","get","getSelectedPairs","getToogleRefresh","Stage2Selector","getCells","getCount","getUser","Continue","SwitchingProtocols","Processing","EarlyHints","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","IMUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","SwitchProxy","TemporaryRedirect","PermanentRedirect","BadRequest","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","URITooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","modalStyle","backgroundColor","borderColor","fancyModalFooter","animation","LoadingModal","title","onHide","centered","borderWidth","closeButton","Title","Body","Footer","YesNoModal","GenericToast","useLocation","addEmpty"],"mappings":"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","file":"static/js/main.fc7c28ba.chunk.js","sourcesContent":["import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {FetchPairsRequest, FetchPairsResponse, PairError} from '../../@common/models';\n\nconst actionName = '[Pair]';\n\nexport const PairAction = {\n  // Fetch Pairs\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Pairs'))<\n    FetchPairsRequest,\n    FetchPairsResponse,\n\t\tPairError\n  >(),\n  reset: createAction(...defaultParam(actionName, 'Pair Reset'))<{}>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { Stage1Row } from '../../@common/dto';\nimport { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n\tFetchStage1Response,\n\tFetchStage1Request,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n\tSelectPairsRequest,\n\tSelectPairsResponse,\n\tStage1Error,\n} from '../../@common/models';\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION, defaultParam } from './constants';\n\nconst actionName = '[Stage1]';\n\nexport const Stage1Action = {\n\t// Update Selected Pairs\n\tupdateSelectedPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Selected Pairs Stage1'))<\n\t\tSelectPairsRequest,\n\t\tSelectPairsResponse,\n\t\tStage1Error\n\t>(),\n\t// watcher\n\tfetchStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage1'))<\n\t\tFetchStage1Request,\n\t\tFetchStage1Response,\n\t\tStage1Error\n\t>(),\n\tupdateCellStage1: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage1'))<\n\t\tUpdateCellRequest,\n\t\tUpdateCellResponse,\n\t\tStage1Error\n\t>(),\n\tupdatePlacement: createAsyncAction(...defaultAsyncParams(actionName, 'Update Placement Stage1'))<\n\t\tUpdatePlacementRequest,\n\t\tUpdatePlacementResponse,\n\t\tStage1Error\n\t>(),\n\treloadFromServer: createAction(...defaultParam(actionName, 'Stage1 Watcher'))<{}>(),\n\tresetPairs: createAction(...defaultParam(actionName, 'Stage1 Reset Pairs'))<{}>(),\n\treset: createAction(...defaultParam(actionName, 'Stage1 Reset'))<{}>(),\n\tpurge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport {\n\tFetchStage2Response,\n\tFetchStage2Request,\n\tUpdateStage2CellResponse,\n\tUpdateStage2CellRequest,\n\tDeleteStage2Request,\n\tDeleteStage2Response,\n\tStage2Error,\n} from '../../@common/models';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { ICell } from '../../@common/dto';\n\nconst actionName = '[Stage2]';\n\nexport const Stage2Action = {\n\t// get selected tournament\n\tfetchStage2: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Stage2'))<\n\t\tFetchStage2Request,\n\t\tFetchStage2Response,\n\t\tStage2Error\n\t>(),\n\tupdateCell: createAsyncAction(...defaultAsyncParams(actionName, 'Update Cell Stage2'))<\n\t\tUpdateStage2CellRequest,\n\t\tUpdateStage2CellResponse,\n\t\tStage2Error\n\t>(),\n\tdelete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Stage2'))<\n\t\tDeleteStage2Request,\n\t\tDeleteStage2Response,\n\t\tStage2Error\n\t>(),\n\tsetCells: createAction(...defaultParam(actionName, 'Set Cells'))<ICell[][]>(),\n\tsetLoading: createAction(...defaultParam(actionName, 'Stage2 is Loading'))<boolean>(),\n\treset: createAction(...defaultParam(actionName, 'Stage2 Reset'))<{}>(),\n\tpurge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n\tStatsBestPairsRequest,\n\tStatsBestPairsResponse,\n\tStatsBestPlayersRequest,\n\tStatsBestPlayersResponse,\n\tStatsError,\n} from '../../@common/models';\n\nconst actionName = '[Stats]';\nexport const StatsAction = {\n\t// fetch player Stats\n\tfetchBestPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Best Player Stats'))<\n\t\tStatsBestPlayersRequest,\n\t\tStatsBestPlayersResponse,\n\t\tStatsError\n\t>(),\n\t// fetch pair Stats\n\tfetchBestPairs: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Best Pairs Stats'))<\n\t\tStatsBestPairsRequest,\n\t\tStatsBestPairsResponse,\n\t\tStatsError\n\t>(),\n\tpurge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createSelectorHook } from 'react-redux';\nimport { RootState } from '../../@common/models';\n\nexport type FormEventType = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n\nexport const useSelector = createSelectorHook<RootState>();\n","export const getTodayDate = () => formatDate(new Date());\n\nexport function formatDate(date: Date, delimiter: string = '/') {\n\tvar d = new Date(date),\n\t\tmonth = '' + (d.getMonth() + 1),\n\t\tday = '' + d.getDate(),\n\t\tyear = d.getFullYear();\n\n\tif (month.length < 2) month = '0' + month;\n\tif (day.length < 2) day = '0' + day;\n\n\treturn [year, month, day].join(delimiter);\n}\n\n// https://stackoverflow.com/questions/2698725/comparing-date-part-only-without-comparing-time-in-javascript\nexport const justADate = (initDate?: Date | string) => {\n\tlet utcMidnightDateObj: Date;\n\t// if no date supplied, use Now.\n\tif (!initDate) initDate = new Date();\n\n\t// if initDate specifies a timezone offset, or is already UTC, just keep the date part, reflecting the date _in that timezone_\n\tif (typeof initDate === 'string' && initDate.match(/((\\+|-)\\d{2}:\\d{2}|Z)$/gm)) {\n\t\tutcMidnightDateObj = new Date(initDate.substring(0, 10) + 'T00:00:00Z');\n\t} else {\n\t\t// if init date is not already a date object, feed it to the date constructor.\n\t\tif (!(initDate instanceof Date)) initDate = new Date(initDate);\n\t\t// Vital Step! Strip time part. Create UTC midnight dateObj according to local timezone.\n\t\tutcMidnightDateObj = new Date(Date.UTC(initDate.getFullYear(), initDate.getMonth(), initDate.getDate()));\n\t}\n\n\treturn {\n\t\ttoISOString: () => utcMidnightDateObj.toISOString(),\n\t\tgetUTCDate: () => utcMidnightDateObj.getUTCDate(),\n\t\tgetUTCDay: () => utcMidnightDateObj.getUTCDay(),\n\t\tgetUTCFullYear: () => utcMidnightDateObj.getUTCFullYear(),\n\t\tgetUTCMonth: () => utcMidnightDateObj.getUTCMonth(),\n\t\tsetUTCDate: (date: number) => utcMidnightDateObj.setUTCDate(date),\n\t\tsetUTCFullYear: (years: number) => utcMidnightDateObj.setUTCFullYear(years),\n\t\tsetUTCMonth: (months: number) => utcMidnightDateObj.setUTCMonth(months),\n\t\taddDays: (days: number) => {\n\t\t\tutcMidnightDateObj.setUTCDate(utcMidnightDateObj.getUTCDate() + days);\n\t\t},\n\t\ttoString: () => utcMidnightDateObj.toString(),\n\t\ttoLocaleDateString: (\n\t\t\tlocales?: string | string[] | undefined,\n\t\t\toptions?: Intl.DateTimeFormatOptions | undefined\n\t\t): string => {\n\t\t\tconst option = options || {};\n\t\t\toption.timeZone = 'UTC';\n\t\t\tconst locale = locales || 'it-IT';\n\t\t\treturn utcMidnightDateObj.toLocaleDateString(locale, option);\n\t\t},\n\t};\n};\n","import {\n\tFetchPairsRequest,\n\tFetchPairsResponse,\n\tSavePairResponse,\n\tSavePairRequest,\n\tDeletePairsRequest,\n\tDeletePairsResponse,\n\tFindAliasRequest,\n\tFindAliasResponse,\n\tSelectPairsResponse,\n\tSelectPairsRequest,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchPairs = ({ tId }: FetchPairsRequest) =>\n\tgetWrapper<FetchPairsResponse>(`/api/v2/pair/list?tId=${encodeURIComponent(tId)}`);\nexport const findAlias = ({ player1Id, player2Id }: FindAliasRequest) =>\n\tgetWrapper<FindAliasResponse>(\n\t\t`/api/v2/pair/alias?player1Id=${encodeURIComponent(player1Id)}&player2Id=${encodeURIComponent(player2Id)}`\n\t);\n\nexport const selectPairs = (request: SelectPairsRequest) =>\n\tputWrapper<SelectPairsRequest, SelectPairsResponse>('/api/v2/pair/selected', request);\nexport const postPair = (request: SavePairRequest) =>\n\tpostWrapper<SavePairRequest, SavePairResponse>('/api/v2/pair/new', request);\n\n// FIXME: create update\nexport const updatePair = (request: SavePairRequest) =>\n\tpostWrapper<SavePairRequest, SavePairResponse>('/api/v2/pair/new', request);\nexport const deletePairs = (request: DeletePairsRequest) =>\n\tdeleteWrapper<DeletePairsRequest, DeletePairsResponse>('/api/v2/pair/delete', request);\n","import {\n\tFetchStage1Request,\n\tFetchStage1Response,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n} from '../../@common/models';\nimport { postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchStage1 = ({ pairsList, stageName }: FetchStage1Request) =>\n\tpostWrapper<FetchStage1Request, FetchStage1Response>('/api/v2/stage1', {\n\t\tstageName,\n\t\tpairsList,\n\t});\n\nexport const updatePlacement = (request: UpdatePlacementRequest): Promise<UpdatePlacementResponse> =>\n\tputWrapper<UpdatePlacementRequest, UpdatePlacementResponse>('/api/v2/stage1/update/placement', request);\n\nexport const updateCellStage1 = (request: UpdateCellRequest): Promise<UpdateCellResponse> =>\n\tputWrapper<UpdateCellRequest, UpdateCellResponse>('/api/v2/stage1/update/cell', request);\n","import {\n\tFetchStage2Response,\n\tFetchStage2Request,\n\tDeleteStage2Request,\n\tDeleteStage2Response,\n\tUpdateStage2CellRequest,\n\tUpdateStage2CellResponse,\n\tFetchStage2PairsResponse,\n\tFetchStage2PairsRequest,\n\tgetEmptyPair,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper } from '../../@common/utils/fetch.utils';\n\nexport const deleteStage2 = (request: DeleteStage2Request) =>\n\tdeleteWrapper<DeleteStage2Request, DeleteStage2Response>('/api/v2/stage2', request);\n\nexport const updateCells = (request: UpdateStage2CellRequest) =>\n\tpostWrapper<UpdateStage2CellRequest, UpdateStage2CellResponse>('/api/v2/stage2/cells', request);\n\nexport const fetchPairsStage2 = ({ tournamentId }: FetchStage2PairsRequest) => {\n\tconst afterFetch = (response: FetchStage2PairsResponse) => ({\n\t\t...response,\n\t\tpairs: [getEmptyPair('-', tournamentId), ...response.pairs],\n\t});\n\treturn getWrapper<FetchStage2PairsResponse>(`/api/v2/stage2/pairs/${tournamentId}`, afterFetch);\n};\n\nexport const fetchStage2 = (request: FetchStage2Request) =>\n\tpostWrapper<FetchStage2Request, FetchStage2Response>('/api/v2/stage2', request);\n","import {\n\tStatsBestPairsResponse,\n\tStatsBestPlayersRequest,\n\tStatsBestPlayersResponse,\n\tStatsPairFromPlayerRequest,\n\tStatsPairRequest,\n\tStatsPairResponse,\n\tStatsPlayerRequest,\n\tStatsPlayerResponse,\n\tStatsSummaryRequest,\n\tStatsSummaryResponse,\n} from 'src/@common/models/stats.model';\nimport { getWrapper, postWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchPlayerStats = (request: StatsPlayerRequest) =>\n\tpostWrapper<StatsPlayerRequest, StatsPlayerResponse>('/api/v2/stats/player', request);\n\nexport const fetchPairsFromPlayerStats = ({ player1Id, player2Id }: StatsPairFromPlayerRequest) =>\n\tgetWrapper<StatsPlayerResponse>(`/api/v2/stats/pair?player1Id=${player1Id}&player2Id=${player2Id}`);\n\nexport const fetchPairStats = (request: StatsPairRequest) =>\n\tpostWrapper<StatsPairRequest, StatsPairResponse>('/api/v2/stats/pair', request);\n\nexport const fetchBestPlayers = ({ from }: StatsBestPlayersRequest) =>\n\tgetWrapper<StatsBestPlayersResponse>(`/api/v2/stats/player/bests${from ? `?from=${from}` : ''}`);\nexport const fetchBestPairs = ({ from }: StatsBestPlayersRequest) =>\n\tgetWrapper<StatsBestPairsResponse>(`/api/v2/stats/pair/bests${from ? `?from=${from}` : ''}`);\nexport const fetchStatsSummary = (request: StatsSummaryRequest) =>\n\tgetWrapper<StatsSummaryResponse>('/api/v2/stats/summary');\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const TournamentSelector = {\n  isLoading: ({ tournamentState: { isLoading } }: RootState) => isLoading,\n  getTournament: ({ tournamentState: { tournament } }: RootState) => tournament,\n  getTournamentsList: ({ tournamentState: { tournamentsList } }: RootState) => tournamentsList,\n};\n","export function getRandomIntInclusive(min: number, max: number) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nexport function getBaseLog(x: number, y: number) {\n\treturn Math.log(y) / Math.log(x);\n}\n\nexport const roundNumber = (num: number, decimal: number) =>\n\tMath.round((num + Number.EPSILON) * 10 ** decimal) / 10 ** decimal;\n\nexport const phoneRegExp = new RegExp('^d{10}$');\nexport const passwordRegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,16})');\nexport const emailRegExp = new RegExp(\n\t// eslint-disable-next-line quotes\n\t\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n);\n","export interface PlayerDTO {\n  id: number | null;\n  name: string;\n  surname: string;\n  alias: string;\n  label: string;\n  role: PlayerRole;\n  email: string;\n  phone: string;\n  userId?: number;\n  match_played?: number;\n  match_won?: number;\n  total_score?: number;\n  editable: boolean;\n  rowNumber: number;\n}\n\nexport enum PlayerRole {\n  NotAPlayer = 'Non sono un giocatore',\n  GoalKeeper = 'Portiere',\n  Master = 'Master',\n  Striker = 'Attaccante',\n}\n","export interface TournamentDTO {\n  id: number;\n  name: string;\n  date: Date;\n  progress: TournamentProgress;\n  public: boolean;\n  autoOrder: boolean;\n  label: string;\n  ownerId: number;\n}\n\nexport enum TournamentProgress {\n  New = 'new',\n  PairsSelection = 'pairsSelection',\n  Stage1 = 'stage1',\n  Stage2 = 'stage2',\n}\n","import { PlayerDTO } from '.';\n\nexport interface UserDTO {\n  id: number;\n  username: string;\n  name: string;\n  surname: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  birthday: Date;\n  label: string;\n  player?: PlayerDTO;\n}\nexport enum UserRole {\n  Admin = 'Admin',\n  User = 'User',\n}\n","import * as H from 'history';\nimport { PairDTO, Stage1Row } from '../dto';\nimport { GenericReponse } from './common.models';\nimport { getEmptyPlayer } from './player.model';\n\nexport interface PairState {\n\t// Pairs selected for stage1\n\tpairsList?: Array<PairDTO>;\n\t// Loading\n\tisLoading: boolean;\n\tisSaving: boolean;\n}\n\n// Requests\nexport interface FindAliasRequest {\n\tplayer1Id: number;\n\tplayer2Id: number;\n}\nexport interface FetchPairsRequest {\n\ttId: number;\n\thistory?: H.History<unknown>;\n}\nexport interface DeletePairsRequest {\n\tpairsList: Array<PairDTO>;\n}\nexport interface SavePairRequest {\n\tpair: PairDTO;\n}\nexport interface SelectPairsRequest {\n\ttournamentId: number;\n\tstage1Name: string;\n\tstage1Rows: Array<Stage1Row>;\n}\n// Response\nexport interface FindAliasResponse extends GenericReponse {\n\talias: string;\n}\nexport interface FetchPairsResponse extends GenericReponse {\n\tpairsList: Array<PairDTO>;\n}\nexport interface DeletePairsResponse extends GenericReponse {\n\tpairsList: Array<PairDTO>;\n}\nexport interface SavePairResponse extends GenericReponse {\n\tpair: PairDTO;\n}\nexport interface SelectPairsResponse extends GenericReponse {\n\tstage1Name: string;\n\tstage1Rows: Array<Stage1Row>;\n}\n\nexport interface PairError extends GenericReponse {}\n\nexport const getEmptyPair = (label?: string, tournamentId = 0): PairDTO => ({\n\tid: null,\n\ttournamentId,\n\trowNumber: 0,\n\tplayer1: getEmptyPlayer(),\n\tplayer2: getEmptyPlayer(),\n\talias: label || '',\n\tstage1Name: '',\n\tplacement: 0,\n\tpaid1: false,\n\tpaid2: false,\n});\n","import { TypeConstant } from 'typesafe-actions';\n\nexport const Request = 'Request';\nexport const Success = 'Success';\nexport const Failure = 'Failure';\nexport const PURGE_STORE_ACTION = 'persist/PURGE';\n\nexport const defaultAsyncParams = (actionName: string, name: string): [TypeConstant, TypeConstant, TypeConstant] => [\n  `${actionName} ${name} ${Request}`,\n  `${actionName} ${name} ${Success}`,\n  `${actionName} ${name} ${Failure}`,\n];\n\nexport const defaultParam = (actionName: string, name: string): [TypeConstant] => [`${actionName} ${name}`];\n\nexport interface PurgeResponse {}\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultParam, defaultAsyncParams, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  CheckAuthenticationRequest,\n  WatchSessionRequest,\n  AuthenticationError,\n  AuthenticationResponse,\n  LoginRequest,\n  RegistrationRequest,\n  LogoutRequest,\n  DeleteUserRequest,\n  UpdateUserRequest,\n  UnsubscribeResponse,\n  UnsubscribeRequest,\n} from '../../@common/models/auth.model';\n\nconst actionName = '[Session]';\n\nexport const AuthAction = {\n  unsubscribe: createAsyncAction(...defaultAsyncParams(actionName, 'Unsubscribe User'))<\n    UnsubscribeRequest,\n    UnsubscribeResponse,\n    AuthenticationError\n  >(),\n  // Register new user\n  registration: createAsyncAction(...defaultAsyncParams(actionName, 'Register User'))<\n    RegistrationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Login\n  login: createAsyncAction(...defaultAsyncParams(actionName, 'Login User'))<\n    LoginRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  logout: createAsyncAction(...defaultAsyncParams(actionName, 'Logout User'))<\n    LogoutRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  delete: createAsyncAction(...defaultAsyncParams(actionName, 'Delete User'))<\n    DeleteUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update User'))<\n    UpdateUserRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Check if user is already authenticate\n  checkAuthentication: createAsyncAction(...defaultAsyncParams(actionName, 'Check User Authentication'))<\n    CheckAuthenticationRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n  // Session watcher\n  sessionControl: createAsyncAction(...defaultAsyncParams(actionName, 'Session Watcher'))<\n    WatchSessionRequest,\n    AuthenticationResponse,\n    AuthenticationError\n  >(),\n\n  // set selected tournament\n  updateSession: createAction(...defaultParam(actionName, 'Set Session'))<AuthenticationResponse>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","//-----------------------------\n// Fetch utils\n//\nimport { GenericReponse, OmitHistory, UnexpectedServerError } from '../models/common.models';\nimport { toast } from 'react-toastify';\n\n//\nexport const default_headers: HeadersInit = {\n\t'Content-Type': 'application/json',\n\t// credentials: 'same-origin',\n};\n\ninterface IFetchCallback<T> {\n\t(response: T): T | Promise<T>;\n}\n\n// Get\nexport const getWrapper = <T extends GenericReponse>(url: string, afterResponse?: IFetchCallback<T>) =>\n\tfetchWrapper<never, T>(url, 'GET', undefined, afterResponse);\n// Delete\nexport const deleteWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'DELETE', body, afterResponse);\n\n// Put\nexport const putWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'PUT', body, afterResponse);\n\n// Post\nexport const postWrapper = <B, T extends GenericReponse>(\n\turl: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n) => fetchWrapper<B, T>(url, 'POST', body, afterResponse);\n\n// wrapper\nexport const fetchWrapper = async <B, T extends GenericReponse>(\n\turl: string,\n\tmethod: string,\n\tbody?: OmitHistory<B>,\n\tafterResponse?: IFetchCallback<T>\n): Promise<T | GenericReponse> => {\n\tconsole.log('fetchWrapper.request : ', method, url, body);\n\tlet response = null;\n\ttry {\n\t\tresponse = await fetch(url, {\n\t\t\tmethod,\n\t\t\tbody: method === 'PUT' || method === 'POST' || method === 'DELETE' ? JSON.stringify(body) : undefined,\n\t\t\theaders: default_headers,\n\t\t});\n\t\tconst result: T = await response.json();\n\t\tconsole.log('fetchWrapper.response : ', result);\n\t\treturn afterResponse ? afterResponse(result) : result;\n\t} catch (error) {\n\t\tconsole.group('An error occur : ');\n\t\tconsole.error('Error', error);\n\t\tconsole.error('Details : ', response);\n\t\tconsole.groupEnd();\n\t\ttoast.error('Whoooops...Something went wrong...');\n\t\t/*  FIXME:\n      Type 'GenericReponse' is not assignable to type 'T'.\n      'GenericReponse' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'GenericReponse'.\n    */\n\t\treturn UnexpectedServerError;\n\t}\n};\n","import {\n  FetchTournamentsRequest,\n  SaveTournamentRequest,\n  FetchTournamentsResponse,\n  SaveTournamentResponse,\n  UpdateTournamentRequest,\n  UpdateTournamentResponse,\n  TournamentError,\n  ReloadTournamentRequest,\n  ReloadTournamentResponse,\n} from '../../@common/models/tournament.model';\nimport { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport { TournamentDTO } from '../../@common/dto';\n\nconst actionName = '[Tournament]';\n\nexport const TournamentAction = {\n  // fetch tournaments\n  reload: createAsyncAction(...defaultAsyncParams(actionName, 'Reload Tournament'))<\n    ReloadTournamentRequest,\n    ReloadTournamentResponse,\n\t\tTournamentError\n  >(),\n  fetch: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Tournaments'))<\n    FetchTournamentsRequest,\n    FetchTournamentsResponse,\n\t\tTournamentError\n  >(),\n  // set selected tournament\n  setTournament: createAction(...defaultParam(actionName, 'Set Tournament'))<TournamentDTO | null>(),\n  // save a new tournament\n  save: createAsyncAction(...defaultAsyncParams(actionName, 'Save Tournament'))<\n    SaveTournamentRequest,\n    SaveTournamentResponse,\n    TournamentError\n  >(),\n  // save a new tournament\n  update: createAsyncAction(...defaultAsyncParams(actionName, 'Update Tournament'))<\n    UpdateTournamentRequest,\n    UpdateTournamentResponse,\n    TournamentError\n    >(),\n  reset: createAction(...defaultParam(actionName, 'Tournament Reset'))<{}>(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { createAsyncAction, createAction } from 'typesafe-actions';\nimport { defaultAsyncParams, defaultParam, PurgeResponse, PURGE_STORE_ACTION } from './constants';\nimport {\n  FetchPlayersResponse,\n  FetchPlayersRequest,\n  SavePlayerRequest,\n  SavePlayerResponse,\n  DeletePlayersResponse,\n  DeletePlayersRequest,\n  PlayerError,\n} from '../../@common/models/player.model';\nimport { PlayerDTO } from '../../@common/dto';\n\nconst actionName = '[Player]';\nexport const PlayerAction = {\n  // set selected tournament\n  setPlayer: createAction(...defaultParam(actionName, 'Set Player'))<PlayerDTO>(),\n  // fetch tournaments\n  fetchPlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Fetch Player'))<\n    FetchPlayersRequest,\n    FetchPlayersResponse,\n    PlayerError\n  >(),\n  savePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Save Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  updatePlayer: createAsyncAction(...defaultAsyncParams(actionName, 'Update Player'))<\n    SavePlayerRequest,\n    SavePlayerResponse,\n    PlayerError\n  >(),\n  deletePlayers: createAsyncAction(...defaultAsyncParams(actionName, 'Delete Player'))<\n    DeletePlayersRequest,\n    DeletePlayersResponse,\n    PlayerError\n  >(),\n  purge: createAction(PURGE_STORE_ACTION)<PurgeResponse>(),\n};\n","import { PlayerRole } from '../dto';\nimport { AuthenticationResponse, RootState } from '.';\nimport { HTTPStatusCode } from './HttpStatusCode';\nimport { TOptions } from 'i18next';\n\nexport enum SessionStatus {\n\t//\n\tHEARTBEAT = 'heartbeat',\n\t// Sessione scaduta, reindirizza l'utente alla login\n\tSESSION_EXPIRED = 'session_expired',\n\t// Aggiornamento torneo\n\tTOURNAMENT_NEW = 'tournament_new',\n\tTOURNAMENT_UPDATE = 'tournament_update',\n\tTOURNAMENT_DELETE = 'tournament_delete',\n\t// Aggiornamento dati su Stage1\n\tSTAGE1_UPDATE = 'stage1_update',\n\tSTAGE1_DELETE = 'stage1_delete',\n\t// Aggiornamento dati su Stage2\n\tSTAGE2_UPDATE = 'stage2_update',\n\tSTAGE2_DELETE = 'stage2_delete',\n}\n\nexport interface Message {\n\tstatus: SessionStatus;\n\tdata?: {\n\t\ttournamentId?: number;\n\t\tname?: string;\n\t\tdate?: Date;\n\t};\n\tlabel?: string;\n}\n\nexport type I18nLabel = {\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n};\n\nexport enum Environment {\n\tdevelopment = 'development',\n\ttest = 'test',\n\tproduction = 'production',\n}\n\nexport interface GenericReponse {\n\tcode: HTTPStatusCode;\n\tmessage: string;\n\tuserMessage: UserMessage;\n}\n\nexport enum UserMessageType {\n\tSuccess = 'success',\n\tWarning = 'warning',\n\tDanger = 'danger',\n}\n\nexport interface UserMessage {\n\ttype: UserMessageType;\n\tlabel: string;\n\toptions?: TOptions<{ [key: string]: any }> | string;\n}\n\nexport type OmitHistory<T> = Omit<T, 'history'>;\n// FIXME:\nexport type OmitGeneric<T extends GenericReponse> = Omit<T, 'code' | 'message' | 'userMessage'>;\n// FIXME: UNUSED\nexport type PickGeneric<T extends GenericReponse> = Pick<T, 'code' | 'message' | 'userMessage'>;\n\nexport const UnexpectedServerError: GenericReponse = {\n\tcode: HTTPStatusCode.InternalServerError,\n\tmessage: 'Unexpected Server Error',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'common:server.unexpected',\n\t},\n};\n\nexport const Unauthorized: AuthenticationResponse = {\n\tuser: undefined,\n\tcode: HTTPStatusCode.Unauthorized,\n\tmessage: 'Unauthorized!',\n\tuserMessage: {\n\t\ttype: UserMessageType.Danger,\n\t\tlabel: 'auth:expired',\n\t},\n};\n\nexport const initialState: RootState = {\n\tstatsState: {\n\t\tisLoading: false,\n\t},\n\ttournamentState: {\n\t\ttournament: null,\n\t\ttournamentsList: [],\n\t\tisLoading: false,\n\t},\n\tplayerState: {\n\t\tisLoading: false,\n\t\tplayersList: [],\n\t\tisSaving: false,\n\t},\n\tpairState: {\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t},\n\tauthState: {\n\t\tisAuthenticated: false,\n\t\tisAdmin: false,\n\t\tisLoading: false,\n\t},\n\tstage1State: {\n\t\ttoogleRefresh: false,\n\t\tselectedPairs: [\n\t\t\t{\n\t\t\t\tid: null,\n\t\t\t\ttournamentId: 0,\n\t\t\t\trowNumber: 0,\n\t\t\t\tplayer1: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\tplayer2: {\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: '',\n\t\t\t\t\tsurname: '',\n\t\t\t\t\talias: '',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\trole: PlayerRole.GoalKeeper,\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t\tmatch_played: 0,\n\t\t\t\t\tmatch_won: 0,\n\t\t\t\t\ttotal_score: 0,\n\t\t\t\t\teditable: false,\n\t\t\t\t\trowNumber: 0,\n\t\t\t\t},\n\t\t\t\talias: '-',\n\t\t\t\tstage1Name: '',\n\t\t\t\tplacement: 0,\n\t\t\t\tpaid1: false,\n\t\t\t\tpaid2: false,\n\t\t\t},\n\t\t],\n\t\tisLoading: false,\n\t\tstages: [],\n\t},\n\tstage2State: {\n\t\tisLoading: false,\n\t},\n};\n","import { toast } from 'react-toastify';\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          toast.warn('This web app is being served cache-first by a service worker.');\n          // TODO: show this message to user\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              toast.warn('New content is available and will be used when all tabs for this page are closed.');\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              toast.warn('Content is cached for offline use.');\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      toast.warn('Error during service worker registration.');\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      toast.warn('No internet connection found. App is running in offline mode.');\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer, Action } from 'typesafe-actions';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { TournamentState } from '../../@common/models/tournament.model';\n\nexport const initialTournamentState: TournamentState = {\n\ttournament: null,\n\ttournamentsList: [],\n\tisLoading: false,\n};\n\nexport const TournamentReducer = createReducer<TournamentState, Action>(initialTournamentState)\n\t// Request\n\t.handleAction(\n\t\t[\n\t\t\tTournamentAction.fetch.request,\n\t\t\tTournamentAction.save.request,\n\t\t\tTournamentAction.update.request,\n\t\t\tTournamentAction.reload.request,\n\t\t],\n\t\t(state) => ({\n\t\t\t...state,\n\t\t\tisLoading: true,\n\t\t})\n\t)\n\t// Failure\n\t.handleAction(\n\t\t[\n\t\t\tTournamentAction.fetch.failure,\n\t\t\tTournamentAction.save.failure,\n\t\t\tTournamentAction.update.failure,\n\t\t\tTournamentAction.reload.failure,\n\t\t],\n\t\t(state) => ({ ...state, isLoading: false })\n\t)\n\t// SUCCESS\n\t// Fetch Tournament\n\t.handleAction(TournamentAction.fetch.success, (state, { payload: { tournamentsList } }) => {\n\t\treturn {\n\t\t\ttournament:\n\t\t\t\tstate.tournament && tournamentsList && !tournamentsList.includes(state.tournament)\n\t\t\t\t\t? tournamentsList[0]\n\t\t\t\t\t: state.tournament,\n\t\t\ttournamentsList: tournamentsList || [],\n\t\t\tisLoading: false,\n\t\t};\n\t})\n\t// Set selected tournament\n\t.handleAction(TournamentAction.setTournament, (state, { payload }) => ({\n\t\t...state,\n\t\ttournament: payload,\n\t\tisLoading: false,\n\t}))\n\t// Create/Update a new tournament\n\t.handleAction(\n\t\t[TournamentAction.save.success, TournamentAction.update.success, TournamentAction.reload.success],\n\t\t(state, { payload: { tournament } }) => ({\n\t\t\t...state,\n\t\t\ttournament,\n\t\t\tisLoading: false,\n\t\t})\n\t)\n\t.handleAction(TournamentAction.reset, () => initialTournamentState)\n\t.handleAction(TournamentAction.purge, () => initialTournamentState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PlayerState } from '../../@common/models/player.model';\nimport { PlayerAction } from '../actions/player.action';\n\nexport const initialPlayerState: PlayerState = {\n  isLoading: false,\n  isSaving: false,\n  playersList: [],\n};\n\nexport const PlayerReducer = createReducer<PlayerState, Action>(initialPlayerState)\n  // Request\n  .handleAction([PlayerAction.fetchPlayers.request], (state) => ({\n    ...state,\n    isLoading: true,\n  }))\n  .handleAction(\n    [PlayerAction.savePlayer.request, PlayerAction.updatePlayer.request, PlayerAction.deletePlayers.request],\n    (state) => ({\n      ...state,\n      isLoading: true,\n      isSaving: true,\n    })\n  )\n  // Failure\n  .handleAction(\n    [\n      PlayerAction.fetchPlayers.failure,\n      PlayerAction.savePlayer.failure,\n      PlayerAction.updatePlayer.failure,\n      PlayerAction.deletePlayers.failure,\n    ],\n    (state, { payload: { message } }) => ({\n      ...state,\n      isLoading: false,\n    })\n  )\n  // Success\n  .handleAction([PlayerAction.savePlayer.success], (state, { payload: { player } }) => ({\n    playersList: [player, ...state.playersList],\n    isLoading: false,\n    isSaving: false,\n\t\tplayer\n  }))\n\t.handleAction([ PlayerAction.updatePlayer.success], (state, { payload: { player } }) => ({\n\t\tplayersList: state.playersList,\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t\tplayer\n\t}))\n  .handleAction([PlayerAction.deletePlayers.success], (state, { payload: { playersList } }) => ({\n    playersList: state.playersList.filter((row) => !playersList.find((selectedRow) => selectedRow.id === row.id)),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.fetchPlayers.success, (state, { payload: { playersList } }) => ({\n    playersList: playersList.map((e, i) => ({ ...e, rowNumber: i + 1 })),\n    isLoading: false,\n    isSaving: false,\n  }))\n  .handleAction(PlayerAction.setPlayer, (state, { payload }) => ({ ...state, player: payload }))\n  .handleAction(PlayerAction.purge, () => initialPlayerState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { PairState } from '../../@common/models';\nimport { PairAction } from '../actions';\n\nexport const initialPairState: PairState = {\n\tisLoading: false,\n\tisSaving: false,\n};\n\nexport const PairReducer = createReducer<PairState, Action>(initialPairState)\n\t// Request\n\t.handleAction([PairAction.fetch.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t// Failure\n\t.handleAction([PairAction.fetch.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Fetch Tournament\n\t.handleAction(PairAction.fetch.success, (state, { payload: { pairsList } }) => ({\n\t\tpairsList,\n\t\tisLoading: false,\n\t\tisSaving: false,\n\t}))\n\t.handleAction(PairAction.reset, () => initialPairState)\n\t.handleAction(PairAction.purge, () => initialPairState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { AuthState } from '../../@common/models/auth.model';\nimport { AuthAction } from '../actions/auth.action';\nimport { UserRole } from '../../@common/dto';\n\nexport const initialSessionState: AuthState = {\n\tisAuthenticated: false,\n\tisAdmin: false,\n\tisLoading: false,\n};\n\nexport const SessionReducer = createReducer<AuthState, Action>(initialSessionState)\n\t// Just unsubscribe user from tournament\n\t.handleAction(AuthAction.unsubscribe.request, (state) => state)\n\t.handleAction(AuthAction.unsubscribe.failure, (state) => state)\n\t.handleAction(AuthAction.unsubscribe.success, (state) => state)\n\t// Request\n\t.handleAction(\n\t\t[\n\t\t\tAuthAction.checkAuthentication.request,\n\t\t\tAuthAction.registration.request,\n\t\t\tAuthAction.login.request,\n\t\t\tAuthAction.logout.request,\n\t\t\tAuthAction.update.request,\n\t\t\tAuthAction.delete.request,\n\t\t],\n\t\t(state) => ({ ...state, isLoading: true })\n\t)\n\t// Failure\n\t.handleAction(\n\t\t[AuthAction.checkAuthentication.failure, AuthAction.registration.failure, AuthAction.login.failure],\n\t\t() => ({\n\t\t\tisLoading: false,\n\t\t\tuser: undefined,\n\t\t\tisAdmin: false,\n\t\t\tisAuthenticated: false,\n\t\t})\n\t)\n\t.handleAction([AuthAction.logout.failure, AuthAction.update.failure, AuthAction.delete.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Success\n\t.handleAction(\n\t\t[\n\t\t\tAuthAction.checkAuthentication.success,\n\t\t\tAuthAction.registration.success,\n\t\t\tAuthAction.login.success,\n\t\t\tAuthAction.logout.success,\n\t\t\tAuthAction.update.success,\n\t\t\tAuthAction.delete.success,\n\t\t\tAuthAction.updateSession,\n\t\t],\n\t\t(state, { payload: { user } }) => ({\n\t\t\tuser,\n\t\t\tisAuthenticated: !!user,\n\t\t\tisAdmin: user ? user.role === UserRole.Admin : false,\n\t\t\tisLoading: false,\n\t\t})\n\t)\n\t.handleAction(AuthAction.purge, () => initialSessionState);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { getEmptyPair, Stage1State } from '../../@common/models';\nimport { Stage1Action } from '../actions';\nimport { Stage1Row } from '../../@common/dto';\n\nconst emptyPair = getEmptyPair('-');\nexport const initialStage1State: Stage1State = {\n\ttoogleRefresh: false,\n\tselectedPairs: [emptyPair],\n\tisLoading: false,\n\tstages: [],\n};\n\nexport const Stage1Reducer = createReducer<Stage1State, Action>(initialStage1State)\n\t// SSE\n\t.handleAction([Stage1Action.reloadFromServer], (state) => ({ ...state, toogleRefresh: !state.toogleRefresh }))\n\t.handleAction([Stage1Action.resetPairs], (state) => ({ ...state, selectedPairs: [emptyPair] }))\n\t//\n\t.handleAction([Stage1Action.fetchStage1.request, Stage1Action.updateSelectedPairs.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t.handleAction([Stage1Action.fetchStage1.failure, Stage1Action.updateSelectedPairs.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Aggiornamento valore cella/posizionamento\n\t.handleAction([Stage1Action.updateCellStage1.success, Stage1Action.updatePlacement.success], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Reperimento dati\n\t.handleAction([Stage1Action.fetchStage1.success], (state, { payload: { stageName, rows, pairsList } }) => {\n\t\tconst currentStage = state.stages.filter((s) => s.stageName === stageName);\n\t\tconst newStage =\n\t\t\tcurrentStage && currentStage.length > 0\n\t\t\t\t? { ...currentStage[0], rows }\n\t\t\t\t: { pairsList, stageName, rows, autoOrder: false, isLoading: false };\n\t\treturn {\n\t\t\t...state,\n\t\t\tstages: [...state.stages.filter((s) => s.stageName !== stageName), newStage],\n\t\t\tisLoading: false,\n\t\t};\n\t})\n\t// Aggiornamento coppie selezionate dati vari gironi\n\t.handleAction([Stage1Action.updateSelectedPairs.success], (state, { payload: { stage1Name, stage1Rows } }) => {\n\t\tconst selected =\n\t\t\tstate.selectedRows && state.selectedRows.size > 0 ? state.selectedRows : new Map<string, Stage1Row[]>();\n\t\tselected.set(stage1Name, stage1Rows);\n\n\t\tconst selectedPairs = state.selectedPairs\n\t\t\t? [\n\t\t\t\t\t// Filtro selectedPairs\n\t\t\t\t\t//  e.id === null : mantengo il placeholder\n\t\t\t\t\t//  e.stage1Name !== stageName : matengo tutte le coppie che non appartengo al girone attuale\n\t\t\t\t\t...state.selectedPairs.filter((e) => e.id === null || e.stage1Name !== stage1Name),\n\t\t\t\t\t...stage1Rows.map((e) => e.pair),\n\t\t\t  ]\n\t\t\t: [...stage1Rows.map((e) => e.pair)];\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tselectedRows: selected,\n\t\t\tselectedPairs,\n\t\t\tisLoading: false,\n\t\t};\n\t})\n\t.handleAction(Stage1Action.reset, () => initialStage1State)\n\t.handleAction(Stage1Action.purge, () => initialStage1State);\n","import { createReducer, Action } from 'typesafe-actions';\nimport { Stage2State } from '../../@common/models';\nimport { Stage2Action } from '../actions';\n\nexport const initialStage2State: Stage2State = {\n\tisLoading: false,\n};\n\nexport const Stage2Reducer = createReducer<Stage2State, Action>(initialStage2State)\n\t// Request\n\t.handleAction([Stage2Action.fetchStage2.request, Stage2Action.delete.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t// Failure\n\t.handleAction([Stage2Action.fetchStage2.failure], state => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t// Success\n\t.handleAction([Stage2Action.fetchStage2.success], (state, { payload: { cells, count } }) => ({\n\t\t...state,\n\t\tcells,\n\t\tcount,\n\t\tisLoading: false,\n\t}))\n\t.handleAction([Stage2Action.delete.success], (state) => ({\n\t\t...state,\n\t\tcells: undefined,\n\t\tcount: 0,\n\t\tisLoading: false,\n\t}))\n\t.handleAction([Stage2Action.setCells], (state, { payload }) => ({\n\t\t...state,\n\t\tcells: payload,\n\t}))\n\t.handleAction([Stage2Action.setLoading], (state, { payload }) => ({\n\t\t...state,\n\t\tisLoading: payload,\n\t}))\n\t.handleAction(Stage2Action.reset, () => initialStage2State)\n\t.handleAction(Stage2Action.purge, () => initialStage2State);\n","import { StatsState } from 'src/@common/models';\nimport { createReducer, Action } from 'typesafe-actions';\nimport { StatsAction } from '../actions';\n\nexport const initialStatsState: StatsState = {\n\tisLoading: false,\n};\n\nexport const StatsReducer = createReducer<StatsState, Action>(initialStatsState)\n\t.handleAction([StatsAction.fetchBestPairs.request, StatsAction.fetchBestPlayers.request], (state) => ({\n\t\t...state,\n\t\tisLoading: true,\n\t}))\n\t.handleAction([StatsAction.fetchBestPairs.failure, StatsAction.fetchBestPlayers.failure], (state) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t}))\n\t.handleAction([StatsAction.fetchBestPairs.success], (state, { payload: { stats } }) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t\tpairs: stats,\n\t}))\n\t.handleAction([StatsAction.fetchBestPlayers.success], (state, { payload: { stats } }) => ({\n\t\t...state,\n\t\tisLoading: false,\n\t\tplayers: stats,\n\t}));\n","import {\n\tDeleteTournamentRequest,\n\tDeleteTournamentResponse,\n\tFetchTournamentsRequest,\n\tFetchTournamentsResponse,\n\tReloadTournamentRequest,\n\tReloadTournamentResponse,\n\tSaveTournamentRequest,\n\tSaveTournamentResponse,\n\tUpdateTournamentRequest,\n\tUpdateTournamentResponse,\n} from '../../@common/models/tournament.model';\nimport { postWrapper, putWrapper, getWrapper, deleteWrapper } from '../../@common/utils/fetch.utils';\nimport { OmitHistory } from '../../@common/models';\n\nexport const reloadTournament = (request: ReloadTournamentRequest) =>\n\tgetWrapper<ReloadTournamentResponse>(`/api/v2/tournament/${encodeURIComponent(request.tId)}`);\n\nexport const fetchTournaments = (request: OmitHistory<FetchTournamentsRequest>) =>\n\tgetWrapper<FetchTournamentsResponse>('/api/v2/tournament/list');\n\nexport const postTournament = (request: OmitHistory<SaveTournamentRequest>) =>\n\tpostWrapper<SaveTournamentRequest, SaveTournamentResponse>('/api/v2/tournament/new', request);\n\nexport const updateTournament = (request: UpdateTournamentRequest) =>\n\tputWrapper<UpdateTournamentRequest, UpdateTournamentResponse>('/api/v2/tournament/update', request);\n\nexport const deleteTournament = (request: DeleteTournamentRequest) =>\n\tdeleteWrapper<DeleteTournamentRequest, DeleteTournamentResponse>('/api/v2/tournament/delete', request);\n","import {\n\tGenericReponse,\n\tOmitHistory,\n\tUnexpectedServerError,\n\tUserMessage,\n\tUserMessageType,\n} from '../../@common/models/common.models';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { put, call, StrictEffect } from 'redux-saga/effects';\nimport { PayloadActionCreator } from 'typesafe-actions';\nimport { toast } from 'react-toastify';\nimport i18n from '../../i18n/i18n';\n\ninterface IActionCallback<T> {\n\t(response: T): void | Promise<void> | Generator<StrictEffect, void, void>;\n}\n\nconst GeneratorFunction = function* () {/* this is a template */}.constructor;\nconst AsyncFunction = async function () {/* this is a template */}.constructor;\nconst NormalFunction = function () {/* this is a template */}.constructor;\n\nfunction* execCallBack<TRes>(callBack: IActionCallback<TRes>, response: TRes) {\n\tif (callBack instanceof GeneratorFunction) {\n\t\tconst genFunction: typeof GeneratorFunction = callBack;\n\t\tyield* genFunction(response);\n\t} else if (callBack instanceof AsyncFunction) {\n\t\tconst asyncFunction: typeof AsyncFunction = callBack;\n\t\tyield asyncFunction(response);\n\t} else {\n\t\tconst normalFunction: typeof NormalFunction = callBack;\n\t\tnormalFunction(response);\n\t}\n}\n\ninterface ActionType<TReq, TRes extends GenericReponse, TErr> {\n\trequest: PayloadActionCreator<string, TReq>;\n\tsuccess: PayloadActionCreator<string, TRes>;\n\tfailure: PayloadActionCreator<string, TErr | typeof UnexpectedServerError>;\n}\n\nexport const getMessage = (message: UserMessage) => i18n.t(message.label, message.options);\nexport const getToast = (type: UserMessageType) => {\n\tlet alert = null;\n\tswitch (type) {\n\t\tcase UserMessageType.Success:\n\t\t\talert = toast.success;\n\t\t\tbreak;\n\t\tcase UserMessageType.Warning:\n\t\t\talert = toast.warn;\n\t\t\tbreak;\n\t\tcase UserMessageType.Danger:\n\t\t\talert = toast.error;\n\t\t\tbreak;\n\t}\n\treturn alert;\n};\nexport function* entityLifeCycle<TReq, TRes extends GenericReponse, TErr extends GenericReponse>(\n\taction: ActionType<TReq, TRes, TErr>,\n\tmethod: (p: OmitHistory<TReq>) => TRes | Promise<TRes | typeof UnexpectedServerError>,\n\tpayload: OmitHistory<TReq>,\n\tonSuccess?: IActionCallback<TRes>,\n\tonFailure?: IActionCallback<TErr>,\n\tshowMessage: boolean = true\n): Generator<StrictEffect, void, any> {\n\ttry {\n\t\t// Call method with payload\n\t\tconst response: TRes | TErr = yield call(method, payload);\n\t\tconst { userMessage: message } = response;\n\n\t\tif (showMessage && message && message.label) {\n\t\t\tconst messageText = getMessage(message);\n\t\t\tgetToast(message.type)(messageText);\n\t\t}\n\n\t\t// If success\n\t\tif (SuccessCodes.includes(response.code)) {\n\t\t\tconst successRes = response as TRes;\n\t\t\t// Show success toast\n\t\t\t// Dispatch success action\n\t\t\tyield put(action.success(successRes));\n\t\t\t// Callback\n\t\t\tif (onSuccess) {\n\t\t\t\tyield* execCallBack<TRes>(onSuccess, successRes);\n\t\t\t}\n\t\t} else {\n\t\t\tconst failureRes = response as TErr;\n\t\t\t// Dispatch failure action\n\t\t\tyield put(action.failure(failureRes));\n\t\t\t// Callback\n\t\t\tif (onFailure) {\n\t\t\t\tyield* execCallBack<TErr>(onFailure, failureRes);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('entityLifeCycle.error : ', err);\n\t\tyield put(action.failure(UnexpectedServerError));\n\t}\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { fetchTournaments, postTournament, reloadTournament, updateTournament } from '../services/tournament.service';\nimport {\n\tSaveTournamentResponse,\n\tFetchTournamentsResponse,\n\tUpdateTournamentResponse,\n\tFetchTournamentsRequest,\n\tUpdateTournamentRequest,\n\tSaveTournamentRequest,\n\tTournamentError,\n\tReloadTournamentRequest,\n\tReloadTournamentResponse,\n\tRedirect,\n} from '../../@common/models/tournament.model';\nimport { TournamentAction } from '../actions/tournament.action';\nimport { entityLifeCycle } from './utils';\nimport { PairAction, Stage1Action, Stage2Action, StatsAction } from '../actions';\n\nconst onSuccessRedirect = (redirect?: Redirect) => {\n\tif (redirect) {\n\t\tredirect.history.push(redirect.path);\n\t}\n};\n\n// https://medium.com/swlh/asynchronous-with-redux-sagas-b43c9630f218\nfunction* fetchTournamentsSaga({ payload }: ReturnType<typeof TournamentAction.fetch.request>) {\n\tconst onSuccess = (response: FetchTournamentsResponse) => {\n\t\tonSuccessRedirect(payload.redirect);\n\t};\n\tyield* entityLifeCycle<FetchTournamentsRequest, FetchTournamentsResponse, TournamentError>(\n\t\tTournamentAction.fetch,\n\t\tfetchTournaments,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* reloadTournamentSaga({ payload }: ReturnType<typeof TournamentAction.reload.request>) {\n\tyield* entityLifeCycle<ReloadTournamentRequest, ReloadTournamentResponse, TournamentError>(\n\t\tTournamentAction.reload,\n\t\treloadTournament,\n\t\tpayload,\n\t\t() => onSuccessRedirect(payload.redirect),\n\t\tundefined,\n\t\tfalse\n\t);\n}\n\nfunction* saveTournamentSaga({ payload }: ReturnType<typeof TournamentAction.save.request>) {\n\tconst onSuccess = function* (response: SaveTournamentResponse) {\n\t\t// Reload tournament List\n\t\tyield put(TournamentAction.fetch.request({}));\n\t\t// Reset next steps\n\t\tyield put(PairAction.reset({}));\n\t\tyield put(Stage1Action.reset({}));\n\t\tyield put(Stage2Action.reset({}));\n\t\t// Send user to pair page\n\t\tpayload.history.push('/tournament');\n\t};\n\tyield* entityLifeCycle<SaveTournamentRequest, SaveTournamentResponse, TournamentError>(\n\t\tTournamentAction.save,\n\t\tpostTournament,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* updateTournamentSaga({ payload }: ReturnType<typeof TournamentAction.update.request>) {\n\tyield* entityLifeCycle<UpdateTournamentRequest, UpdateTournamentResponse, TournamentError>(\n\t\tTournamentAction.update,\n\t\tupdateTournament,\n\t\tpayload\n\t);\n}\n\nexport const TournamentSagas = [\n\ttakeEvery(TournamentAction.reload.request, reloadTournamentSaga),\n\ttakeEvery(TournamentAction.fetch.request, fetchTournamentsSaga),\n\ttakeEvery(TournamentAction.save.request, saveTournamentSaga),\n\ttakeEvery(TournamentAction.update.request, updateTournamentSaga),\n];\n","import {\n\tDeletePlayersRequest,\n\tDeletePlayersResponse,\n\tFetchPlayersRequest,\n\tFetchPlayersResponse,\n\tPlayerError,\n\tSavePlayerRequest,\n\tSavePlayerResponse,\n} from '../../@common/models';\nimport { takeEvery } from 'redux-saga/effects';\nimport { PlayerAction } from '../actions/player.action';\nimport { fetchPlayers, deletePlayers, savePlayer, updatePlayer } from '../services/player.service';\nimport { entityLifeCycle } from './utils';\n\nconst back = (payload: DeletePlayersRequest | SavePlayerRequest) => payload.history?.push('/player');\n\nfunction* getPlayersSaga({ payload }: ReturnType<typeof PlayerAction.fetchPlayers.request>) {\n\tyield* entityLifeCycle<FetchPlayersRequest, FetchPlayersResponse, PlayerError>(\n\t\tPlayerAction.fetchPlayers,\n\t\tfetchPlayers,\n\t\tpayload\n\t);\n}\n\nfunction* deletePlayersSaga({ payload }: ReturnType<typeof PlayerAction.deletePlayers.request>) {\n\tyield* entityLifeCycle<DeletePlayersRequest, DeletePlayersResponse, PlayerError>(\n\t\tPlayerAction.deletePlayers,\n\t\tdeletePlayers,\n\t\tpayload,\n\t\t() => back(payload)\n\t);\n}\n\nfunction* savePlayerSaga({ payload }: ReturnType<typeof PlayerAction.savePlayer.request>) {\n\tyield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(\n\t\tPlayerAction.savePlayer,\n\t\tsavePlayer,\n\t\tpayload,\n\t\t() => back(payload)\n\t);\n}\n\nfunction* updatePlayerSaga({ payload }: ReturnType<typeof PlayerAction.updatePlayer.request>) {\n\tyield* entityLifeCycle<SavePlayerRequest, SavePlayerResponse, PlayerError>(\n\t\tPlayerAction.updatePlayer,\n\t\tupdatePlayer,\n\t\tpayload,\n\t\t() => back(payload)\n\t);\n}\n\nexport const PlayersSagas = [\n\ttakeEvery(PlayerAction.fetchPlayers.request, getPlayersSaga),\n\ttakeEvery(PlayerAction.deletePlayers.request, deletePlayersSaga),\n\ttakeEvery(PlayerAction.savePlayer.request, savePlayerSaga),\n\ttakeEvery(PlayerAction.updatePlayer.request, updatePlayerSaga),\n];\n","import { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { PairAction } from '../actions';\nimport { fetchPairs } from '../services/pair.service';\nimport { FetchPairsResponse, FetchPairsRequest, PairError } from '../../@common/models';\nimport { entityLifeCycle } from './utils';\n\nfunction* getPairsSaga({ payload }: ReturnType<typeof PairAction.fetch.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<FetchPairsRequest, FetchPairsResponse, PairError>(\n\t\tPairAction.fetch,\n\t\tfetchPairs,\n\t\tpayload,\n\t\t() => {\n      if (payload.history) {\n        payload.history.push('/stage1');\n      }\n    }\n\t);\n}\n\nexport const PairsSagas = [takeEvery(PairAction.fetch.request, getPairsSaga)];\n","import { Stage1Action } from '../actions';\nimport { StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { fetchStage1, updateCellStage1, updatePlacement } from '../services/stage1.service';\nimport {\n\tFetchStage1Request,\n\tFetchStage1Response,\n\tSelectPairsRequest,\n\tSelectPairsResponse, Stage1Error,\n\tUpdateCellRequest,\n\tUpdateCellResponse,\n\tUpdatePlacementRequest,\n\tUpdatePlacementResponse,\n} from '../../@common/models';\nimport { entityLifeCycle } from './utils';\nimport { selectPairs } from '../services/pair.service';\n\nfunction* fetchSaga({ payload }: ReturnType<typeof Stage1Action.fetchStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<FetchStage1Request, FetchStage1Response,Stage1Error>(Stage1Action.fetchStage1, fetchStage1, payload);\n}\n\nfunction* updateCellSaga({payload,}: ReturnType<typeof Stage1Action.updateCellStage1.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdateCellRequest, UpdateCellResponse,Stage1Error>( Stage1Action.updateCellStage1, updateCellStage1,payload );\n}\n\nfunction* updatePlacementSaga({ payload }: ReturnType<typeof Stage1Action.updatePlacement.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<UpdatePlacementRequest, UpdatePlacementResponse,Stage1Error>(Stage1Action.updatePlacement, updatePlacement, payload, undefined,undefined,false );\n}\n\nfunction* updateSelectedPairsSaga({ payload }: ReturnType<typeof Stage1Action.updateSelectedPairs.request>): Generator<StrictEffect, void, any> {\n  yield* entityLifeCycle<SelectPairsRequest, SelectPairsResponse,Stage1Error>(Stage1Action.updateSelectedPairs, selectPairs, payload );\n}\n\nexport const Stage1Sagas = [\n  takeEvery(Stage1Action.fetchStage1.request, fetchSaga),\n  takeEvery(Stage1Action.updateCellStage1.request, updateCellSaga),\n  takeEvery(Stage1Action.updatePlacement.request, updatePlacementSaga),\n  takeEvery(Stage1Action.updateSelectedPairs.request, updateSelectedPairsSaga),\n];\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { Stage2Action, TournamentAction } from '../actions';\nimport { fetchStage2, updateCells, deleteStage2 } from '../services/stage2.service';\nimport {\n\tFetchStage2Response,\n\tDeleteStage2Response,\n\tDeleteStage2Request,\n\tStage2Error,\n\tFetchStage2Request,\n\tUpdateStage2CellRequest,\n\tUpdateStage2CellResponse,\n} from '../../@common/models';\nimport { TournamentSelector } from '../selectors';\nimport { TournamentProgress } from '../../@common/dto';\nimport { entityLifeCycle } from './utils';\n\nfunction* deleteStage2Saga({ payload }: ReturnType<typeof Stage2Action.delete.request>) {\n\tconst onSuccess = function* () {\n\t\tconst tournament = yield select(TournamentSelector.getTournament);\n\t\ttournament.progress = TournamentProgress.Stage1;\n\t\tyield put(TournamentAction.update.request({ tournament }));\n\t};\n\tyield* entityLifeCycle<DeleteStage2Request, DeleteStage2Response, Stage2Error>(\n\t\tStage2Action.delete,\n\t\tdeleteStage2,\n\t\tpayload,\n\t\tonSuccess\n\t);\n}\n\nfunction* fetchStage2Saga({ payload }: ReturnType<typeof Stage2Action.fetchStage2.request>) {\n\tyield* entityLifeCycle<FetchStage2Request, FetchStage2Response, Stage2Error>(\n\t\tStage2Action.fetchStage2,\n\t\tfetchStage2,\n\t\tpayload\n\t);\n}\n\nfunction* updateCellsSaga({ payload }: ReturnType<typeof Stage2Action.updateCell.request>) {\n\tyield* entityLifeCycle<UpdateStage2CellRequest, UpdateStage2CellResponse, Stage2Error>(\n\t\tStage2Action.updateCell,\n\t\tupdateCells,\n\t\tpayload\n\t);\n}\n\nexport const Stage2Sagas = [\n\ttakeEvery(Stage2Action.fetchStage2.request, fetchStage2Saga),\n\ttakeEvery(Stage2Action.updateCell.request, updateCellsSaga),\n\ttakeEvery(Stage2Action.delete.request, deleteStage2Saga),\n];\n","import {\n\tAuthenticationResponse,\n\tLoginRequest,\n\tRegistrationRequest,\n\tUpdateUserRequest,\n\tDeleteUserRequest,\n\tLogoutRequest, SessionStatus, Message, UnsubscribeRequest, UnsubscribeResponse\n} from '../../@common/models';\nimport { OmitHistory } from '../../@common/models/common.models';\nimport {putWrapper, deleteWrapper, postWrapper, getWrapper} from '../../@common/utils';\nimport {buffers, END, eventChannel} from 'redux-saga';\n\n// Update\nexport const updateUser = (updateUserRequest: OmitHistory<UpdateUserRequest>) =>\n\tputWrapper<UpdateUserRequest, AuthenticationResponse>('/api/v2/auth/update', updateUserRequest);\n// Delete\nexport const deleteUser = (deleteUserRequest: OmitHistory<DeleteUserRequest>) =>\n\tdeleteWrapper<DeleteUserRequest, AuthenticationResponse>('/api/v2/auth/delete', deleteUserRequest);\n// Login\nexport const login = (loginRequest: OmitHistory<LoginRequest>) =>\n\tpostWrapper<LoginRequest, AuthenticationResponse>('/api/v2/auth/login', loginRequest);\n// Login\nexport const logout = (logoutRequest:OmitHistory<LogoutRequest>) => getWrapper<AuthenticationResponse>('/api/v2/auth/logout');\n// Registration\nexport const registration = ( registrationRequest: OmitHistory<RegistrationRequest>) => postWrapper<RegistrationRequest, AuthenticationResponse>('/api/v2/auth/register', registrationRequest);\nexport const checkAuthentication = () => getWrapper<AuthenticationResponse>('/api/v2/auth/check');\nexport const unsubscribe = () => putWrapper<UnsubscribeRequest, UnsubscribeResponse>('/api/v2/auth/unsubscribe');\n\nexport const createSessionChannel = (channel: EventSource) =>\n\teventChannel<Message>((emitter) => {\n\t\t// Listen for open channel\n\t\tconst openListener = (event: Event) => console.log('Connected...');\n\t\t// Listen for new message\n\t\tconst messageListener = (messageEvent: MessageEvent) => {\n\t\t\tif (messageEvent) {\n\t\t\t\tconst message = JSON.parse(messageEvent.data) as Message;\n\t\t\t\temitter(message);\n\t\t\t\t// Close connection on session expires\n\t\t\t\tif (message.status === SessionStatus.SESSION_EXPIRED) {\n\t\t\t\t\tcloseConnection();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// Listen for error\n\t\tconst errorListener = (event: Event) => {\n\t\t\tconsole.error('An Error Occur: ', event);\n\t\t\temitter(END);\n\t\t\tcloseConnection();\n\t\t};\n\n\t\t// Add listener\n\t\tchannel.addEventListener('open', openListener);\n\t\tchannel.addEventListener('message', messageListener);\n\t\tchannel.addEventListener('error', errorListener);\n\t\t// Cleanup function\n\t\tconst closeConnection = () => {\n\t\t\t// Remove listener\n\t\t\tchannel.removeEventListener('open', openListener);\n\t\t\tchannel.removeEventListener('message', messageListener);\n\t\t\tchannel.removeEventListener('error', errorListener);\n\t\t\tchannel.close();\n\t\t};\n\t\treturn closeConnection;\n\t}, buffers.expanding());\n","import { put, call, StrictEffect, takeEvery, take, takeLatest, delay, select } from 'redux-saga/effects';\nimport { AuthAction } from '../actions/auth.action';\nimport {\n\tAuthenticationError,\n\tAuthenticationResponse,\n\tCheckAuthenticationRequest,\n\tDeleteUserRequest,\n\tLoginRequest,\n\tLogoutRequest,\n\tRegistrationRequest,\n\tRegistrationResponse,\n\tUnauthorized,\n\tUnsubscribeRequest,\n\tUnsubscribeResponse,\n\tUpdateUserRequest,\n} from '../../@common/models';\nimport {\n\tcheckAuthentication,\n\tcreateSessionChannel,\n\tlogin,\n\tregistration,\n\tupdateUser,\n\tdeleteUser,\n\tlogout,\n\tunsubscribe,\n} from '../services/auth.service';\nimport { toast } from 'react-toastify';\nimport { Action } from 'typesafe-actions';\nimport { persistor } from '../store';\nimport { Stage1Action, Stage2Action, TournamentAction } from '../actions';\nimport { Message, SessionStatus, UserMessageType } from '../../@common/models/common.models';\nimport { entityLifeCycle, getToast } from './utils';\nimport i18next from '../../i18n/i18n';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { TournamentSelector } from '../selectors';\n\nfunction* checkAuthenticationSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.checkAuthentication.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\t//yield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<CheckAuthenticationRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.checkAuthentication,\n\t\tcheckAuthentication,\n\t\t{},\n\t\tonSuccess,\n\t\tundefined,\n\t\tfalse\n\t);\n}\n\n/*\nFIXME:\nhttps://github.com/redux-saga/redux-saga/issues/868\nhttps://github.com/redux-saga/redux-saga/blob/master/docs/advanced/Channels.md#using-the-eventchannel-factory-to-connect-to-external-events\nhttps://github.com/redux-saga/redux-saga/issues/940#issuecomment-298170212\n*/\nconst showMessage = (message: Message, type: UserMessageType) => {\n\tif (message.label) {\n\t\tgetToast(type)(\n\t\t\ti18next.t(\n\t\t\t\tmessage.label,\n\t\t\t\tmessage.data?.name && message.data?.date\n\t\t\t\t\t? { tournament: `${message.data.name}@${formatDate(message.data.date)}` }\n\t\t\t\t\t: undefined\n\t\t\t)\n\t\t);\n\t}\n};\n\nfunction* watchSessionSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.sessionControl.request>): Generator<StrictEffect, void, any> {\n\ttry {\n\t\tconst eventChannel = new EventSource('/sse/v1/session');\n\t\tconst channel = yield call(createSessionChannel, eventChannel);\n\t\twhile (true) {\n\t\t\tconst message: Message = yield take(channel);\n\t\t\tconst tournament = yield select(TournamentSelector.getTournament);\n\t\t\t// https://fkhadra.github.io/react-toastify/render-what-you-want/\n\t\t\tswitch (message.status) {\n\t\t\t\t// Session\n\t\t\t\tcase SessionStatus.SESSION_EXPIRED:\n\t\t\t\t\tshowMessage(message, UserMessageType.Danger);\n\t\t\t\t\tyield delay(3000);\n\t\t\t\t\tyield put(AuthAction.logout.success(Unauthorized));\n\t\t\t\t\thistory.push('/login');\n\t\t\t\t\tpersistor.purge();\n\t\t\t\t\tbreak;\n\t\t\t\t// Tournament\n\t\t\t\tcase SessionStatus.TOURNAMENT_NEW:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.TOURNAMENT_UPDATE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(TournamentAction.reload.request({ tId: tournament.id }));\n\t\t\t\t\tbreak;\n\t\t\t\t/*\n\t\t\t\t\tcase SessionStatus.TOURNAMENT_DELETE:\n\t\t\t\t\t\ttoast.warn(i18next.t(message.label!));\n\t\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\tbreak;\n\t\t\t\t*/\n\t\t\t\t// Stage 1\n\t\t\t\tcase SessionStatus.STAGE1_UPDATE:\n\t\t\t\t\tif (message.label) {\n\t\t\t\t\t\ttoast.success(i18next.t(message.label));\n\t\t\t\t\t}\n\t\t\t\t\tyield put(Stage1Action.reloadFromServer({}));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.STAGE1_DELETE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Warning);\n\t\t\t\t\t// Reload tournament list\n\t\t\t\t\thistory.push('/');\n\t\t\t\t\tyield put(TournamentAction.reset({}));\n\t\t\t\t\tyield put(TournamentAction.fetch.request({}));\n\t\t\t\t\tyield put(Stage1Action.reset({}));\n\t\t\t\t\tbreak;\n\t\t\t\t// Stage 2\n\t\t\t\tcase SessionStatus.STAGE2_UPDATE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Success);\n\t\t\t\t\tyield put(Stage2Action.fetchStage2.request({ tournamentId: message.data!.tournamentId! }));\n\t\t\t\t\tbreak;\n\t\t\t\tcase SessionStatus.STAGE2_DELETE:\n\t\t\t\t\tshowMessage(message, UserMessageType.Warning);\n\t\t\t\t\tyield delay(5000);\n\t\t\t\t\t// Reload only this tournament\n\t\t\t\t\tyield put(Stage2Action.reset({}));\n\t\t\t\t\tyield put(TournamentAction.reload.request({ tId: tournament.id }));\n\t\t\t\t\thistory.push('/stage1');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.log('watchSessionSaga.err : ', err);\n\t}\n}\n\n// Logout\nfunction* logoutSaga({\n\tpayload: { history },\n}: ReturnType<typeof AuthAction.logout.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = async () => {\n\t\tawait persistor.purge();\n\t\thistory.push('/');\n\t};\n\tyield* entityLifeCycle<LogoutRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.logout,\n\t\tlogout,\n\t\t{},\n\t\tonSuccess\n\t);\n}\n\n// Login\nfunction* loginSaga({\n\tpayload: { history, ...loginRequest },\n}: ReturnType<typeof AuthAction.login.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\t// yield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<LoginRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.login,\n\t\tlogin,\n\t\tloginRequest,\n\t\tonSuccess\n\t);\n}\n\n// Registration\nfunction* registrationSaga({\n\tpayload: { history, ...registrationRequest },\n}: ReturnType<typeof AuthAction.registration.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.sessionControl.request({ history }));\n\t\t// yield put(TournamentAction.fetch.request({}));\n\t};\n\tyield* entityLifeCycle<RegistrationRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.registration,\n\t\tregistration,\n\t\tregistrationRequest,\n\t\tonSuccess\n\t);\n}\n\nfunction* unsubscribeSaga(payload: ReturnType<typeof AuthAction.unsubscribe.request>) {\n\tyield* entityLifeCycle<UnsubscribeRequest, UnsubscribeResponse, AuthenticationError>(\n\t\tAuthAction.unsubscribe,\n\t\tunsubscribe,\n\t\t{}\n\t);\n}\n\n// Update user\nfunction* updateUserSaga({\n\tpayload: { history, ...updateUserRequest },\n}: ReturnType<typeof AuthAction.update.request>): Generator<StrictEffect, void, any> {\n\tyield* entityLifeCycle<UpdateUserRequest, AuthenticationResponse, AuthenticationError>(\n\t\tAuthAction.update,\n\t\tupdateUser,\n\t\tupdateUserRequest,\n\t\t() => history.push('/')\n\t);\n}\n\n// Delete user\nfunction* deleteUserSaga({\n\tpayload: { history, ...deleteUserRequest },\n}: ReturnType<typeof AuthAction.delete.request>): Generator<StrictEffect, void, any> {\n\tconst onSuccess = function* () {\n\t\tyield put(AuthAction.logout.request({ history }));\n\t};\n\tyield* entityLifeCycle<DeleteUserRequest, RegistrationResponse, AuthenticationError>(\n\t\tAuthAction.delete,\n\t\tdeleteUser,\n\t\tdeleteUserRequest,\n\t\tonSuccess\n\t);\n}\n\nfunction logger(action: Action<any>) {\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconsole.log('Action : ', action);\n\t}\n}\n\nexport const SessionSagas = [\n\ttakeEvery(AuthAction.unsubscribe.request, unsubscribeSaga),\n\ttakeEvery(AuthAction.logout.request, logoutSaga),\n\ttakeEvery(AuthAction.login.request, loginSaga),\n\ttakeEvery(AuthAction.update.request, updateUserSaga),\n\ttakeEvery(AuthAction.delete.request, deleteUserSaga),\n\ttakeEvery(AuthAction.registration.request, registrationSaga),\n\ttakeEvery(AuthAction.checkAuthentication.request, checkAuthenticationSaga),\n\ttakeLatest(AuthAction.sessionControl.request, watchSessionSaga),\n\ttakeEvery('*', logger),\n];\n","import {\n\tFetchPlayersRequest,\n\tFetchPlayersResponse,\n\tPlayerError,\n\tStatsBestPairsRequest,\n\tStatsBestPairsResponse,\n\tStatsBestPlayersRequest,\n\tStatsBestPlayersResponse,\n\tStatsError,\n} from '../../@common/models';\nimport { takeEvery } from 'redux-saga/effects';\nimport { entityLifeCycle } from './utils';\nimport { StatsAction } from '../actions';\nimport { fetchBestPairs, fetchBestPlayers } from '../services/stats.service';\n\nfunction* getBestPairs({ payload }: ReturnType<typeof StatsAction.fetchBestPairs.request>) {\n\tyield* entityLifeCycle<StatsBestPairsRequest, StatsBestPairsResponse, StatsError>(\n\t\tStatsAction.fetchBestPairs,\n\t\tfetchBestPairs,\n\t\tpayload\n\t);\n}\nfunction* getBestPlayers({ payload }: ReturnType<typeof StatsAction.fetchBestPairs.request>) {\n\tyield* entityLifeCycle<StatsBestPlayersRequest, StatsBestPlayersResponse, StatsError>(\n\t\tStatsAction.fetchBestPlayers,\n\t\tfetchBestPlayers,\n\t\tpayload\n\t);\n}\n\nexport const StatsSagas = [\n\ttakeEvery(StatsAction.fetchBestPairs.request, getBestPairs),\n\ttakeEvery(StatsAction.fetchBestPlayers.request, getBestPlayers),\n];\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose, combineReducers, ReducersMapObject } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localForage from 'localforage';\nimport { RootState } from '../@common/models';\nimport {\n\tTournamentReducer,\n\tPlayerReducer,\n\tPairReducer,\n\tSessionReducer,\n\tStage1Reducer,\n\tStage2Reducer,\n\tStatsReducer,\n\tinitialTournamentState,\n\tinitialPairState,\n\tinitialPlayerState,\n\tinitialStage1State,\n\tinitialStage2State,\n\tinitialSessionState,\n\tinitialStatsState,\n} from './reducers';\nimport { TournamentSagas, PlayersSagas, PairsSagas, SessionSagas, Stage2Sagas, Stage1Sagas, StatsSagas } from './sagas';\nimport { initialState } from '../@common/models/common.models';\n\n// TODO: https://manukyan.dev/posts/2019-04-15-code-splitting-for-redux-and-optional-redux-saga/#:~:text=Redux%20Saga%20Code%20Splitting,whenever%20those%20actions%20are%20dispatched.\n\n// https://github.com/rt2zz/redux-persist\n// https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html\n// custom compose for the redux devtool extension\nconst composeEnhancers =\n\t(process.env.NODE_ENV !== 'production' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n\t\t\ttrace: true,\n\t\t\ttraceLimit: 25,\n\t\t})) ||\n\tcompose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const rootReducers: ReducersMapObject<RootState> = {\n\ttournamentState: TournamentReducer,\n\tplayerState: PlayerReducer,\n\tpairState: PairReducer,\n\tauthState: SessionReducer,\n\tstage1State: Stage1Reducer,\n\tstage2State: Stage2Reducer,\n\tstatsState: StatsReducer,\n};\n\nexport const initialStoreState: RootState = {\n\ttournamentState: initialTournamentState,\n\tpairState: initialPairState,\n\tplayerState: initialPlayerState,\n\tstage1State: initialStage1State,\n\tstage2State: initialStage2State,\n\tauthState: initialSessionState,\n\tstatsState: initialStatsState,\n};\n\n// Meet the Store\nexport const store = createStore(\n\tpersistReducer(\n\t\t{\n\t\t\tkey: 'app',\n\t\t\tstorage: localForage,\n\t\t},\n\t\tcombineReducers(rootReducers)\n\t),\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nexport const storeWithState = (preloaded: RootState = initialState) =>\n\tcreateStore(\n\t\tpersistReducer(\n\t\t\t{\n\t\t\t\tkey: 'app',\n\t\t\t\tstorage: localForage,\n\t\t\t},\n\n\t\t\tcombineReducers(rootReducers)\n\t\t),\n\t\tpreloaded,\n\t\tcomposeEnhancers(applyMiddleware(sagaMiddleware))\n\t);\n\nexport const persistor = persistStore(store);\n\n// expose store when run in Cypress\n// https://www.cypress.io/blog/2018/11/14/testing-redux-store/\n// FIXME:\nif ((<any>window).Cypress) {\n\t(<any>window).store = store;\n}\n\n// Run all sagas\nfunction* rootSagas() {\n\tyield all([\n\t\t...TournamentSagas,\n\t\t...PlayersSagas,\n\t\t...PairsSagas,\n\t\t...SessionSagas,\n\t\t...Stage2Sagas,\n\t\t...Stage1Sagas,\n\t\t...StatsSagas,\n\t]);\n}\n\nsagaMiddleware.run(rootSagas);\n","export default __webpack_public_path__ + \"static/media/header.dc972d44.jpg\";","import React, { lazy } from 'react';\nimport { MaleIcon, FileMedicalIcon } from '../icons';\n\nconst lazySwagger = lazy(() => import('../../Swagger/Swagger'));\nconst lazyPlayer = lazy(() => import('../../Player/table.component'));\nconst lazyPlayerEdit = lazy(() => import('../../Player/edit.component'));\nconst lazyTournament = lazy(() => import('../../Tournament/wrapper.component'));\nconst lazyPairs = lazy(() => import('../../Pair/table.component'));\nconst lazyStage1 = lazy(() => import('../../Stage1/wrapper.component'));\nconst lazyStage2 = lazy(() => import('../../Stage2/handler.component'));\nconst lazyLogin = lazy(() => import('../../Auth/Wrapper'));\nconst lazyUser = lazy(() => import('../../Auth/Edit'));\nconst lazyRedirectionControl = lazy(() =>\n\timport('../generic/Commons').then((module) => ({ default: module.RedirectionControl }))\n);\n\nexport interface ProtectedRouteProps {\n\tpath: string;\n\tlabel: string;\n\texact: boolean;\n\tcomponentToRender: React.LazyExoticComponent<React.ComponentType<any>>;\n\ticon?: React.ComponentType;\n\tvisible: boolean;\n\tindex: number;\n\tprivate: boolean;\n}\n\n// Mappatura route\nexport const routes: ProtectedRouteProps[] = [\n\t{\n\t\tpath: '/login',\n\t\tlabel: 'route.login',\n\t\texact: true,\n\t\tcomponentToRender: lazyLogin,\n\t\tvisible: false,\n\t\tprivate: false,\n\t\tindex: 0,\n\t},\n\t{\n\t\tpath: '/',\n\t\tlabel: 'route.home',\n\t\texact: true,\n\t\tcomponentToRender: lazyTournament,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 10,\n\t},\n\t{\n\t\tpath: '/tournament',\n\t\tlabel: 'route.tournament',\n\t\texact: true,\n\t\tcomponentToRender: lazyPairs,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 20,\n\t},\n\t{\n\t\tpath: '/stage1',\n\t\tlabel: 'route.stage1',\n\t\texact: true,\n\t\tcomponentToRender: lazyStage1,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 30,\n\t},\n\t{\n\t\tpath: '/player',\n\t\tlabel: 'route.player',\n\t\texact: true,\n\t\tcomponentToRender: lazyPlayer,\n\t\ticon: MaleIcon,\n\t\tvisible: true,\n\t\tprivate: true,\n\t\tindex: 40,\n\t},\n\t{\n\t\tpath: '/player/edit',\n\t\tlabel: 'route.player',\n\t\texact: true,\n\t\tcomponentToRender: lazyPlayerEdit,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 41,\n\t},\n\t{\n\t\tpath: '/user',\n\t\tlabel: 'route.user',\n\t\texact: true,\n\t\tcomponentToRender: lazyUser,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 50,\n\t},\n\t{\n\t\tpath: '/stage2',\n\t\tlabel: 'route.stage2',\n\t\texact: true,\n\t\tcomponentToRender: lazyStage2,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 60,\n\t},\n\t{\n\t\tpath: '/swagger',\n\t\tlabel: 'route.swagger',\n\t\texact: true,\n\t\tcomponentToRender: lazySwagger,\n\t\ticon: FileMedicalIcon,\n\t\tvisible: true,\n\t\tprivate: true,\n\t\tindex: 70,\n\t},\n\t// TODO: creare pagina per route not found\n\t{\n\t\tpath: '*',\n\t\tlabel: 'route.notFound',\n\t\texact: false,\n\t\tcomponentToRender: lazyRedirectionControl,\n\t\tvisible: false,\n\t\tprivate: true,\n\t\tindex: 1000,\n\t},\n];\nexport default routes;\n\nexport function getLabelByPathname(pathName: string): string {\n\tconst element = routes.find((e) => e.path === pathName);\n\treturn element ? element.label : `route ${pathName} not found!`;\n}\n\nexport function getRouteByPathname(pathName: string): ProtectedRouteProps | undefined {\n\treturn routes.find((e) => e.path === pathName);\n}\n","import React, { CSSProperties } from 'react';\nimport backgroundImage from '../../assets/header.jpg';\nimport { Jumbotron, Navbar, Nav, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport routes from '../core/routing/Routes';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useSelector } from '../core/types';\nimport { useDispatch } from 'react-redux';\nimport { AuthSelector } from '../../redux/selectors/auth.selector';\nimport { HomeIcon, LanguageIcon, UserIcon, LogoutIcon } from '../core/icons';\nimport { AuthAction } from '../../redux/actions';\nimport i18n, { getOtherLang } from '../../i18n/i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst applicationName = 'Calcetto C.S.M';\n\n// App header with navbar\nconst Header: React.FC = () => {\n\tconst dispatch = useDispatch();\n\tconst currentHistory = useHistory();\n\tconst { t } = useTranslation(['common']);\n\n\tconst { user, isAuthenticated, isAdmin } = useSelector(AuthSelector.getSession);\n\n\tconst logout = () => dispatch(AuthAction.logout.request({ history: currentHistory }));\n\n\t// const yellow = '#ffc107';\n\tconst jumboStyle: CSSProperties = {\n\t\tbackgroundImage: `url(${backgroundImage})`,\n\t\tbackgroundSize: 'cover',\n\t\tpadding: '60px 0px 10px 0px',\n\t\tminHeight: '28vh',\n\t};\n\n\tconst titleStyle: CSSProperties = {\n\t\tcolor: 'white',\n\t};\n\n\tconst otherLang = getOtherLang();\n\n\treturn (\n\t\t<header>\n\t\t\t<Jumbotron style={jumboStyle}>\n\t\t\t\t<h1 style={{ margin: '5vh' }}>\n\t\t\t\t\t<strong style={titleStyle}>{applicationName}</strong>\n\t\t\t\t</h1>\n\t\t\t\t{isAuthenticated ? (\n\t\t\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t\t<Navbar.Brand as={Link} to=\"/\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<HomeIcon /> {t('route.home')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t\t{routes.map((route) =>\n\t\t\t\t\t\t\t\t\t!route.visible || (route.path === '/swagger' && !isAdmin) ? null : (\n\t\t\t\t\t\t\t\t\t\t<Nav.Link as={Link} key={route.index} to={route.path} className=\"text-white\">\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{route.icon ? <route.icon /> : null} {t(route.label)}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Dropdown alignRight as={ButtonGroup}>\n\t\t\t\t\t\t\t\t\t\t<Button style={{ opacity: 1 }} variant=\"outline-warning\" size=\"lg\" disabled>\n\t\t\t\t\t\t\t\t\t\t\t<strong style={{ color: '#64bd9c', fontSize: 'larger' }} data-cy=\"header-username\">\n\t\t\t\t\t\t\t\t\t\t\t\t{user.username} <UserIcon />\n\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle split variant=\"outline-warning\" id=\"dropdown-custom-2\" data-cy=\"header-dropdown\" />\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu className=\"default-background default-border-yellow\">\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"default-color-white default-hover-green\"\n\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\t\t\t\tto={'/user'}\n\t\t\t\t\t\t\t\t\t\t\t\teventKey=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{t('route.user')}</span>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"default-color-white default-hover-green\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => i18n.changeLanguage(otherLang)}\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\teventKey=\"2\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LanguageIcon /> {t(`common:lang.${otherLang}`)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Divider style={{ borderTopColor: '#ffc107' }} />\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"default-color-white default-hover-green\"\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t\t\t\t\teventKey=\"3\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cy=\"header-user-logout\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LogoutIcon /> <strong>{t('logout')} </strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t</Navbar>\n\t\t\t\t) : null}\n\t\t\t</Jumbotron>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","// https://github.com/openscript/react-example-authentication-redirection\n\nimport * as React from 'react';\nimport { Route, RouteComponentProps, StaticContext } from 'react-router';\nimport { ProtectedRouteProps, getLabelByPathname } from './Routes';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, connect, useDispatch } from 'react-redux';\nimport { AuthSelector } from '../../../redux/selectors/auth.selector';\nimport { TournamentAction } from '../../../redux/actions';\n\n// HOC gestisce la visibilità dei componenti ed eventualmente reindirizza alla login\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n\tconst dispatch = useDispatch();\n\tconst isAuthenticated = useSelector(AuthSelector.isAuthenticated);\n\n\t// FIXME: RouteComponentProps<any, StaticContext, any>\n\treturn (\n\t\t<Route\n\t\t\t{...props}\n\t\t\trender={(innerProps: RouteComponentProps<any, StaticContext, any>) => {\n\t\t\t\tconst { location } = innerProps;\n\t\t\t\tconsole.log('ProtectedRoute : ', location);\n\n\t\t\t\t// Se sono gia autenticato e sto chiedendo la login, reindirizzo alla home\n\t\t\t\tif (isAuthenticated && location.pathname === '/login') {\n\t\t\t\t\tconsole.log('ProtectedRoute => redirect to Home');\n\t\t\t\t\treturn <Redirect {...props} to={{ pathname: '/', state: { from: location } }} />;\n\t\t\t\t}\n\n\t\t\t\t// Se non è una rotta protetta\n\t\t\t\tif (!props.private) {\n\t\t\t\t\tconsole.log('ProtectedRoute => public route : ', { ...props });\n\t\t\t\t\treturn <props.componentToRender {...props} />;\n\t\t\t\t}\n\n\t\t\t\t// Se è una rotta privata e non sono autenticato devo andare alla login\n\t\t\t\tif (!isAuthenticated) {\n\t\t\t\t\tconsole.log('ProtectedRoute => redirect to Login ');\n\t\t\t\t\treturn <Redirect {...props} to={{ pathname: '/login', state: { from: location } }} />;\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Se sono arrivato qui vuol dire che è una rotta protetta, che sono autenticato\n\t\t\t\t * e che non sto chiedendo di andare alla login. Quindi direi che posso andare dove voglio...\n\t\t\t\t *\n\t\t\t\t * Se sto andando alla home ricarico i tornei.\n\t\t\t\t */\n\t\t\t\tif (location.pathname === '/') {\n\t\t\t\t\tconsole.log('ProtectedRoute : ', location.state);\n\t\t\t\t\tdispatch(TournamentAction.fetch.request({}));\n\t\t\t\t}\n\t\t\t\tconsole.log('ProtectedRoute => render component : ', getLabelByPathname(location.pathname));\n\t\t\t\treturn <props.componentToRender {...props} />;\n\t\t\t}}\n\t\t/>\n\t);\n};\nexport default connect(ProtectedRoute);\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      const errorDetails =\n        process.env.NODE_ENV === 'development' ? (\n          <details className=\"preserve-space\">\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : undefined;\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { CSSProperties } from 'react';\nimport { Badge } from 'react-bootstrap';\n\ninterface AppBadgeProps {}\nconst AppBadge: React.FC<AppBadgeProps> = () => {\n  const appVersion = process.env.REACT_APP_CLIENT_VERSION;\n  const commitHash = process.env.REACT_APP_CLIENT_COMMIT_HASH;\n\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: '0.1em',\n    right: '0.1em',\n  };\n  return (\n    <h4 style={style}>\n      <Badge variant=\"info\">\n        <span>v.</span>\n        <strong>{appVersion}</strong>\n        <span>\n          <i>\n            <small> @ {commitHash}</small>\n          </i>\n        </span>\n      </Badge>\n    </h4>\n  );\n};\n\nexport default AppBadge;\n","import React, { Suspense, useEffect } from 'react';\n// Components\nimport Header from '../Header/Header';\nimport { LoadingModal } from '../core/generic/Commons';\n// Routing\nimport { Switch, useHistory } from 'react-router';\nimport routes from '../core/routing/Routes';\nimport { ProtectedRoute } from '../core/routing/ProtectedRoute';\nimport ErrorBoundary from '../core/errorBoundary';\n// Style\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport { useSelector } from '../core/types';\nimport { useDispatch } from 'react-redux';\nimport { AuthAction } from '../../redux/actions';\nimport { loadIcons } from '../core/icons';\n// Toasts\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './toast.css';\nimport AppBadge from './badge';\nimport { AuthSelector } from '../../redux/selectors';\n// i18n\nimport '../../i18n/i18n';\n// Cookies\nimport CookieConsent from 'react-cookie-consent';\nimport { useTranslation } from 'react-i18next';\n\nloadIcons();\nconst App: React.FC = (_) => {\n\tconst dispatch = useDispatch();\n\tconst currentHistory = useHistory();\n\tconst { t } = useTranslation(['auth']);\n\tconst isLoading = useSelector(AuthSelector.isLoading);\n\n\t// Check if user is already logged\n\tuseEffect(() => {\n\t\tdispatch(AuthAction.checkAuthentication.request({ history: currentHistory }));\n\t}, [currentHistory, dispatch]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ErrorBoundary>\n\t\t\t\t{/* Loading translations */}\n\t\t\t\t<Header />\n\t\t\t\t<Container fluid>\n\t\t\t\t\t{/*<RedirectionControl />*/}\n\t\t\t\t\t<ToastContainer autoClose={3000} data-cy=\"toast-container\" />\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t// Loading store\n\t\t\t\t\t\t<LoadingModal />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t// Loading lazy components\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t{routes.map((route) => (\n\t\t\t\t\t\t\t\t<ProtectedRoute {...route} key={route.index} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t)}\n\t\t\t\t\t<AppBadge />\n\t\t\t\t\t<CookieConsent\n\t\t\t\t\t\tlocation=\"bottom\"\n\t\t\t\t\t\tbuttonText={t('auth:cookies.accept')}\n\t\t\t\t\t\tcookieName=\"session_id\"\n\t\t\t\t\t\tstyle={{ background: '#2B373B' }}\n\t\t\t\t\t\tbuttonStyle={{ color: '#4e503b', fontSize: '13px' }}\n\t\t\t\t\t\texpires={150}\n\t\t\t\t\t\toverlay\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('auth:cookies.info')}\n\t\t\t\t\t</CookieConsent>\n\t\t\t\t</Container>\n\t\t\t</ErrorBoundary>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React, { StrictMode, Suspense } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../../redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { LoadingModal } from '../core/generic/Commons';\n\nconst Application: React.FC = () => (\n  <Provider store={store}>\n    <PersistGate loading={<LoadingModal show={true} />} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n);\nconst Entry: React.FC = () =>\n  <Suspense fallback={<LoadingModal />}>\n    {process.env.NODE_ENV !== 'production' ? (\n    <StrictMode>\n      <Application />\n    </StrictMode>\n  ) : (\n    <Application />\n  )}\n  </Suspense>;\n\nexport default Entry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'typeface-roboto';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport it from 'date-fns/locale/it';\nimport { setDefaultLocale, registerLocale } from 'react-datepicker';\n\nimport Entry from './components/App/Entry';\n\nsetDefaultLocale('it');\nregisterLocale('it', it);\n\nReactDOM.render(<Entry />, document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//process.env.NODE_ENV !== 'production' ? serviceWorker.unregister() : serviceWorker.register();\nserviceWorker.unregister();\n\n// Redefine console so it does not in production env\nif (process.env.NODE_ENV === 'production') {\n  if (!window.console) (window as any).console = {};\n  ['log', 'debug', 'warn', 'info'].forEach((e) => ((window as any).console[e] = () => {}));\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\n// FontAwesome 5\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n\tfaAngleLeft,\n\tfaAngleRight,\n\tfaSignOutAlt,\n\tfaChartBar,\n\tfaUser,\n\tfaMale,\n\tfaLanguage,\n\tfaHome,\n\tfaBroom,\n\tfaArrowAltCircleRight,\n\tfaArrowAltCircleLeft,\n\tfaTimes,\n\tfaToggleOff,\n\tfaToggleOn,\n\tfaPlus,\n\tfaMinus,\n\tfaTrophy,\n\tfaAngleDoubleRight,\n\tfaBan,\n\tfaFileMedicalAlt,\n\tfaEdit,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt, faSave } from '@fortawesome/free-regular-svg-icons';\n\nexport const loadIcons = () => {\n\tlibrary.add(\n\t\t// Regular\n\t\tfaTrashAlt,\n\t\tfaSave,\n\t\t// Solid\n\t\tfaAngleLeft,\n\t\tfaAngleRight,\n\t\tfaChartBar,\n\t\tfaSignOutAlt,\n\t\tfaUser,\n\t\tfaMale,\n\t\tfaLanguage,\n\t\tfaHome,\n\t\tfaBroom,\n\t\tfaArrowAltCircleRight,\n\t\tfaArrowAltCircleLeft,\n\t\tfaTimes,\n\t\tfaToggleOff,\n\t\tfaToggleOn,\n\t\tfaPlus,\n\t\tfaMinus,\n\t\tfaTrophy,\n\t\tfaAngleDoubleRight,\n\t\tfaBan,\n\t\tfaFileMedicalAlt,\n\t\tfaEdit\n\t);\n};\n\ninterface IconProps {\n\tcolor?: string;\n\tsize?: SizeProp;\n}\n\ninterface AbstractIconProps extends IconProps {\n\tprefix: IconPrefix;\n\ticonName: IconName;\n}\n\nconst SOLID = 'fas';\nconst REGULAR = 'far';\n\n// Wrapper per icone FontAwesome\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\n\t<FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\n);\n\n// Regular\nexport const TrashIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={REGULAR} iconName=\"trash-alt\" />\n);\nexport const SaveIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={REGULAR} iconName=\"save\" />\n);\n\n// Solid\nexport const ChartIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"chart-bar\" />\n);\nexport const EditIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"edit\" />\n);\nexport const FileMedicalIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"file-medical-alt\" />\n);\nexport const LogoutIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"sign-out-alt\" />\n);\nexport const UserIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"user\" />\n);\nexport const MaleIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"male\" />\n);\nexport const LanguageIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"language\" />\n);\nexport const HomeIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"home\" />\n);\nexport const BroomIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"broom\" />\n);\nexport const RightArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-right\" />\n);\nexport const LeftAngleIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"angle-left\" />\n);\nexport const RightAngleIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"angle-right\" />\n);\nexport const LeftArrowIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"arrow-alt-circle-left\" />\n);\nexport const TimesIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"times\" />\n);\nexport const ToggleOn: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-on\" />\n);\nexport const ToggleOff: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"toggle-off\" />\n);\nexport const PlusIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"plus\" />\n);\nexport const MinusIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"minus\" />\n);\nexport const TrophyIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"trophy\" />\n);\nexport const DoubleRightIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"angle-double-right\" />\n);\nexport const BanIcon: React.FC<IconProps> = ({ size, color }) => (\n\t<Icon size={size} color={color} prefix={SOLID} iconName=\"ban\" />\n);\n","export * from './root.model';\nexport * from './pair.model';\nexport * from './player.model';\nexport * from './tournament.model';\nexport * from './auth.model';\nexport * from './stage1.model';\nexport * from './stage2.model';\nexport * from './common.models';\nexport * from './stats.model';\n","export * from './pair.dto';\nexport * from './player.dto';\nexport * from './stage1.dto';\nexport * from './stage2.dto';\nexport * from './tournament.dto';\nexport * from './user.dto';\nexport * from './stats/stats.pairs.dto';\nexport * from './stats/stats.players.dto';\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpBackend from 'i18next-http-backend';\n\n// https://linguinecode.com/post/lazy-loading-react-i18next-translations\ni18n\n\t.use(HttpBackend)\n\t.use(LanguageDetector)\n\t.use(initReactI18next) // passes i18n down to react-i18next\n\t.init({\n\t\tdebug: false,\n\t\t//## Langs\n\t\t// Language to use (overrides language detection)\n\t\t// lng: 'it-IT',\n\t\t// Array of allowed languages\n\t\tsupportedLngs: ['it-IT', 'en-US'],\n\t\t// Language to use if translations in user language are not available.\n\t\tfallbackLng: 'en-US',\n\n\t\t//## Namespaces\n\t\t// String or array of namespaces to load\n\t\tns: ['common', 'auth', 'tournament', 'pair', 'stage1', 'stage2', 'stats'],\n\t\t// Default namespace used if not passed to translation function\n\t\tdefaultNS: 'common',\n\t\t// String or array of namespaces to lookup key if not found in given namespace.\n\t\tfallbackNS: ['common'],\n\n\t\t//## Load options\n\t\t// Array of languages to preload.\n\t\tpreload: ['it-IT'],\n\t\t/**\n\t\t * Language codes to lookup, given set language is\n\t\t * 'en-US': 'all' --> ['en-US', 'en', 'dev'],\n\t\t * 'currentOnly' --> 'en-US',\n\t\t * 'languageOnly' --> 'en'\n\t\t */\n\t\tload: 'currentOnly',\n\t\tinterpolation: {\n\t\t\t// react already safes from xss\n\t\t\tescapeValue: false,\n\t\t},\n\t\tbackend: {\n\t\t\tloadPath: '/locales/{{lng}}/{{ns}}.json',\n\t\t},\n\t});\n\nexport default i18n;\n\nexport const getOtherLang = () => (i18n.language === 'it-IT' ? 'en-US' : 'it-IT');\n","export * from './math.utils';\nexport * from './fetch.utils';\nexport * from './date.utils';\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PairSelector = {\n  isLoading: ({ pairState: { isLoading } }: RootState) => isLoading,\n  getPairsList: ({ pairState: { pairsList } }: RootState) => pairsList,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const PlayerSelector = {\n  // Default states\n  isLoading: ({ playerState: { isLoading } }: RootState) => isLoading,\n  isSaving: ({ playerState: { isSaving } }: RootState) => isSaving,\n  // Player\n  getPlayersList: ({ playerState: { playersList } }: RootState) => playersList,\n  getPlayer: ({ playerState: { player } }: RootState) => player,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const Stage1Selector = {\n\tisLoading: ({ stage1State: { isLoading } }: RootState) => isLoading,\n\tgetSelectedRows: (stageName: string, { stage1State: { selectedRows } }: RootState) =>\n\t\tselectedRows && selectedRows.size > 0 && selectedRows.get(stageName) ? selectedRows.get(stageName)! : [],\n\tgetSelectedPairs: ({ stage1State: { selectedPairs } }: RootState) => selectedPairs,\n\tgetToogleRefresh: ({ stage1State: { toogleRefresh } }: RootState) => toogleRefresh,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const Stage2Selector = {\n\tisLoading: ({ stage2State: { isLoading } }: RootState) => isLoading,\n\tgetCells: ({ stage2State: { cells } }: RootState) => cells,\n\tgetCount: ({ stage2State: { count } }: RootState) => count,\n};\n","import { RootState } from '../../@common/models';\n\n// Get state from store\nexport const AuthSelector = {\n  isLoading: ({ authState: { isLoading } }: RootState) => isLoading,\n  isAdmin: ({ authState: { isAdmin } }: RootState) => isAdmin,\n  isAuthenticated: ({ authState: { isAuthenticated } }: RootState) => isAuthenticated,\n  getUser: ({ authState: { user } }: RootState) => user,\n  getSession: ({ authState }: RootState) => authState,\n};\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\nexport enum HTTPStatusCode {\n\tContinue = 100,\n\tSwitchingProtocols = 101,\n\tProcessing = 102,\n\tEarlyHints = 103,\n\n\t/**\n\t * All `1xx` status codes.\n\t */\n\tInformationalResponses = Continue | SwitchingProtocols | Processing | EarlyHints,\n\n\tOK = 200,\n\tCreated = 201,\n\tAccepted = 202,\n\tNonAuthoritativeInformation = 203,\n\tNoContent = 204,\n\tResetContent = 205,\n\tPartialContent = 206,\n\tMultiStatus = 207,\n\tAlreadyReported = 208,\n\tIMUsed = 226,\n\n\t/**\n\t * All `2xx` status codes.\n\t */\n\tSuccess = OK |\n\t\tCreated |\n\t\tAccepted |\n\t\tNonAuthoritativeInformation |\n\t\tNoContent |\n\t\tResetContent |\n\t\tPartialContent |\n\t\tMultiStatus |\n\t\tAlreadyReported |\n\t\tIMUsed,\n\n\tMultipleChoices = 300,\n\tMovedPermanently = 301,\n\tFound = 302,\n\tSeeOther = 303,\n\tNotModified = 304,\n\tUseProxy = 305,\n\tSwitchProxy = 306,\n\tTemporaryRedirect = 307,\n\tPermanentRedirect = 308,\n\n\t/**\n\t * All `3xx` status codes.\n\t */\n\tRedirection = MultipleChoices |\n\t\tMovedPermanently |\n\t\tFound |\n\t\tSeeOther |\n\t\tNotModified |\n\t\tUseProxy |\n\t\tSwitchProxy |\n\t\tTemporaryRedirect |\n\t\tPermanentRedirect,\n\n\tBadRequest = 400,\n\t/**\n\t * The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\n\t */\n\tUnauthorized = 401,\n\tPaymentRequired = 402,\n\t/**\n\t * The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\n\t * This status is similar to 401, but in this case, re-authenticating will make no difference.\n\t * The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.\n\t */\n\tForbidden = 403,\n\tNotFound = 404,\n\tMethodNotAllowed = 405,\n\tNotAcceptable = 406,\n\tProxyAuthenticationRequired = 407,\n\tRequestTimeout = 408,\n\tConflict = 409,\n\tGone = 410,\n\tLengthRequired = 411,\n\tPreconditionFailed = 412,\n\tPayloadTooLarge = 413,\n\tURITooLong = 414,\n\tUnsupportedMediaType = 415,\n\tRangeNotSatisfiable = 416,\n\tExpectationFailed = 417,\n\tImATeapot = 418,\n\tMisdirectedRequest = 421,\n\tUnprocessableEntity = 422,\n\tLocked = 423,\n\tFailedDependency = 424,\n\tUpgradeRequired = 426,\n\tPreconditionRequired = 428,\n\tTooManyRequests = 429,\n\tRequestHeaderFieldsTooLarge = 431,\n\tUnavailableForLegalReasons = 451,\n\n\t/**\n\t * All `4xx` error codes.\n\t */\n\tClientErrors = BadRequest |\n\t\tUnauthorized |\n\t\tPaymentRequired |\n\t\tForbidden |\n\t\tNotFound |\n\t\tMethodNotAllowed |\n\t\tNotAcceptable |\n\t\tProxyAuthenticationRequired |\n\t\tRequestTimeout |\n\t\tConflict |\n\t\tGone |\n\t\tLengthRequired |\n\t\tPreconditionFailed |\n\t\tPayloadTooLarge |\n\t\tURITooLong |\n\t\tUnsupportedMediaType |\n\t\tRangeNotSatisfiable |\n\t\tExpectationFailed |\n\t\tImATeapot |\n\t\tMisdirectedRequest |\n\t\tUnprocessableEntity |\n\t\tLocked |\n\t\tFailedDependency |\n\t\tUpgradeRequired |\n\t\tPreconditionRequired |\n\t\tTooManyRequests |\n\t\tRequestHeaderFieldsTooLarge |\n\t\tUnavailableForLegalReasons,\n\n\tInternalServerError = 500,\n\tNotImplemented = 501,\n\tBadGateway = 502,\n\tServiceUnavailable = 503,\n\tGatewayTimeout = 504,\n\tHTTPVersionNotSupported = 505,\n\tVariantAlsoNegotiates = 506,\n\tInsufficientStorage = 507,\n\tLoopDetected = 508,\n\tNotExtended = 510,\n\tNetworkAuthenticationRequired = 511,\n\n\t/**\n\t * All `5xx` error codes.\n\t */\n\tServerErrors = InternalServerError |\n\t\tNotImplemented |\n\t\tBadGateway |\n\t\tServiceUnavailable |\n\t\tGatewayTimeout |\n\t\tHTTPVersionNotSupported |\n\t\tVariantAlsoNegotiates |\n\t\tInsufficientStorage |\n\t\tLoopDetected |\n\t\tNotExtended |\n\t\tNetworkAuthenticationRequired,\n}\n\nexport const InformationCodes = [\n\tHTTPStatusCode.Continue,\n\tHTTPStatusCode.SwitchingProtocols,\n\tHTTPStatusCode.Processing,\n\tHTTPStatusCode.EarlyHints,\n];\nexport const SuccessCodes = [\n\tHTTPStatusCode.OK,\n\tHTTPStatusCode.Created,\n\tHTTPStatusCode.Accepted,\n\tHTTPStatusCode.NonAuthoritativeInformation,\n\tHTTPStatusCode.NoContent,\n\tHTTPStatusCode.ResetContent,\n\tHTTPStatusCode.PartialContent,\n\tHTTPStatusCode.MultiStatus,\n\tHTTPStatusCode.AlreadyReported,\n\tHTTPStatusCode.IMUsed,\n];\n\nexport const RedirectCodes = [\n\tHTTPStatusCode.MultipleChoices,\n\tHTTPStatusCode.MovedPermanently,\n\tHTTPStatusCode.Found,\n\tHTTPStatusCode.SeeOther,\n\tHTTPStatusCode.NotModified,\n\tHTTPStatusCode.UseProxy,\n\tHTTPStatusCode.SwitchProxy,\n\tHTTPStatusCode.TemporaryRedirect,\n\tHTTPStatusCode.PermanentRedirect,\n];\n\nexport const ClientErrorsCodes = [\n\tHTTPStatusCode.BadRequest,\n\tHTTPStatusCode.Unauthorized,\n\tHTTPStatusCode.PaymentRequired,\n\tHTTPStatusCode.Forbidden,\n\tHTTPStatusCode.NotFound,\n\tHTTPStatusCode.MethodNotAllowed,\n\tHTTPStatusCode.NotAcceptable,\n\tHTTPStatusCode.ProxyAuthenticationRequired,\n\tHTTPStatusCode.RequestTimeout,\n\tHTTPStatusCode.Conflict,\n\tHTTPStatusCode.Gone,\n\tHTTPStatusCode.LengthRequired,\n\tHTTPStatusCode.PreconditionFailed,\n\tHTTPStatusCode.PayloadTooLarge,\n\tHTTPStatusCode.URITooLong,\n\tHTTPStatusCode.UnsupportedMediaType,\n\tHTTPStatusCode.RangeNotSatisfiable,\n\tHTTPStatusCode.ExpectationFailed,\n\tHTTPStatusCode.ImATeapot,\n\tHTTPStatusCode.MisdirectedRequest,\n\tHTTPStatusCode.UnprocessableEntity,\n\tHTTPStatusCode.Locked,\n\tHTTPStatusCode.FailedDependency,\n\tHTTPStatusCode.UpgradeRequired,\n\tHTTPStatusCode.PreconditionRequired,\n\tHTTPStatusCode.TooManyRequests,\n\tHTTPStatusCode.RequestHeaderFieldsTooLarge,\n\tHTTPStatusCode.UnavailableForLegalReasons,\n];\n\nexport const ServerErrorsCodes = [\n\tHTTPStatusCode.InternalServerError,\n\tHTTPStatusCode.NotImplemented,\n\tHTTPStatusCode.BadGateway,\n\tHTTPStatusCode.ServiceUnavailable,\n\tHTTPStatusCode.GatewayTimeout,\n\tHTTPStatusCode.HTTPVersionNotSupported,\n\tHTTPStatusCode.VariantAlsoNegotiates,\n\tHTTPStatusCode.InsufficientStorage,\n\tHTTPStatusCode.LoopDetected,\n\tHTTPStatusCode.NotExtended,\n\tHTTPStatusCode.NetworkAuthenticationRequired,\n];\n","import React, { CSSProperties } from 'react';\nimport { Modal, Spinner, Toast, Alert, Row, Button, Container, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport './style.css';\n\nconst modalStyle: CSSProperties = { color: 'whitesmoke', backgroundColor: '#343a40', borderColor: '#ffc107' };\nconst fancyModalFooter = (\n  <>\n    <Spinner animation=\"border\" variant=\"light\" />\n    <Spinner animation=\"border\" variant=\"primary\" />\n    <Spinner animation=\"border\" variant=\"secondary\" />\n    <Spinner animation=\"border\" variant=\"success\" />\n    <Spinner animation=\"border\" variant=\"danger\" />\n    <Spinner animation=\"border\" variant=\"warning\" />\n    <Spinner animation=\"border\" variant=\"info\" />\n    <Spinner animation=\"border\" variant=\"dark\" />\n  </>\n);\n// Loading Modal\ninterface LoadingModalPropsType {\n  show?: boolean;\n  title?: string;\n  message?: string;\n  onHide?: () => void;\n}\n\nexport const LoadingModal: React.FC<LoadingModalPropsType> = ({\n  title = 'Caricamento....',\n  message = 'Caricamento....',\n  show = true,\n  onHide = () => (show = false),\n}) => (\n  <Modal data-cy=\"loader\" show={show} onHide={onHide} size=\"lg\" centered style={{ borderColor: '#ffc107', borderWidth: '3px' }}>\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"text-center font-weight-bold\" style={modalStyle}>\n      {message}\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\nexport interface YesNoModalProps {\n  title: string;\n  show: boolean;\n  message: string;\n  onHide?: () => void;\n  onClick: () => void;\n}\n\nexport const YesNoModal: React.FC<YesNoModalProps> = ({\n  title,\n  message,\n  show,\n  onHide = () => (show = false),\n  onClick,\n}) => (\n  <Modal\n    className=\"YesNoModal\"\n    show={show}\n    onHide={onHide}\n    centered\n    style={{ borderColor: '#ffc107', borderWidth: '3px' }}\n  >\n    <Modal.Header closeButton style={modalStyle}>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body style={modalStyle}>\n      <Container fluid>\n        <Row style={{ fontSize: 'larger' }}>{message}</Row>\n        <Row style={{ padding: '2rem 0rem 0rem 0rem' }}>\n          <Col>\n            <Button variant=\"outline-secondary\" className=\"float-left\" onClick={() => onHide()}>\n              Annulla\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"outline-success\" className=\"float-right\" onClick={() => onClick()}>\n              Conferma\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Modal.Body>\n    <Modal.Footer style={modalStyle}>{fancyModalFooter}</Modal.Footer>\n  </Modal>\n);\n\n// Toasts\nexport interface IToastProps {\n  message: string;\n  type?: toastType;\n}\n\nexport type toastType = 'success' | 'warning' | 'danger';\n\nexport const GenericToast: React.FC<IToastProps> = ({ message, type }) =>\n  message && message !== '' ? (\n    <Toast className=\"rounded mr-2 mx-auto\" key={`${type}-message`} show={message !== ''}>\n      <Toast.Header closeButton={false}>\n        <strong>Operazione completata !</strong>\n      </Toast.Header>\n      <Toast.Body>\n        <Alert variant={type}>{message}</Alert>\n      </Toast.Body>\n    </Toast>\n  ) : null;\n\n// TODO: Componente fallback se route non trovata\nexport function RedirectionControl(props: any): JSX.Element {\n  const location = useLocation();\n  return (\n    <div>\n      <h1>\n        Current Ruote : <code>{location.pathname}</code>\n      </h1>\n    </div>\n  );\n}\n","import * as H from 'history';\nimport { PlayerDTO, PlayerRole } from '../dto';\nimport { GenericReponse } from './common.models';\n//\nexport interface PlayerState {\n  player?: PlayerDTO;\n  playersList: Array<PlayerDTO>;\n  isLoading: boolean;\n  isSaving: boolean;\n}\n\n// Requests\nexport interface FetchPlayersRequest {\n  tId?: number;\n  addEmpty?: boolean;\n}\nexport interface SavePlayerRequest {\n  history?: H.History<unknown>;\n  player: PlayerDTO;\n}\nexport interface DeletePlayersRequest {\n  history?: H.History<unknown>;\n  players: Array<PlayerDTO>;\n}\n// Responses\nexport interface FetchPlayersResponse extends GenericReponse {\n  playersList: Array<PlayerDTO>;\n}\nexport interface SavePlayerResponse extends GenericReponse {\n  player: PlayerDTO;\n}\nexport interface DeletePlayersResponse extends GenericReponse {\n  playersList: Array<PlayerDTO>;\n}\n\nexport interface PlayerError extends GenericReponse {}\n\nexport const getEmptyPlayer = (label?: string): PlayerDTO => ({\n  id: null,\n  name: '',\n  surname: '',\n  alias: '',\n  label: label || '',\n  role: PlayerRole.GoalKeeper,\n  email: '',\n  phone: '',\n  match_played: 0,\n  match_won: 0,\n  total_score: 0,\n  editable: false,\n  rowNumber: 0,\n});\n","import {\n\tFetchPlayersRequest,\n\tFetchPlayersResponse,\n\tDeletePlayersRequest,\n\tDeletePlayersResponse,\n\tSavePlayerResponse,\n\tSavePlayerRequest,\n\tgetEmptyPlayer,\n} from '../../@common/models';\nimport { deleteWrapper, getWrapper, postWrapper, putWrapper } from '../../@common/utils/fetch.utils';\n\nexport const fetchPlayers = ({ tId, addEmpty }: FetchPlayersRequest) =>\n\tgetWrapper<FetchPlayersResponse>(\n\t\ttId ? `/api/v2/player/list/${encodeURIComponent(tId)}` : '/api/v2/player/list',\n\t\t(response: FetchPlayersResponse) => ({\n\t\t\t...response,\n\t\t\tplayersList: addEmpty ? [...response.playersList, getEmptyPlayer('Nessun Giocatore')] : response.playersList,\n\t\t})\n\t);\n\nexport const deletePlayers = (request: DeletePlayersRequest) =>\n\tdeleteWrapper<DeletePlayersRequest, DeletePlayersResponse>('/api/v2/player/delete', request);\n\nexport const savePlayer = (request: SavePlayerRequest) =>\n\tpostWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/new', request);\n\nexport const updatePlayer = (request: SavePlayerRequest) =>\n\tputWrapper<SavePlayerRequest, SavePlayerResponse>('/api/v2/player/update', request);\n"],"sourceRoot":""}