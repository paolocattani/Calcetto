{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/Stage2/cell.component.tsx","components/Pair/select.component.tsx","components/Stage2/table.component.tsx","components/Stage2/helper.tsx","components/Stage2/handler.component.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common.module.css","components/Tournament/badge.component.tsx","components/Stage2/style.module.css"],"names":["InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","Cell","icon","onClick","name","isWinner","span","rowIndex","colIndex","pair","buttonDisabled","isLast","renderCustomComponent","isAdmin","useSelector","AuthSelector","color","rowSpan","style","cell","borderBottom","join","container","prepend","FormControl","placeholder","value","player1","player2","aria-label","aria-describedby","readOnly","Button","disabled","append","e","PairsSelect","getOptionLabel","styles","options","onChange","defaultValue","tournamentId","useState","selectedOption","setSelectedOption","components","actionMeta","newValue","getEmptyPair","isSearchable","isClearable","Stage2","elements","pairsSelect","rowNumber","onSelectPair","tournament","TournamentSelector","getTournament","colNumber","getBaseLog","bRows","rows","counter","Array","fill","index","pairsNumber","indexes","NaN","currentMax","ii","growFactor","Math","pow","jj","getIndexes","provided","flex","option","zIndex","menuList","height","id","placement","stage1Name","alias","console","log","row","matchId","cellRowIndex","cellColIndex","parentId","push","undefined","isButtonDisabled","length","getTableBodyRows","hElem","tds","headerCell","width","getTableHeaderElements","table","body","Stage2Handler","currentHistory","useHistory","dispatch","useDispatch","cells","Stage2Selector","getCells","count","getCount","isLoading","pairsList","setPairsList","useEffect","a","Stage2Action","setLoading","fetchPairsStage2","response","SuccessCodes","includes","code","pairs","Col","commonStyle","toolsBarContainer","Row","toolsBarRow","variant","event","current1","current2","next","updateCell","request","setCells","newPair","prevPair","filter","show","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","module","exports","TournamentBadge","t","useTranslation","public","toUpperCase","formatDate","date","progress"],"mappings":"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","file":"static/js/10.3f6556e2.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from 'react';\nimport style from './style.module.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { DoubleRightIcon, BanIcon, TrophyIcon } from '../core/icons';\nimport { ICell, PairDTO } from '../../@common/dto';\nimport { useSelector } from '../core/types';\nimport { AuthSelector } from '../../redux/selectors';\n\ninterface NodeElement extends ICell {\n\tspan: number;\n\trenderCustomComponent?: (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => JSX.Element;\n\tonClick: (\n\t\tevent: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n\t\trowIndex: number,\n\t\tcolIndex: number,\n\t\twinner: boolean\n\t) => void;\n\trowIndex: number;\n\tcolIndex: number;\n\tbuttonDisabled: boolean;\n\tisLast: boolean;\n}\n\nconst Cell: React.FC<NodeElement> = ({\n\tonClick,\n\tname,\n\tisWinner,\n\tspan,\n\trowIndex,\n\tcolIndex,\n\tpair,\n\tbuttonDisabled,\n\tisLast,\n\trenderCustomComponent,\n}) => {\n\tconst isAdmin = useSelector(AuthSelector.isAdmin);\n\tlet icon: JSX.Element;\n\tif (isLast) icon = <TrophyIcon size=\"lg\" color=\"gold\" />;\n\telse icon = isWinner ? <DoubleRightIcon size=\"lg\" color=\"green\" /> : <BanIcon size=\"1x\" color=\"red\" />;\n\n\treturn (\n\t\t<td rowSpan={span} className={rowIndex % 2 === 0 ? [style.cell, style.borderBottom].join(' ') : style.cell}>\n\t\t\t<InputGroup className={style.container}>\n\t\t\t\t<InputGroup.Prepend className={style.prepend}>\n\t\t\t\t\t<InputGroup.Text>{rowIndex}</InputGroup.Text>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t{isAdmin && renderCustomComponent ? (\n\t\t\t\t\trenderCustomComponent(rowIndex, colIndex, isLast, pair)\n\t\t\t\t) : (\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tplaceholder={'Username' + colIndex}\n\t\t\t\t\t\tvalue={pair ? `${pair.player1?.name} - ${pair.player2?.name}` : name}\n\t\t\t\t\t\taria-label=\"Username\"\n\t\t\t\t\t\taria-describedby=\"Username\"\n\t\t\t\t\t\treadOnly={colIndex > 1 || !isAdmin}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{isAdmin ? (\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={!isAdmin || buttonDisabled}\n\t\t\t\t\t\t\tclassName={style.append}\n\t\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n\t\t\t\t\t\t\t\tonClick(e, rowIndex, colIndex, !isWinner)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{icon}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t) : null}\n\t\t\t</InputGroup>\n\t\t</td>\n\t);\n};\n\nexport default Cell;\n","import { PairDTO } from '../../@common/dto';\nimport React, { useState } from 'react';\nimport Select, { Styles, ValueType, ActionMeta, components } from 'react-select';\nimport { SelectComponents } from 'react-select/src/components';\nimport { getEmptyPair } from '../../@common/models';\n\ninterface PairSelectProps {\n  tournamentId:number;\n  // indice riga ( Stage2 )\n  rowIndex: number;\n  // stili\n  styles?: Partial<Styles>;\n  // opzioni della lista\n  options: PairDTO[];\n  // Callback per formattare le opzioni della lista\n  getOptionLabel?: (option: PairDTO) => string;\n  // Callback onChange\n  onChange?: (value: ValueType<PairDTO, false>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\n  components?: Partial<SelectComponents<PairDTO, false>>;\n  defaultValue?: PairDTO;\n}\n\n// Probabilmente il componente Select usa Ref.... Lascio cosi..\n// TODO: Si potrebbe generalizzare questo componente tramite i generics\nconst PairsSelect: React.FC<PairSelectProps> = React.forwardRef(\n  ({ getOptionLabel, styles, rowIndex, options, onChange, defaultValue,tournamentId }, ref) => {\n    const [selectedOption, setSelectedOption] = useState<PairDTO>();\n\n    const handleChange = (value: ValueType<PairDTO, false>, actionMeta: ActionMeta<PairDTO>) => {\n      const newValue = value ? value : getEmptyPair('-', tournamentId);\n      setSelectedOption(newValue);\n      if (onChange) {\n        onChange(newValue, rowIndex, actionMeta);\n      }\n    };\n\n    return (\n      <Select\n        defaultValue={defaultValue}\n        components={components}\n        styles={styles}\n        options={options}\n        onChange={handleChange}\n        getOptionLabel={getOptionLabel}\n        value={selectedOption}\n        placeholder=\"Cerca...\"\n        isSearchable\n        isClearable\n      />\n    );\n  }\n);\n\nexport default PairsSelect;\n","import React from 'react';\nimport style from './style.module.css';\nimport { getIndexes, getEmptyCell, onClickCallback, onSelectCallback } from './helper';\nimport Cell from './cell.component';\nimport { getBaseLog } from '../../@common/utils/math.utils';\nimport PairsSelect from '../Pair/select.component';\nimport { Styles } from 'react-select';\nimport { PairDTO, ICell } from '../../@common/dto';\nimport { useSelector } from '../core/types';\nimport { TournamentSelector } from '../../redux/selectors';\n// import { valueFormatter } from 'components/Pair/helper';\n\n// https://www.kodbiro.com/blog/rorgchart-react-module-for-displaying-and-editing-data-in-org-chart/\n\ninterface Stage2Props {\n\tpairsSelect: PairDTO[];\n\telements: ICell[][];\n\trowNumber: number;\n\tonClick: onClickCallback;\n\tonSelectPair: onSelectCallback;\n}\n\nconst Stage2: React.FC<Stage2Props> = ({ onClick, elements, pairsSelect, rowNumber = 64, onSelectPair }) => {\n\t/*\n\t * Calcolo il numero di colonne in funzione del numero di righe\n\t * in quanto l'oggetto che ricevo protrebbe essere solo un parziale\n\t */\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\tconst colNumber = getBaseLog(2, rowNumber) + 1;\n\tconst bRows = getTableBodyRows(tournament.id, elements, rowNumber, colNumber, onClick, pairsSelect, onSelectPair);\n\tconst hElem = getTableHeaderElements(colNumber);\n\n\treturn (\n\t\t<table className={style.table}>\n\t\t\t<thead>\n\t\t\t\t<tr>{hElem}</tr>\n\t\t\t</thead>\n\t\t\t<tbody className={style.body}>{bRows}</tbody>\n\t\t</table>\n\t);\n};\n\nexport default Stage2;\n\nfunction getTableHeaderElements(colNumber: number): JSX.Element[] {\n\tconst tds: JSX.Element[] = [];\n\tfor (let ii = 1; ii <= colNumber; ii++) {\n\t\ttds.push(\n\t\t\t<td\n\t\t\t\tkey={`header ${ii}`}\n\t\t\t\tclassName={style.headerCell}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: `${100 / colNumber}%`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<strong>{`Stage-${ii}`}</strong>\n\t\t\t</td>\n\t\t);\n\t}\n\treturn tds;\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction getTableBodyRows(\n\ttournamentId: number,\n\telements: ICell[][],\n\trowNumber: number,\n\tcolNumber: number,\n\tonClick: onClickCallback,\n\tpairsSelect: PairDTO[],\n\tonSelectPair: onSelectCallback\n): JSX.Element[] {\n\t// Conterrà tutte le righe della tabella\n\tconst rows: JSX.Element[] = [];\n\t// Indice di riga progressivo\n\tconst counter = new Array<number>(colNumber).fill(0);\n\t// Sequenza numero di elementi da aggiungere alla riga\n\tconst index: number[] = getIndexes(rowNumber);\n\n\tconst renderCustomComponent = (rowIndex: number, colIndex: number, isLast: boolean, pair?: PairDTO) => {\n\t\tconst styles: Partial<Styles> = {\n\t\t\tcontainer: (provided) => ({\n\t\t\t\t...provided,\n\t\t\t\tflex: '1 1 auto',\n\t\t\t}),\n\t\t\toption: (provided) => ({ ...provided, zIndex: 6 }),\n\t\t\tmenuList: (provided) => ({\n\t\t\t\t...provided,\n\t\t\t\tflex: '1 1 auto',\n\t\t\t\tzIndex: 5,\n\t\t\t\theight: 'auto',\n\t\t\t}),\n\t\t};\n\t\tconst getOptionLabel = (option: PairDTO) =>\n\t\t\toption.id\n\t\t\t\t? `${option.placement}${option.stage1Name} : ${\n\t\t\t\t\t\toption.alias ? option.alias : `${option.player1?.name} - ${option.player2?.name} `\n\t\t\t\t  }`\n\t\t\t\t: '-';\n\t\t/* TODO:\n    const CustomOption = ({ innerRef, innerProps, data }: OptionProps<PairDTO>) => (\n      <div ref={innerRef} {...innerProps}>\n        {data.placement}\n      </div>\n    );\n    */\n\t\tconsole.log('Render stage2 select :', rowIndex, colIndex, isLast, pair);\n\t\treturn (\n\t\t\t<PairsSelect\n\t\t\t\t//components={{ Option: CustomOption }}\n\t\t\t\ttournamentId={tournamentId}\n\t\t\t\tstyles={styles}\n\t\t\t\tdefaultValue={pair}\n\t\t\t\toptions={pairsSelect}\n\t\t\t\trowIndex={rowIndex}\n\t\t\t\tonChange={onSelectPair}\n\t\t\t\tgetOptionLabel={getOptionLabel}\n\t\t\t/>\n\t\t);\n\t};\n\n\tfor (let ii = 1; ii <= rowNumber; ii++) {\n\t\tconst row: JSX.Element[] = [];\n\t\tfor (let jj = 0; jj < index[ii]; jj++) {\n\t\t\tcounter[jj] += 1;\n\t\t\tconst cell = elements[jj] ? elements[jj][counter[jj] - 1] : getEmptyCell();\n\t\t\trow.push(\n\t\t\t\t<Cell\n\t\t\t\t\trenderCustomComponent={jj === 0 ? renderCustomComponent : undefined}\n\t\t\t\t\tkey={`cell : ${jj}-${counter[jj] - 1}`}\n\t\t\t\t\tspan={Math.pow(2, jj)}\n\t\t\t\t\trowIndex={counter[jj]}\n\t\t\t\t\tcolIndex={jj + 1}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tbuttonDisabled={isButtonDisabled(counter[jj], jj, elements)}\n\t\t\t\t\tisLast={elements[jj].length === 1}\n\t\t\t\t\t{...cell}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\trows.push(\n\t\t\t<tr key={`row : ${ii}`} className={style.row}>\n\t\t\t\t{row}\n\t\t\t</tr>\n\t\t);\n\t}\n\treturn rows;\n}\n\n/*\n  Il button per impostare la coppia vincente è abilitato solo se entrambe le cell hanno una coppia assegnata\n*/\nconst isButtonDisabled = (rowIndex: number, colIndex: number, elements: ICell[][]) =>\n\t(elements[colIndex] && elements[colIndex].length === 1) ||\n\t(rowIndex % 2 !== 0\n\t\t? !elements[colIndex][rowIndex - 1].pair || (elements[colIndex][rowIndex] && !elements[colIndex][rowIndex].pair)\n\t\t: !elements[colIndex][rowIndex - 1].pair ||\n\t\t  (elements[colIndex][rowIndex - 2] && !elements[colIndex][rowIndex - 2].pair));\n","import { getBaseLog } from '../../@common/utils';\nimport { ValueType, ActionMeta } from 'react-select';\nimport { PairDTO, ICell } from '../../@common/dto';\n\nexport type onClickCallback = (\n  event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  rowIndex: number,\n  colIndex: number,\n  isWinner: boolean\n) => void;\n\nexport type onSelectCallback = (value: ValueType<PairDTO, false>, rowIndex: number, actionMeta?: ActionMeta<PairDTO>) => void;\nexport const getIndexes = (pairsNumber: number): number[] => {\n  const N = getBaseLog(2, pairsNumber) + 1; // Numero massimo di elementi td\n  /*\n   * Array per mappare numero riga a numero di elementi td\n   * Inizializzo come primo NaN solo per avere un placeholder all'index 0  e iniziare l'analisi da 1\n   */\n  let indexes = [NaN, N];\n  let currentMax = 1;\n  for (let ii = 1; ii <= pairsNumber; ii++) {\n    if (!indexes[ii]) {\n      indexes[ii] = currentMax;\n      let growFactor = Math.pow(2, currentMax);\n      for (let jj = 1; ii + growFactor * jj < pairsNumber + 1; jj++) indexes[ii + growFactor * jj] = currentMax;\n      currentMax++;\n    }\n  }\n  return indexes;\n};\n\nexport const getEmptyCell = (name?: string): ICell => ({\n  name: '',\n  isWinner: false,\n  matchId: 0,\n  cellRowIndex: 0,\n  cellColIndex: 0,\n  parentId: 0,\n});\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from '../core/types';\nimport Stage2 from './table.component';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport commonStyle from '../../common.module.css';\nimport { Stage2Selector, TournamentSelector } from '../../redux/selectors';\nimport { Stage2Action } from '../../redux/actions';\nimport { LoadingModal } from '../core/generic/Commons';\nimport { LeftArrowIcon } from '../core/icons';\nimport TournamentBadge from '../Tournament/badge.component';\nimport { fetchPairsStage2 } from '../../redux/services/stage2.service';\nimport { onClickCallback, onSelectCallback } from './helper';\nimport { PairDTO, ICell } from '../../@common/dto';\nimport { SuccessCodes } from '../../@common/models/HttpStatusCode';\nimport { FetchStage2PairsResponse } from '../../@common/models';\n// import template from './template';\n\ninterface Stage2HandlerProps extends RouteComponentProps {}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nconst Stage2Handler: React.FC<Stage2HandlerProps> = () => {\n\tconst currentHistory = useHistory();\n\tconst dispatch = useDispatch();\n\n\t// Sono presenti aggiornamenti\n\tconst cells = useSelector(Stage2Selector.getCells);\n\tconst count = useSelector(Stage2Selector.getCount);\n\tconst isLoading = useSelector(Stage2Selector.isLoading);\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\t// const pairsListFromStore = useSelector(Stage1Selector.getSelectedPairs);\n\tconst [pairsList, setPairsList] = useState<PairDTO[]>();\n\n\tfunction goBack() {\n\t\tcurrentHistory.push('/stage1');\n\t}\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tdispatch(Stage2Action.setLoading(true));\n\t\t\tconst response = await fetchPairsStage2({ tournamentId: tournament.id });\n\t\t\tif (SuccessCodes.includes(response.code)) {\n\t\t\t\tconst result = response as FetchStage2PairsResponse;\n\t\t\t\tsetPairsList(result.pairs);\n\t\t\t}\n\t\t\tdispatch(Stage2Action.setLoading(false));\n\t\t})();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [tournament.id]);\n\n\t// Callback tasto vittoria/sconfitta coppia : Sposta la coppia alla fase successiva\n\tconst onClick: onClickCallback = (event, rowIndex, colIndex, isWinner) => {\n\t\tconst elements = [...cells!];\n\t\t// Coppia 1 e 2 dell'incontro corrente\n\t\tlet current1: ICell | null = null;\n\t\tlet current2: ICell | null = null;\n\t\t// Element Incontro successivo\n\t\tlet next: ICell | null = null;\n\t\tif (rowIndex % 2 !== 0) {\n\t\t\tcurrent1 = elements[colIndex - 1][rowIndex - 1];\n\t\t\tcurrent2 = elements[colIndex - 1][rowIndex];\n\t\t} else {\n\t\t\tcurrent1 = elements[colIndex - 1][rowIndex - 1];\n\t\t\tcurrent2 = elements[colIndex - 1][rowIndex - 2];\n\t\t}\n\t\tnext = elements[colIndex][current1.matchId - 1];\n\t\tconsole.log(' onClick : ', current1, current2, next);\n\n\t\tcurrent1.isWinner = isWinner;\n\t\tcurrent2.isWinner = !isWinner;\n\t\tif (next) next.pair = isWinner ? current1.pair : current2.pair;\n\t\t// Update current and next steps\n\t\tdispatch(Stage2Action.updateCell.request({ cells: [current1, current2, next] }));\n\t\tdispatch(Stage2Action.setCells(elements));\n\t};\n\n\t// Questa funzione viene richiamata quando viene selezionata una coppia nella prima colonna\n\tconst onSelectPair: onSelectCallback = (value, rowIndex, actionMeta) => {\n\t\tconsole.log(' onSelectPair : ', value, rowIndex);\n\t\tif (!pairsList) {\n\t\t\treturn;\n\t\t}\n\t\tconst elements = [...cells!];\n\t\tconst newPair = value as PairDTO;\n\t\tconst prevPair = elements[0][rowIndex - 1].pair;\n\t\tlet pairs: Array<PairDTO> = [...pairsList];\n\n\t\t// Se ho selezionato una coppia la elimino dalla lista ( newPair.id esclude il placeholder )\n\t\tif (newPair && newPair.id) {\n\t\t\tpairs = pairs.filter((e) => e.id !== newPair.id);\n\t\t}\n\t\t// Se nella celle era gia presente una coppia la ripristino\n\t\tif (prevPair && prevPair.id) {\n\t\t\tpairs = [...pairs, prevPair];\n\t\t}\n\t\tsetPairsList(pairs);\n\t\telements[0][rowIndex - 1].pair = newPair;\n\t\tconsole.log(' onSelectPair : ', elements[0][rowIndex - 1]);\n\t\tdispatch(Stage2Action.setCells(elements));\n\t\tdispatch(Stage2Action.updateCell.request({ cells: [elements[0][rowIndex - 1]] }));\n\t};\n\n\t//console.log('render stage2 :', cells, pairsList, rowNumber);\n\treturn cells && pairsList && count ? (\n\t\t<>\n\t\t\t<Col className={commonStyle.toolsBarContainer}>\n\t\t\t\t<Row className={commonStyle.toolsBarRow}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Button variant=\"secondary\" className=\"float-left\" onClick={goBack}>\n\t\t\t\t\t\t\t<LeftArrowIcon /> Indietro\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Col>\n\t\t\t<TournamentBadge />\n\n\t\t\t<Stage2\n\t\t\t\tpairsSelect={pairsList}\n\t\t\t\tonClick={onClick}\n\t\t\t\trowNumber={count}\n\t\t\t\telements={cells}\n\t\t\t\tonSelectPair={onSelectPair}\n\t\t\t/>\n\t\t</>\n\t) : (\n\t\t<LoadingModal show={isLoading} />\n\t);\n};\n\nexport default Stage2Handler;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functionsList\":\"common_functionsList__3B3UB\",\"toolsBarContainer\":\"common_toolsBarContainer__1nanA\",\"toolsBarRow\":\"common_toolsBarRow__r8q12\"};","import React from 'react';\nimport { TournamentSelector } from '../../redux/selectors';\nimport { useSelector } from '../core/types';\nimport { Row, Col, Badge } from 'react-bootstrap';\nimport { formatDate } from '../../@common/utils/date.utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface TournamentBadgeProps {}\nconst TournamentBadge: React.FC<TournamentBadgeProps> = () => {\n\tconst tournament = useSelector(TournamentSelector.getTournament)!;\n\tconst { t } = useTranslation(['tournament']);\n\treturn (\n\t\t<Row>\n\t\t\t<Col>\n\t\t\t\t<h2 className=\"float-left\">\n\t\t\t\t\t<Badge variant=\"info\">\n\t\t\t\t\t\t<span>{t(`tournament:${tournament.public ? 'public' : 'private'}_tournament`)} </span>\n\t\t\t\t\t\t<strong>\"{tournament.name.toUpperCase()}\"</strong>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t{` - ${formatDate(tournament.date)} `}\n\t\t\t\t\t\t\t\t<small> @ {t(`tournament:progress.${tournament.progress}`)}</small>\n\t\t\t\t\t\t\t\t{process.env.NODE_ENV === 'development' ? <strong>{`  --> ( ${tournament.id} )`}</strong> : null}\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Badge>\n\t\t\t\t</h2>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default TournamentBadge;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2Kzbq\",\"cell\":\"style_cell__1Tgmm\",\"borderBottom\":\"style_borderBottom__2eMt1\",\"headerCell\":\"style_headerCell__2Jwbq\",\"container\":\"style_container__3mFJG\",\"row\":\"style_row__3YvC9\",\"prepend\":\"style_prepend__1aYFO\",\"append\":\"style_append__1Z8QN\",\"center\":\"style_center__3xWH5\"};"],"sourceRoot":""}